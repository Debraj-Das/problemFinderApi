Name,URL,Text
DEGwer's Doctoral Dissertation,https://atcoder.jp/contests/DEGwer2023/tasks/1202Contest_a,"問題文DEGwer さんの博士論文は N ページからなります この博士論文には現在 K 個の誤植が存在し  i 個目の誤植  i   1   ldots  K  は A i ページにあります 
博士論文を提出するには どの連続する T ページにも複数の誤植が存在しないように誤植を修正しておく必要があります コンテストの準備で忙しい DEGwer さんのために 博士論文を提出するために修正すべき最小の誤植の個数を求めてあげてください 

制約
1  leq N  leq 2  times 10 5
1  leq K  leq 2  times 10 5
1  leq T  leq N
1  leq A i  leq N      1  leq i  leq K 


入力入力は以下の形式で標準入力から与えられる 
N   K   T 
A 1   A 2    dots   A K


出力博士論文を提出するために修正すべき誤植の個数の最小値を出力せよ 

入力例 15 4 3
1 2 4 5


出力例 12

DEGwer さんの博士論文は 5 ページからなり  1 ページ目  2 ページ目  4 ページ目  5 ページ目に 1 個ずつ誤植があります 
例えば 1 ページ目の誤植と 4 ページ目の誤植を修正すると どの連続する 3 ページにも複数の誤植が存在しない状態になります 一方  1 個の誤植を修正するだけでこの条件を満たすのは不可能であることも確かめられます したがって修正すべき最小の誤植の個数として 2 を出力します 

入力例 24 8 2
1 1 1 1 1 4 2 2


出力例 26

単一のページに複数の誤植が存在することもあります 

入力例 35 2 3
4 1


出力例 30

誤植を修正する必要がないこともあります 
Problem StatementDEGwer s doctoral dissertation consists of N pages  Currently  there are K typos in this doctoral dissertation  and the i th typo  i   1   ldots  K  is on page A i 
To submit the doctoral dissertation  it is necessary to correct the typos so that no consecutive T pages contain multiple typos 
Please help busy DEGwer  who is preparing this contest  by determining the minimum number of typos that need to be corrected in order to submit the doctoral dissertation 

Constraints
1  leq N  leq 2  times 10 5
1  leq K  leq 2  times 10 5
1  leq T  leq N
1  leq A i  leq N      1  leq i  leq K 


InputThe input is given from Standard Input in the following format 
N   K   T 
A 1   A 2    dots   A K


OutputOutput the minimum number of typos that need to be corrected to submit the doctoral dissertation 

Sample Input 15 4 3
1 2 4 5


Sample Output 12

DEGwer s doctoral dissertation consists of 5 pages  with one typo each on the 1st  2nd  4th  and 5th pages 
For example  if the typos on the 1st and 4th pages are corrected  then no consecutive 3 pages will have multiple typos 
On the other hand  it can also be confirmed that it is impossible to meet this condition by correcting only one typo 
Therefore  output 2 as the minimum number of typos to be corrected 

Sample Input 24 8 2
1 1 1 1 1 4 2 2


Sample Output 26

There may also be multiple typos on a single page 

Sample Input 35 2 3
4 1


Sample Output 30

There may be no need to correct any typos"
vs. DEGwer,https://atcoder.jp/contests/DEGwer2023/tasks/1202Contest_b,"問題文これはインタラクティブな問題です ジャッジプログラム インタラクタ の実行に最大 1 秒程度を要するため 実行時間制限を長めに設定しています 
10 年にわたる長旅の末 あなたはついに大魔王 DEGwer 城に辿り着きました 
城の入口はダンジョンになっており これを通り抜けなければ大魔王 DEGwer の下には辿り着けません 
ダンジョンは H 行 W 列のマス目状になっています 
各マスは部屋であり 上下左右に隣接する部屋同士の間には扉が 1 つずつ設置されています 
また 最も左の列にある各部屋の左側には入口となる扉が 最も右の列にある各部屋の右側には出口となる扉が それぞれ 1 つずつ設置されています 
今 すべての扉は未固定の状態です 
以下の魔法を交互に使うことで あなたは 開いた扉を通行して移動を繰り返すことで 開いた入口から開いた出口に到達可能である ように 大魔王 DEGwer はそうならないようにしたいです 

あなた  未固定の扉を任意に 1 つ選び その扉を開いて 通行可能な状態で 固定する 魔法
DEGwer  未固定の扉を任意に 1 つ選び その扉を閉じて 通行不可能な状態で 固定する 魔法

ダンジョンの大きさ  H  W  と どちらが先に魔法を使うかが与えられるので 互いに最善を尽くした場合にあなたの目的が達成可能かどうかを判定してください 
さらに あなたの目的が達成可能である場合には その手順 あなたが使う魔法 をインタラクティブに示してください 

制約
1  leq H  leq 20
1  leq W  leq 20
 textrm move  は First または Second のいずれかであり First はあなたが先に魔法を使うことを Second は大魔王 DEGwer が先に魔法を使うことを表す 


入力入力は以下の形式で標準入力から与えられる 
H W  textrm move 


出力互いに最善を尽くした場合にあなたの目的が達成可能である場合には Yes を 達成不可能である場合には No を出力せよ 
さらに Yes の場合には あなたの目的を達成する手順 あなたが使う魔法 を以下の形式でインタラクティブに出力せよ  入出力例 2 も参考にせよ  
t i j


t は   または   である 
i  j は整数である 
t       の場合 1  leq i  leq H かつ 1  leq j  leq W   1 であり 魔法の対象として 横通行 左右に隣接する部屋同士の間 あるいは 入口または出口 の扉のうち 上から i 番目 左から j 番目のものを選ぶことを意味する 
t       の場合 1  leq i  leq H   1 かつ 1  leq j  leq W であり 魔法の対象として 縦通行 上下に隣接する部屋同士の間 の扉のうち 上から i 番目 左から j 番目のものを選ぶことを意味する 

あなたの出力に対し 同じ形式の入力が返ってくる 
ただし  textrm move      First の場合は Yes に続けてあなたが先に出力し  textrm move      Second の場合は Yes の出力の直後に先に入力される 
いずれの場合も 出力を行うたびに 末尾に改行を入れて標準出力を flush すること 

t は       a  w のいずれかである 
t が   または   の場合 出力と同じ形式で大魔王 DEGwer が次に選ぶ扉を表す 
t     a の場合 i   j   0 であり あなたのインタラクティブ回答が正答である ことが確定した ことを表す 
t     w の場合 i   j   0 であり あなたのインタラクティブ回答が正答でない ことが確定した ことを表す 
t が a または w の入力を受け取った場合 ただちにプログラムを終了すること 


入力例 11 1 First


出力例 1No

この例では ダンジョンは 1 つの部屋のみからなり その部屋の左側に入口の扉が 右側に出口の扉があります 
あなたの目的を達成するには両方の扉を開ける必要がありますが あなたが先に魔法を使えるとしても あなたが選ばなかった方の扉を大魔王 DEGwer が選ぶことで目的の達成が阻止されます 
したがって あなたの目的は達成不可能です 

入力例 22 1 First


出力例 2Yes
   

この例では 以下のように ダンジョンは縦に並んだ 2 つの部屋からなり それらの間に縦通行の扉が 1 つあり 各部屋の左右に入口と出口の扉が計 2 つずつあります 
   
  
   

あなたが先に魔法を使えるので たとえば唯一の縦通行の扉   1 1 を選んだとします 
すると 大魔王 DEGwer がどのように扉を選んでも 残った入口と出口の 2 つずつの扉のうち 1 つずつをあなたが選ぶことができ 最初の魔法により 2 つの部屋間は移動可能となっているので 結果としてあなたの目的は達成可能であることがわかります 
以下はインタラクティブ入出力の一例です 



入力　　　
出力　　
説明




2 1 First

入力が与えられます 



Yes
あなたの目的は達成可能なので Yes を出力します 



  1 1
あなたは 縦通行の扉のうち 上から 1 番目 左から 1 番目のものを選び 開いて固定します 


  1 2

大魔王 DEGwer は 横通行の扉のうち 上から 1 番目 左から 2 番目のもの 右上の出口 を選び 閉じて固定します 



  2 2
あなたは 横通行の扉のうち 上から 2 番目 左から 2 番目のもの 右下の出口 を選び 開いて固定します 


  2 1

大魔王 DEGwer は 横通行の扉のうち 上から 2 番目 左から 1 番目のもの 左下の入口 を選び 閉じて固定します 



  1 1
あなたは 横通行の扉のうち 上から 1 番目 左から 1 番目のもの 左上の入口 を選び 開いて固定します 


a 0 0

この時点で 左上の開いた入口から右下の開いた出口に到達可能であることが確定し 正答であることを表す入力が与えられるので ただちにプログラムを終了してください 



この例ではあなたが先に魔法を使いますが そうでない   mathrm move      Second である 場合には Yes の出力の直後に大魔王 DEGwer が魔法の対象として選ぶ扉が同じ形式で入力されます 

入力例 32 1 Second


出力例 3No

上の例と同じダンジョンですが 大魔王 DEGwer が先に魔法を使うので あなたの目的は達成不可能となります 
たとえば 上の例であなたが最初に選んだ縦通行の扉を選ばれると 入出力例 1 と同じ状況が縦に 2 つ並んだような状態となり  いずれにおいても あなたが先に魔法を使えるとしても目的は達成不可能です 
Problem StatementThis is an interactive problem  Because the judge program  interactor  requires around 1 second in the worst case  the time limit is set to be longer 
You have eventually reached the castle of Great Satan DEGwer after 10 year journey 
The entrance of the castle is a dungeon  which cannot avoid for arriving at DEGwer 
The dungeon is of form a grid with H rows and W columns 
Each of H  times W squares is a room  and there is a door between any pair of adjacent rooms 
In addition  there is an entrance door on the left side of each room located in the left most column  and there is an exit door on the right side of each room located in the right most column 
Now  all the door are unfixed 
You want to let the dungeon such that some open exit door can be reached from some open entrance door by repeatedly passing through open doors  and DEGwer wants to prevent your objective 
For their own objectives  you and DEGwer alternately use the following magics 

Your magic  Choose any unfixed door  fix it as open  passable  
DEGwer s magic  Choose any unfixed door  fix it as closed  impassable  

You are given the size  H  W  of the dungeon and who uses the magic first 
Determine whether your objective is achievable or not when you and DEGwer do their best 
In addition  if your objective is achievable  indicate interactively one possible way  your magics  to do so 

Constraints
1  leq H  leq 20
1  leq W  leq 20
 textrm move  is either First or Second  where First means that you use the magic first  and Second means that DEGwer uses the magic first 


InputThe input is given from Standard Input in the following format 
H W  textrm move 


OutputPrint Yes if your objective is achievable and No otherwise  under the assumption that you and DEGwer do their best 
In addition  if the answer is Yes  print interactively in the following format for which doors you use magic   See also Sample 2  
t i j


t is either   or   
i and j are integers 
If t        then 1  leq i  leq H and 1  leq j  leq W   1  which represents that the door chosen as a target of the magic is the i th from the top and the j th from the left among those which are passed horizontally  i e   the doors between two horizontally adjacent rooms and all the entrance and exit doors  
If t        then 1  leq i  leq H   1 and 1  leq j  leq W  which represents that the door chosen as a target of the magic is the i th from the top and the j th from the left among those which are passed vertically  i e   the doors between two vertically adjacent rooms  

Against your output  an input in the same format will be returned 
Note that if  textrm move      First  then you should print your output followed by printing Yes  and if  textrm move      Second  then you should receive an input just after printing Yes 
In either case  each time you print something  end it with a newline and flush Standard Output 

t is one of       a  and w 
If t is either   or    then it represents the door chosen by DEGwer in the same manner 
If t     a  then i   j   0  and it means that your interactive answer has been confirmed as a correct answer 
If t     w  then i   j   0  and it means that your interactive answer has been confirmed as a wrong answer 
If you receive an input with t     a or t     w  your program must halt immediately 


Sample Input 11 1 First


Sample Output 1No

In this case  the dungeon consists of only one room  whose left side has a unique entrance door and right side has a unique exit door 
For your objective  you have to fix both doors as open  but it cannot be done even if you use the magic first 
Thus  your objective is not achievable 

Sample Input 22 1 First


Sample Output 2Yes
   

In this case  as shown in below  the dungeon consists of two vertically adjacent rooms  there is a unique vertically passable door between them  and the left and right sides of both rooms have two entrance and exit doors  respectively  in total 
   
  
   

You use the magic first  and suppose that you choose the unique vertically passable door   1 1 
Then  no matter how DEGwer will choose doors  you can choose one from the remaining two entrance doors and one from the remaining two exit doors  which achieve your objective because the two rooms became connected by your first magic 
The following is an example of interactive inputs and outputs 



Input   
Output 
Explanation




2 1 First

An input is given 



Yes
As your objective is achievable  you print Yes 



  1 1
You fix as open one that is 1st from the top and 1st from the left among the vertically passable door 


  1 2

DEGwer fixes as closed one that is 1st from the top and 2nd from the left among the horizontally passable doors  i e   the upper right exit door 



  2 2
You fix as open one that is 2nd from the top and 2nd from the left among the horizontally passable doors  i e   the lower right exit door 


  2 1

DEGwer fixes as closed one that is 2nd from the top and 1st from the left among the horizontally passable doors  i e   the lower left entrance door 



  1 1
You fix as open one that is 1st from the top and 1st from the left among the horizontally passable doors  i e   the upper left entrance door 


a 0 0

At this point  it is confirmed that the open lower right exit door can be reached from the open upper left entrance door  and your program must halt immediately after receiving the input indicating it 




Sample Input 32 1 Second


Sample Output 3No

The dungeon is the same as above  but your objective is not achievable as DEGwer uses the magic first 
For example  if DEGwer fixes the unique vertically passable door  that you choose first in Sample 2  as closed  then the situation is just like two parallel copies of Sample 1  in which your objective is not achievable even if you use the magic first"
binarydigit,https://atcoder.jp/contests/DEGwer2023/tasks/1202Contest_c,"問題文各要素が 0 または 1 の h  times w 行列であって以下の条件をともに満たすものの個数を整数 M で割った余りを求めてください 

各行を長さ w の文字列として解釈したとき 行方向に辞書順でソートされている 
各列を長さ h の文字列として解釈したとき 列方向に辞書順でソートされている 

入力で整数 H  W が与えられるので  1  le h  le H  1  le w  le W を満たす全ての整数 h  w の組について答えてください 

制約
1  le H  le 21
1  le W  le 100
2  le M  le 10 9


入力入力は以下の形式で標準入力から与えられる 
H   W   M


出力H 行出力せよ 
第 i 行  1  le i  le H  には W 個の整数を半角空白区切りで出力せよ 特に j 番目の整数  1  le j  le W  として h   i  w   j のときの本問の答えを出力せよ 

入力例 12 3 5201314


出力例 12 3 4
3 7 14

例として  h  w     2  3  の場合 問題文の条件を満たす行列は以下の 14 個です 
000 000 000 000 001 001 001 001 001 011 011 011 011 111
000 001 011 111 001 010 011 110 111 011 100 101 111 111


入力例 210 8 1000000000


出力例 22 3 4 5 6 7 8 9
3 7 14 25 41 63 92 129
4 14 45 130 336 785 1682 3351
5 25 130 650 2942 11819 42305 136564
6 41 336 2942 24520 183010 1202234 6979061
7 63 785 11819 183010 2625117 33345183 371484319
8 92 1682 42305 1202234 33345183 836488618 470742266
9 129 3351 136564 6979061 371484319 470742266 230288201
10 175 6280 402910 36211867 651371519 194085968 670171373
11 231 11176 1099694 170079565 17940222 26957098 939510047


入力例 35 5 2


出力例 30 1 0 1 0
1 1 0 1 1
0 0 1 0 0
1 1 0 0 0
0 1 0 0 0

Problem StatementFind the number of h  times w binary matrices which satisfy both of the following conditions modulo M 

When each row is interpreted as a string of length w  they are sorted in lexicographical order in the row direction 
When each column is interpreted as a string of length h  they are sorted in lexicographical order in the column direction 

Given integers H  W in the input  find the answer for all pairs of integers h  w that satisfy 1  le h  le H  1  le w  le W 

Constraints
1  le H  le 21
1  le W  le 100
2  le M  le 10 9


InputThe input is given from Standard Input in the following format 
H   W   M


OutputOutput H lines 
For the i th line  1  le i  le H   output W integers separated by spaces  Specifically  the j th integer  1  le j  le W  should be the answer to this problem when h   i  w   j 

Sample Input 12 3 5201314


Sample Output 12 3 4
3 7 14

For example  in the case of  h  w     2  3   there are 14 matrices that satisfy the conditions of the problem statement  as shown below 
000 000 000 000 001 001 001 001 001 011 011 011 011 111
000 001 011 111 001 010 011 110 111 011 100 101 111 111


Sample Input 210 8 1000000000


Sample Output 22 3 4 5 6 7 8 9
3 7 14 25 41 63 92 129
4 14 45 130 336 785 1682 3351
5 25 130 650 2942 11819 42305 136564
6 41 336 2942 24520 183010 1202234 6979061
7 63 785 11819 183010 2625117 33345183 371484319
8 92 1682 42305 1202234 33345183 836488618 470742266
9 129 3351 136564 6979061 371484319 470742266 230288201
10 175 6280 402910 36211867 651371519 194085968 670171373
11 231 11176 1099694 170079565 17940222 26957098 939510047


Sample Input 35 5 2


Sample Output 30 1 0 1 0
1 1 0 1 1
0 0 1 0 0
1 1 0 0 0
0 1 0 0 0"
Coincidence,https://atcoder.jp/contests/DEGwer2023/tasks/1202Contest_d,"問題文長さ N の整数列の組 A  A 1  A 2   dots  A N   B  B 1  B 2   dots  B N  があります 最初は全ての i   1  2   dots  N に対して A i B i 0 です   
あなたは A  B に対して次の操作を M 回行います 

操作 整数 i  j   1  le i  j  le N  を選び  A i と B j の値を 1 ずつ増やす 

ただし  M 回の操作のうち i j であるのはちょうど X 回である必要があります 
M 回の操作後の A  B の組としてありうるものの個数を 998244353 で割った余りを求めてください 

制約
2  leq N  leq 3000
0  leq X  leq M  le 3000
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N   M   X


出力M 回の操作後の A  B の組としてありうるものの個数を 998244353 で割った余りを出力せよ 

入力例 13 1 1


出力例 13

次の 3 個です 

A  1 0 0     B  1 0 0 
A  0 1 0     B  0 1 0 
A  0 0 1     B  0 0 1 


入力例 23 1 0


出力例 26

次の 6 個です 

A  1 0 0     B  0 1 0 
A  1 0 0     B  0 0 1 
A  0 1 0     B  1 0 0 
A  0 1 0     B  0 0 1 
A  0 0 1     B  1 0 0 
A  0 0 1     B  0 1 0 


入力例 34 4 2


出力例 3643

例えば次のような A  B の組がありえます 

A  1 1 1 1     B  1 1 1 1 
A  1 0 0 3     B  0 1 0 3 


入力例 4314 1592 653


出力例 4755768689

Problem StatementYou have a pair of integer sequences A  A 1  A 2   dots  A N   B  B 1  B 2   dots  B N   Initially A i B i 0 holds for all i   1  2   dots  N   
You will perform the following operation M times 

Operation  Choose two integers i  j   1  le i  j  le N  and increment A i and B j by 1 

Here  out of the M operations  the number of operations in which i j holds must be exactly X 
Find the number  modulo 998244353  of pairs of integer sequences that A  B can be after the M operations 

Constraints
2  leq N  leq 3000
0  leq X  leq M  le 3000
All input values are integers 


InputThe input is given from Standard Input in the following format 
N   M   X


OutputPrint the number  modulo 998244353  of pairs of integer sequences that A  B can be after the M operations 

Sample Input 13 1 1


Sample Output 13

The following 3 pairs are possible 

A  1 0 0     B  1 0 0 
A  0 1 0     B  0 1 0 
A  0 0 1     B  0 0 1 


Sample Input 23 1 0


Sample Output 26

The following 6 pairs are possible 

A  1 0 0     B  0 1 0 
A  1 0 0     B  0 0 1 
A  0 1 0     B  1 0 0 
A  0 1 0     B  0 0 1 
A  0 0 1     B  1 0 0 
A  0 0 1     B  0 1 0 


Sample Input 34 4 2


Sample Output 3643

The followings are examples of possible pairs 

A  1 1 1 1     B  1 1 1 1 
A  1 0 0 3     B  0 1 0 3 


Sample Input 4314 1592 653


Sample Output 4755768689"
Half Palindromes,https://atcoder.jp/contests/DEGwer2023/tasks/1202Contest_e,"問題文英小文字からなる文字列 S が与えられます S のすべての連続する部分文字列  S   S  1  2 個に対して以下の問題を解き 解の値の総和を求めてください 
問題 英小文字からなる文字列 T が与えられます T に以下の操作を好きなだけ繰返すことで作ることのできる文字列の長さの最小値を求めてください 

T の接頭辞であって奇数長 2k 1 文字とする の回文になっているものを任意に取る T の先頭 k 文字を削除する 


制約
1 leq  S  leq 10 6
S は英小文字からなる


入力入力は以下の形式で標準入力から与えられる 
S


出力答えを出力せよ 

入力例 1abab


出力例 116

T が a または b のとき 答えは 1 です 
T が ab または ba のとき 答えは 2 です 
T が aba または bab のとき k 1 として操作を一度行うのが最適であり 答えは 2 です 
T が abab のとき k 1 として操作を行ったあと もう一度 k 1 として操作を行うのが最適であり 答えは 2 です 
よって全体の答えは 1 times 4   2 times 3   2 times 2   2 times 1   16 です 

入力例 2abacaba


出力例 267


入力例 3tabatadebatabata


出力例 3739

Problem StatementYou are given a string S consisting of lowercase letters  
For each contiguous substring of S  there are  S   S  1  2 such substrings   solve the following problem  and compute the sum of the answers 
Problem  You are given a string T consisting of lowercase letters  
Compute the minimum possible length of a string that can be obtained from T by repeatedly applying the following operation an arbitrary number of times 

Take a prefix of T that is a palindrome of odd length  Let the length be 2k 1  Remove the first k letters of T 


Constraints
1 leq  S  leq 10 6
S consists of lowercase letters 


InputThe input is given from Standard Input in the following format 
S


OutputPrint the answer 

Sample Input 1abab


Sample Output 116

If T is a or b  the answer is 1 
If T is ab or ba  the answer is 2 
If T is aba or bab  applying the operation with k 1 once is optimal  and the answer is 2 
If T is abab  applying the operation with k 1 twice is optimal  and the answer is 2 
Therefore  the whole answer is 1 times 4   2 times 3   2 times 2   2 times 1   16 

Sample Input 2abacaba


Sample Output 267


Sample Input 3tabatadebatabata


Sample Output 3739"
K Medians Clustering,https://atcoder.jp/contests/DEGwer2023/tasks/1202Contest_f,"問題文正整数 N  M  K と長さ K の正整数列 c  c 1  c 2   dots  c K  が与えられます 
M 以下の正整数のみからなる要素数 N の多重集合 S であって 次の条件を全て満たすような K 個の多重集合の組  S 1  S 2   dots  S K  が存在するようなものを良い多重集合と呼びます 

S 1  S 2   dots  S K はいずれも空でない 
i 1  2   dots  K のそれぞれに対して S i の中央値は c i である 
S 1  S 2   dots  S K の要素数の総和は N である その N 個の要素からなる多重集合は S に等しい 

ただしこの問題において 要素数 n    geq 1  の多重集合 T の中央値とは T の要素を昇順に並べたときの  lceil n   2  rceil 番目の要素であると定義します 例えば  T  lbrace 1  2  3  4  rbrace の中央値は 2 であり  T  lbrace 1  3  5  7  7  rbrace の中央値は 5 です 
良い多重集合の個数を 998244353 で割った余りを求めてください 

制約
1  leq N  M  leq 10 7
1  leq K  leq  min 2  times 10 5  N 
1  leq c i  leq M
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N   M   K
c 1   c 2    dots   c K


出力良い多重集合の個数を 998244353 で割った余りを出力せよ 

入力例 18 5 3
4 1 5


出力例 1105

例えば S  lbrace 1 1 1 2 3 4 5 5  rbrace は 条件を満たす  S 1  S 2  S 3  が次のように存在するため良い多重集合です 

S 1    lbrace 1   mathbf 4   5  rbrace
S 2    lbrace 1   mathbf 1   2  3  rbrace
S 3    lbrace  mathbf 5   rbrace


入力例 210000000 2 2
1 2


出力例 29999999


入力例 330 10 5
3 1 4 1 5


出力例 338446044

Problem StatementYou are given positive integers N  M  K  and a sequence of K positive integers c  c 1  c 2   dots  c K  
A multiset S consisting of N positive integers less than or equal to M is called good  if there exists at least one sequence of K multisets  S 1  S 2   dots  S K  satisfying the following conditions 

None of S 1  S 2   dots  S K is empty 
The median of S i equals to c i  for all i 1  2   dots  K 
S 1  S 2   dots  S K have exactly N elements in total  A multiset consisting of those N elements coincides with S 

Note that we define the median of a multiset T with n    geq 1  elements as the  lceil n   2  rceil th element of T in ascending order  For example  the median of T  lbrace 1  2  3  4  rbrace is 2  and that of T  lbrace 1  3  5  7  7  rbrace is 5 
Find the number of good multisets modulo 998244353 

Constraints
1  leq N  M  leq 10 7
1  leq K  leq  min 2  times 10 5  N 
1  leq c i  leq M
All input values are integers 


InputThe input is given from Standard Input in the following format 
N   M   K
c 1   c 2    dots   c K


OutputPrint the number of good multisets modulo 998244353 

Sample Input 18 5 3
4 1 5


Sample Output 1105

For example  S  lbrace 1 1 1 2 3 4 5 5  rbrace is a good multiset because there exists  S 1  S 2  S 3  satisfying the conditions as follows 

S 1    lbrace 1   mathbf 4   5  rbrace
S 2    lbrace 1   mathbf 1   2  3  rbrace
S 3    lbrace  mathbf 5   rbrace


Sample Input 210000000 2 2
1 2


Sample Output 29999999


Sample Input 330 10 5
3 1 4 1 5


Sample Output 338446044"
Net of Net,https://atcoder.jp/contests/DEGwer2023/tasks/1202Contest_g,"問題文三次元凸多面体 P に対し その展開図とは 以下を満たす平面上の 重なっても構わない 多角形の集合のことを指します 

各多角形は P の面と一対一に対応する
辺のいずれかにに沿って折る操作を繰返すことで P を構成することができる 

ただし 辺に沿って折るとは以下の操作です 

辺であって その辺を取り除くと現在の図形が非連結になるものを取る その辺で定義される直線を中心軸として 現在の図形上でその辺の片側に位置する部分全体を 任意の角度だけ 三次元的に 回転させる 必要なら 座標の完全に一致した頂点や辺を同一視する 

同様に 三次元凸多面体 P の展開図の展開図とは 以下を満たす線分の集合のことを指します 

各辺は P の展開図の辺と一対一に対応する
頂点に沿って折ることを繰返すことで P の展開図を構成することができる 

ただし 頂点に沿って折るとは以下の操作です 

頂点であって その頂点を取り除くと現在の図形が非連結になるものを取る その頂点を中心に 現在の図形上でその頂点の特定の側に位置する部分全体を 任意の角度だけ 二次元的に 回転させる 必要なら 座標の完全に一致した頂点を同一視する 

どの四頂点も同一平面上にない 単位球面上の N 点が与えられます 
i 番目の点の座標は  x i y i   1   c i  sqrt 1 x i 2 y i 2   です 
与えられた点たちの凸包の展開図の展開図であって パスであるものが存在するか判定してください 
存在する場合は そのパスの長さの最大値を求めてください 

制約
4  leq N  leq 14
 1 leq x i y i leq 1
c i は 0 または 1
x i 2 y i 2 leq 1
与えられるどの 2 点も相異なる
与えられるすべての異なる四点 p q r s に対して p q r が乗っている平面と s の間の距離は 10   5  以上


入力入力は以下の形式で標準入力から与えられる 実数は小数点以下 6 桁まで与えられる 
N
x 1 y 1 c 1
 vdots
x N y N c N


出力与えられた点たちの凸包の展開図の展開図であってパスであるものが存在するなら 答えを出力せよ 
そうでない場合  1 を出力せよ 
真の値との絶対誤差あるいは相対誤差が 10   7  以下の場合に正答とみなされる 

入力例 14
0 000000 0 000000 1
0 000000 0 000000 0
1 000000 0 000000 1
0 000000 1 000000 0


出力例 113 899494936612

たとえば 図のような展開が最適です 


図  展開の例


入力例 26
 0 322191  0 852465 0
 0 463288  0 553583 1
0 378710  0 346882 1
 0 489727 0 488028 0
 0 731142 0 227066 1
0 254757  0 899035 0


出力例 222 950966056549


入力例 38
0 837078 0 492956 1
0 360579  0 565500 0
 0 367448  0 492394 1
0 491637  0 658814 1
 0 505114  0 538563 1
0 544637 0 592884 1
 0 622207  0 379934 1
0 402129 0 684158 1


出力例 328 879053537910


入力例 44
0 800000 0 600000 0
1 000000 0 000000 1
 0 280000  0 960000 1
0 000000 0 000000 0


出力例 413 284042973728

Problem StatementFor a three dimensional convex polytope P  the net of it is the set of  possibly overlapping  polygons satisfying the following 

Each polygon corresponds one to one with a face of P 
P can be constructed by repeating the operation of folding along its edges 

Here  folding along an edge is the following operation 

Choose an edge  the removal of which would make the current figure disconnected  Use the line defined by this edge as the axis of rotation and rotate the entire part of the current figure that lies on one side of this edge by any angle  in three dimensions   If necessary  vertices or edges that coincide exactly in coordinates are identified 

Similarly  the net of the net of P is the set of line segments satisfying the following 

Each edge corresponds one to one with an edge of the net of P 
The net of P can be constructed by repeating the operation of folding along its vertices 

Here  folding along a vertex is the following operation 

Choose a vertex  the removal of which would make the current figure disconnected  Use this vertex as the center of rotation and rotate the entire part of the current figure that lies on some side of this vertex by any angle  in two dimentions   If necessary  vertices that coincide exactly in coordinates are identified 

You are given N points on the unit sphere such that no four of these are on the same plain 
The coordinate of i th point is given by  x i y i   1   c i  sqrt 1 x i 2 y i 2   
Determine whether there exists a net of a net of the convex hull of given points  which is a path 
If exists  compute the largest length of such path 

Constraints
4  leq N  leq 14
 1 leq x i y i leq 1
c i is 0 or 1
x i 2 y i 2 leq 1
No two given points coincide 
For all four different given points p q r s  the distance between s and the plain on which p q r exist is at least 10   5  


InputThe input is given from Standard Input in the following format 
N
x 1 y 1 c 1
 vdots
x N y N c N


OutputIf there exists a net of a net of the convex hull of given points  which is a path  print the largest possible length 
If not print  1 
An output is considered correct if the absolute or the relative error from the true value is at most 10   7  

Sample Input 14
0 000000 0 000000 1
0 000000 0 000000 0
1 000000 0 000000 1
0 000000 1 000000 0


Sample Output 113 899494936612

The following net of net is optimal 


Figure  the optimal net of the net 


Sample Input 26
 0 322191  0 852465 0
 0 463288  0 553583 1
0 378710  0 346882 1
 0 489727 0 488028 0
 0 731142 0 227066 1
0 254757  0 899035 0


Sample Output 222 950966056549


Sample Input 38
0 837078 0 492956 1
0 360579  0 565500 0
 0 367448  0 492394 1
0 491637  0 658814 1
 0 505114  0 538563 1
0 544637 0 592884 1
 0 622207  0 379934 1
0 402129 0 684158 1


Sample Output 328 879053537910


Sample Input 44
0 800000 0 600000 0
1 000000 0 000000 1
 0 280000  0 960000 1
0 000000 0 000000 0


Sample Output 413 284042973728"
Incomplete Notes,https://atcoder.jp/contests/DEGwer2023/tasks/1202Contest_h,"ストーリーあなたは N 個の音からなる歌が途切れ途切れ聞こえた この歌に  M 個の音からなるフレーズが含まれていたかどうかを推測したい ただし フレーズが本来と異なる 調 で含まれている場合も考慮したい 

問題文それぞれ長さが N  M の 2 つの非負整数列 A    A 1   dots  A N   B    B 1   dots  B M  が与えられます 
1  le i  le N   M   1 を満たす整数 i のうち 以下の条件を満たすものの個数を求めてください 
条件

A の長さ M の連続部分列 C を C    A i   dots  A  i   M   1   で定める 次に 数列 B  C の各要素のうち値が 0 であるもの全てを任意の 正の実数 で更新する 更新後の値は各要素で異なっていてよい  その後  正の実数 t を任意に定め 数列 C の全ての要素に t を乗じる このようにして得られた数列 B と C を一致させることができる 


制約
1  leq M  leq N  leq 5  times 10 5
0  leq A i  leq 5  times 10 5  i   1   ldots  N 
0  leq B i  leq 5  times 10 5  i   1   ldots  M 


入力入力は以下の形式で標準入力から与えられる 
N   M
A 1   A 2    dots   A N
B 1   B 2    dots   B M


出力答えとなる整数を出力せよ 

入力例 19 4
9 3 0 0 2 99 4 0 0
6 2 0 4


出力例 14

i   1 のとき  B を  6  2  5  4  に また C    9  3  0  0  を  9  3  7 5  6  に更新し  t   2 3 ととると最終的に B と C が一致します 
i   2  3  4 のときも 適切に操作を行うことで B と C を一致させることが可能ですが  i   5  6 のときは不可能です 
以上より  i   1  2  3  4 の 4 個が条件を満たすので答えとして 4 を出力します 

入力例 28 2
0 0 0 0 0 0 0 0
0 0


出力例 27

StoryYou heard a song consisting of N notes in fits and starts  You want to guess whether a phrase consisting of M sounds was included in this song  You also want to consider cases where the phrase is included in a different key than the original 

Problem StatementYou are given two sequences of non negative integers  A    A 1   dots  A N  and B    B 1   dots  B M   each of length N and M  respectively 
Find the number of integers i that satisfy 1  le i  le N   M   1 and meet the following condition 
Condition

Define a contiguous subsequence C of length M of A as C    A i   dots  A  i   M   1    Next  update all elements of the sequences B and C that are 0 with any positive real number  the updated values may be different for each element   Then  determine an arbitrary positive real number t  and multiply all elements of sequence C by t  By doing so  the sequences B and C can be made identical 


Constraints
1  leq M  leq N  leq 5  times 10 5
0  leq A i  leq 5  times 10 5  i   1   ldots  N 
0  leq B i  leq 5  times 10 5  i   1   ldots  M 


InputThe input is given from Standard Input in the following format 
N   M
A 1   A 2    dots   A N
B 1   B 2    dots   B M


OutputPrint an integer as the answer 

Sample Input 19 4
9 3 0 0 2 99 4 0 0
6 2 0 4


Sample Output 14

For i   1  update B to  6  2  5  4  and C    9  3  0  0  to  9  3  7 5  6   and take t   2 3  Finally  B and C will match 
For i   2  3  4  it is possible to make B and C match by performing appropriate operations  but for i   5  6  it is impossible 
Therefore  since i   1  2  3  4 meet the condition  output 4 as the answer 

Sample Input 28 2
0 0 0 0 0 0 0 0
0 0


Sample Output 27"
Convex Dombination,https://atcoder.jp/contests/DEGwer2023/tasks/1202Contest_i,"問題文平面上の N 個の相異なる格子点  X i  Y i     i   1  2   dots  N  が与えられます 
各格子点  X i  Y i  は整数の得点 P i を持っています 
これらの格子点から 以下の条件を満たすように好きな個数だけ選びます 
このとき 選んだ格子点の得点の総和としてあり得る最大値を求めてください 
条件 
選ばれた格子点の凸結合に支配されるような格子点は必ず選ばれている 
すなわち 各 k   1  2   dots  N について 以下を満たす N 個の非負実数の組   lambda 1   lambda 2   dots   lambda N  が存在するならば 格子点  X k  Y k  は選ばれている 

 lambda i   0  implies   格子点  X i  Y i  は選ばれている 
 sum  i 1  N  lambda i   1
 sum  i 1  N  lambda i X i  geq X k
 sum  i 1  N  lambda i Y i  geq Y k


制約
1  leq N  leq 200
1  leq X i  leq 10 9      1  leq i  leq N 
1  leq Y i  leq 10 9      1  leq i  leq N 
 X i  Y i   neq  X j  Y j       i  neq j 
 P i   leq 10 7      1  leq i  leq N 


入力入力は以下の形式で標準入力から与えられる 
N
X 1   Y 1   P 1
X 2   Y 2   P 2
 vdots
X N   Y N   P N


出力条件を満たすように格子点を選ぶことで達成可能な得点の総和の最大値を出力せよ 

入力例 13
1 4 2
4 1 3
2 2  4


出力例 13

 X 2  Y 2     4  1  のみを選ぶのが最適です 
 X 1  Y 1     1  4  も選ぶ場合 たとえば  lambda 1   0 4    lambda 2   0 6 とすると 
  
     lambda 1    lambda 2   0 4   0 6   1   1mm 
     lambda 1 X 1    lambda 2 X 2   0 4  times 1   0 6  times 4   2 8  geq 2   X 3   1mm 
     lambda 1 Y 1    lambda 2 Y 2   0 4  times 4   0 6  times 1   2 2  geq 2   Y 3
      
となるため  X 3  Y 3     2  2  も選ぶ必要があり 結果として損をします 

入力例 23
1 4 2
4 1 3
2 2  1


出力例 24

すべての点を選ぶのが最適です 

入力例 33
1 4 2
4 1 3
1 1  6


出力例 30

1 つも選ばないのが最適な場合もあります 
Problem StatementYou are given N distinct integer grid points  X i  Y i     i   1  2   dots  N  in the plane  each of which has an integer score P i 
You can choose an arbitrary number of grid points among them under the following condition 
Find the maximum value of the sum of the scores of chosen grid points 
Condition 
A grid point dominated by a convex combination of the chosen grid points must be chosen 
That is  for each k   1  2   dots  N  if there exists a tuple   lambda 1   lambda 2   dots   lambda N  of N nonnegative reals with the following conditions  then  X k  Y k  is chosen 

 lambda i   0  implies  X i  Y i  is chosen 
 sum  i 1  N  lambda i   1 
 sum  i 1  N  lambda i X i  geq X k 
 sum  i 1  N  lambda i Y i  geq Y k 


Constraints
1  leq N  leq 200
1  leq X i  leq 10 9      1  leq i  leq N 
1  leq Y i  leq 10 9      1  leq i  leq N 
 X i  Y i   neq  X j  Y j       i  neq j 
 P i   leq 10 7      1  leq i  leq N 


InputThe input is given from Standard Input in the following format 
N
X 1   Y 1   P 1
X 2   Y 2   P 2
 vdots
X N   Y N   P N


OutputPrint the maximum value of the sum of the scores of grid points that are chosen under the condition 

Sample Input 13
1 4 2
4 1 3
2 2  4


Sample Output 13

It is optimal to choose only  X 2  Y 2     4  1  
If you choose  X 1  Y 1     1  4  in addition  then for example  lambda 1   0 4 and  lambda 2   0 6 satisfy
  
     lambda 1    lambda 2   0 4   0 6   1   1mm 
     lambda 1 X 1    lambda 2 X 2   0 4  times 1   0 6  times 4   2 8  geq 2   X 3   1mm 
     lambda 1 Y 1    lambda 2 Y 2   0 4  times 4   0 6  times 1   2 2  geq 2   Y 3 
      
and hence  X 3  Y 3     2  2  must be chosen in addition  which decreases the sum of scores as a result 

Sample Input 23
1 4 2
4 1 3
2 2  1


Sample Output 24

It is optimal to choose all the grid points 

Sample Input 33
1 4 2
4 1 3
1 1  6


Sample Output 30

It is sometimes optimal to choose no grid point"
Hated Number,https://atcoder.jp/contests/DEGwer2023/tasks/1202Contest_j,"問題文正整数 X  M    X  leq M  が与えられます 
あなたは M 以下の正整数が好きですが 例外として X だけは嫌いです そこで 次の条件を満たす集合 S を作ることにしました 

S は 10 5 以下の相異なる正整数のみからなる 
S の要素数は 20 以下である 
1  leq k  leq M    k  neq X を満たす任意の正整数 k に対して  S の部分集合で要素の総和が k であるものが存在する 
S の部分集合で要素の総和が X であるものは存在しない 

このような集合 S が存在するかどうかを判定し 存在する場合は 1 つ示してください 
1 つの入力につき  T 個のテストケースに答えてください 

制約
1  leq T  leq 100
1  leq X  le M  leq 10 5
M  geq 2
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
T
 mathrm case  1
 vdots
 mathrm case  T

各テストケースは次の形式で与えられる 
X   M


出力各テストケースについて  条件を満たす S が存在しない場合は  1 を 存在する場合は S の例を 1 つ次の形式で出力せよ 
N
a 1   a 2    dots   a N

ここで  N は S の要素数を   a 1  a 2   dots  a N  は S の要素を昇順に並べた列を表し それぞれ次の制約を満たさなければならない 

1  leq N  leq 20
1  leq a 1  lt a 2  lt  dots  lt a N  leq 10 5

また 各テストケースごとに出力を改行せよ 

入力例 13
4 6
3 7
11 11


出力例 13
1 2 5
 1
4
1 2 3 4


1 つ目のケースでは  S  lbrace 1  2  5  rbrace などが条件を満たします 
2 つ目のケースで条件を満たす S はありません 
3 つ目のケースでは  S  lbrace 1  2  3  4  rbrace などが条件を満たします 

Problem StatementYou are given positive integers X  M    X  leq M  
You like positive integers less than or equal to M  but you hate X as the exception  So you decide to construct a set S satisfying the following conditions 

S consists of distinct positive integers less than or equal to 10 5 
S has at most 20 elements 
For all positive intergers k satisfying 1  leq k  leq M and k  neq X  there exists at least one subset of S such that the sum of its elements equals to k 
There is no subset of S such that the sum of its elements equals to X 

Determine whether such a set S exists  and if so  construct one example 
Solve T test cases for each input file 

Constraints
1  leq T  leq 100
1  leq X  le M  leq 10 5
M  geq 2
All input values are integers 


InputThe input is given from Standard Input in the following format 
T
 mathrm case  1
 vdots
 mathrm case  T

Each test case is given in the following format 
X   M


OutputFor each test case  if there is no S satisfying the conditions then print  1  and if there is then print one example of S in the following format 
N
a 1   a 2    dots   a N

Here N denotes the number of elements in S and  a 1  a 2   dots  a N  denotes the sequence of elements in S in ascending order  which must satisfy the following constraints 

1  leq N  leq 20
1  leq a 1  lt a 2  lt  dots  lt a N  leq 10 5

Also  start a new line for each test case 

Sample Input 13
4 6
3 7
11 11


Sample Output 13
1 2 5
 1
4
1 2 3 4


In the first case  S  lbrace 1  2  5  rbrace is one example of S 
In the second case  there is no S satisfying the conditions 
In the third case  S  lbrace 1  2  3  4  rbrace is one example of S"
± Beam,https://atcoder.jp/contests/DEGwer2023/tasks/1202Contest_k,"問題文DEGwer さんは平面上の   W  W   times   H  H  の土地を所有しており ここで農業を営んでいます 
鳥獣被害に悩まされた DEGwer さんは 土地に侵入した動物を焼き払うビームを張り巡らせることにしました 
具体的には 土地内の格子点に   か   のいずれかの符号が付いた柱を立て 符号の異なる柱同士を結ぶ線分としてビームを張ります 
ただし ビーム同士が柱の無い点で交わると ビームの持つエネルギーが共鳴して大変なことが起こるため ビーム同士は柱の無い点を共有しないようにしなければなりません 
DEGwer さんは 柱を立てる N 個の格子点  X i  Y i     i   1  2   dots  N  を既に決めています 
その中には土地の四隅すべてが含まれ さらに柱を立てるどの 3 点も同一直線上には存在しません 
各柱の符号とビームを張る柱のペアを適切に定めて 張るビームの数を最大にしてください 

制約
1  le W  le 10 9
1  le H  le 10 9
4  le N  le 10 5
 W  le X i  le W      1  leq i  leq N 
 H  le Y i  le H      1  leq i  leq N 
 X i  Y i   neq  X j  Y j       i  neq j 
 X i  Y i      pm W   pm H  複号任意 であるような i が存在する 
i  neq j  neq k  neq i のとき  X i  Y i    X j  Y j    X k  Y k  は同一直線上にない 


入力入力は以下の形式で標準入力から与えられる 
W   H
N
X 1   Y 1
X 2   Y 2
 vdots
X N   Y N


出力ビームの数を最大にする方法を以下の形式で出力せよ 
S
M
P 1   Q 1
P 2   Q 2
 vdots
P M   Q M


S は      からなる長さ N の文字列であり その i 文字目 S i は  X i  Y i  に立てる柱 i の符号を表す 
M はビームの最大本数を表す整数である 
各 i   1  2   dots  M について  P i  Q i  は 柱 P i と柱 Q i の間にビームを張る ことを表し S  P i   neq S  Q i  が成り立つ必要がある 
i  neq j のとき  X  P i   Y  P i   と  X  Q i   Y  Q i   を結ぶ線分と  X  P j   Y  P j   と  X  Q j   Y  Q j   を結ぶ線分は それぞれの端点を除いて共有点をもたない 


入力例 11 1
4
1 1
 1 1
 1  1
1  1


出力例 1    
4
1 2
2 3
3 4
4 1

DEGwer さんの所有する土地は   1  1   times   1  1  であり その四隅のみに柱を立てます 
柱に 反 時計回りに交互に異なる符号を割り当てることで 隣り合う柱同士の間すべてにビームを張ることができ これが最大です 

入力例 21 2
5
1 2
 1 2
0 1
 1  2
1  2


出力例 2     
6
1 2
2 4
4 5
5 1
2 3
3 5

DEGwer さんの所有する土地は   1  1   times   2  2  であり その四隅と格子点  0  1  に柱を立てます 
四隅の柱に 反 時計回りに交互に異なる符号を割り当て  0  1  の柱に任意の符号を割り当てることで 出力例のように 6 本のビームを張ることができます 
また 7 本以上のビームを張れないことが証明できるので これが最大であり答えの一例となります 
Problem StatementDEGwer owns a rectangular land   W  W   times   H  H  in the plane  and he is engaged in farming there 
He is suffering from damage caused by birds and beasts  and he has decided to stretch beams that burn out creatures invading his land 
Specifically  he will construct pillars having a sign  either   or    on integer grid points in his land  and then stretch a beam as a segment between two pillars having different signs 
However  if two beams share a point without a pillar  then something horrible happens because of resonance of beam energy  and hence he has to let any two beams not share a point without a pillar 
DEGwer has decided N integer grid points  X i  Y i     i   1  2   dots  N  on which he will construct the pillars 
These grid points include the four corners of his land  and any three among these grid points are not on a single line 
Your mission is to maximize the number of stretched beams by determining the sign of each pillar and between which pillars beams are stretched 

Constraints
1  le W  le 10 9
1  le H  le 10 9
4  le N  le 10 5
 W  le X i  le W      1  leq i  leq N 
 H  le Y i  le H      1  leq i  leq N 
 X i  Y i   neq  X j  Y j       i  neq j 
There exists an index i such that  X i  Y i      pm W   pm H   for any pair of signs  
When i  neq j  neq k  neq i  the three grid points  X i  Y i    X j  Y j   and  X k  Y k  are not on a single line 


InputThe input is given from Standard Input in the following format 
W   H
N
X 1   Y 1
X 2   Y 2
 vdots
X N   Y N


OutputPrint a way to maximize the number of stretched beams in the following format 
S
M
P 1   Q 1
P 2   Q 2
 vdots
P M   Q M


S is a string of length N consisting of   and    whose i th character S i represents the sign of the pillar i constructed on  X i  Y i  
M is the maximum number of stretched beams 
For i   1  2   dots  M  the pair  P i  Q i  means to stretch a beam between the pillar P i and the pillar Q i  where S  P i   neq S  Q i  necessarily holds 
When i  neq j  the two segments between  X  P i   Y  P i   and  X  Q i   Y  Q i   and between  X  P j   Y  P j   and  X  Q j   Y  Q j   do not share any point except for their common end points 


Sample Input 11 1
4
1 1
 1 1
 1  1
1  1


Sample Output 1    
4
1 2
2 3
3 4
4 1

DEGwer s land is   1  1   times   1  1   and he will construct four pillars on the four corners 
If you assign alternating signs to the corner pillars in  counter clockwise direction  you can stretch a beam between any adjacent pillars  and this is maximum 

Sample Input 21 2
5
1 2
 1 2
0 1
 1  2
1  2


Sample Output 2     
6
1 2
2 4
4 5
5 1
2 3
3 5

DEGwer s land is   1  1   times   2  2   and he will construct five pillars on the grid point  0  1  in addition to the four corners 
If you assign alternating signs to the corner pillars in  counter clockwise direction and an arbitrary sign to the pillar on  0  1   you can stretch six beams in total as Sample Output 2 
It can be proved that seven beams cannot be stretched  so this is an example of a solution"
1.00.はじめに,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_a,"Python を使うメリット

文法が直感的
トップページでも書きましたが  Python は文法が直感的でコードが書きやすく可読性が高いと言われています 競技プログラミングでは良い解法を思いついても 時間内にコードに書き出せないと得点が得られません また 1 分 1 秒でも早く正解した方が有利になります このため 書きやすいという特徴は有利に働きやすいと言えます1 

多倍長整数
Python では多倍長整数が標準機能で簡単に扱えるため 問題によっては大きなアドバンテージになります 通常は煩雑な考察をすることを想定された問題でも 多倍長整数を使うことで 解法やコードが簡潔になることがあります 


Python を使うデメリット

実行速度
Python はインタプリタ言語であり  C   のようなコンパイル言語と比べるとどうしても実行速度が遅くなる傾向があります 
直近の AtCoder のコンテストでは 超上級者向けの問題の一部を除いて コンテストで出題される問題のほとんどは Python  後述の CPython または PyPy でも実行時間制限内に無理なく通すことができます このため 解法は合ってるのに Python だから通せないということはほとんどありません 
もちろん 想定解よりも遅い解法を使う場合や Python が得意でない書き方をする場合などでは TLE  実行時間制限超過 になる可能性はあります 本プログラムでは  Python を使う場合に TLE に引っかからないために気を付ける点についてもなるべく触れていく予定です 主に 2 章以降になる予定です  
CPython と PyPy
AtCoder では  Python コードの実行環境として CPython と PyPy が用意されています  CPython と PyPy はいずれも Python の実行環境で 多くの場合は全く同じコードで全く同じアウトプットを返しますが 一部挙動が異なる場合があります それぞれの特徴は以下の通りです 

CPython は Python の公式の実装です 
PyPy は JIT Just In Time コンパイル機能を持っています  JIT コンパイルにより実行時にコードを機械語に変換することで  CPython に比べて高速になることが多いです  

AtCoder における競技プログラミングでは 一部の例外を除き 基本的には PyPy で提出する方が実行時間制限の関係で有利になることが多いです 
問題

提出練習
プログラミングの文法の説明に入る前に 自動採点システム ジャッジ  2 の使い方を確認しましょう ジャッジへの提出フォームは このページの一番下にあります 
提出言語の選択
CPython で提出する場合は  Python  CPython 3 11 4   を  PyPy で提出する場合は  Python  PyPy 3 10 v7 3 12   を選択しましょう  言語 欄を押して出てくるボックスに言語名の一部  py  など を入力すると探しやすくなります  3
ソースコード
 ソースコード 欄にはプログラムのソースコードを入力します 
ここでは 次のプログラムをコピー ペーストしてみましょう 

コピー ペーストの仕方 
 の右上にある Copy ボタンをクリック  ソースコード のテキストを入力する場所で右クリック  貼り付け をクリック  

print  Hello  world   

提出 結果確認
言語選択とソースコードの入力ができたら  提出 ボタンを押してください 
ページが切り替わり WJ と表示されているところが AC に変われば提出成功です 

WA や RE と表示されてしまった場合 正しくコピー ペーストできているか確認し 再提出してください 
CE と表示されてしまった場合  言語 が正しく選択されているか確認してください   Python  CPython 3 11 4   または  Python  PyPy 3 10 v7 3 12   が選択されているかどうか確認し 再提出してください 

CPython と PyPy の一方で AC が得られたら もう片方でも提出してみましょう 全く同じコードで AC が得られることが確認できると思います 

コードテスト
ジャッジは 出力結果が正しいかどうかを判定してくれますが 思い通りの結果が得られない場合など 自分のコードがどのような出力をしているのか確認したいこともあると思います  コードテスト を使うとプログラムがどのような出力をしているか確認することができます コードテストはページ上部のリンクから飛ぶことができます 
コードテストの使い方は 上で説明したジャッジの使い方に似ていますが 下記のとおりです 

提出言語を選択する
ソースコードを記載する
 標準入力 欄に入力 後述 を記載する
実行ボタンを押す

 入力 については 1 05  節で扱います このページの Hello  world  を出力するような例では入力はありませんので  標準入力 欄は空欄で構いません 
次のページ




ただし書きやすいかどうかは個人の感じ方次第なので 絶対的な指標ではありません   


AtCoder では 提出コードが正しいかどうかの判定 ジャッジ が自動的に行われます より具体的には 予め準備されたテストケースに対して提出コードのプログラムを実行し すべてのテストケースに対して期待される結果を出力した場合に正解 AC と判定されます   


AtCoder では Python の他の実行環境に  Python  Mambaforge   CPython 3 10 10   および  Python  Cython 0 29 34   がありますが 本記事では詳しく説明しません"
. 付録1.コードテストの使い方,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_ak,"コードテストの場所
練習問題を解くときは コードテスト というページを使ってプログラムを書き 正しく動作することが確認できたら提出するようにしましょう   
コードテストのページは 次の画像の赤い四角で囲った部分をクリックすることで開けます 


プログラムの実行
設定ができたら  ソースコード と書かれている場所にプログラムを書きます 
プログラムが書けたら 言語 が Python CPython 3 11 4  または Python  PyPy 3 10 v7 3 12  になっていることを確認し ページ下部にある 実行 ボタンを押してください   


実行結果
プログラムが実行できたら 標準出力 と書かれている場所にプログラムの出力が表示されます   


エラーが発生したとき
エラーが発生した場合は 標準エラー出力 と書かれている場所にエラーの詳細が表示されます 
たとえば開きカッコに対応する閉じカッコがない場合 SyntaxError となります   
print 123

標準エラー出力
File  Main py   line 1
    print 123
          
SyntaxError      was never closed

エラーの内容をヒントにプログラムを修正し また実行してください   
エラーの直し方については1 02 プログラムの書き方とエラーで説明します   

EX1 出力の練習   1 01 に戻る


ここから先の説明はEX5 A足すB問題   1 05 を解く時に読んでください  

コードテストでの入力
コードテスト上で入力機能を使う場合  標準入力 と書かれている場所に入力を書き 実行ボタンをクリックします   
 

EX5 A足すB問題   1 05 に戻る"
. 付録2.提出結果の見方,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_al,"AtCoder上でのエラーの表示
エラーの種類とAtCoder上の表示の対応は次の表の通りです   



エラーの種類
ジャッジの判定
終了コード




コンパイルエラー
CE  Compile Error 
 1


実行時エラー
RE  Runtime Error 
0以外


論理エラー
WA  Wrong Answer 
0 エラーがない時と同じ 


実行時間制限超過 
TLE  Time Limit Exceeded 
9



 ジャッジの判定 は提出後の採点結果のことです 
 終了コード はコードテスト上でプログラムを実行した後 画面の下部に表示されている数値のことです   
コードテスト上でコンパイルエラーが発生した場合  標準エラー出力 にエラーの詳細が表示されます   
エラーの内容を読んだり 表示されているエラー内容を検索したりしてエラーを修正しましょう   

 実行時間制限超過がAPG4bPythonで発生する場合 提出先を間違えている可能性があります 説明ページではなく問題ページ EX   に提出しているかを確認しましょう 


EX2 エラーの修正   1 02 に戻る


ここから先の説明はEX5 A足すB問題   1 05 を解く時に読んでください  

ACを取るには
入力を使う問題では  ある入力ではACだったが 別の入力ではWAだった という事がありえます   
例えば A   Bを計算する問題 で 間違えてプログラムの出力をA   Bとしてしまったとします 
この場合でも 入力がA   5  B   0だったとき プログラムの出力と正解はどちらも5となり一致し この入力に対してはAC
となります 
しかし 入力がA   2  B   1だったとき プログラムの出力は1となりますが 正解は3なので一致せず この入力に対してはWAとなります   




自分のプログラムの出力
正解
入力に対する採点結果




A   5  B   0
5
5
AC


A   2  B   1
1
3
WA



問題の採点結果をACにするには その問題の入力のパターン全てに対して正しい出力をする必要があります   


提出の詳細の確認方法
採点結果がWAだった場合は 提出の詳細 を見ると いくつの入力例に対してACであり いくつの入力例に対してWAであるかを見ることができます   
この画面から実際にどのような入力が行われるかを確認することはできませんが 提出したプログラムがどれくらい正しいかのヒントにはなります   
提出の詳細を見るには まず問題ページで 提出一覧   自分の提出 をクリックします   

すると自分の提出の一覧が表示されるので 見たい提出を選んで 詳細 をクリックすると 提出の詳細を見ることができます   

 提出一覧   すべての提出 をクリックすることで 他の人の提出を見ることもできます 
他の人のプログラムを見ることも勉強になるので うまく活用してください   

EX5 A足すB問題   1 05 に戻る"
1.01.出力とコメント,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_b,"文字列の出力
Python においてプログラムは上から順に一行ずつ実行されます 以下は前節で提出した  Hello  world   という文字列を出力する 画面に表示する プログラムです 
print  Hello  world   

実行結果
Hello  world 

このプログラムは print という機能2で出力を行っています print に続けて半角の丸括弧内に要素を記述することで 記述した要素を出力することができます 
この例では  Hello  world   という文字列を出力しています Python では     で囲った部分は文字列として扱われます print は文字列を受け取るとその内容をそのまま出力します 
異なる文字列を出力したければ     の中に入れる文章を書き換えれば良いです 
print  Pythonだいすき  

実行結果1
Pythonだいすき


数値の出力
print は文字列以外にも様々な要素を受け取ることができます 以下は数値を出力するプログラムです 
print 123 

実行結果
123

この例では 123 という数値 整数 を出力しています Python では数字から成る要素は数値として解釈されます print 関数は数値も文字列同様に値をそのまま出力することができます 
なお ここで print  123   と書いても同じ実行結果を得ることができます 

複数の出力

改行区切りの出力
複数の print を続けて記述するとどうなるでしょうか 
print  Hello  world   
print 123 

実行結果
Hello  world 
123

Python は記述したプログラムを上から順に実行します また print は実行のたびに出力の最後に改行を行います この結果上記のように 2 つの出力要素が順番に 2 行にわたって出力されます 

スペース区切りの出力
print は複数の要素を受け取ることができます 
print  Hello  world    123 

実行結果
Hello  world  123

このプログラムでは半角カンマ   区切りで 2 つの要素を print に渡しました この場合 渡した要素を順にスペース区切りで 1 行で出力されます 
なお 要素が 3 つ以上でも同様にすべての要素を順にスペース区切りで出力できます コードテストから試してみてください 

print の機能を用いる方法
改行区切りで出力する別の方法として 以下のように print の機能を用いる方法があります 
print  Hello  world    123  sep   n  

実行結果
Hello  world 
123

このプログラムでは print に sep   n  という要素を追加で指定しています この sep  は 複数要素の間に挿入する文字列 を指定します この例だと 2 つの要素の間に改行文字   n  を挿入することになり 上記のような実行結果が得られます 
スペース区切りで出力する別の方法もあります 以下のように記述します 
print  Hello  world    end     
print 123 

実行結果
Hello  world  123

このプログラムでは print に end     という要素を追加で指定しています この end  は 出力後に挿入する文字列 を指定します この例だと出力後に半角スペースを挿入することになり 上記のような実行結果が得られます 
スペース区切り 改行区切りそれぞれについて 2 通りの方法を紹介しました 難しく感じる場合 慣れないうちは自分の分かりやすい方法だけを使っていれば問題ありません 
もし print の動作仕様について正確な情報が知りたい場合は Python の公式ドキュメント を参照してみてください 

より複雑な要素の出力
より複雑な要素を出力したい場合 print の書き方を工夫するのではなく 出力したい要素を文字列として構築し その文字列を print で出力する という方法を取ることになります 
本教材の後半で文字列の処理を学べば より複雑な出力を行うことができるようになります 
コメント
コメントは人間が プログラムがどういう動作をしているか 等のメモ書きをプログラム中に残しておくための機能です 
プログラムとしての意味はないので 書いても動作に影響はありません 

2 種類のコメントの書き方
例を見てみてみましょう 
  123
  456
  と出力するプログラムです
print 123 
print 456 

   
print は受け取った要素を出力する
最後に改行が自動で挿入される
   

実行結果
123
456

1 3行目に   から始まる行はコメントで プログラムの動作には影響しません 
7 10行目の     で挟まれた部分も同様にコメントです3 

コメントアウト
一時的に実行させたくない部分をコメントにしてしまうことで その部分のプログラムを無効化するというテクニックがあります このテクニックは コメントアウト と呼ばれ よく使われます 
  print 123 
print 456 

実行結果
456

1行目の処理はコメント扱いで実行されないため 123 は出力されません 
123 を出力したくなった場合はコメントを解除すればよい    を消せば良い  ため 書き直しの手間は小さいです 
注意点

全角スペース
Python は全角文字を扱うことは可能ですが プログラムの中に全角スペース 　 が入っているとエラーになってしまいます 発見が難しいため注意してください 

書き出し位置
Python では各行の書き出し位置に規則が存在します 特に 今回書くような単純なプログラムではすべての行が行の左端に位置している必要があります 
行の先頭には  全角スペースは勿論ですが  半角スペースも記述しないように注意してください 
問題
リンク先の問題を解いてください 

EX1 コードテストと出力の練習
前のページ   次のページ




人によります   


より具体的には 組み込み関数という Python が提供する仕組みになります 組み込み関数については 1 12 組み込み関数で扱います   


厳密には複数行にわたる文字列ですが コメントを書くために利用されることも多い記法です"
1.02.プログラムの書き方とエラー,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_c,"行の書き出し位置とインデント
Python は各行の書き出し位置を揃える必要があります 理由も無く行の書き出し位置がずれるとエラーになるため 行の先頭に余分なスペースが入らないように注意してください 
逆に 後の節で扱う 構文を表すキーワード   コロン を記述した場合 次の行では書き出し位置を右にずらす  インデントする  必要があります 
参考までに インデントしている部分を含むコードの例を紹介します  現時点で意味が分かる必要はありません  
  何もない行は左詰め
print  hoge  

def function   
      関数定義のコロンの後 インデントする
      複数行記述する場合 ずっとインデントしたまま
    print  foo  
    return 0

for i in range 10  
      for 文のコロンの後 インデントする
    print  bar  
    for j in range 10  
          二重  以上  にインデントすることもある
        print  baz  

C  などの他の言語では見やすくするためにインデントを行いますが Python ではルールとして強制的にインデントを行う点が特徴的です1 

改行について
Python では実行文2同士を区切るために改行もしくはセミコロン   を使用します 
今まで print を複数記述する際には必ず改行をはさんでいましたが 次のようにセミコロン   を使って複数の実行文を 1 行にまとめて記述することも可能です 
print  hello    print 123 

実行結果
hello
123

逆に 1 つの実行文を複数の行に分けて記述したい場合 バックスラッシュ   を用いて次のように書くことができます 次の例は 1 から 8 までの整数を足し合わせた結果を表示するプログラムです 足し合わせる数が多いため 途中でバックスラッシュを用いて改行をはさんでいます 
res   1   2   3   4  
       5   6   7   8
print res 

実行結果
36

一部のケースではバックスラッシュなしで改行をはさむことができます 具体的には 丸カッコ    や四角カッコ    波カッコ    などの内側です 次のような書き方のイメージになります 意味は気にしなくて構いません  
print 
    123 
     hoge  
     foo  
    sep   n 
 
lst    
    10 
    20 
    30
 

カッコの中身は記述が長くなりやすいため 改行を使うことで読みやすいコードになります 

スペースについて
Python では記述する要素同士の切れ目には半角スペースを何個でも置くことができます 
print 123    456    789 

注意として 半角スペースでなく全角スペースを記述するとエラーとなってしまうので気をつけてください 
プログラムのエラー
プログラムは書き終わったら完成ではありません 動かしてみてその動作が正しいことを確認して はじめて完成と言えます 
しかし書き終えたばかりのプログラムを実行しようとすると たいてい何らかのエラーが発生します そのときにエラーの原因を理解して修正できることも重要なスキルです 
Python プログラムのエラーは次の3つに大別できます 

読み込み時エラー
実行時エラー
論理エラー

それぞれについて説明します 

読み込み時エラー
書いたプログラムの文法にミスがあるときに発生するエラーです 
全角スペースがプログラム中に入り込んだり インデントが不正である場合 コードを読み込んだ時点でエラーになります 
プログラミング言語では 文法 が厳密に決められています 
日本語などの人間が使う言語では 文法的に少し崩れた文でも意図が通じますが プログラミング言語ではそうはいきません 
読み込み時エラーが起きた場合 プログラムは一切動作しません AtCoder のジャッジの実行結果は CE となります 

実行時エラー
 プログラムを動かす ことを プログラムを実行する といいます 
実行時エラーとは プログラムの文法に間違いはなかったが 内容に致命的な間違いがあったときに発生するエラーです 
具体的には3 0のように 0で割り算を行ってしまった場合や 書き間違い  print を pritn と書くなど  で存在しない要素を記述した場合などに発生します 
スマホアプリやゲーム等が強制終了してしまったとき 多くの場合実行時エラーが発生しています 
実行時エラーが起きた場合 実行時エラーが起きる直前までプログラムは動作しますが エラー以降は動かなくなってしまいます AtCoder のジャッジの実行結果は RE となります 

論理エラー
論理エラーとは プログラムは一見正しく動作しているが その動作が実は正しくないときに発生するエラーです 
例えば  300円のクッキーと100円のアメを買ったときに払うお金 を計算するプログラムでは300   100と計算するべきですが 間違って300   100としてしまった場合などは論理エラーに当たります 
論理エラーは勘違いで生まれたり タイピングのミスで発生したりと様々です 
論理エラーは一見問題なくプログラムが動作しますが 意図と異なる結果を返すため 発見することが難しくなりやすいです AtCoder のジャッジの実行結果は 偶然実行結果が合うということが無い限りは  WA となります 
エラーの例
この時点でよく遭遇すると思われるエラーを紹介します 

全角スペース
次のコードには文末に全角スペースが入っており SyntaxError という読み込み時エラーとなっています エラー文の中で U 3000 と記述されているものが全角スペースに相当します 記述されている箇所も教えてくれるため 修正は容易です 
print 123 　   123  の後に全角スペースがある

File  Main py   line 1
    print 123 　
               
SyntaxError  invalid non printable character U 3000


カッコの閉じ忘れ
開きカッコに対応する閉じカッコがない場合 SyntaxError となります 
print 123

File  Main py   line 1
    print 123
          
SyntaxError      was never closed


インデントのミス
理由もなくインデントしてしまうと IndentationError という読込み時エラーが発生します 
print 123 
  print 456 

Sorry  IndentationError  unexpected indent  Main py  line 2 


スペルミス
書き間違いなどで存在しない名称3を記述してしまった場合 NameError という実行時エラーになります 次のエラーでは pritn という名称は存在しないということと print の書き間違いではないか というヒントを与えてくれています 
pritn 123 

Traceback  most recent call last  
  File   judge Main py   line 1  in  module 
    pritn 123 
         
NameError  name  pritn  is not defined  Did you mean   print  

エラーへの対処
プログラムにエラーはつきものなので うまく付き合う必要があります 以下でエラーへの対処方法 心構えについて紹介します 

エラーをよく読む
Python の場合末尾にエラーの要点が書かれていることが多いです 大量のエラーが表示された場合読みたくなくなりますが まずエラーの最後を見て大意がつかめないかトライしてみてください 
具体的な行数や箇所の表示を見て不自然な点が無いか確認してみるのもよいでしょう 

検索する
初心者の段階で遭遇するエラーはよくあるものが多いので 検索すればすぐにわかるケースも多いと思われます 
検索する場合はエラーの末尾の部分など 自分の環境固有の記述が含まれない部分を検索ワードに設定するとよいでしょう 

エラーの利点 
書くたびにエラーが出てうまく動かないと嫌な気持ちになるかもしれませんが 考えようによってはミスを Python の実行プログラムが教えてくれているだけ有益ともとれます 
前述の論理エラーのような 表示されないエラー はミスが明らかにならないため発見が遅れ 大きなバグに繋がってしまうこともあります 
問題
リンク先の問題を解いてください 

EX2 エラーの修正
前のページ   次のページ




面倒に感じるかもしれませんが 自然と読みやすいコードになるという利点もあります   


今までの print  hoge   のように ひとつの処理を実行する単位のことを実行文と呼びます   


 存在する名称 は以下のいずれかです  1  print のように Python の組み込みオブジェクトとして用意 予約 されている  2  自身で定義した変数やモジュール これらに該当しない名称を記述した場合 エラーになります"
3. 三人兄弟へのプレゼント,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_cj,"問題文
三人兄弟の A 君と B 君と C 君は お父さんに 1 つのプレゼントを貰うことになりました 
貰えるプレゼントの予算は テストの合計点の積 で決まります   
三人兄弟はそれぞれ N 個のテストを受けました 
A 君と B 君と C 君の i 番目のテストの点数 をそれぞれ A i  B i  C i で表すと プレゼントの予算は次の式で求まります 
プレゼントの予算    A 1   A 2    cdots   A N   times  B 1   B 2    cdots   B N   times  C 1   C 2    cdots   C N 
例えば 2 個のテスト受けた結果 A 君は 5 点と 7 点 B 君は 4 点と 10 点 C 君は 9 点と 2 点だったとします 
この場合  5   7   times  4   10   times  9   2    12  times 14  times 11   1848 より プレゼントの予算は 1848 円になります 
A 君はこの計算を行うプログラムを途中まで書きました 
A 君が書いたプログラムに追記し プログラムを完成させてください  
ページ末尾に問題のヒントがあります 詰まったら見てみましょう 

A君が書いたプログラム
def sum scores scores  
       
    1 人のテストの点数を表すリストから合計点を計算して返す関数

    引数 scores  scores i  に i 番目のテストの点数が入っている
    返り値  1 人のテストの合計点
       
      ここにプログラムを追記


def output sum a  sum b  sum c  
       
    3 人の合計点からプレゼントの予算を計算して出力する関数

    引数 sum a  A 君のテストの合計点
    引数 sum b  B 君のテストの合計点
    引数 sum c  C 君のテストの合計点
    返り値  なし
       
      ここにプログラムを追記


                     
  ここから先は変更しない
                     


def input list N  
       
    N 個の入力を受け取ってリストに入れて返す関数

    引数 N  入力を受け取る個数
    返り値  受け取った N 個の整数値からなるリスト
       
    l   list map int  input   split    
    return l


  科目の数 N を受け取る
N   int input   

  それぞれのテストの点数を受け取る
A   input list N 
B   input list N 
C   input list N 

  それぞれの合計点を計算
sum A   sum scores A 
sum B   sum scores B 
sum C   sum scores C 

  プレゼントの予算を出力
output sum A  sum B  sum C 



制約

1  le N  le 10
0  le A i  B i  C i  le 100
N  A i  B i  C i は整数



入力
入力は次の形式で標準入力から与えられます   
N
A 1 A 2  cdots A N
B 1 B 2  cdots B N
C 1 C 2  cdots C N


出力
プレゼントの予算を出力してください   

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例1
2
5 7
4 10
9 2


出力例1
1848

問題文で説明したケースです   


入力例2
3
100 100 100
100 100 100
100 100 100


出力例2
27000000

300  times 300  times 300   27000000 なので 三人兄弟は 27000000 円分のプレゼントを貰えることになりました   


入力例3
5
95 20 74 81 10
100 50 32 84 31
0 0 0 0 0


出力例3
0

C 君の合計点が 0 点だったので プレゼントの予算も 0 円になります   


入力例4
2
10 0
0 5
1 1


出力例4
100



ヒント1

クリックでヒントを見る
今回の問題は今までの問題とは少し異なり 用意されたプログラムの動作を理解し 意図を読み取る必要があります 
プログラムがどのような順番で実行されていくかに注意して A 君が書いたプログラムを読んでみましょう   

ヒント2
この問題は A 君が書いたプログラムに追記して完成させる という問題ですが ヒントとして関数を使わずにこの問題と同じ処理をするプログラムを示します このプログラムを参考にして A 君の sum scores 関数と output 関数を完成させてください 

クリックでヒントプログラムを見る
  科目の数 N を受け取る
N   int input   

  それぞれのテストの点数を受け取る

  N 個の入力をそれぞれ受け取り リスト A  B  C とする
A   list map int  input   split    
B   list map int  input   split    
C   list map int  input   split    

  以下はプレゼントの予算を出力する処理

  テストの点数を表すリストからそれぞれの合計点を計算
sum a   sum A 
sum b   sum B 
sum c   sum C 

  3 人の合計点からプレゼントの予算を計算して出力する
print sum a   sum b   sum c 



テスト入出力
書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
10
2 8 3 1 10 8 32 15 9 100
5 1 2 0 3 2 1 10 43 20
0 100 7 10 0 82 19 0 90 51

テスト出力1
5871804



解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
def sum scores scores  
       
    1 人のテストの点数を表すリストから合計点を計算して返す関数

    引数 scores  scores i  に i 番目のテストの点数が入っている
    返り値  1 人のテストの合計点
       
    s   sum scores 
    return s


def output sum a  sum b  sum c  
       
    3 人の合計点からプレゼントの予算を計算して出力する関数

    引数 sum a  A 君のテストの合計点
    引数 sum b  B 君のテストの合計点
    引数 sum c  C 君のテストの合計点
    返り値  なし
       
    print sum a   sum b   sum c 


                     
  ここから先は変更しない
                     


def input list N  
       
    N 個の入力を受け取ってリストに入れて返す関数

    引数 N  入力を受け取る個数
    返り値  受け取った N 個の整数値からなるリスト
       
    l   list map int  input   split    
    return l


  科目の数 N を受け取る
N   int input   

  それぞれのテストの点数を受け取る
A   input list N 
B   input list N 
C   input list N 

  それぞれの合計点を計算
sum A   sum scores A 
sum B   sum scores B 
sum C   sum scores C 

  プレゼントの予算を出力
output sum A  sum B  sum C"
2. 最速のランナーを見つけよう,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_ck,"問題文
学校の授業で持久走がありました N 人の生徒がゴールまでにかかった時間 秒数 がそれぞれ T 1  T 2   dots   T N で与えられます 一番早くゴールしたのは何番目の生徒でしょうか   
ページ末尾に問題のヒントがあります 詰まったら見てみましょう 

サンプルプログラム
N   int input       生徒の数Nを読み込む
T   list map int  input   split        各生徒のゴールまでの時間を読み込む
  ここにプログラムを追記



制約

1  leq N  leq 100
100  leq T i  leq 1000  全ての i について 
全ての生徒のゴールまでにかかった時間は異なる



入力
入力は次の形式で標準入力から与えられます   
N
T 1 T 2     T N


出力
一番早くゴールした生徒の番号を出力してください   

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例1
5 
300 450 200 400 350


出力例1
3

3 番目の生徒の 200 秒が最速のタイムになります   


入力例2
1 
400


出力例2
1

1 人で走るときは常に最速ランナーになることができます   


入力例3
10 
883 940 579 641 979 999 331 842 667 518


出力例3
7



ヒント

クリックでヒントを見る
二段階のステップで考えてみましょう 問題を解くために必要な情報は 2 つあります 
1 最小値が何か
2 最小値が何番目に現れるか
一度に求めようとせずに 1  と 2  を順番に調べるコードを書いてみましょう 


テスト入出力
書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
100 
794 341 925 159 319 451 671 720 836 667 664 917 114 112 276 479 623 796 152 910 566 996 656 567 756 105 139 172 694 771 148 906 164 983 852 419 863 357 895 732 608 398 227 165 785 532 613 136 304 198 303 475 434 502 189 477 588 439 969 686 520 168 967 344 972 828 694 786 256 338 493 721 390 874 632 888 702 911 550 971 802 427 646 443 487 594 826 949 245 834 596 674 810 526 395 541 227 665 948 723

テスト出力1
26


テスト入力2
100 
171 981 971 462 134 134 174 115 445 664 109 418 836 310 163 198 474 825 200 903 788 933 127 193 781 859 719 215 558 454 306 664 359 692 424 417 337 634 772 343 265 126 159 847 981 577 691 601 713 464 654 572 559 339 177 497 420 112 475 357 297 152 547 382 770 871 787 502 477 138 276 443 349 374 279 873 837 762 769 573 479 216 186 307 798 140 820 976 473 825 606 580 342 370 456 171 266 730 748 810

テスト出力2
11


テスト入力3
100 
390 507 538 277 832 570 897 460 638 456 708 466 228 442 672 107 557 599 320 578 979 239 792 541 776 377 878 124 847 262 563 246 369 115 258 380 472 899 139 913 323 637 353 200 804 320 727 687 457 499 206 752 815 522 416 746 964 804 834 548 821 689 981 101 428 862 969 935 173 941 104 891 954 267 466 424 398 231 227 320 488 931 904 494 955 663 499 558 728 396 741 446 219 826 782 893 398 113 904 683

テスト出力3
64



解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
N   int input       生徒の数Nを読み込む
T   list map int  input   split        各生徒のゴールまでの時間を読み込む
T min   min T 
for i  v in enumerate T  
    if v    T min 
        print i   1 
        break"
1. 足したり引いたり,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_cl,"問題文
1と と のみからなる式 S が 1 行で与えられるので 計算結果を出力してください   
例えば式 S が 1 1 1 1 であったとき 計算結果は 2 です   
具体的な式 S の形式は以下の通りです   

式 S の 1 文字目は必ず 1 です   
その後    または   と 1 が交互に続きます   
S の最後の文字も必ず 1 です   

式と演算子はスペースで区切られていないことに注意してください  
ページ末尾に問題のヒントがあります 詰まったら見てみましょう 

サンプルプログラム
S   input  
  ここにプログラムを追記



制約

1  le  S   le 100   S  は文字列の長さ 
S は 1 から始まり その後   または   と 1 が交互に続き 1 で終わる



入力
入力は次の形式で標準入力から与えられます   
S


出力
Sの計算結果を出力してください   

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例1
1 1 1 1


出力例1
2

問題文中で説明した入出力です   


入力例2
1 1 1 1 1 1


出力例2
 4

計算結果は負の値になることもあります   


入力例3
1


出力例3
1

入力は 1 だけで終わることもあります   


入力例4
1 1 1 1 1 1 1 1 1 1 1 1 1


出力例4
3



ヒント
次のプログラムは 9 文字の式 S にいくつ 1 が含まれているかを出力するプログラムです 
今回の問題を解く際の参考にしてください   

クリックでヒントプログラムを見る
S   input  

count   0

  9 文字の式に限定していることに注意
for i in range 9  
    if S i      1  
        count    1

print count 

ヒント入力
1 1 1 1 1

ヒント出力
5



テスト入出力
書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

テスト出力1
 25


テスト入力2
1 1 1 1 1 1 1 1 1 1 1 1 1

テスト出力2
13


テスト入力3
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

テスト出力3
 33


テスト入力4
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

テスト出力4
2



解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
S   input  

  計算結果を保持する変数
answer   1

for i in range len S   
    if S i         
        answer    1
    if S i         
        answer    1

print answer 

in の後ろに文字列を指定することで 文字に対して繰り返し処理を行うこともできます 
S   input  

  計算結果を保持する変数
answer   1

for c in S 
    if c        
        answer    1
    if c        
        answer    1

print answer"
0. 平均との差,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_cm,"問題文
N 人のテストの点数が与えられます 
それぞれの人の点数が平均点から何点離れているか計算してください   
平均点は次の式で求められます i 番目の人の点数は A i で表します   
平均点    dfrac A 1   A 2    cdots   A N  N  
平均点が整数にならない場合 小数点以下を切り捨てた数値を平均点とします   
例えば 3 人のテストの点数が 2 点 1 点 4 点 だったとき  frac 2   1   4  3    2 333  cdotsなので 平均点は小数点以下を切り捨てて 2 点になります 
そして 平均点から何点離れているかを計算した結果である 0 点 1 点 2 点 が答えになります 
 0 点  1 点 2 点 でも 0 点 1 点  2 点 でも無いことに注意してください   
ページ末尾に問題のヒントがあります 詰まったら見てみましょう 

サンプルプログラム
N   int input   
  ここにプログラムを追記




制約

1  le N  le 1000
0  le A i  le 100 
N  A i は整数



入力
入力は次の形式で標準入力から与えられます   
N
A 1 A 2  cdots A N


出力
それぞれの人の点数が平均点から何点離れているかを1行ずつ出力してください   
1人目の計算結果
2人目の計算結果
 vdots
N人目の計算結果


ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例1
3
2 1 4


出力例1
0
1
2

問題文中で説明した入出力です   


入力例2
2
80 70


出力例2
5
5

このケースの平均点は 75 点です 
どちらの点数も平均点から 5 点離れています   


入力例3
5
100 100 100 100 100


出力例3
0
0
0
0
0

このケースの平均点は 100 点です   


入力例4
10
53 21 99 83 75 40 33 62 18 100


出力例4
5
37
41
25
17
18
25
4
40
42



ヒント
今回の問題は次のプログラムに追記すれば解くことができます 
追記箇所が2つあることに注意してください   

クリックでヒントプログラムを見る
N   int input   

  スペース区切りの整数をリストとして受け取る
A   list map int  input   split    

  合計点
total   0

  合計点を計算
for i in range N  
      ①ここにプログラムを追記

  平均点  Nで割って切り捨てた値 
mean   total    N

  平均点から何点離れているかを計算して出力
for i in range N  
      ②ここにプログラムを追記
      負の数を出力しないように注意



テスト入出力
書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
1
80

テスト出力1
0


テスト入力2
データが大きすぎるため省略


解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
N   int input   

  スペース区切りの整数をリストとして受け取る
A   list map int  input   split    

  合計点
total   0

  合計点を計算
for i in range N  
      ①ここにプログラムを追記
    total    A i 

  平均点  Nで割って切り捨てた値 
mean   total    N

  平均点から何点離れているかを計算して出力
for i in range N  
      ②ここにプログラムを追記
      負の数を出力しないように注意
    if A i    mean 
        print A i    mean 
    else 
        print mean   A i"
. 電卓をつくろう2,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_cn,"問題文
電卓の操作が与えられるので 計算途中の値と計算結果の値を出力してください   

電卓の操作は次の形式で入力されます   
入力の形式
計算の数N
最初の値A
演算子 mathrm op  1 計算する値B 1
演算子 mathrm op  2 計算する値B 2
 vdots
演算子 mathrm op  N 計算する値B N

次の入力は   2   1   times 3   div 2 を表しています   
入力例
3
2
  1
  3
  2


出力では 何行目の出力か と  計算途中の値 を出力してください   
出力の形式
1 1個目の計算結果
2 2個目の計算結果
 vdots
N N個目の計算結果

次の出力は上の入力例に対する出力です   
出力例
1 3
2 9
3 4


与えられる入力のパターンと対応する処理は以下の表の通りです   



入力
処理
備考




  B
それまでの計算結果に B を足し その値を出力する 



  B
それまでの計算結果から B を引き その値を出力する 



  B
それまでの計算結果に B を掛け その値を出力する 



  B
それまでの計算結果を B で割り その値を出力する 
小数点以下は切り捨てて計算を行う  B が 0 の場合はerrorと出力し それ以降は出力を行わない 



  B において B が 0 の場合は error と出力し それ以降は出力を行わない ことに注意してください   
ページ末尾に問題のヒントがあります 詰まったら見てみましょう 

サンプルプログラム
N   int input   
A   int input   
  ここにプログラムを追記



制約

1  le N  le 7
0  le A  B i  le 10
A  B i  N は整数
 mathrm op  i は            のいずれか



入力
入力は次の形式で標準入力から与えられます   
N
A
 mathrm op  1 B 1
 mathrm op  2 B 2
 vdots
 mathrm op  N B N


出力
1 1個目の計算結果
2 2個目の計算結果
 vdots
N N個目の計算結果


ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例1
3
2
  1
  3
  2


出力例1
1 3
2 9
3 4

問題文中で説明した入出力です   


入力例2
2
3
  2
  2


出力例2
1 1
2 0

割り算では小数点以下を切り捨てます   


入力例3
4
3
  1
  0
  2
  10


出力例3
1 4
error

割り算で B i が 0 の場合は error と出力し それ以降は出力をしないことに注意してください   


入力例4
7
10
  10
  10
  10
  10
  10
  10
  10


出力例4
1 100
2 1000
3 10000
4 100000
5 1000000
6 10000000
7 100000000



ヒント1
次のプログラムは 5つの整数を入力で一つずつ受け取り 受け取った整数を足して出力します 
また 今回の問題と同様に 出力が何行目かも同時に出力します 
今回の問題を解く際の参考にしてください   

クリックでヒントプログラムを見る
total   0

for i in range 5  
    x   int input   

    total    x

      行番号 合計値 の形式で出力
    print i   1  total 

ヒント入力
3
4
2
1
10

ヒント出力
1 3
2 7
3 9
4 10
5 20



ヒント2
ジャッジでテストされる入力のうち2つをヒントとして示します 
サンプルは全てあっていてWAの原因がわからない人は 以下のケースに正解しているか確かめてみましょう 

クリックでテストケースを見る
テスト入力1
7
0
  5
  7
  4
  0
  0
  10
  5

テスト出力1
1  5
2  35
3  9
4  9
5  9
6  19
7  95


テスト入力2
6
0
  4
  3
  5
  3
  7
  1

テスト出力2
1 0
2 0
3 0
4 3
5 0
6 0



テスト入出力
書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
7
0
  5
  7
  4
  0
  0
  10
  5

テスト出力1
1  5
2  35
3  9
4  9
5  9
6  19
7  95


テスト入力2
6
0
  4
  3
  5
  3
  7
  1

テスト出力2
1 0
2 0
3 0
4 3
5 0
6 0


テスト入力3
3
1
  4
  3
  0

テスト出力3
1 4
2 12
error


テスト入力4
7
0
  2
  0
  1
  0
  5
  2
  10

テスト出力4
1 0
error



解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
N   int input   
A   int input   

for i in range N  
    op  x   input   split  
    x   int x 

    if op        
        A    x
    elif op        
        A    x
    elif op        
        A    x
    elif op        and x    0 
        A     x
    else 
        print  error  
        break

    print i   1  A"
. たくさんのA足すB問題,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_co,"問題文
以下の問題を N 回解いてください 

2 つの整数 A  B が与えられます A B の計算結果を出力してください   


制約

1  le N  le 10
0  le A i  B i  le 100
N  A i  B i は整数



入力
入力は次の形式で標準入力から与えられます   
N
A 1 B 1
A 2 B 2
 vdots
A N B N


出力
N 行出力してください 
i 行目には A i B i の計算結果を出力してください 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例1
1
42 37


出力例1
79



入力例2
4
3 1
4 1
5 9
2 6


出力例2
4
5
14
8



ヒント

クリックでヒントを見る
この問題は EX5 A足すB問題 と同じ処理を N 回繰り返すことで解くことができます また  N 回繰り返す という操作は while 文を用いて書くことができます 


テスト入出力
書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
1
79 68

テスト出力1
147

テスト入力2
4
90 46
73 74
93 21
99 42

テスト出力2
136
147
114
141

テスト入力3
5
49 81
46 39
50 89
26 97
84 46

テスト出力3
130
85
139
123
130

テスト入力4
8
13 54
81 51
8 64
89 85
44 51
51 94
39 84
2 45

テスト出力4
67
132
72
174
95
145
123
47

テスト入力5
10
76 15
58 31
21 40
86 88
77 58
77 33
25 70
8 81
67 79
73 99

テスト出力5
91
89
61
174
135
110
95
89
146
172



解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
N   int input   
i   0
while i   N 
    A  B   map int  input   split   
    print A   B 
    i    1"
. bool値パズル,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_cp,"問題文
次のプログラムで宣言されている bool 型の変数 a  b  c に対し True または False を代入することで AtCoder と出力されるようにしてください   
1  2  3 行目における変数 a b c への代入以外のプログラムの書き換えは行わないものとします   
プログラム
a      True または False
b      True または False
c      True または False

  ここから先は変更しないこと

assert  a is True  or  a is False 
assert  b is True  or  b is False 
assert  c is True  or  c is False 

if a 
    print  At   end    
else 
    print  Yo   end    

if not a and b 
    print  Bo   end    
else 
    print  Co   end    

if a and b and c 
    print  foo    end    
elif True and False 
    print  year    end    
elif not a or c 
    print  der   end    

print    



入力
この問題に入力はありません

出力
AtCoder と出力してください 


回答例
答え方の例です 
変数 a  b  c の全てに False を代入していますが YoCoder と出力されているので この解答は不正解となります   
a   False    True または False
b   False    True または False
c   False    True または False

  ここから先は変更しないこと

assert  a is True  or  a is False 
assert  b is True  or  b is False 
assert  c is True  or  c is False 

if a 
    print  At   end    
else 
    print  Yo   end    

if not a and b 
    print  Bo   end    
else 
    print  Co   end    

if a and b and c 
    print  foo    end    
elif True and False 
    print  year    end    
elif not a or c 
    print  der   end    

print    


出力例
YoCoder



解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
a   True    True または False
b   False    True または False
c   True    True または False

  ここから先は変更しないこと

assert  a is True  or  a is False 
assert  b is True  or  b is False 
assert  c is True  or  c is False 

if a 
    print  At   end    
else 
    print  Yo   end    

if not a and b 
    print  Bo   end    
else 
    print  Co   end    

if a and b and c 
    print  foo    end    
elif True and False 
    print  year    end    
elif not a or c 
    print  der   end    

print"
. 電卓をつくろう,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_cq,"問題文
1行の計算式が与えられるので その結果を出力してください  
与えられる計算式のパターンと対応する出力は以下の表の通りです   



入力
出力
備考




A   B
A   Bの計算結果を出力



A   B
A   Bの計算結果を出力



A   B
A  times Bの計算結果を出力



A   B
A  div Bの計算結果を出力
小数点以下は切り捨てて出力 B が 0 の場合はerrorと出力


A   B
errorと出力



A   B
errorと出力



A   B
errorと出力




サンプルプログラム
このプログラムを元に解答を作成することを推奨します   
A  op  B   input   split  
A   int A 
B   int B 

if op        
    print A   B 

  ここにプログラムを追記


制約

0  le A  B  le 100
A  B は整数
 mathrm op  は                     のいずれか一つ



入力
入力は次の形式で標準入力から与えられます   
A  mathrm op  B


出力
入力の計算式の計算結果を出力してください 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例1
1   2


出力例1
3



入力例2
5   3


出力例2
2



入力例3
10   20


出力例3
200



入力例4
10   3


出力例4
3

計算結果の小数点以下は切り捨てます   


入力例5
100   0


出力例5
error

B が 0 の場合は error と出力することに注意してください   


入力例6
25   31


出力例6
error



入力例7
0   0


出力例7
0



テスト入出力
書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
100   100

テスト出力1
error


テスト入力2
17   91

テスト出力2
error


テスト入力3
0   20

テスト出力3
0


テスト入力4
0   0

テスト出力4
0


テスト入力5
0   0

テスト出力5
0



解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
A  op  B   input   split  
A   int A 
B   int B 

if op        
    print A   B 
elif op        
    print A   B 
elif op        
    print A   B 
elif op        and B    0 
    print A    B 
else 
    print  error"
. A足すB問題,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_cr,"問題を解く前に 以下の2つのリンク先の説明を読んでください 

付録1 コードテストの使い方

付録2 提出結果の見方


問題文
2つの整数A  Bが与えられます A Bの計算結果を出力してください   

制約

0  le A  B  le 100
A  B は整数



入力
入力は次の形式で標準入力から与えられます   
A B


出力
A B の計算結果を出力してください 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例1
1 2


出力例1
3



入力例2
100 99


出力例2
199



テスト入出力
書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
0 0

テスト出力1
0


テスト入力2
0 50

テスト出力2
50


テスト入力3
0 50

テスト出力3
50


テスト入力4
27 81

テスト出力4
108



解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
A  B   map int  input   split   
print A   B"
. ◯年は何秒？,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_cs,"問題文
次のプログラムをコピー ペーストして 指定した場所にプログラムを追記することで問題を解いて下さい 
seconds   365   24   60   60
print      1年は何秒か出力
print      2年は何秒か出力
print      5年は何秒か出力
print      10年は何秒か出力

int型の変数secondsは一年の秒数を表しています これを利用して  

1年は何秒か  
2年は何秒か  
5年は何秒か  
10年は何秒か  

を順に一行ずつ表示するプログラムを作って下さい 
うるう秒やうるう年のことは考え無くて良いとします   
実行結果 一部を       で隠しています 
31536000
63072000
     
     



解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
seconds   365   24   60   60
print seconds     1年は何秒か出力
print seconds   2     2年は何秒か出力
print seconds   5     5年は何秒か出力
print seconds   10     10年は何秒か出力"
.  計算問題,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_ct,"問題文
Aくんは1から100までの和を求めようと思いました 
数学の授業で習ったとおり 1から100までの和は次の式で求められます 
 dfrac 1  2   times 100  times  100 1 
この式の値を出力してください 
ただし 答えを整数値で出力させるため 割り算に  演算子を使って解いて下さい   を使うとWAになります   
ヒント
 1 03 四則演算と優先順位 の 注意点 に書かれている項目を読んでみましょう   
コードテストで正しく動作することを確認してから提出しましょう 


解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
     2を最後に計算することで正しい計算結果になる
print 100    100   1     2"
. エラーの修正,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_cu,"問題を解く前に 付録2 提出結果の見方を読んでください 


問題文
A君は次の出力をするプログラムを作ろうとしました  
実行結果
いつも2525
AtCoderくん

しかし 書いたプログラムを実行してみるとエラーが発生しました  
A君が書いたプログラムのエラーを修正し 正しく動作するようにしてください  
Aくんが書いたプログラム
print  いつも2525 
    print AtCoderくん 

このコードをコードテストで実行すると 標準エラー出力に以下のエラーメッセージが表示されます  
標準エラー出力
  File  Main py   line 1
    print  いつも2525 
          
SyntaxError      was never closed

この問題の取り組み方
Aくんのプログラムには複数のエラーが含まれています  
わかるエラーから一つずつ直し コードテスト上で実行してみて 直っているかどうか確かめましょう  
コードテストの使い方は付録1 コードテストの使い方に書いてあります  

 AtCoder の C は大文字であることに注意しましょう 

ヒント
1 02 プログラムの書き方とエラーの エラーの例 を参考にしましょう  


解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
print  いつも2525  
print  AtCoderくん"
. コードテストと出力の練習,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_cv,"問題を解く前に 付録1 コードテストの使い方を読んでください 


問題文
次の出力をするプログラムを書いてください   
実行結果
こんにちは
AtCoder

出力の最後 つまり AtCoder の後 に改行する必要があります 注意してください   
回答プログラムの作成方法
回答プログラムは 次のサンプルプログラムを改変して作成することを推奨します 
プログラムをコピーし コードテストのページに貼り付けましょう   
サンプルプログラム
print  Hello  world   
print  Hello  AtCoder   
print  Hello  Python   

サンプルプログラムの実行結果
Hello  world 
Hello  AtCoder 
Hello  Python 

これを次の出力を行うようにプログラムを書き換え 正しく動作することが確認できたら提出しましょう   
正しい実行結果
こんにちは
AtCoder


 AtCoder の C は大文字であることに注意しましょう   



解答例
必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
print  こんにちは  
print  AtCoder"
1.03.四則演算と優先順位,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_d,"ゼロ除算
ゼロで割り算を行おうとするとランタイムエラーになります 
次のコードはいずれもランタイムエラーになり  AtCoder のジャッジだと RE が表示されてしまいます 
print 3   0 

print 3    0 

print 3   0 


割り切れる場合の実数除算
割り算をする際 たとえば 6  div 3 のように割り切れる計算の場合 数学的には切り捨て除算と実数除算は同じ結果になりそうです  Python では割り切れる場合であっても結果は少し異なります 具体的には 次節1 04変数と型で説明する 型 が変わます 
print 6    3 
print 6   3 

実行結果
2
2 0

この例では  数学的な値としては いずれも 2 と等しいですが 場合によっては有効桁数の関係で値が変わることもあります 競技プログラミングでもこれによる失敗をするケースがあります 整数範囲で考えている場合は整数除算    を使うのが無難です 
発展的な内容

負の除数による除算
競技プログラミングでは敢えて除数を負にする必要があるケースはあまり見かけませんが 思わぬ罠になる可能性があるので プログラムの挙動について説明しておきます 
a を b で割った商を q  余りを r とします  b が正のときは a   b  times q   r   0 le r b  が成立すると説明しましたが 除数 b が負のときは余りの範囲も負の方向になり  a   b  times q   r   b   r  le 0  を満たすように商 余りが決まります 
11   5  times  3    4  より 11 を  5 で割った商は  3  余りは  4 となります 
 11   5  times 2   1  より  11 を  5 で割った商は 2  余りは  1 となります 
print 11     5 
print 11    5 
print  11     5 
print  11    5 

実行結果
 3
 4
2
 1


divmod
a を b で割った商は a    b  余りは a   b で取得できることは既に学びましたが  divmod 関数を使うことでこれらを同時に取得することもできます 
具体的には  divmod a  b  で a を b で割った商と余りのタプルを返します  タプル についてはまだ扱っていないので詳細は省略しますが 次のようなコードで取得できることを覚えておけば十分です 
q  r   divmod 20  7 
print q 
print r 

実行結果
2
6

問題
リンク先の問題を解いてください 

EX3 計算問題
前のページ   次のページ




正確には次節で紹介する float 型での計算であり 実数そのものを扱っている訳ではないですが 簡単のためこのページでは実数と記載しています"
1.04.変数と型,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_e,"int 整数型 
3 や  10 などの整数を表すことができます 

float 浮動小数点数型 
3 5 などの実数 1 を表すことができます 

str 文字列型 
 a  や  Hello  などの文字列を表すことができます 
代入
変数には値を代入することができます 代入するときは代入演算子   を使い 左側に代入先の変数を 右側に代入する値を書きます 複数回代入すると 前の値が上書きされます 
x   3    変数 x に整数 3 が代入される
y    7 3    変数 y に浮動小数点数  7 3 が代入される
z    ABC     変数 z に文字列  ABC  が代入される
x   10    変数 x に 10 が代入される 上書きされる 

値が代入された変数は 以下のように呼び出すことで使うことができます 
x   3
y    7 3
z    ABC 
print x   2 
print y   3 
print z 

実行結果
6
 21 9
ABC

  の右側は 変数や演算子を含んでいても構いません 
x   3
y   x    y に x の値である 3 が代入される
z   x   10   2    x   10   2 の計算結果が代入される
print y 
print z 

実行結果
3
32

なお Python の   は代入を意味していて  等しい という意味ではないということに注意してください 

指数表記
float 型では指数表記による記述もできます 絶対値が大きいまたは小さい数の場合は  print 関数で出力した結果も指数表記になります 
x   1 23e5
y   3 5e 2
z   2 7e 10
print x 
print y 
print z 

実行結果
123000 0
0 035
2 7e 10


変数の型の宣言について
勘の良い方は 変数がどの型になるのかを書かなくて良いのか気になったかもしれません 実は Python ではユーザーが変数の型を指定 宣言 する必要はなく プログラムで自動的に判定されます 具体的には 代入するもの   の右側 の型によって決まります このため 同じ変数を別の型で上書きするということもできます 
x   3
print x 
x    AtCoder 
print x 

実行結果
3
AtCoder

複合代入演算子
 x に 5 を足す のような 計算結果を同じ変数に代入する操作は  x    5 のように書くことができます これは x   x   5 と書いたことと同じ結果になります 
x   2
x    5
print x 

実行結果
7

   のような演算子を 複合代入演算子 と言います 前節で扱った演算子は すべて   を付けることで複合代入演算子として使えます 



複合代入演算子
コード例
複合代入演算子を使わない書き方




  
x    3
x   x   3


  
x    3
x   x   3


  
x    3
x   x   3


   
x     3
x   x    3


  
x    3
x   x   3


   
x     3
x   x    3


  
x    3
x   x   3



例えば次のように書くことができます 
x   2
x    5    7
x    3    21
x     2    10
x     3    1000
x    300    100
x    20    80
print x 

実行結果
80

複数の変数への代入
変数 x に 2 を 変数 y に 3 を代入するという操作を同時に行いたいときは カンマ   で区切って次のように書くことができます 
x  y   2  3
print x 
print y 

実行結果
2
3

これを使うと  x と y の値を入れ替える Swap する という操作も簡単に書くことができます 
x   2
y   3
x  y   y  x    x と y を入れ替える
print x 
print y 

実行結果
3
2

有効数字 範囲

int 型
Python の int 型は 多倍長整数 と呼ばれていて 多くのプログラミング言語の int 型のような大きさの制限 32 bit や 64 bit など がありません 例えば  3 の 1000 乗は 478 桁のとても大きな整数ですが 下記のように簡単に計算することができます 2  
print 3    1000 

実行結果
1322070819480806636890455259752144365965422032752148167664920368226828597346704899540778313850608061963909777696872582355950954582100618911865342725257953674027620225198320803878014774228964841274390400117588618041128947815623094438061566173054086674490506178125480344405547054397038895817465368254916136220830268563778582290228416398307887896918556404084898937609373242171846359938695516765018940588109060426089671438864102814350385648747165832010614366132173102768902855220001


float 型
float 型では  10 進法で 15 16 桁程度 2 進法で 53 ビット の有効数字で計算されます これよりも高い精度が求められる場合は予期せぬ結果になることがあるので注意が必要です 
print 100   3 

実行結果
33 333333333333336

なお 浮動小数点数で表せる最大の数は約 1 8 times 10  308  程度 最小の数は約  1 8 times 10  308  程度 最小の正の数は約 2 2 times 10   308  程度です 
発展的な内容

異なる型同士の演算
前項で四則演算などの演算を学びました その際は細かく触れませんでしたが 元の変数の型や値によって計算結果として返される型も自動的に決まります 異なる型同士の演算の場合は 同じ型同士の演算であっても場合によっては 注意が必要になります ここですべてのパターンを網羅することはできませんが いくつか例を挙げておきます 

int 型同士の和 差 積
整数 int 型同士の和 差 積は整数 int 型になります 
a   7
b   2
print a   b     整数型の 9
print a   b     整数型の 5
print a   b     整数型の 14

実行結果
9
5
14


float 型同士の和 差 積
浮動小数点数 float 型同士の和 差 積は浮動小数点数 float 型になります 
a   3 2
b   2 5
print a   b 
print a   b 
print a   b 

実行結果
5 7
0 7000000000000002
8 0


int 型と float 型の和 差 積
片方が int 型 片方が float 型の場合の和 差 積は float 型になります  3 5  times 4 は数学的には整数 14 になりますが  Python のプログラムは float 型として返します 
a   3 5
b   4
print a   b 
print a   b 
print a   b 

実行結果
7 5
 0 5
14 0


int 型同士のべき乗
a と b がともに int 型のとき  a    b の型はどうなるでしょうか 簡単のため a はゼロではないとします 
この場合は b  ge 0 の場合は int 型  b   0 の場合は float 型になります 
print 2    3 
print 2     3 

実行結果
8
0 125

問題
リンク先の問題を解いてください 

EX4  年は何秒 
前のページ   次のページ




前節1 03四則演算と優先順位の注にも書きましたが 正確には実数ではなく浮動小数点数を表します 簡単のためここでは実数と記載しています    


ただしあまりに大きい場合は実行時間やメモリの関係で計算が行えない場合があります 手元環境で実行する際など  PC の限界を超えるとクラッシュしてしまう可能性があるので注意してください"
1.05.入力,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_f,"文字列以外の入力
入力を文字列以外の形式で扱いたいときは 入力を受け取った後に変換する必要があります 
次のプログラムは 入力として受け取った整数を 10 倍したものを出力するプログラムです 
  入力を文字列として受け取る
a   input  
  文字列として受け取った入力を整数に変換する
a   int a 

print a   10 

入力
5

実行結果
50

上のプログラムは 以下のように 入力を文字列として受け取り整数に変換する部分 をまとめて書くこともできます 
  入力を整数として受け取る
a   int input   

print a   10 

入力
5

実行結果
50

入力を小数として受け取りたい場合も float   を使って以下のように書くことができます 
  入力を小数として受け取る
a   float input   

print a   10 

入力
3 14

実行結果
31 4


複数行の入力
input   は 1 行の入力を受け取るものなので input   を行数分書くことで複数行の入力を受け取ることができます 
s   input  
a   int input   

print s  a   10 

入力
Hello
5

実行結果
Hello 50


空白区切りの入力
前述のように input   は 1 行の入力を文字列として受け取ります 
s   input  

print s 

入力
10 20 30

実行結果
10 20 30

そのため 空白区切りの入力を受け取ると 上のように  10 20 30  というひとまとまりの文字列として受け取ってしまいます 
そこで 次のプログラムのように input   で受け取った文字列を split   で空白区切りで分解することで別々の変数に格納することができます 
a  b  c   input   split  

print a 
print b 
print c 

入力
10 20 30

実行結果
10
20
30

このままだと文字列として扱っていますが 次のプログラムのように int   を使って整数に変換することもできます 
a  b  c   input   split  
a   int a 
b   int b 
c   int c 

print a   10 
print b   100 
print c   1000 

入力
10 20 30

実行結果
100
2000
30000

上のプログラムは 以下のように 入力を空白区切りで分割し整数に変換する部分 をまとめて書くこともできます 
map int  input   split    の意味については今の時点では理解する必要はありません このまま覚えてしまっても良いでしょう 
a  b  c   map int  input   split   

print a   10 
print b   100 
print c   1000 

入力
10 20 30

実行結果
100
2000
30000

また split   は以下のように区切り文字を指定することもできます 
これまでのように何も指定しない場合は 空白文字で区切られます 
a  b  c   input   split     

print a 
print b 
print c 

入力
10 20 30

実行結果
10
20
30

問題
リンク先の問題を解いてください 

EX5 A足すB問題
前のページ   次のページ"
1.06.if文・比較演算子・論理演算子,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_g,"else 節
else 節は if 文の後に書くことで  if 文の条件が偽のとき に処理を行えるようになります 
書き方は次のとおりです 
if 条件式 
    処理1
else 
    処理2

次のプログラムは 入力の値が 10 より小さければ x は 10 より小さい と出力し そうでなければ x は 10 より小さくない と出力します 
x   int input   

if x   10 
    print  x は 10 より小さい  
else 
    print  x は 10 より小さくない  

入力 1
5

実行結果 1
x は 10 より小さい

入力 2
15

実行結果 2
x は 10 より小さくない


elif 節
elif 節は  前の if 文の条件が偽 かつ elif 節の条件が真  のときに処理が行われます 
書き方は次のとおりです 
if 条件式1 
    処理1
elif 条件式2 
    処理2

処理2が実行されるのは 条件式1が偽 かつ 条件式2が真 のときになります 
また elif 節のあとに続けて elif 節や else 節を書くこともできます 
次のプログラムはその例です 
x   int input   

if x   10 
    print  x は 10 より小さい  
elif x   20 
    print  x は 10 より小さくなくて 20 より大きい  
elif x    15 
    print  x は 10 より小さくなくて 20 より大きくなくて 15 である  
else 
    print  x は 10 より小さくなくて 20 より大きくなくて 15 でもない  

入力 1
5

実行結果 1
x は 10 より小さい

入力 2
30

実行結果 2
x は 10 より小さくなくて 20 より大きい

入力 3
15

実行結果 3
x は 10 より小さくなくて 20 より大きくなくて 15 である

入力 4
13

実行結果 4
x は 10 より小さくなくて 20 より大きくなくて 15 でもない

if 文のネスト
if  elif  else などの節の中にさらに if 文を入れることで より複雑な条件分岐をすることもできます 
x   int input   

if x   2    0 
    if x   3    0 
        print  x は 2 の倍数でも 3 の倍数でもある  
    else 
        print  x は 2 の倍数ではあるが 3 の倍数ではない  
else 
    if x   3    0 
        print  x は 2 の倍数ではないが 3 の倍数ではある  
    else 
        print  x は 2 の倍数でも 3 の倍数でもない  

入力 1
12

実行結果 1
x は 2 の倍数でも 3 の倍数でもある

入力 2
14

実行結果 2
x は 2 の倍数ではあるが 3 の倍数ではない

入力 3
15

実行結果 3
x は 2 の倍数ではないが 3 の倍数ではある

入力 4
17

実行結果 4
x は 2 の倍数でも 3 の倍数でもない

比較演算子の連鎖
次のプログラムは x が 0 以上 100 以下かどうかを調べるプログラムです 
x   int input   

if 0    x and x    100 
    print  x は 0 以上 100 以下です  
else 
    print  x は 0 以上 100 以下ではありません  

上のプログラムの 0    x and x    100 の部分を Python では次のプログラムのように 0    x    100 と書くこともできます 
x   int input   

if 0    x    100 
    print  x は 0 以上 100 以下です  
else 
    print  x は 0 以上 100 以下ではありません  

また a   b   c   d のように 3 つ以上繋げて書いたり a   b   c のように異なる演算子についても繋げて書くことができます a   b   c は a   b and b   c と同じ意味です  

  ちなみに
この書き方は あまり濫用するとかえってわかりづらくなってしまうので注意が必要です 例えば a    b    c と書いたとき これは a    b and b    c と同じ意味なので a と c が異なるかどうかを判定していません 

問題
リンク先の問題を解いてください 

EX6 電卓をつくろう
前のページ   次のページ"
1.07.論理式の値とbool型,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_h,"True と False
先程出力された条件式の値である True False は bool型というデータ型の値です bool型はこれらTrue  真  もしくは False  偽  の2種類の値のみを取ります 
bool 型の値は 前節のように条件式を記述する以外にも True False を直接記述することでも表現することができます 
if True 
    print  条件が成り立っています  
if False 
    print  条件が成り立っています  
else 
    print  条件が成り立っていません  

実行結果
条件が成り立っています
条件が成り立っていません


他の型からの変換
実は if 文の条件式には True False 以外の値を与えることも可能です 
if 10 
    print  10 は True 扱い  
if not 0 
    print  0 は False 扱い  
if  1 
    print   1 は True 扱い  

実行結果
10 は True 扱い
0 は False 扱い
 1 は True 扱い

上記のように数値を条件式に与えた場合  値が0でなければ True 0 と等しければ False というルールで変換が行われます このような型の変換のことをキャストと呼びます 上記の例だと int 型が bool 型にキャストされた ということになります 
キャストは数値以外でも行われます 代表的な例を次の表に記載します 



型
変換ルール
True となる例
False となる例




数値  int  float 
値が0と等しいときのみ False
1  0 01   1e18
0  0 0


文字列
空文字列    のときのみ False
 hoge    A      
  


配列1
配列が空  長さが 0  のときのみ False
 1 2 3     foo     0 
  



問題
リンク先の問題を解いてください 

EX7 bool値パズル
前のページ   次のページ




配列に関しては後の節1 10 リストで扱います 整理のために記載しましたがここでは読み飛ばしていただいて構いません"
1.08.while文,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_i,"無限ループ
次のプログラムは  Hello と出力して改行した後 AtCoder と出力する処理 を無限に繰り返すプログラムです 
while True 
    print  Hello  
    print  AtCoder  

実行結果
Hello
AtCoder
Hello
AtCoder
Hello
AtCoder
Hello
AtCoder
Hello
AtCoder
    無限に続く 

while 文は次のように書き 条件式が真のとき処理を繰り返し続けます 
while 条件式 
    処理

先のプログラムでは条件式の部分に True と書いているため 無限に処理を繰り返し続けます 
このように 無限に繰り返し続けることを無限ループと言います 

1 ずつカウントする
次のプログラムは 1 から順に整数を出力し続けます 
i   1
while True 
    print i 
    i    1    ループのたびに 1 増やす

実行結果
1
2
3
4
5
6
7
8
    無限に 1 ずつ増えていく 


ループ回数の指定
1 ずつカウントするプログラムを 1 から 5 までの数を出力するプログラム に変える場合 次のようにします 
i   1

  i が 5 以下の間だけループ
while i    5 
    print i 
    i    1

実行結果
1
2
3
4
5


カウンタ変数は 0 から N 未満まで
5 回 Hello と出力されるプログラムを考えます 
以下では書き方を二つ紹介します この教材では二つ目の書き方を推奨します 

推奨しない書き方
  i を 1 からはじめる
i   1

  i が 5 以下の間だけループ
while i    5 
    print  Hello  
    i    1

実行結果
Hello
Hello
Hello
Hello
Hello

 N 回処理をする というプログラムを while 文で書く場合 今までは i を 1 からはじめ N 以下の間ループする という形式で書いてきました 
i   1
while i    N 
    処理
    i    1

この形式は一見わかりやすいと感じるかもしれません 
しかし この書き方はあまり一般的ではなく 次のように書いたほうがより一般的です 

推奨する書き方
  i を 0 からはじめる
i   0

  i が 5 未満の間だけループ
while i   5 
    print  Hello  
    i    1

実行結果
Hello
Hello
Hello
Hello
Hello

 N 回処理する というプログラムを書く場合 次のように i を 0 からはじめ N より小さいときにループする という形式で書くのがより一般的です 
i   0
while i   N 
    処理
    i    1

最初は分かりづらく感じるかもしれませんが この形式で書いた方がプログラムをよりシンプルに書けることがあるので 慣れるようにしましょう 
なお このプログラムの変数 i のように  何回目のループか を管理する変数のことをカウンタ変数と呼ぶことがあります カウンタ変数には慣例的に i を使い i が使えない場合は j  k  l     と名前をつけていくことが多いです 

応用例
N 人の合計点を求めるプログラムを作ってみましょう 
次のプログラムは 入力の個数 N と 点数を表す N 個の整数 を入力で受け取り 点数の合計を出力します 
N   int input   

s   0    合計点を表す変数
i   0    カウンタ変数

while i   N 
    x   int input   
    s    x
    i    1

print s 

入力
3
1
10
100

実行結果
111

合計点を表す変数 s を用意して ループするたびに入力を変数 x に受け取り s に足しています 
このように 繰り返し処理を使えば様々な処理が行えるようになります 
細かい話
細かい話なので 飛ばして問題を解いても良いです 

2 ずつ増やす
今までは i を 1 ずつだけ増やしてきましたが 2 ずつ増やすこともできます 
i   0

while i   10 
    print i 
    i    2

実行結果
0
2
4
6
8

以下のように書くことで i を 2 ずつ増やしています 
i    2

同様にして より多く飛ばしてループすることもできます 

逆順ループ
5 から 0 までの数を出力したい場合は以下のようにします 
i   5

while i    0 
    print i 
    i    1

実行結果
5
4
3
2
1
0

以下のように書くことで i を 1 ずつ減らしています 
i    1


無限ループをコードテストで実行した場合
AtCoder のコードテストでは 実行時間が長すぎるとプログラムが中断されます また 出力が長すぎる場合も途中から省略されます 
そのため はじめに紹介した Hello と出力して改行した後 AtCoder と出力する処理 を無限に繰り返すプログラムをコードテストで実行しても無限には出力されず 一例としては次のように表示されます 
実行結果
Hello
AtCoder
 中略 
Hello
AtCoder
H

終了コード
9

無限ループが発生した場合 終了コードは実行時間が長すぎることを表す 9 となります 
問題
リンク先の問題を解いてください 

EX8 たくさんのA足すB問題
前のページ   次のページ"
1.09.for文・break・continue,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_j,"N 回の繰り返し処理
 N 回処理をする というような繰り返し処理をしたいときは range   を使うと楽です range a  b  と書くことで  a  a 1  a 2   dots   b 1  という数列が生成されます 
for i in range 0  5  
    print i 

実行結果
0
1
2
3
4

range a  b  の a は 0 のときに省略することができ range b  と書くことができます よって 次の二つの書き方は同じ意味になります 
for i in range 0  5  
    print i 

for i in range 5  
    print i 

実行結果
0
1
2
3
4
0
1
2
3
4

つまり  N 回の繰り返し処理 を書きたいときは次のように書けば良いです 
for i in range N  
    処理

break と continue
while 文と for 文を制御する命令として break と continue があります 

break
break はループを途中で抜けるための命令です 
  break がなければこのループは i    4 まで繰り返す
for i in range 5  
    if i    3 
        print  ぬける  
        break    i    3 の時点でループから抜ける

    print i 

print  終了  

実行結果
0
1
2
ぬける
終了

上のプログラムでは if 文で i    3 が真になったとき break 文を実行することで for ループを抜け 終了 と表示しています 

continue
continue は後の処理をとばして次のループへ進むための命令です 
for i in range 5  
    if i    3 
        print  とばす  
        continue    i    3 のとき これより後の処理を飛ばす

    print i 

print  終了  

実行結果
0
1
2
とばす
4
終了

上のプログラムでは if 文で i    3 が真になったとき continue 文を実行することで continue より下の部分を飛ばし 次のループに進みます 
細かい話
細かい話なので 飛ばして問題を解いても良いです 

2 ずつ増やす
上では range a  b  という書き方のみ紹介しましたが 実は range a  b  c  という書き方もできこれによりいくつずつ増やすかを決めることができます c を省略したときのデフォルトは 1 なので これまでの書き方では全て 1 ずつ増えていました  
よって 次のように書くことで 2 ずつ増やすことができます 
for i in range 0  10  2  
    print i 

実行結果
0
2
4
6
8

同様にして より多く飛ばしてループすることもできます 
なお いくつずつ増やすかを決めるときは a がたとえ 0 だとしても省略できないことに注意してください つまり 上のコードで range 10  2  と書くと異なる挙動になってしまいます 

逆順ループ
5 から 0 までの数を出力したい場合は以下のようにします 
for i in range 5   1   1  
    print i 

実行結果
5
4
3
2
1
0

0 まで出力したい場合に二つ目の引数を  1 にする必要があることに注意してください range 5  としたときに 5 までではなく 4 までしか出力されなかったのと同様に 0 まで出力したい場合はひとつ次の  1 を指定する必要があります 
また もちろん三つ目の引数に  2 などを指定することでより多く飛ばして逆順ループすることもできます 
より一般的に range N  を逆順にするときは range N   1   1   1  と書くことになります 
N   5

print  昇順  
for i in range N  
    print i 

print  降順  
for i in range N   1   1   1  
    print i 

実行結果
昇順
0
1
2
3
4
降順
4
3
2
1
0


for else  while else
Python では for 文と while 文に else 節を書くことができます 
これは ループが break 文で終了した場合は実行されず そうでないとき ループが最後まで回ったとき に実行されます 

break しない場合
for i in range 5  
    print i 
else 
    print  ループが最後まで回りました   

print  終了  

実行結果
0
1
2
3
4
ループが最後まで回りました 
終了


break する場合
for i in range 5  
    if i    3 
        print  ぬける  
        break    i    3 の時点でループから抜ける

    print i 
else 
    print  ループが最後まで回りました   

print  終了  

実行結果
0
1
2
ぬける
終了

問題
リンク先の問題を解いてください 

EX9 電卓をつくろう2
前のページ   次のページ"
1.10.リスト,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_k,"リストを作る

   で空のリストを作ることができます 
 要素0  要素1  要素2       でリストを作ることができます 
list 　for文に入れられるもの　  でリストを作ることができます 
例えば for i in range 5   と書くと i に 0  1  2  3  4 が順番に入るので list range 5   と書くとリスト  0  1  2  3  4  を作ることができます 


2 章で紹介する リスト内包表記 を使ってもリストを作ることができます 

  空のリストを作り a に代入する
a     

  リスト  3  1  4  1  5  を作り a に代入する
a    3  1  4  1  5 

  いろいろな型を持つデータを 1 つのリストに入れることができる
a     Hello    AtCoder   123  4 5     

  リスト  0  1  2  3  4  を作る
a   list range 5  


リストの長さ

リスト a に対し len a  で a の長さ 要素数 を取得できます 


リストの i 番目の要素

リスト a と整数 i に対し a i  で a の i 番目の要素を取得できます 
この i のこと リストの何番目の要素かを表す番号 を 添字 そえじ  と言います 
リストの添字は 0 から始まることに注意しましょう  先頭の要素は a 0  で 末尾の要素は a len a  1  で取得することができます 


a i    x で a の i 番目の要素を x に変更できます 

  リスト  3  1  4  1  5  を作り a に代入する
a    3  1  4  1  5 

  a の長さ 5 を出力する
print len a  

  a の 2 番目の要素  4  を 7 に変更する
a 2    7

  range len a   と書けば a の添字  0  1  2  3  4  を順に列挙できる
for i in range len a   
      a i  で a の i 番目の要素を取得する
    print i       a i  

出力
5
0   3
1   1
2   7
3   1
4   5


for 文でリストの要素を列挙する

リスト a に対し for x in a  で a の要素を順に x に代入して繰り返し処理を行うことができます 

a    3  1  4  1  5 

  a の要素を順に x に代入し 繰り返し処理を行う
for x in a 
      5 回実行される
    print x 

出力
3
1
4
1
5


入力からリストを作る

文字列 s に対し s split   で s を空白で区切って文字列のリストを作ることができます 
文字列のリスト a に対し list map int  a   で a の各要素を整数に変換したリストを作ることができます 
list map int  input   split     で 入力から 1 行読み取り 空白で区切って整数のリストを作ることができます 

  入力から 1 行読み取り 空白で区切って整数のリストを作る
a   list map int  input   split    

print a 

入力
886 551 37 424 531

出力
 886  551  37  424  531 


リストを出力する

リスト a に対し print  a  で a の要素を空白区切りで出力できます 

a    9  9  7  3 

  a の要素を空白区切りで出力する
print  a 

  a の要素を改行区切りで出力する
for x in a 
    print x 

出力
9 9 7 3
9
9
7
3

リストの使い所
リストと for 文を組み合わせると 以下のように大量のデータを扱うプログラムを書くことができます 

例題
N 人の生徒が数学のテストと英語のテストを受けました テストはそれぞれ 100 点満点で 生徒 i   1  le i  le N  の数学の点数は M i  英語の点数は E i でした それぞれの生徒について 数学のテストと英語のテストの合計点を求めてください 
制約

入力される値はすべて整数
1  le N  le 1000
0  le M i  le 100   1  le i  le N 
0  le E i  le 100   1  le i  le N 

入力
入力は以下の形式で与えられる 
N
M 1 M 2  cdots M N
E 1 E 2  cdots E N

出力
S i   1  le i  le N  を生徒 i の数学のテストと英語のテストの合計点とする 
以下の形式で出力せよ 
S 1
S 2
 vdots
S N

入力例
3
20 100 30
100 5 40

出力例
120
105
70


解答例
N  le 3 のような N が非常に小さいという制約がついていれば N で場合分けすることによってリストを使わずに解くことも可能です しかし N が大きくなるとこれは非現実的になってしまいます 
リストと for 文を用いれば N の大きさに関わらず簡潔に処理を書くことができます 
  生徒の人数 N を入力
N   int input   

  数学の点数 M を入力
M   list map int  input   split    

  英語の点数 E を入力
E   list map int  input   split    

  それぞれの生徒について処理する
for i in range N  
      生徒 i の合計点 M i    E i  を出力する
    print M i    E i  

リストのさらなる機能

負の添字

リスト a と負の整数 i に対し a i  で a の 後ろから  i 1 番目の要素を取得することができます 末尾の要素は a  1  で 先頭の要素は a  len a   で取得することができます 


範囲外アクセス

存在しない要素を取得しようとすると RE が発生します 

a    3  1  4  1  5 

  負の添字で後ろから順番に要素を取得
print a  1  
print a  2  
print a  3  

  a の 5 番目の要素は存在しないので 実行時エラーが発生する
print a 5  

出力
5
1
4

エラー出力
Traceback  most recent call last  
  File   judge Main py   line 8  in  module 
    print a 5  
              
IndexError  list index out of range

終了コード
256

エラー出力を見ると 8 行目の a 5  の部分で IndexError  list index out of range  リストの添字の範囲外  というエラーが起きていることがわかります 

リストをつなげる

リスト a とリスト b に対し a   b で a と b をつなげたリストを作ることができます 
リスト a と整数 n に対し a   n で a を n 回繰り返したリストを作ることができます 

  リスト  1  6  とリスト  1  8  をつなげて  1  6  1  8  を作り a に代入する
a    1  6     1  8 

   1  6  1  8  に  0  3  3  をつなげて  1  6  1  8  0  3  3  とする
a     0  3  3 

  リスト  0  1  2  を 3 回繰り返したリスト  0  1  2  0  1  2  0  1  2  を作り a に代入する
a    0  1  2    3


リストの末尾に要素を追加 削除する

リスト a と値 x に対し a append x  で a の末尾に要素 x を追加できます 
リスト a に対し a pop   で a の末尾の要素を取得しながら削除できます 

  空のリストを作り a に代入する
a     

  a の末尾に 1 を追加する a は  1  になる 
a append 1 
  a の末尾に 2 を追加する a は  1  2  になる 
a append 2 
  a の末尾に 3 を追加する a は  1  2  3  になる 
a append 3 

  a の末尾の要素 3 を出力し 削除する a は  1  2  になる 
print a pop   
  a の末尾の要素 2 を出力し 削除する a は  1  になる 
print a pop   
  a の末尾の要素 1 を出力し 削除する a は    になる 
print a pop   

出力
3
2
1


リストの好きな位置に要素を追加 削除する

リスト a と整数 i と値 x に対し a insert i  x  で a の i 番目の位置  a i 1  と a i  の間  に x を挿入することができます 
リスト a と整数 i に対し a pop i  で a の i 番目の要素を取得しながら削除することができます 

リストの途中への挿入 削除は それ以降の要素をずらす必要があるため 末尾への挿入 削除と比べて時間がかかります 

リストの中に x があるか調べる

リスト a と値 x に対し x in a で x が a の中に 1 個以上存在するかを判定することができます 
not  x in a  は x not in a と書くこともできます 


リスト a と値 x に対し a count x  で x が a の中に何個存在するかを取得することができます 
リスト a と値 x に対し a index x  で a の中に x が出現する最初の位置を取得することができます 

  x が 1  2  3 のいずれかであるかを判定する
x   2
print x in  1  2  3  

a    3  1  4  1  5 

  a の中に存在する 1 の数  2 個  を数える
print a count 1  

  a の中に存在する最初の 1 の位置  a 1   を調べる
print a index 1  

出力
True
2
1


リストをソートする

リスト a に対し a sort   で a の要素を昇順に並べ替えることができます 


リストを反転する

リスト a に対し a reverse   で a の要素を逆順に並べ替えることができます 

a    3  1  4  1  5 

  a を昇順に並び替える a は  1  1  3  4  5  になる 
a sort  
print a 

  a を反転する a は  5  4  3  1  1  になる 
a reverse  
print a 

出力
 1  1  3  4  5 
 5  4  3  1  1 


リストを複製する
リスト a に対し b   a とすると リストは複製されず a の指すリストと b の指すリストは同一のものになります 
  リスト  3  1  4  1  5  を作り a に代入する
a    3  1  4  1  5 

  a が指しているリストを b に代入する
b   a

  a の指すリストと b の指すリストは同一のため a を変更すると b も変わっている
a 2    7
print b 
  b を変更すると a も変わっている
b append 9 
print a 

出力
 3  1  7  1  5 
 3  1  7  1  5  9 

これを回避するには b   a copy   と書いて リストを複製する必要があります 
  リスト  3  1  4  1  5  を作り a に代入する
a    3  1  4  1  5 

  a が指しているリストを複製して b に代入する
b   a copy  

  a の指すリストと b の指すリストは別物のため a を変更しても b は変わらない
a 2    7
print b 

出力
 3  1  4  1  5 


リストの一部分を複製する スライス 

リスト a と整数 l r   0   l   r    text len  a   に対し a l r  で a l  から a r 1  までの r l 要素からなるリストを作ることができます 

a    3  1  4  1  5 

  a 1  から a 3  までの 3 要素からなるリストを作る
print a 1 4  

  a 0  から a 4  までの 5 要素からなるリストを作る
print a 0 5  

出力
 1  4  1 
 3  1  4  1  5 


リスト a と正整数 l r   0   l   r    text len  a   正整数  mathit step  に対し a l r step  で a l r  の範囲から  mathit step  要素ごとに取り出したリストを作ることができます 
より正確には d    bigl lceil frac r l   mathit step   bigr rceil とすると 長さ d のリスト  a l step 0   a l step 1        a l step  d 1    が作られます 
l を省略すると l   0 扱いに r を省略すると r    text len  a  扱いに  mathit step  を省略すると  mathit step    1 扱いになります 特に a    と書くと リスト a を複製することができます 



a    3  1  4  1  5  9 

  a 0 6  を作る  リストを複製する 
print a    

  a 0 6  から 2 要素ごとに取り出したリストを作る
print a   2  

  a 1 6  から 2 要素ごとに取り出したリストを作る
print a 1  2  

  a 1 5  から 3 要素ごとに取り出したリストを作る
print a 1 5 3  

出力
 3  1  4  1  5  9 
 3  4  5 
 1  1  9 
 1  5 



リストを比較する

リスト a  b に対し a    b   a    b でリストの全要素が一致しているかを判定することができます 
リスト a  b に対し a   b   a    b   a   b   a    b で a と b を辞書式順序で比較できます 


公式ドキュメント
より詳しい情報を知りたい場合は 以下の公式ドキュメントを参照してください 
https   docs python org ja 3 library stdtypes html list
問題
リンク先の問題を解いてください 

EX10 平均との差
前のページ   次のページ"
1.11.文字列,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_l,"文字列を作る

  二重引用符 や   一重引用符 で囲んだ部分が文字列として扱われます どちらを使っても違いはありません 

  文字列  Hello  を作り a に代入
a    Hello 

  文字列  AtCoder  を作り b に代入
b    AtCoder 


エスケープシーケンス
通常 以下のように文字列の中に改行をそのまま書くことはできません 
  文字列の中に改行を入れたい
s    Hello
AtCoder 

文法エラー
  File  Main py   line 2
    s    Hello
              
SyntaxError  unterminated string literal  detected at line 2 
 訳 文法エラー  終端のない文字列リテラル  2 行目で検出 

このような文法上意味のある文字を文字列に入れたい場合   バックスラッシュ から始まる エスケープシーケンス を利用します 主なエスケープシーケンスは以下の通りです 



エスケープシーケンス
意味




 n
改行文字


  
  二重引用符 


  
  一重引用符 


  
  バックスラッシュ 


 t
水平タブ



  文字列の中に改行文字を入れるには  n と書く
print  Hello nAtCoder  

  二重引用符で囲まれた文字列の中で二重引用符を入れるには    と書く
  文字列の中にバックスラッシュを入れるには    と書く
print    Hello  nAtCoder    

出力
Hello
AtCoder
 Hello nAtCoder 


文字列の長さ

文字列 s に対し len s  で s の長さ 文字数 を取得できます 


for 文で文字列の中の文字を列挙する

文字列 s に対し for x in s  で s の中の文字を順に x に代入して繰り返し処理を行うことができます 

s    AtCoder 
for x in s 
    print x 

出力
A
t
C
o
d
e
r


入力から文字列を作る

input   で入力から 1 行読み取って文字列を作ることができます 


文字列を出力する

文字列 s に対し print s  で s を出力することができます 

例
  入力から 1 行読み取り そのまま出力する
print input   

入力
Hello  AtCoder 

出力
Hello  AtCoder 


文字列をつなげる

文字列 s  t に対し s   t で s  t をこの順に連結した文字列を作ることができます 
文字列 s と非負整数 n に対し s   n で s を n 回繰り返した文字列を作ることができます 

   ABC  と  123  をつなげた文字列  ABC123  を出力する
print  ABC     123  

   ABC  を 3 回繰り返した文字列  ABCABCABC  を出力する
print  ABC    3 

出力
ABC123
ABCABCABC


文字列を整数に変換する

文字列 s に対し int s  で s を整数に変換することができます 


整数を文字列に変換する

整数 x に対し str x  で x を文字列に変換することができます 

  999999999999999999999999999999   1 を出力
print int  9    30    1 

  3    1000 の桁数を出力
print len str 3    1000   

出力
1000000000000000000000000000000
478


整数 文字列変換における桁数制限
整数から文字列への変換 文字列から整数への変換において 変換に時間がかかることを防ぐため 4300 桁よりも大きな数は変換できないようになっています 整数を出力するときにも整数から文字列への変換が行われるので この制限が適用されます 
print 10    4300 

エラー出力
Traceback  most recent call last  
  File   judge Main py   line 1  in  module 
    print 10    4300 
ValueError  Exceeds the limit  4300  for integer string conversion  use sys set int max str digits   to increase the limit
 訳  値エラー  整数 文字列変換における上限  4300  を超えています  上限を増やすには sys set int max str digits   を使ってください

sys set int max str digits 0  を実行することで この制限を取り除くことができます 
import sys
sys set int max str digits 0 

print 10    4300 

出力



文字列を空白文字で区切る

文字列 s に対し s split   で s を空白文字で区切って文字列のリストを作ることができます 


文字列のリストを連結する

文字列 s と文字列のリスト a に対し s join a  で s を区切り文字列として a の各要素を連結することができます 

   1 23 456  を空白文字で区切り リスト   1    23    456   を作る
a    1 23 456  split  

    1    23    456   を文字列       で結合してできる文字列  1   23   456  を出力する
print       join a  

出力
1   23   456


文字列の i 番目の文字

文字列 s と整数 i に対し s i  で s の i 番目の文字を取得できます 
リストのときと同様に 負の添字やスライスを使うことができます 

  文字列  ABCDE  を作り s に代入する
s    ABCDE 

  s の 0 番目の文字  A  を出力する
print s 0  

  s の最後の文字  E  を出力する
print s  1  

  s の 1 番目から 3 番目までの文字列  BCD  を出力する
print s 1 4  

  s を逆順にした文字列  EDCBA  を出力する
print s    1  

出力
A
E
BCD
EDCBA


部分文字列に x があるか調べる


部分文字列とは 
文字列 s の部分文字列とは s の連続する一部分のことです 
    例えば 空文字列 A BC ABC は ABC の部分文字列ですが D や AC は ABC の部分文字列ではありません 



文字列 s  t に対し t in s で s の部分文字列に t が含まれるかどうか判定することができます 
文字列 s  t に対し s index t  で s に現れる最初の部分文字列 t の位置を求めることができます 
文字列 s  t に対し s count t  で s に部分文字列 t が重ならずに何回出現するかを求めることができます 

  文字列  ABABABA  を作り s に代入する
s    ABABABA 

   ABABABA  の部分文字列に  BAB  があるか判定する
print  BAB  in s 

   ABABABA  に現れる最初の部分文字列  BAB  の位置を求める
  s 1 4  が最初の  BAB  なので 1 を出力する
print s index  BAB   

   ABABABA  に重ならずに現れる部分文字列  BAB  の個数を求める
  s 1 4  と s 3 6  が  BAB  であるが 重ならずに取れるのは 1 個までなので 1 を出力する
print s count  BAB   

   AAAAAAAAAA   A が 10 個  から重ならずに取れる  AAA  は 3 個まで
print  AAAAAAAAAA  count  AAA   

出力
True
1
1
3


部分文字列を置換する

文字列 s  t  u に対し s replace t  u  で s に重ならずに出現する部分文字列 t をすべて u に置き換えた文字列を取得できます 

   1   2   3  に出現する     を      に置き換えた文字列  1    2    3  を出力する
print  1   2   3  replace            

   AAAAA  に出現する  AA  を  X  に置き換えた文字列  XXA  を出力する
print  AAAAA  replace  AA    X   

出力
1    2    3
XXA


文字列を比較する

文字列 s  t に対し s    t   s    t で s と t が同じ文字列であるかを判定できます 
文字列 s  t に対し s   t   s    t   s   t   s    t で s と t を辞書式順序で比較できます 


大文字 小文字かどうか判定する

文字列 s に対し s isupper   で s の文字がすべて大文字かどうか判定することができます 
より正確には s isupper   は s に大文字が含まれていて 小文字が含まれないとき True を返します 


文字列 s に対し s islower   で s の文字がすべて小文字かどうか判定することができます 
より正確には s islower   は s に小文字が含まれていて 大文字が含まれないとき True を返します 



   ATCODER  はすべて大文字からなるので  ATCODER  isupper   は True 
print  ATCODER  isupper   

   atcoder  はすべて小文字からなるので  atcoder  islower   は True 
print  atcoder  islower   

  空文字列には小文字が含まれないので    islower   は False
print    islower   

出力
True
True
False


数字かどうか判定する

文字列 s に対し s isdigit   で s が空でなく s の文字がすべて数字かどうか判定することができます 

   0123456789  は数字のみからなるので  0123456789  isdigit   は True
print  0123456789  isdigit   

   ABC123  には数字ではない文字が含まれるので  ABC123  isdigit   は False
print  ABC123  isdigit   

     isdigit   は False
print    isdigit   

出力
True
False
False


大文字 小文字に変換する

文字列 s に対し s upper   で s の小文字をすべて大文字に変換した文字列を取得できます 
文字列 s に対し s lower   で s の大文字をすべて小文字に変換した文字列を取得できます 

   AtCoder  の小文字をすべて大文字に変換した文字列  ATCODER  を出力
print  AtCoder  upper   

   AtCoder  の大文字をすべて小文字に変換した文字列  atcoder  を出力
print  AtCoder  lower   

出力
ATCODER
atcoder


文字列の一部を変更する
Python の文字列は 一度作ると変更することができません  文字列の一部を変更したい場合は 一度文字のリストに変換する必要があります 
  文字列  AtCoder  を作り s に代入する
s    AtCoder 

  s は for 文に入れられるものであるから list s  で
  リスト   A    t    C    o    d    e    r   を作れる
a   list s 

  a の 0 番目の要素を  M  に変更する
a 0     M 

  a の要素をつなげて出力する
print    join a  

出力
MtCoder

文字
Python では 1 つの文字は長さ 1 の文字列として str 型で表現されます  したがって 文字列から取り出した 文字 に対しても文字列に対するさまざまな機能を使うことができます 
  文字列  0123456789  の 0 番目の文字  0  を c に代入
c    0123456789  0 

  c は長さ 1 の文字列である
print len c  

  c isdigit   で  0  が数字であるか判定する
print c isdigit   

  int c  で整数に変換できる
print int c  

出力
1
True
0


文字をコードポイントに変換する

文字 c に対し ord c  で c の Unicode コードポイントを取得できます 


コードポイントを文字に変換する

整数 x に対し chr x  で Unicode コードポイントが x である文字を取得できます 


Unicode とは
様々な文字に番号を割り当て 文字を番号で管理できるようにしたものを 文字コード と言います 文字コードにおいて ある文字に割り当てられた番号を コードポイント と言います 
Unicode とは 世界中のあらゆる文字に番号を割り当てた文字コードの規格で Python の内部でも用いられています 
  文字  0  に割り当てられた Unicode コードポイントは 48
print ord  0   

  文字  a  に割り当てられた Unicode コードポイントは 97
print ord  a   

  文字  あ  に割り当てられた Unicode コードポイントは 12354
print ord  あ   

  Unicode コードポイントが 12354 である文字  あ  を出力する
print chr 12354  

出力
48
97
12354
あ

競技プログラミングにおいては どのような環境でも扱うことのできる ASCII 印字可能文字 の部分しか基本的に使われません 文字コードについては 以下のことを覚えれば十分でしょう 

0  1  2       9 のコードポイントが連続している  48   57 
A  B  C       Z のコードポイントが連続している  65   90 
a  b  c       z のコードポイントが連続している  97   122 

したがって 以下のようなコードを書くことができます 

英大文字 c に対して ord c    ord  A   と書けば c が何番目のアルファベットであるかがわかる 
逆に i 番目のアルファベットを得るには chr ord  A     i  と書く 
文字 c に対して ord  A      ord c     ord  Z   と書けば c が英大文字であるかどうか判定できる 

公式ドキュメント
より詳しい情報を知りたい場合は 以下の公式ドキュメントを参照してください 
https   docs python org ja 3 library stdtypes html text sequence type str
問題
リンク先の問題を解いてください 

EX11 足したり引いたり
前のページ   次のページ"
1.12.組み込み関数,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_m,"abs
数値の絶対値を計算して返します 
a    3
b   5
a abs   abs a 
b abs   abs b 
print a abs  b abs 

実行結果
3 5


pow
pow a b  で a の b 乗の値を計算します 
pow a b mod  で a の b 乗を mod で割った余りを計算します 
a   3
b   4
mod   10
res   pow a  b 
res2   pow a  b  mod 
print res  res2 

実行結果
81 1

なお べき乗は 1 3 節で扱った    演算子でも計算できますが 組み込み関数 pow を用いたほうが高速に計算できます 
また 余りは pow a b    mod のように後から計算しても同じ結果になりますが pow a b  の値が非常に大きくなる場合は pow a b mod  のほうが高速に計算できます 
競技プログラミングにおいては pow 関数を使うことが必須であるケースが多いため覚えておきましょう 

min max
与えられた2つ以上の数値の中の最小値  最大値を計算して返します 
min val   min 1  3   5  2 
max val   max 1  3   5  2 
print min val  max val 

実行結果
 5 3

数値をリストとして与えることも可能です 
l    1  3   5  2 
min val   min l 
max val   max l 
print min val  max val 

実行結果
 5 3


sum
リストに含まれる値の合計を計算して返します 
l    1  3   5  2 
sum val   sum l 
print sum val 

実行結果
1


sorted
リストをソートし 新たなリストを返します 
l    1  3   5  2 
new l   sorted l 
print  元のリスト    l 
print  新たなリスト    new l 

実行結果
元のリスト   1  3   5  2 
新たなリスト    5  1  2  3 

1 10 節で扱った l sort   と異なり 元のリストはソートされていない点に注意してください 

all any
all は与えられたリストの要素すべてが条件式として真であるかを判定します 
any は与えられたリストの要素の中に条件式として真であるものが1つ以上存在するかを判定します 
l    1  3   5  2 
res   all  v 0 for v in l     l に含まれる値が全て正か 
res2   any  v 2  0 for v in l     l に偶数が含まれるか 
print res  res2 

実行結果
False True

なお 空のリストに対して all は True を any は False を返します 
print all      any     

実行結果
True False


enumerate
for i v in enumerate リスト   のように書くことでリストのインデックスと値を同時に取得することができます 
l    1  3   5  2 
for i v in enumerate l  
    print i   番目の要素は   v   です  

実行結果
0 番目の要素は 1 です
1 番目の要素は 3 です
2 番目の要素は  5 です
3 番目の要素は 2 です

次のように書いても同一の結果になりますが enumerate を使うほうが単純に記述することができます 
l    1  3   5  2 
for i in range len l   
    v   l i 
    print i   番目の要素は   v   です      

問題
リンク先の問題を解いてください 

Ex12 最速のランナーを見つけよう
前のページ   次のページ




input は実は引数を与えることも可能です 引数を与えるとその内容が標準出力に出力されます ユーザにどのような入力を入れてほしいか伝えるときなどに便利ですが 競技プログラミングで用いることは稀でしょう   


より厳密には None という 何ものでもない値 を返しています   


Python 3 12 時点 こちらから一覧を見ることができます"
1.13.関数,https://atcoder.jp/contests/APG4bPython/tasks/APG4bPython_n,"最も単純な関数定義
まず 最も単純な関数定義から見ていきます 以下は 1  2  3を 3 行で出力するという処理をする関数の定義です 
def print numbers   
    print 1 
    print 2 
    print 3 

defは定義の英語であるdefineから来ているキーワードで 関数の定義をすることを表します それに続く部分 今回の場合はprint numbers は関数の名前を表し 変数名と同様に自由な名前が使用できます その後の     の部分は後ほど説明しますので 今は読み飛ばすこととします 
2 行目以降は 関数の処理を表す部分です これは関数が呼ばれる度に処理されます 通常の Python のコードと同じように書くことができますが インデントをする必要がある点には注意してください 
復習となりますが 関数は関数名の後にカッコをつけることで呼び出すことができます この場合では 以下のようになります 
print numbers     1  2  3が改行されて出力される

なお 関数は定義した後でないと呼び出すことができません その点には注意してください たとえば 以下のようなコードは実行時エラーとなります 
print one     NameError  name  print one  is not defined

def print one   
  print 1 


引数を取る関数定義
次に min 1  2  のように値を渡すことができる関数を定義してみます 以下は 第一引数と第二引数を足した数を出力する関数の定義と その実行結果です 
def add and print a  b  
    print a   b 

add and print 1  2    3 が出力される

新しく出てきた事項として 一行目の a  b という記述があります これは 関数の後に書かれた一番目の要素 第一引数 をaというパラメータに 二番目の要素 第二引数 をbというパラメータに格納することを意味しています このパラメータは関数の処理部分で変数のように用いることができます 
よって この関数をadd and print 1  2 のようにして呼び出した場合 aには1 bには2が格納され その状態でprint a   b が実行された結果として3が出力されることになります 

戻り値を持つ関数定義
ここまでの文法では min のような関数を実装することはできません これは return 文を用いることで 関数の中から呼び出し側に値を返すことができます このような関数の 結果 を戻り値とよびます 以下は return 分を用いた第一引数に 1 を足した値を返す関数の定義です 
def add one a  
    return a   1

return 文の後には 関数の戻り値としたい値を記述します すると その値が関数呼び出しの式の値となります よって 以下のように変数に代入したり 直接関数の引数として渡すことも可能です 
two   add one 1    変数 two は 2 となる
print two    2 が出力される
print add one 1    1    3 が出力される

また return文は実行された時点で関数の処理を終了するという役割もあります これについては 後ほど詳述します 

まとめ
まとめると 関数の定義は以下のような文法で行うこととなります 
def 関数名 パラメータ  
    処理

実は 関数のパラメータにはここでは説明しなかった文法がいくつか存在しています これを用いると print関数のように引数の数を自由にできたり sep   のように名前で指定できたりするパラメータを作成できるようになります 
興味のある方は Python公式ドキュメント内の用語集   parameterを参照してください 

関数定義時のテクニック

return 文の特性と複数の return 文を持つ関数
return 文は 同じ関数内の複数の箇所に書くことができます 例えば 以下はaとbの小さい方を戻り値とする関数の定義です 
def my min a  b  
    if a   b 
        return a
    else 
        return b

if文がどのようなものだったかを思い出すと aがbより小さいときにreturn aが そうでないときにreturn bが実行されることになると分かります 
return 文は 実行された時点で関数の処理を終了します つまり 以下のadd one関数のreturn a   1以降に書かれた文が実行されることはありません 
def add one a  
    return a   1
    print  ここには到達しない  
    return a   2   この行にも到達しない
    print  もちろんここにも到達しない  

これを用いると my minを以下のように書き換えることができます 
def my min a  b  
    if a   b 
        return a
      a   b のケースでは return a が実行されているため ここには到達しない
    return b

このコードでは return bが実行されるのはa   bでないときのみです 何故ならば a   bのときはreturn aが実行されるので そこで関数の処理が終了するためです 
また 値を返さない関数1でも 関数の処理を早期に終了する目的でreturn文を使用することができます 
def print a is 7 a  
    if a    7 
        print  a is 7  
        return
      a    7 のケースでは return が実行されているため ここには到達しない
    print  a is not 7  

例えば 上の例では a    7 のときには print  a is not 7   が実行されません これは a    7 のときは return が実行されているので そこで関数の処理が終了するためです 

関数内の変数
通常のプログラムと同様に 関数内でも変数を用いることができます しかし 関数内で使用した変数は 基本的には関数の外部で使用することはできません 
以下の関数は add one関数を変数を使って書き直したものです 
def add one a  
    result   a   1
    return result

print add one 1     2 が表示される
print result    NameError  name  result  is not defined

この関数自体は 想定している通りの動作をします しかし 関数を呼び出した後にresult変数を参照しようとしても 存在しない変数を使用しようとしたことを示すエラーが発生してしまいます 
変数を使用できる範囲のことをスコープと呼びます 今回の場合 result変数のスコープはadd one関数内であるということになります 
一方で 関数の外の変数は自由に使用することが可能です 以下は 変数aの値をプリントするprint a関数を用いた例です 
a   0
def print a   
    print a 

print a     0 が表示される
a   1
print a     1 が表示される

変数aは関数の外で宣言されていますが その値をprint a関数の内部で用いることができていることが分かります これは 変数aのスコープがグローバル つまり コード全体 であるためです このような変数のことをグローバル変数と呼びます2 
一方で 関数内でグローバル変数を変更する場合には注意が必要です 以下は 受け取った変数をaに代入することを意図した関数update aを用いた例です 
a   0
def update a val  
    a   val

update a 1 
print a    0 が出力される

この例から分かる通り 単に代入文を書くだけでは関数内ではグローバル変数の値を変更することができません3 グローバル変数に値を代入したい場合は global文を使用します 
a   0
def update a val  
    global a
    a   val

update a 1 
print a    きちんと 1 が出力される

関数内にてglobal 変数名という形でglobal文を使用すると 関数内で指定した変数を使用した際にグローバル変数として扱うようになります また 複数の変数を指定したい場合は global a  b  c のようにカンマで区切ることで指定することができます 
global文が必要な条件については一見複雑そうに見えますが まとめれば 関数外部でも変数を使用していて かつ関数内で代入をしている 場合となります 
よく混乱する例として list等を代入せずに変更するケースがあります 例えば 以下のようなケースではglobal文は必要ありません 
li     
def update li val  
    li append val 

update li 1 
print li     1  と出力される

これは 変数liは変更されてはいるものの代入されていないためです global文が必要となるケースは 以下のように変数liに代入しているケースです 
li     
def update li val  
    global li
    li   li    val 

update li 1 
print li     1  と出力される


nonlocal
ここからは global文についての補足となります 複雑なプログラムを書かない内は必要となることがないであろう知識なので 読み飛ばしても構いません 
for文の中にfor文を入れることができたのと同様に Pythonでは関数内で関数を定義することが可能です この際 以下のように関数内で用いたい外部の変数がグローバル変数でない場合が存在します 
def get 1   
    value   0
    def set 1   
          ここで用いている value はグローバル変数ではないので global は使えない
        value   1   Error  local variable  value  referenced before assignment
    set 1  
    return value

このような場合に使用できる文として nonlocal文が存在します これを用いて上のコードを書き直すと 以下の通りとなります 
def get 1   
    value   0
    def set 1   
        nonlocal value
        value   1
    set 1  
    return value

問題
リンク先の問題を解いてください 

EX13 三人兄弟へのプレゼント
前のページ   次のページ




この表現は正確ではありません Pythonは全ての関数が戻り値を持ち それはprint  といった関数も例外ではありません このように一見戻り値を持たないように見える関数は 実はNoneという 何もない を意味する特別な値を返しています   


対して スコープがグローバルでない変数をローカル変数と呼びます   


この際 関数内で使用している変数aと関数外で使用している変数aは別の変数になります これは変数のシャドウイングと呼ばれます シャドウイングは混乱の種となりやすいため 初学者のうちは行わない方が無難でしょう 本教材でも シャドウイングをするコードは登場しません"
1.00.はじめに,https://atcoder.jp/contests/APG4b/tasks/APG4b_a,"提出練習プログラミングの文法の説明に入る前に 自動採点システム ジャッジ の使い方を確認しましょう   
このページの一番下の ソースコード と書かれた場所の隣にテキストを入力できるところがあると思います 
そこに次のプログラムをコピー ペーストしてみましょう   

コピー ペーストの仕方 
 の右上にある Copy ボタンをクリック  ソースコード のテキストを入力する場所で右クリック  貼り付け をクリック  

 include  bits stdc   h 
using namespace std 

int main    
  cout     Hello  world      endl 
 

コピー ペーストができたら  言語 と書かれた場所の隣に C    GCC 9 2 1  と表示されていることを確認し  提出 ボタンを押してください   
ページが切り替わり 
WJ
と表示されているところが
AC
に変われば提出成功です   

WAと表示されてしまった場合 正しくコピー ペーストできているか確認し 再提出してください   
CEと表示されてしまった場合  言語 として C    GCC 9 2 1  が選択されているか確認してください  C    GCC 9 2 1  以外のものが表示されている場合は  C    GCC 9 2 1  を選択し 再提出してください   


次のページ"
6. 3.06,https://atcoder.jp/contests/APG4b/tasks/APG4b_bw,"問題文
この問題は難易度が高いので 詰まったらヒントを見てみて下さい 

変数と配列を扱える電卓を作成してください 
電卓の操作は次のようにプログラムに似た命令の形式で与えられます 1行目の入力は命令の行数を表します   
入力例
4
int x   1   2  
print int x   3  
vec a     1   2   x    
print vec a     4   5   6    

出力例
6
  5 7 9  



命令の形式電卓の操作は次の命令のいずれかで表されます 
それぞれの命令の終わりには必ず1つのスペースとセミコロン があり  の前後には必ず1つのスペースがあります   



形式
例
説明




int  変数名     int式   
int x   1   2  
整数の変数を宣言


print int  int式   
print int x   3  
整数の値を出力


vec  変数名     vec式   
vec a     1   2   x    
配列の変数を宣言


print vec  vec式   
print vec a     4   5   6    
配列の値を出力



print vec命令は  値1 値2     値N  という形式で出力します 
C  プログラムで表すと次のようになります このプログラムをそのまま回答に利用しても構いません   
   問題文の形式でvec値を出力
void print vec vector int  vec   
  cout         
  for  int i   0  i   vec size    i     
    cout    vec at i         
   
  cout           endl 
 



形式の詳細

 変数名 は小文字のアルファベット1文字で表されます 


 int式 は以下の形式のいずれかで表されます 





形式
例
説明




 int項 
1  x など
1桁の正の整数 または事前にint 命令で宣言された 変数名 


 int項   演算子   int項   演算子       演算子   int項 
x   3
 演算子 は または 




 vec式 は以下の形式のいずれかで表されます 




形式
例
説明




 vec項 
  1   2   x    aなど
詳細は次の表


 vec項   演算子   vec項   演算子       演算子   vec項 
a     4   5   6  
 演算子 は または 




 vec項 は以下の形式のいずれかで表されます 




形式
例
説明




 vec値 
  1   2   x  
   int項     int項           int項   の形式   int項 と と はスペース1つで区切られていることに注意


 vec変数 
a
事前にvec命令で宣言された 変数名 





計算の定義


式
計算
例




 int項     int項 
整数の加算
1   2   3


 int項     int項 
整数の減算
1   2    1


 vec項     vec項 
要素ごとの加算
  1   2   3       4   5   6       5   7   9  


 vec項     vec項 
要素ごとの減算
  1   2   3       3   2   1        2   0   2  





制約
1  leq N  leq 10
配列の要素数は2以上5以下
 int式 に現れる int項 の数は5以下
 vec式 に現れる vec項 の数は5以下
すでに存在する変数が定義されることはない
存在しない変数が式の中で使われることはない
要素数の異なる配列同士の計算は存在しない
その他計算できない不正な命令が入力されることはない



入力入力は次の形式で標準入力から与えられます   
N
命令1
命令2
 vdots
命令N



出力print intまたはprint vecの結果


ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例14
int x   1   2  
print int x   3  
vec a     1   2   x    
print vec a     4   5   6    


出力例16
  5 7 9  

問題文で説明した例です   


入力例22
print int 1   2  
print vec   1   2   3       3   2   1    


出力例2 1
   2 0 2  

計算結果が負になることもあります   


入力例31
print int 5  


出力例35



入力例41
print vec   1   2    


出力例4  1 2  



入力例52
int x   1  
print int x  


出力例51



入力例62
vec a     3   4    
print vec a  


出力例6  3 4  



入力例74
int x   1  
int y   2  
int z   3  
print int x   y   z  


出力例76



入力例84
vec a     1   2   3    
vec b     4   5   6    
vec c     7   8   9    
print vec a   b   c  


出力例8  12 15 18  



入力例96
vec a     1   2    
vec b   a     3   4    
vec c   a     5   6    
print vec a  
print vec b  
print vec c  


出力例9  1 2  
  4 6  
   4  4  



ヒント1ヒント1はちょっとしたアドバイスでしかないので 気軽に開いて良いです   

クリックでヒントを開く
今回の問題は少し長いプログラムを書く必要があります 
機能を一つずつ作っていき 正しく動いているかをコードテストで確認しましょう   
入力3から入力6は特にプログラムのテストに有用です 
まずはこれらの入力に対して正しく出力できるプログラムを作ると良いでしょう   
上記の入出力例だけでは原因が分かりにくいバグが発生した場合は 手動で入出力例を作ってみてテストするのも一つの手です 



ヒント2ヒント2ではこの問題を解く際に使えるSTLの関数を示します   

クリックでヒントを開く

stoi関数 文字列を数値に変換 3 01で解説 

使用例
stoi  123      123    true


isdigit関数 文字が数値かどうか判定 3 06で紹介 

使用例
char c 
cin    c 
   isdigit関数はchar型を引数に取ることに注意
if  isdigit c    
  cout     cは数字     endl 
 
else  
  cout     cは数字でない     endl 
 

なお これらの関数を使わずに解くことも可能です 
入力には1桁の正の整数しか出てこないため それだけに対応するstoiやisdigit相当の関数は数行程度で書くことができます 



ヒント3ヒント3では解答例で実装した関数の概要とmain関数を示します 実装方針の参考にしてください   

クリックでヒントを開く
   問題文の形式でvec値を出力
void print vec vector int  vec 

   変数名を読み取りイコールを読み飛ばす
string read name  

   int式の項を1つ読み取る 
   数字ならその値を返し そうでないなら変数として解釈し変数の値を返す
   var int   intの変数を保持するmap
int read int map string  int   var int 

   int式全体を読み取って計算する
   var int   intの変数を保持するmap
int calc int map string  int   var int 

   vec値を読み取る
   最初の   は読み取ってある前提であることに注意
   var int   intの変数を保持するmap
vector int  read vec val map string  int   var int 

   vec式の項を1つ読み取る
   vec値ならその値を返し そうでないなら変数として解釈し変数の値を返す
   var int   intの変数を保持するmap
   var vec   vecの変数を保持するmap
vector int  read vec map string  int   var int  map string  vector int    var vec 

   vec式全体を読み取って計算する
   var int   intの変数を保持するmap
   var vec   vecの変数を保持するmap
vector int  calc vec map string  int   var int  map string  vector int    var vec 


int main    

     命令の行数を取得
  int N 
  cin    N 

  map string  int  var int     intの変数を管理するmap
  map string  vector int   var vec     vectorの変数を管理するmap

     行数分の処理
  for  int i   0  i   N  i     

       命令を受け取る
    string s 
    cin    s 

       int命令の処理
    if  s     int    
         変数名を読み取る
      string name   read name   
         右辺の式を計算して変数に代入
      var int name    calc int var int  
     

       vec命令の処理
    if  s     vec    
         変数名を読み取る
      string name   read name   
         右辺の式を計算して変数に代入
      var vec name    calc vec var int  var vec  
     

       print int命令の処理
    if  s     print int    
         式を計算して出力
      cout    calc int var int     endl 
     

       print vec命令の処理
    if  s     print vec    
         式を計算して出力
      print vec calc vec var int  var vec   
     
   
 




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
10
int d   9   1   2   3   1  
int x   d   3   2   1   d  
int k   x   d   d   x   x  
vec c     d   x   k   1   x    
vec u     8   9    
vec n     1   2   3   4   5    
vec s     6   7    
print vec u   s   u   s   u  
print vec n   c   c   c   n  
print int x   k   k   d   x  

テスト出力1
  20 23  
   28  44  42 5  38  
54


テスト入力2
10
int l   7   6   5   4   8  
vec q     l   l   l   l    
int e   9   9   9   9   9  
print vec   9   5   3       2   4   6       8   8   8       2   2   2    
print int 8   8   8  
int z   e   e   e   e   e  
int b   z   z   z   z   z  
print vec q     e   z   z   z    
int r   b   b   b   b   b  
print int r   z   b   e   l  

テスト出力2
  1  1  1  
24
  45 225 225 225  
7020


テスト入力3
10
vec j     3   3   4    
vec a     2   8    
vec s     5   2   6   3    
vec t     1   1   1   1     s   s   s   s  
vec o     2   2   2   2     s   s   s   s  
print vec s  
print vec a   a     9   9     a  
print int 7  
print vec   2   5   2   5    
print vec s   o   o   o   s  

テスト出力3
  5 2 6 3  
  11 17  
7
  2 5 2 5  
  64 22 78 36  




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
細かく関数分けされたプログラムなので main関数から処理の流れを追うように読むと良いです   
 include  bits stdc   h 
using namespace std 

   問題文の形式でvec値を出力
void print vec vector int  vec   
  cout         
  for  int i   0  i   vec size    i     
    cout    vec at i         
   
  cout           endl 
 

   変数名を読み取りイコールを読み飛ばす
string read name    
  string name  equal 
  cin    name    equal 
  return name 
 

   int式の項を1つ読み取る 
   数字ならその値を返し そうでないなら変数として解釈し変数の値を返す
   var int   intの変数を保持するmap
int read int map string  int   var int   
  string val 
  cin    val 

     最初の文字が数字かどうかで数字か変数かを判定 3 06で紹介した条件演算子を使用 if文で書いても良い  
  return isdigit val at 0  
      stoi val     数値の場合
      var int at val      変数の場合

     isdigit関数は3 06で stoi関数は3 01で紹介している
     これらを使わず自分で変換する処理を書いても良い
 

   int式全体を読み取って計算する
   var int   intの変数を保持するmap
int calc int map string  int   var int   

  string symbol          演算子を受け取る変数
  int result   0     結果を保持する変数

     式の終わりである   が出てくるまで読み取る
  while  symbol          
       項を1つ読み取る
    int val   read int var int  

       記号が入力されてない場合 式の最初の項 は結果にそのまま代入
    if  symbol         
      result   val 
     
       足し算の場合
    if  symbol          
      result    val 
     
       引き算の場合
    if  symbol          
      result    val 
     

       symbolには             のいずれかが入力される
    cin    symbol 
   

  return result 
 

   vec値を読み取る
   最初の   は読み取ってある前提であることに注意
   var int   intの変数を保持するmap
vector int  read vec val map string  int   var int   

  vector int  result     結果を保持する変数
  string symbol          vec値中の記号を受け取る変数

     vec値の終わりである   が出てくるまで読み取る
  while  symbol          
       数値を1つ読み取ってvecに追加
    int val   read int var int  
    result push back val  

       symbolには   か   が入力される
    cin    symbol 
   

  return result 
 

   vec式の項を1つ読み取る
   vec値ならその値を返し そうでないなら変数として解釈し変数の値を返す
   var int   intの変数を保持するmap
   var vec   vecの変数を保持するmap
vector int  read vec map string  int   var int  map string  vector int    var vec   

  string val 
  cin    val 

        かどうかでvec値か変数かを判定 3 06で紹介した条件演算子を使用 if文で書いても良い  
  return val       
      read vec val var int     vec値の場合
      var vec at val      変数の場合
 

   vec式全体を読み取って計算する
   var int   intの変数を保持するmap
   var vec   vecの変数を保持するmap
vector int  calc vec map string  int   var int  map string  vector int    var vec   

  string symbol     演算子を受け取る変数
  vector int  result     結果を保持する変数

     式の終わりである   が出てくるまで読み取る
  while  symbol          

       項を1つ読み取る
    vector int  vec   read vec var int  var vec  

       記号が入力されてない場合 式の最初の項 は結果にそのまま代入
    if  symbol         
      result   vec 
     
       足し算の場合
    if  symbol          
      for  int i   0  i   result size    i     
        result at i     vec at i  
       
     
       引き算の場合
    if  symbol          
      for  int i   0  i   result size    i     
        result at i     vec at i  
       
     

       symbolには             のいずれかが入力される
    cin    symbol 
   

  return result 
 

int main    

     命令の行数を取得
  int N 
  cin    N 

  map string  int  var int     intの変数を管理するmap
  map string  vector int   var vec     vectorの変数を管理するmap

     行数分の処理
  for  int i   0  i   N  i     

       命令を受け取る
    string s 
    cin    s 

       int命令の処理
    if  s     int    
         変数名を読み取る
      string name   read name   
         右辺の式を計算して変数に代入
      var int name    calc int var int  
     

       vec命令の処理
    if  s     vec    
         変数名を読み取る
      string name   read name   
         右辺の式を計算して変数に代入
      var vec name    calc vec var int  var vec  
     

       print int命令の処理
    if  s     print int    
         式を計算して出力
      cout    calc int var int     endl 
     

       print vec命令の処理
    if  s     print vec    
         式を計算して出力
      print vec calc vec var int  var vec"
5. 3.05,https://atcoder.jp/contests/APG4b/tasks/APG4b_bx,"問題文0から49までの整数からなる集合A  Bがあります 
プログラムの雛形をもとに 集合A  Bに対して操作を行う関数を実装してください 
実装する操作は以下の通りです 



操作
説明
例




intersection
AとBに共通して含まれる要素からなる集合を返す 
A   1  2  3   B  2  3  4 結果  2  3 


union set
AとBのうち少なくとも一方に含まれる要素からなる集合を返す 
A   1  2  3   B  2  3  4 結果  1  2  3  4 


symmetric diff
AとBのうちどちらか一方にだけ含まれる要素からなる集合を返す 
A   1  2  3   B  2  3  4 結果  1  4 


subtract x
集合Aから値xを削除する xは存在することが保証される 
A   1  2  3   x  2結果  1   3 


increment
集合Aに含まれる要素すべてに1を加える ただし 操作前の集合に含まれる49は操作後は0になるものとする 
A   1  2  49 結果  2  3  0 


decrement
集合Aに含まれる要素すべてから1を引く ただし 操作前の集合に含まれる0は操作後は49になるものとする 
A   0  1  2 結果  49  0  1 



プログラムの雛形
 include  bits stdc   h 
using namespace std 

   各操作を行う関数を実装する

   AとBに共通して含まれる要素からなる集合を返す
bitset 50  intersection bitset 50  A  bitset 50  B   
 
   AとBのうち少なくとも一方に含まれる要素からなる集合を返す
bitset 50  union set bitset 50  A  bitset 50  B   
 
   AとBのうちどちらか一方にだけ含まれる要素からなる集合を返す
bitset 50  symmetric diff bitset 50  A  bitset 50  B   
 
   Aから値xを除く
bitset 50  subtract bitset 50  A  int x   
 
   Aに含まれる要素に1を加える ただし 要素49が含まれる場合は0になるものとする 
bitset 50  increment bitset 50  A   
 
   Aに含まれる要素から1を引く ただし 要素0が含まれる場合は49になるものとする 
bitset 50  decrement bitset 50  A   
 

   Sに値xを加える
bitset 50  add bitset 50  S  int x   
  S set x  1       xビット目を1にする
  return S 
 

   集合Sの内容を昇順で出力する スペース区切りで各要素の値を出力する 
void print set bitset 50  S   
  vector int  cont 
  for  int i   0  i   50  i     
    if  S test i    
      cont push back i  
     
   
  for  int i   0  i   cont size    i     
    if  i   0  cout        
    cout    cont at i  
   
  cout    endl 
 

   これより下は書き換えない

int main    
  bitset 50  A  B 
  int N 
  cin    N 
  for  int i   0  i   N  i     
    int x 
    cin    x 
    A   add A  x  
   
  int M 
  cin    M 
  for  int i   0  i   M  i     
    int x 
    cin    x 
    B   add B  x  
   

     操作
  string com 
  cin    com 

  if  com     intersection    
    print set intersection A  B   
    else if  com     union set    
    print set union set A  B   
    else if  com     symmetric diff    
    print set symmetric diff A  B   
    else if  com     subtract    
    int x 
    cin    x 
    print set subtract A  x   
    else if  com     increment    
    print set increment A   
    else if  com     decrement    
    print set decrement A   
   
 



制約
Aの要素数はNで 要素はA 1  A 2   cdots  A Nです 

Bの要素数はMで 要素はB 1  B 2   cdots  B Mです 


1  leq N  M  leq 50

0  leq A i  leq 49  1  leq i  leq N 
0  leq B i  leq 49  1  leq i  leq M 
 mathrm command は以下のうちのいずれか
intersection
union set
symmetric diff
subtract x
0  leq x  leq 49
集合Aにxが存在することが保証される


increment
decrement





入力入力は次の形式で標準入力から与えられます   
N
A 1 A 2  cdots A N
M
B 1 B 2  cdots B M
 mathrm command 



出力操作の結果の集合について 含まれる要素を昇順 空白区切りで1行に出力してください 
末尾に空白を含めないことに注意してください 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例13
0 1 2
3
1 2 3
intersection


出力例11 2

集合Aには 0  1  2 が含まれ 集合Bには 1  2  3 が含まれるので これらに共通して含まれる要素は 1  2 となります 


入力例23
0 1 2
3
1 2 3
union set


出力例20 1 2 3



入力例33
0 1 2
3
1 2 3
symmetric diff


出力例30 3



入力例43
0 1 2
3
1 2 3
subtract 2


出力例40 1



入力例53
0 1 49
3
1 2 3
increment


出力例50 1 2



入力例63
0 1 49
3
1 2 3
decrement


出力例60 48 49



ヒント
クリックでヒントを開く

intersectionはビット毎のAND演算を用いて実装できます 
union setはビット毎のOR演算を用いて実装できます 

symmetric diffはビット毎のXOR演算を用いて実装できます 


subtract xはSを表すビット列のxビット目を0にすればよいです 


increment  decrementは全ての要素が1ずつ増える 減る ので論理シフト演算が利用できます 





テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
3
0 1 2
3
10 11 12
intersection

テスト出力1



テスト入力2
50
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
3
1 2 3
increment

テスト出力2
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49


テスト入力3
50
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
3
1 2 3
decrement

テスト出力3
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

   各操作を行う関数を実装する

   AとBに共通して含まれる要素からなる集合を返す
bitset 50  intersection bitset 50  A  bitset 50  B   
  return A   B 
 
   AとBのうち少なくとも一方に含まれる要素からなる集合を返す
bitset 50  union set bitset 50  A  bitset 50  B   
  return A   B 
 
   AとBのうちどちらか一方にだけ含まれる要素からなる集合を返す
bitset 50  symmetric diff bitset 50  A  bitset 50  B   
  return A   B 
 
   Aから値xを除く
bitset 50  subtract bitset 50  A  int x   
  A set x  0  
  return A 
 
   Aに含まれる要素に1を加える ただし 要素49が含まれる場合は0になるものとする 
bitset 50  increment bitset 50  A   
  bitset 50  ret   A    1      左シフトでまとめて 1する
  if  A test 49    
    ret set 0  1  
   
  return ret 
 
   Aに含まれる要素から1を引く ただし 要素0が含まれる場合は49になるものとする 
bitset 50  decrement bitset 50  A   
  bitset 50  ret   A    1      右シフトでまとめて 1する
  if  A test 0    
    ret set 49  1  
   
  return ret 
 

   Sに値xを加える
bitset 50  add bitset 50  S  int x   
  S set x  1       xビット目を1にする
  return S 
 

   集合Sの内容を昇順で出力する スペース区切りで各要素の値を出力する 
void print set bitset 50  S   
  vector int  cont 
  for  int i   0  i   50  i     
    if  S test i    
      cont push back i  
     
   
  for  int i   0  i   cont size    i     
    if  i   0  cout        
    cout    cont at i  
   
  cout    endl 
 

   これより下は書き換えない

int main    
  bitset 50  A  B 
  int N 
  cin    N 
  for  int i   0  i   N  i     
    int x 
    cin    x 
    A   add A  x  
   
  int M 
  cin    M 
  for  int i   0  i   M  i     
    int x 
    cin    x 
    B   add B  x  
   

     操作
  string com 
  cin    com 

  if  com     intersection    
    print set intersection A  B   
    else if  com     union set    
    print set union set A  B   
    else if  com     symmetric diff    
    print set symmetric diff A  B   
    else if  com     subtract    
    int x 
    cin    x 
    print set subtract A  x   
    else if  com     increment    
    print set increment A   
    else if  com     decrement    
    print set decrement A"
4. 3.04,https://atcoder.jp/contests/APG4b/tasks/APG4b_by,"問題文構造体の練習として 24時間表記の時計を表す構造体を実装してみましょう 
以下のプログラムの雛形のコメントに従って構造体を実装してください 
プログラムの雛形
 include  bits stdc   h 
using namespace std 

   以下に 24時間表記の時計構造体 Clock を定義する

   Clock構造体のメンバ変数を書く
     int hour    時間を表す  0 23の値をとる 
     int minute  分を表す    0 59の値をとる 
     int second  秒を表す    0 59の値をとる 

   メンバ関数 set の定義を書く
     関数名  set
     引数  int h  int m  int s  それぞれ時 分 秒を表す 
     返り値  なし
     関数の説明 
       時 分 秒を表す3つの引数を受け取り 
       それぞれ メンバ変数 hour  minute  second に代入する

   メンバ関数 to str の定義を書く
     関数名  to str
     引数  なし
     返り値  string型
     関数の仕様 
       メンバ変数が表す時刻の文字列を返す
       時刻の文字列は次のフォーマット
        HH MM SS 
       HH MM SSはそれぞれ時間 分 秒を2桁で表した文字列

   メンバ関数 shift の定義を書く
     関数名  shift
     引数  int diff second
     返り値  なし
     関数の仕様 
       diff second 秒だけメンバ変数が表す時刻を変更する ただし 日付やうるう秒は考えない 
       diff second の値が負の場合 時刻を戻す
       diff second の値が正の場合 時刻を進める
       diff second の値は  86400   86400 の範囲を取とりうる


                      
   ここから先は変更しない
                      

int main    
     入力を受け取る
  int hour  minute  second 
  cin    hour    minute    second 
  int diff second 
  cin    diff second 

     Clock構造体のオブジェクトを宣言
  Clock clock 

     set関数を呼び出して時刻を設定する
  clock set hour  minute  second  

     時刻を出力
  cout    clock to str      endl 

     時計を進める 戻す 
  clock shift diff second  

     変更後の時刻を出力
  cout    clock to str      endl 
 



制約
0  leq  mathrm hour   leq 23
0  leq  mathrm minute   leq 59
0  leq  mathrm second   leq 59
 86400  leq  mathrm diff  second   leq 86400



入力入力は次の形式で標準入力から与えられます   
 mathrm hour   mathrm minute   mathrm second 
 mathrm diff  second 


出力HH1 MM1 SS1
HH2 MM2 SS2


HH1 MM1 SS1は入力で与えられた時刻を表す文字列です 
HH2 MM2 SS2は mathrm diff  second 秒だけ時刻を変更した後の時刻を表す文字列です 


ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例10 0 0
90


出力例100 00 00
00 01 30

 0時0分0秒 の90秒後 1分30秒後 なので 変更後の時刻は 0時1分30秒 です 
値が1桁の場合でも 出力は2桁に揃える必要がある点に注意してください 

入力例20 0 0
 5


出力例200 00 00
23 59 55

 0時0分0秒 の5秒前なので 変更後の時刻は 23時59分55秒 です 

入力例323 59 30
30


出力例323 59 30
00 00 00


入力例46 57 9
 4195


出力例406 57 09
05 47 14



ヒント
クリックでヒントを開く

構造体は次のように定義します 

struct 構造体名  
  型1 メンバ変数名1
  型2 メンバ変数名2
  型3 メンバ変数名3
      必要な分だけ書く 

  返り値の型 メンバ関数名 型1 引数1  型2 引数2        
       メンバ関数の内容
   
      必要な分だけ書く 
         セミコロンが必要


時刻の処理は 繰り上げや繰り下げを考慮する必要があるので 注意して実装しましょう 
秒 分 時の順で処理するとよいでしょう 




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
0 0 0
0

テスト出力1
00 00 00
00 00 00


テスト入力2
0 0 0
 86400

テスト出力2
00 00 00
00 00 00


テスト入力3
10 25 44
14240

テスト出力3
10 25 44
14 23 04




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

   以下に 24時間表記の時計構造体 Clock を定義する
struct Clock  
     メンバ変数の宣言
  int hour        時間を表す  0 23の値をとる 
  int minute      分を表す    0 59の値をとる 
  int second      秒を表す    0 59の値をとる 

     メンバ関数 set の定義
  void set int h  int m  int s   
    hour     h 
    minute   m 
    second   s 
   

     メンバ関数 to str の定義
  string to str    
    string ret 

       必要ではないが 書いておくと誤りがある場合に気づきやすくなる
    if    0    hour    hour    23   
          0    minute    minute    59   
          0    second    second    59    
      return  error  
     

    if  hour   10  ret     0  
    ret    to string hour  

    ret        

    if  minute   10  ret     0  
    ret    to string minute  

    ret        

    if  second   10  ret     0  
    ret    to string second  

    return ret 
   

     メンバ関数 shift の定義
  void shift int diff second   
    int diff hour   diff second   3600 
    diff second    3600 
    int diff minute   diff second   60 
    diff second    60 

    second    diff second 
    if  second    60   
         分へ繰り上げ
      minute    1 
      second    60 
      else if  second   0   
         分から繰り下げ
      minute    1 
      second    60 
     

    minute    diff minute 
    if  minute    60   
         時へ繰り上げ
      hour    1 
      minute    60 
      else if  minute   0   
         時から繰り下げ
      hour    1 
      minute    60 
     

    hour    diff hour 
    if  hour    24   
      hour    24 
      else if  hour   0   
      hour    24 
     
   
  

                      
   ここから先は変更しない
                      

int main    
     入力を受け取る
  int hour  minute  second 
  cin    hour    minute    second 
  int diff second 
  cin    diff second 

     Clock構造体のオブジェクトを宣言
  Clock clock 

     set関数を呼び出して時刻を設定する
  clock set hour  minute  second  

     時刻を出力
  cout    clock to str      endl 

     時計を進める 戻す 
  clock shift diff second  

     変更後の時刻を出力
  cout    clock to str      endl 
 

shift関数は次のように書いてもよいでしょう 
  void shift int diff second   
    while  diff second   0   
         diff secondが正なら1秒進める

      second    1 
      diff second    1 

      if  second    60   
        second   0 
        minute    1 
       
      if  minute    60   
        minute   0 
        hour    1 
       
      if  hour    24   
        hour   0 
       
     
    while  diff second   0   
         diff secondが負なら1秒戻す

      second    1 
      diff second    1 

      if  second     1   
        second   59 
        minute    1 
       
      if  minute     1   
        minute   59 
        hour    1 
       
      if  hour     1   
        hour   23 
       
     
   

この問題では制約が小さいので このように直接計算しても十分高速に答えが求まります 
ときには 効率的だが実装が煩雑になってしまうアルゴリズム よりも  もっと効率的な方法があることは分かっているが 実装がシンプルなアルゴリズム を選択した方がよいこともあります"
3. 3.03,https://atcoder.jp/contests/APG4b/tasks/APG4b_bz,"問題文N要素の配列A 1  A 2   ldots  A Nが与えられます 
この配列の中の値のうち 出現回数が最も多い値とその出現回数を求めてください 
ただし 出現回数が最大になる値は複数存在しないものとします 
制約が大きいため計算量に注意してプログラムを作成してください 


制約
0  leq N  leq 10 5
0  leq A i  leq 10 9  1  leq i  leq N 
出現回数が最大になるような値は複数存在しない 



入力入力は次の形式で標準入力から与えられます   
N
A 1 A 2  ldots A N


出力値 出現回数

出現回数が最も多い値と その出現回数をスペース区切りで出力してください 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   
特に ジャッジのテストケースには大きい入力が含まれているのでTLEにならないように注意してください 

入力例15
1 4 4 2 3


出力例14 2

入力の配列に含まれる各値の出現回数は以下のようになっています 

1の出現回数は1回
2の出現回数は1回
3の出現回数は1回
4の出現回数は2回

出現回数2回が最大でその値は4なので  4 2 と出力します 

入力例26
3 2 3 1 3 2


出力例23 3


入力例31
1000000000


出力例31000000000 1



ヒント
クリックでヒントを開く

 値 出現回数 の関係をmapで管理しましょう 
mapへの値の追加 アクセスの計算量はO  log N です 
この問題ではN 2は10  10 なので O N 2 の計算量ではTLEとなります 
N  log Nは約1 6 10 6なので O N  log N の計算量であれば間に合います 




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
データが大きすぎるため省略
テスト入力2
データが大きすぎるため省略



解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  int N 
  cin    N 
  vector int  A N  
  for  int i   0  i   N  i     
    cin    A at i  
   

  map int  int  cnt 
  for  int x   A   
    if  cnt count x    
         既に含まれているならインクリメント
      cnt at x    
      else  
         含まれていないなら 1を追加
      cnt x    1 
     
   

  int max cnt   0      出現回数の最大値を保持
  int ans    1         出現回数が最大になる値を保持
  for  int x   A   
       今見ているxの出現回数が その時点の最大よりも大きければ更新
    if  max cnt   cnt at x    
      max cnt   cnt at x  
      ans   x 
     
   

  cout    ans           max cnt    endl"
2. 3.02,https://atcoder.jp/contests/APG4b/tasks/APG4b_ca,"問題文整数a i  b iのペア a i  b i がN個与えられます 1  leq i  leq N  b iが小さい順にペアを並べ替えてください 


制約
1  leq N  leq 100
1  leq a i  b i  leq 10 9
b iは全て異なる
入力はすべて整数



入力入力は次の形式で標準入力から与えられます   
N
a 1 b 1
a 2 b 2
   
a N b N


出力ペアを並べ替えた順に1行毎に出力してください 
各ペアはa i b iをスペース区切りで出力してください 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例13
5 2
2 7
4 1


出力例14 1
5 2
2 7

 5  2    2  7    4  1 という3つのペアがあり b iの値が小さい順に並べ替えると  4  1    5  2    2  7 となります 

入力例25
1 2
3 4
5 6
7 8
9 10


出力例21 2
3 4
5 6
7 8
9 10



ヒント
クリックでヒントを開く

pair int  int で2つの整数のペアを表すことができます 
pairを比較すると 1番目の値で比較され 等しい場合は2番目の値で比較されます 
配列を要素が小さい順に並べ替えるにはsort a begin    a end    とします 




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
100
93 4
54 22
36 41
55 65
48 27
12 1
37 67
68 39
80 10
56 8
87 90
16 47
76 88
38 13
46 87
40 48
84 68
94 33
49 29
3 11
98 6
18 21
85 77
23 45
73 58
78 42
31 12
21 60
66 54
47 14
9 7
28 53
41 82
91 83
61 74
92 91
96 95
90 81
17 66
22 89
72 43
39 56
57 80
70 100
58 69
74 34
51 64
25 20
67 25
97 62
63 55
19 26
15 2
82 5
20 92
34 31
43 73
79 28
1 57
99 32
13 38
88 36
24 51
59 19
64 23
89 79
65 3
81 84
27 78
44 52
53 59
6 61
50 71
14 40
2 49
83 75
77 96
30 85
95 15
71 86
35 50
52 44
42 18
75 70
29 94
8 46
60 76
5 98
69 93
11 99
10 72
32 35
7 9
86 24
26 16
62 17
100 97
4 30
45 63
33 37

テスト出力1
12 1
15 2
65 3
93 4
82 5
98 6
9 7
56 8
7 9
80 10
3 11
31 12
38 13
47 14
95 15
26 16
62 17
42 18
59 19
25 20
18 21
54 22
64 23
86 24
67 25
19 26
48 27
79 28
49 29
4 30
34 31
99 32
94 33
74 34
32 35
88 36
33 37
13 38
68 39
14 40
36 41
78 42
72 43
52 44
23 45
8 46
16 47
40 48
2 49
35 50
24 51
44 52
28 53
66 54
63 55
39 56
1 57
73 58
53 59
21 60
6 61
97 62
45 63
51 64
55 65
17 66
37 67
84 68
58 69
75 70
50 71
10 72
43 73
61 74
83 75
60 76
85 77
27 78
89 79
57 80
90 81
41 82
91 83
81 84
30 85
71 86
46 87
76 88
22 89
87 90
92 91
20 92
69 93
29 94
96 95
77 96
100 97
5 98
11 99
70 100


テスト入力2
100
516111320 607515272
222610184 248356480
61883986 245487676
206662228 533989888
69129331 777444148
240199961 432234636
426231114 336813804
321022003 57262799
987178129 850725892
947102866 972781313
925126447 138391343
616274448 355808755
714725587 135574527
242294936 747031846
712001433 210877082
181182763 770306728
93942008 774494957
724829041 835108740
344285556 521741371
833231327 603241645
607948534 214246948
918457894 886239485
235309772 705607918
283022479 376033551
274016160 224876948
119317651 487762742
86470334 681700654
230829137 667556773
786823599 522783812
552745413 742568795
187877449 678955882
92450487 797581025
57997903 741784382
15453784 899476414
228873791 489714188
923423708 985237362
178220373 117577774
523186879 681227121
841286768 74441749
229826134 478391450
62710049 210080103
594857199 60772664
728567957 220290043
277000690 799270840
828251052 813032112
322627026 328640184
630777206 93015078
143835290 305081041
78963996 850741582
185710453 415807807
224069168 194535462
765198511 925540935
67423218 161316172
139362266 380170512
23387958 140419953
727968221 212850176
929329071 680065291
80699708 674702419
824108967 489282458
563350357 865651077
580350921 922504314
124656307 134201888
513360123 776145804
161691774 176062866
681917529 535777959
798798922 678858034
778992896 889103485
983935974 111383938
589373003 592835023
980332103 729109938
586355723 562793775
424189799 402925777
326355130 246164484
106061524 868992059
175266265 361785497
247489202 829929333
872172162 585678993
725362470 819053997
856167633 586840059
474710785 856608830
638675377 822416002
176847119 78399228
238118171 211620634
302761599 410660344
340827370 584914156
840925927 471614751
278196506 194743308
921788254 661004915
418241172 372234551
423524176 744703832
79167871 125578990
808014283 603127562
319194141 766981002
81534592 626533314
359147052 464468288
279768551 598170192
659558263 966172428
339372240 602852466
583878922 371264416
674367424 759010423

テスト出力2
321022003 57262799
594857199 60772664
841286768 74441749
176847119 78399228
630777206 93015078
983935974 111383938
178220373 117577774
79167871 125578990
124656307 134201888
714725587 135574527
925126447 138391343
23387958 140419953
67423218 161316172
161691774 176062866
224069168 194535462
278196506 194743308
62710049 210080103
712001433 210877082
238118171 211620634
727968221 212850176
607948534 214246948
728567957 220290043
274016160 224876948
61883986 245487676
326355130 246164484
222610184 248356480
143835290 305081041
322627026 328640184
426231114 336813804
616274448 355808755
175266265 361785497
583878922 371264416
418241172 372234551
283022479 376033551
139362266 380170512
424189799 402925777
302761599 410660344
185710453 415807807
240199961 432234636
359147052 464468288
840925927 471614751
229826134 478391450
119317651 487762742
824108967 489282458
228873791 489714188
344285556 521741371
786823599 522783812
206662228 533989888
681917529 535777959
586355723 562793775
340827370 584914156
872172162 585678993
856167633 586840059
589373003 592835023
279768551 598170192
339372240 602852466
808014283 603127562
833231327 603241645
516111320 607515272
81534592 626533314
921788254 661004915
230829137 667556773
80699708 674702419
798798922 678858034
187877449 678955882
929329071 680065291
523186879 681227121
86470334 681700654
235309772 705607918
980332103 729109938
57997903 741784382
552745413 742568795
423524176 744703832
242294936 747031846
674367424 759010423
319194141 766981002
181182763 770306728
93942008 774494957
513360123 776145804
69129331 777444148
92450487 797581025
277000690 799270840
828251052 813032112
725362470 819053997
638675377 822416002
247489202 829929333
724829041 835108740
987178129 850725892
78963996 850741582
474710785 856608830
563350357 865651077
106061524 868992059
918457894 886239485
778992896 889103485
15453784 899476414
580350921 922504314
765198511 925540935
659558263 966172428
947102866 972781313
923423708 985237362




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
pair int  int の配列を用意して  b i  a i となるように格納すれば sortするだけでbが小さい順に並べ替えることができます 
 include  bits stdc   h 
using namespace std 

int main    
  int N 
  cin    N 
  vector pair int  int   p N  
  for  int i   0  i   N  i     
    int a  b 
    cin    a    b 
    p at i    make pair b  a       b  a の順でペアにする
   

  sort p begin    p end    

  for  int i   0  i   N  i     
    int b  a 
    tie b  a    p at i       b  a の順であることに注意
    cout    a           b    endl"
1. 2.06,https://atcoder.jp/contests/APG4b/tasks/APG4b_cb,"問題文次のプログラムではf0 f5の6つの関数が定義されており main関数から呼び出されています 
それぞれの関数の計算量を見積もって 最も計算時間のかかる関数を呼び出している行をコメントアウトしてください 
制限時間は2秒です AtCoderのジャッジでは1秒あたり10 8回程度の計算が可能です 不正解だった場合TLEとなります 
制約を読み 各関数の実行時間を見積もりましょう 
プログラム
 include  bits stdc   h 
using namespace std 

int f0 int N   
  return 1 
 

int f1 int N  int M   
  int s   0 
  for  int i   0  i   N  i     
    s   
   
  for  int i   0  i   M  i     
    s   
   
  return s 
 

int f2 int N   
  int s   0 
  for  int i   0  i   N  i     
      int t   N 
      int cnt   0 
      while  t   0   
        cnt   
        t    2 
       
      s    cnt 
   
  return s 
 


int f3 int N   
  int s   0 
  for  int i   0  i   3  i     
    for  int j   0  j   3  j     
      s   
     
   
  return s 
 

int f4 int N   
  int s   0 
  for  int i   0  i   N  i     
    for  int j   0  j   N  j     
      s    i   j 
     
   
  return s 
 

int f5 int N  int M   
  int s   0 
  for  int i   0  i   N  i     
    for  int j   0  j   M  j     
      s    i   j 
     
   
  return s 
 

int main    
  int N  M 
  cin    N    M 

  int a0    1  a1    1  a2    1  a3    1  a4    1  a5    1 

     計算量が最も大きいもの1つだけコメントアウトする
  a0   f0 N  
  a1   f1 N  M  
  a2   f2 N  
  a3   f3 N  
  a4   f4 N  
  a5   f5 N  M  

  cout     f0       a0    endl 
  cout     f1       a1    endl 
  cout     f2       a2    endl 
  cout     f3       a3    endl 
  cout     f4       a4    endl 
  cout     f5       a5    endl 
 



制約
0  leq N  leq 10 6
0  leq M  leq 10 2



回答例答え方の例です 
この例ではf0の呼び出しをコメントアウトしていますが f0はO 1 なのでこの回答は不正解となります 
 include  bits stdc   h 
using namespace std 

int f0 int N   
  return 1 
 

int f1 int N  int M   
  int s   0 
  for  int i   0  i   N  i     
    s   
   
  for  int i   0  i   M  i     
    s   
   
  return s 
 

int f2 int N   
  int s   0 
  for  int i   0  i   N  i     
      int t   N 
      int cnt   0 
      while  t   0   
        cnt   
        t    2 
       
      s    cnt 
   
  return s 
 


int f3 int N   
  int s   0 
  for  int i   0  i   3  i     
    for  int j   0  j   3  j     
      s   
     
   
  return s 
 

int f4 int N   
  int s   0 
  for  int i   0  i   N  i     
    for  int j   0  j   N  j     
      s    i   j 
     
   
  return s 
 

int f5 int N  int M   
  int s   0 
  for  int i   0  i   N  i     
    for  int j   0  j   M  j     
      s    i   j 
     
   
  return s 
 

int main    
  int N  M 
  cin    N    M 

  int a0    1  a1    1  a2    1  a3    1  a4    1  a5    1 

     計算量が最も大きいもの1つだけコメントアウトする
     a0   f0 N  
  a1   f1 N  M  
  a2   f2 N  
  a3   f3 N  
  a4   f4 N  
  a5   f5 N  M  

  cout     f0       a0    endl 
  cout     f1       a1    endl 
  cout     f2       a2    endl 
  cout     f3       a3    endl 
  cout     f4       a4    endl 
  cout     f5       a5    endl 
 


ヒント
クリックでヒントを開く
それぞれの関数の計算量を示します 




計算量




f0
O 1 


f1
O N M 


f2
O N  log N 


f3
O 1 


f4
O N 2 


f5
O NM 



NとMの大きさを考えて実行時間が最も長いものを選びましょう 



テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
1000000 100

テスト出力1
f0  1
f1  1000100
f2  20000000
f3  9
f4   1
f5   1404227328




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int f0 int N   
  return 1 
 

int f1 int N  int M   
  int s   0 
  for  int i   0  i   N  i     
    s   
   
  for  int i   0  i   M  i     
    s   
   
  return s 
 

int f2 int N   
  int s   0 
  for  int i   0  i   N  i     
      int t   N 
      int cnt   0 
      while  t   0   
        cnt   
        t    2 
       
      s    cnt 
   
  return s 
 


int f3 int N   
  int s   0 
  for  int i   0  i   3  i     
    for  int j   0  j   3  j     
      s   
     
   
  return s 
 

int f4 int N   
  int s   0 
  for  int i   0  i   N  i     
    for  int j   0  j   N  j     
      s    i   j 
     
   
  return s 
 

int f5 int N  int M   
  int s   0 
  for  int i   0  i   N  i     
    for  int j   0  j   M  j     
      s    i   j 
     
   
  return s 
 

int main    
  int N  M 
  cin    N    M 

  int a0    1  a1    1  a2    1  a3    1  a4    1  a5    1 

     計算量が最も大きいもの1つだけコメントアウトする
  a0   f0 N  
  a1   f1 N  M  
  a2   f2 N  
  a3   f3 N  
     a4   f4 N  
  a5   f5 N  M  

  cout     f0       a0    endl 
  cout     f1       a1    endl 
  cout     f2       a2    endl 
  cout     f3       a3    endl 
  cout     f4       a4    endl 
  cout     f5       a5    endl"
0. 2.05,https://atcoder.jp/contests/APG4b/tasks/APG4b_cc,"問題文あなたはA社を経営する社長です 
A社はN個の組織からなり それぞれに0番からN   1番の番号が付いています 
0番の番号が付いた組織はトップの組織です 
組織間には親子関係があり 0番以外のN   1個の組織には必ず1つの親組織があります 
子組織は複数になることがあります 
また それぞれの組織は直接的または間接的にトップの組織と関係があるものとします 
あなたは全ての組織に報告書を提出するように求めました 
混雑を避けるために  各組織は子組織の報告書がそろったら 自身の報告書を加えて親組織に渡す ことを繰り返します 
子組織が無いような組織はすぐに親組織に報告書を渡します 
トップの組織は子組織の報告書がそろったら 自身の報告書を加えて社長に提出します 
それぞれの組織が1枚の報告書を提出します 
各組織について  その組織が親組織に提出することになる報告書の枚数 を出力するプログラムを作成してください 
ただしトップの組織については 社長に提出する報告書の枚数 を出力してください 

サンプルプログラム
 include  bits stdc   h 
using namespace std 

   x番の組織が親組織に提出する枚数を返す
   childrenは組織の関係を表す2次元配列 参照渡し 
int count report num vector vector int    children  int x   
      ここに追記して再帰関数を実装する 
 

   これ以降の行は変更しなくてよい

int main    
  int N 
  cin    N 

  vector int  p N       各組織の親組織を示す配列
  p at 0     1      0番組織の親組織は存在しないので 1を入れておく
  for  int i   1  i   N  i     
    cin    p at i  
   

     組織の関係から2次元配列を作る
  vector vector int   children N       ある組織の子組織の番号一覧
  for  int i   1  i   N  i     
    int parent   p at i       i番の親組織の番号
    children at parent  push back i       parentの子組織一覧にi番を追加
   

     各組織について 答えを出力
  for  int i   0  i   N  i     
    cout    count report num children  i     endl 
   
 

関数count report numの引数childrenは二次元配列で 
x番の組織の子組織の番号一覧の配列はchildren at x とすることで得ることができます 


制約
1  leq N  leq 50
0  leq p i   i  1  leq i  leq N   1 



入力入力は次の形式で標準入力から与えられます   
N
p 1 p 2 p 3  ldots p  N   1 

p iはi番の組織の親組織がp i番の組織であることを示します 
0番の組織はトップの組織であり 親組織が存在しないことに注意してください   

出力ans 0
ans 1
ans 2
 vdots
ans  N   1 

0番の組織から順に i番の組織についての答えans iを1行毎に出力してください 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例16
0 0 1 1 4


出力例16
4
1
1
2
1

組織の関係は次の図のようになります  子組織から親組織の向きに矢印が向いています  

番号の隣に書いてある青い数字が各組織についての答えです 

入力例28
0 0 1 2 0 3 6


出力例28
4
2
3
1
1
2
1

組織の関係は次の図のようになります  子組織から親組織の向きに矢印が向いています  

番号の隣に書いてある青い数字が各組織についての答えです 


ヒント
クリックでヒントを開く

 組織xが親組織へ提出する枚数   組織xの全ての子組織cについて cから受け取った報告書の枚数 の合計   1
 cから受け取った報告書の枚数   cが親組織に提出する枚数 
子組織が無いような組織について その組織が親組織に提出する報告書の枚数は1枚

次のようにすることでx番の組織の子組織についての処理が行えます 
for  int c   children at x    
      cについての処理 
 

この問題は2 05 再帰関数の例題に非常に近い問題となっているので そちらも参考にしてください 



テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
20
0 1 1 3 0 0 1 3 5 9 6 8 8 8 0 4 7 12 13

テスト出力1
20
13
1
9
2
3
2
2
6
2
1
1
2
2
1
1
1
1
1
1


テスト入力2
30
0 1 0 1 0 3 1 2 8 6 1 3 0 4 2 3 0 14 16 13 5 2 16 14 19 2 7 2 26

テスト出力2
30
16
8
8
4
2
2
2
2
1
1
1
1
2
3
1
4
1
1
2
1
1
1
1
1
1
2
1
1
1


テスト入力3
50
0 0 0 2 3 1 6 3 4 0 9 5 2 12 7 13 14 1 3 14 2 10 17 7 8 1 15 11 19 29 26 20 7 18 10 24 19 2 19 29 29 9 21 42 0 19 24 44 26

テスト出力3
50
14
13
18
7
7
8
7
2
6
3
2
6
2
5
2
1
2
2
8
2
2
1
1
3
1
3
1
1
4
1
1
1
1
1
1
1
1
1
1
1
1
3
1
2
1
1
1
1
1




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

   x番の組織が親組織に提出する枚数を返す
   childrenは組織の関係を表す2次元配列 参照渡し 
int count report num vector vector int    children  int x   
     ベースケース
  if  children at x  size      0   
       子組織から受け取ることは無いので1枚であることが確定している
    return 1 
   

     再帰ステップ
  int sum   0 
  for  int c   children at x    
    sum    count report num children  c  
   
  sum    1      x番の組織の報告書の枚数 1枚 を足す
  return sum 
 

   これ以降の行は変更しなくてよい

int main    
  int N 
  cin    N 

  vector int  p N       各組織の親組織を示す配列
  p at 0     1      0番組織の親組織は存在しないので 1を入れておく
  for  int i   1  i   N  i     
    cin    p at i  
   

     組織の関係から2次元配列を作る
  vector vector int   children N       ある組織の子組織の番号一覧
  for  int i   1  i   N  i     
    int parent   p at i       i番の親組織の番号
    children at parent  push back i       parentの子組織一覧にi番を追加
   

     各組織について 答えを出力
  for  int i   0  i   N  i     
    cout    count report num children  i     endl"
9. 2.04,https://atcoder.jp/contests/APG4b/tasks/APG4b_cd,"問題文小学校の先生であるあなたはA君に九九の表を埋める宿題を出しました 
次の日 A君は宿題をやってきましたが いくつかのマスは間違っているようです 
A君の宿題を採点するプログラムを作成してください 
具体的には 以下の要件を満たすプログラムを作成してください 

A君の回答の表 9 9の二次元配列 を入力として受け取る
誤った値が書き込まれたマスを正しい値に書き直す
正しい値が書き込まれたマスの個数を数える
誤った値が書き込まれたマスの個数を数える

 参照渡しの練習問題なので  プログラムの雛形 を書き換える形でプログラムを作成してください 

プログラムの雛形
以下のプログラム中のコメントに従って書き換えるようにしてください 
 include  bits stdc   h 
using namespace std 

   参照渡しを用いて 呼び出し側の変数の値を変更する
void saiten    呼び出し側に対応するように引数を書く      
     呼び出し側のAの各マスを正しい値に修正する
     Aのうち 正しい値の書かれたマスの個数を correct count に入れる
     Aのうち 誤った値の書かれたマスの個数を wrong count に入れる

     ここにプログラムを追記
 


                      
   ここから先は変更しない
                      
int main    
     A君の回答を受け取る
  vector vector int   A 9  vector int  9   
  for  int i   0  i   9  i     
    for  int j   0  j   9  j     
      cin    A at i  at j  
     
   

  int correct count   0     ここに正しい値のマスの個数を入れる
  int wrong count   0       ここに誤った値のマスの個数を入れる

     A  correct count  wrong countを参照渡し
  saiten A  correct count  wrong count  

     正しく修正した表を出力
  for  int i   0  i   9  i     
    for  int j   0  j   9  j     
      cout    A at i  at j  
      if  j   8  cout        
      else cout    endl 
     
   
     正しいマスの個数を出力
  cout    correct count    endl 
     誤っているマスの個数を出力
  cout    wrong count    endl 
 



制約
0  leq A  i j   leq 100



入力入力は次の形式で標準入力から与えられます   
A  1  1  A  1  2  A  1  3  A  1  4  A  1  5  A  1  6  A  1  7  A  1  8  A  1  9 
A  2  1  A  2  2  A  2  3  A  2  4  A  2  5  A  2  6  A  2  7  A  2  8  A  2  9 
A  3  1  A  3  2  A  3  3  A  3  4  A  3  5  A  3  6  A  3  7  A  3  8  A  3  9 
A  4  1  A  4  2  A  4  3  A  4  4  A  4  5  A  4  6  A  4  7  A  4  8  A  4  9 
A  5  1  A  5  2  A  5  3  A  5  4  A  5  5  A  5  6  A  5  7  A  5  8  A  5  9 
A  6  1  A  6  2  A  6  3  A  6  4  A  6  5  A  6  6  A  6  7  A  6  8  A  6  9 
A  7  1  A  7  2  A  7  3  A  7  4  A  7  5  A  7  6  A  7  7  A  7  8  A  7  9 
A  8  1  A  8  2  A  8  3  A  8  4  A  8  5  A  8  6  A  8  7  A  8  8  A  8  9 
A  9  1  A  9  2  A  9  3  A  9  4  A  9  5  A  9  6  A  9  7  A  9  8  A  9  9 

A  i  j はi  times jの答えとしてA君が書き込んだ値です 

出力A   1  1  A   1  2  A   1  3  A   1  4  A   1  5  A   1  6  A   1  7  A   1  8  A   1  9 
A   2  1  A   2  2  A   2  3  A   2  4  A   2  5  A   2  6  A   2  7  A   2  8  A   2  9 
A   3  1  A   3  2  A   3  3  A   3  4  A   3  5  A   3  6  A   3  7  A   3  8  A   3  9 
A   4  1  A   4  2  A   4  3  A   4  4  A   4  5  A   4  6  A   4  7  A   4  8  A   4  9 
A   5  1  A   5  2  A   5  3  A   5  4  A   5  5  A   5  6  A   5  7  A   5  8  A   5  9 
A   6  1  A   6  2  A   6  3  A   6  4  A   6  5  A   6  6  A   6  7  A   6  8  A   6  9 
A   7  1  A   7  2  A   7  3  A   7  4  A   7  5  A   7  6  A   7  7  A   7  8  A   7  9 
A   8  1  A   8  2  A   8  3  A   8  4  A   8  5  A   8  6  A   8  7  A   8  8  A   8  9 
A   9  1  A   9  2  A   9  3  A   9  4  A   9  5  A   9  6  A   9  7  A   9  8  A   9  9 
correct  count
wrong  count

A は入力のAの各マスを正しい値に修正したものです 
correct  countは正しい値が書き込まれていたマスの個数 wrong  countは誤った値が書き込まれていたマスの個数です 
なお A の出力について 各行の末尾に空白を入れないことに注意してください 
プログラムの雛形の出力部分を変更しなければ問題ありません 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例11 2 3 4 5 6 7 8 9
2 4 100 8 10 12 14 16 18
3 6 9 12 15 18 21 24 27
4 8 12 16 20 24 28 32 36
5 10 15 20 25 30 35 40 45
6 12 18 24 30 36 42 48 54
7 14 21 28 35 42 49 56 63
8 16 24 32 40 48 56 64 72
9 18 27 36 45 54 63 72 81


出力例11 2 3 4 5 6 7 8 9
2 4 6 8 10 12 14 16 18
3 6 9 12 15 18 21 24 27
4 8 12 16 20 24 28 32 36
5 10 15 20 25 30 35 40 45
6 12 18 24 30 36 42 48 54
7 14 21 28 35 42 49 56 63
8 16 24 32 40 48 56 64 72
9 18 27 36 45 54 63 72 81
80
1

A君はA  2  3    100と書き込みましたが 2  times 3   6なので正しくはA  2 3    6です 
それ以外のマスは正しいので correct  count   80  wrong  count   1となります 

入力例21 2 3 4 5 6 7 8 9
2 4 6 8 10 37 14 79 18
3 6 9 12 15 18 21 24 39
4 8 12 16 20 24 28 32 36
5 10 15 20 25 30 35 40 41
6 67 18 24 50 36 42 10 9
7 14 21 28 35 42 49 56 63
8 16 24 32 40 48 56 64 14
9 18 27 36 45 54 63 72 81


出力例21 2 3 4 5 6 7 8 9
2 4 6 8 10 12 14 16 18
3 6 9 12 15 18 21 24 27
4 8 12 16 20 24 28 32 36
5 10 15 20 25 30 35 40 45
6 12 18 24 30 36 42 48 54
7 14 21 28 35 42 49 56 63
8 16 24 32 40 48 56 64 72
9 18 27 36 45 54 63 72 81
72
9



ヒント
クリックでヒントを開く
関数の内部から呼び出した側の変数を変更するには 引数を参照にします 
関数の引数を参照にする例を次に示します 
 include  bits stdc   h 
using namespace std 

void f int  i  string  s   
  i   123 
  s    hello  
 
int main    
  int x 
  string y 
  f x  y       x   123  y    hello となる
  cout    x    endl       123 
  cout    y    endl       hello 
 




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
1 2 3 4 5 6 7 8 9
2 4 6 8 10 12 14 16 18
3 6 9 12 15 18 21 24 27
4 8 12 16 20 24 28 32 36
5 10 15 20 25 30 35 40 45
6 12 18 24 30 36 42 48 54
7 14 21 28 35 42 49 56 63
8 16 24 32 40 48 56 64 72
9 18 27 36 45 54 63 72 81

テスト出力1
1 2 3 4 5 6 7 8 9
2 4 6 8 10 12 14 16 18
3 6 9 12 15 18 21 24 27
4 8 12 16 20 24 28 32 36
5 10 15 20 25 30 35 40 45
6 12 18 24 30 36 42 48 54
7 14 21 28 35 42 49 56 63
8 16 24 32 40 48 56 64 72
9 18 27 36 45 54 63 72 81
81
0


テスト入力2
1 2 3 4 5 6 7 8 9
2 4 29 8 10 12 14 16 18
3 24 9 12 15 18 21 96 27
4 8 12 16 20 24 28 32 36
5 10 15 20 25 30 35 40 45
6 12 18 24 30 36 42 48 54
7 14 21 28 35 42 49 56 63
83 16 24 32 40 48 12 15 72
9 18 27 36 45 54 63 72 81

テスト出力2
1 2 3 4 5 6 7 8 9
2 4 6 8 10 12 14 16 18
3 6 9 12 15 18 21 24 27
4 8 12 16 20 24 28 32 36
5 10 15 20 25 30 35 40 45
6 12 18 24 30 36 42 48 54
7 14 21 28 35 42 49 56 63
8 16 24 32 40 48 56 64 72
9 18 27 36 45 54 63 72 81
75
6


テスト入力3
1 31 3 4 5 6 7 8 9
2 4 27 8 10 62 14 16 18
83 6 1 27 33 18 91 24 27
4 8 38 16 20 38 31 32 36
5 10 15 35 25 30 35 56 45
6 60 49 67 11 36 6 48 54
7 14 21 28 35 63 49 16 63
8 10 24 90 40 48 70 40 20
34 91 27 36 45 54 63 52 81

テスト出力3
1 2 3 4 5 6 7 8 9
2 4 6 8 10 12 14 16 18
3 6 9 12 15 18 21 24 27
4 8 12 16 20 24 28 32 36
5 10 15 20 25 30 35 40 45
6 12 18 24 30 36 42 48 54
7 14 21 28 35 42 49 56 63
8 16 24 32 40 48 56 64 72
9 18 27 36 45 54 63 72 81
53
28




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

   参照渡しを用いて 呼び出し側の変数の値を変更する
void saiten vector vector int    A  int  correct count  int  wrong count   
     呼び出し側のAの各マスを正しい値に修正する
     Aのうち 正しい値の書かれたマスの個数を correct count に入れる
     Aのうち 誤った値の書かれたマスの個数を wrong count に入れる

  for  int i   0  i   9  i     
    for  int j   0  j   9  j     
      if  A at i  at j      i   1     j   1    
           誤った値が書き込まれている場合
        A at i  at j     i   1     j   1       正しい値に修正
        wrong count        誤っているマスの個数を  1
       
      else  
           正しい値が書き込まれている場合
        correct count        正しいマスの個数を  1
       
     
   
 


                      
   ここから先は変更しない
                      
int main    
     A君の回答を受け取る
  vector vector int   A 9  vector int  9   
  for  int i   0  i   9  i     
    for  int j   0  j   9  j     
      cin    A at i  at j  
     
   

  int correct count   0     ここに正しい値のマスの個数を入れる
  int wrong count   0       ここに誤った値のマスの個数を入れる

     A  correct count  wrong countを参照渡し
  saiten A  correct count  wrong count  

     正しく修正した表を出力
  for  int i   0  i   9  i     
    for  int j   0  j   9  j     
      cout    A at i  at j  
      if  j   8  cout        
      else cout    endl 
     
   
     正しいマスの個数を出力
  cout    correct count    endl 
     誤っているマスの個数を出力
  cout    wrong count    endl"
8. 2.03,https://atcoder.jp/contests/APG4b/tasks/APG4b_ce,"問題文あるゲーム大会にはN人が参加しM試合が行われました 各参加者には1からNの番号が割り当てられています   

試合に関する情報が与えられるので M回の試合がすべて終了した時点での試合結果の表を作成し 出力してください 
ただし 同じ参加者のペアについて2回以上試合が行われることはないとします 

試合に関する情報は以下のような形式で与えられます 
試合に関する情報
試合1で勝った人の番号A 1 試合1で負けた人の番号B 1
試合2で勝った人の番号A 2 試合2で負けた人の番号B 2
 vdots  vdots
試合Mで勝った人の番号A M 試合Mで負けた人の番号B M

同じ参加者のペアについて2回以上試合が行われることはありません 
例えば 次のような情報が与えられることはありません 
1 2
2 1


試合結果の表とは 縦N行 横N列からなる次のような表Rです 
試合結果の表
R  1  1  R  1  2  R  1  3   cdots R  1  N 
R  2  1  R  2  2  R  2  3   cdots R  2  N 
R  3  1  R  3  2  R  3  3   cdots R  3  N 
 vdots   vdots   vdots   vdots   ddots   vdots
R  N  1  R  N  2  R  N  3   cdots R  N  N 

R  i  j の値は以下のように決まります 
i番の参加者とj番の参加者が試合をして 

i番の参加者が勝ったならR  i  j    o
i番の負けたならR  i  j    x

i番の人とj番の人が試合を行っていない場合

R  i  j     


以下に具体例を示します 
具体例

3人が参加した
2試合行われた
試合に関する情報は次の通り

1 2
3 1

この場合の試合結果の表は次のようになります 
  o x
x    
o    


1番の人と2番の人が試合を行い 1番の人が勝ったので R  1  2    o R  2  1    x
3番の人と1番の人が試合を行い 3番の人が勝ったので R  1  3    x R  3  1    o

ただし 各行の行末に空白を含まないことに注意してください 

サンプルプログラム
 include  bits stdc   h 
using namespace std 

int main    
  int N  M 
  cin    N    M 
  vector int  A M   B M  
  for  int i   0  i   M  i     
    cin    A at i     B at i  
   

     ここにプログラムを追記
      ここで 試合結果の表 の2次元配列を宣言 
 

行末に空白を含めない出力の仕方
以下は配列の要素を空白区切りで出力し末尾には空白を含めないようにする方法の1例です 
vector int  a    1  2  3  4  5  
for  int i   0  i   5  i     
  cout    a at i  
  if  i    4   
    cout    endl     末尾なら改行
   
  else  
    cout             それ以外なら空白
   
 



制約
1 N 100
0 M 4950
1 A i  B i N  1   i   M 
A i  neq B i  1   i   M 
同じ参加者のペアで2回以上試合が行われることはない
入力はすべて整数



入力入力は次の形式で標準入力から与えられます   
N M
A 1 B 1
A 2 B 2
A 3 B 3
   
A M B M


出力M試合が終了した時点での試合結果の表を出力してください 
ただし 各行の行末に空白を含まないことに注意してください 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例13 2
1 2
3 1


出力例1  o x
x    
o    


1番の人と2番の人が試合を行い 1番の人が勝ったので R  1  2    o R  2  1    x
3番の人と1番の人が試合を行い 3番の人が勝ったので R  1  3    x R  3  1    o


入力例27 12
1 5
5 4
6 2
1 7
2 4
6 3
1 3
6 4
3 7
5 7
4 3
6 1


出力例2    o   o x o
      o   x  
x     x   x o
  x o   x x  
x     o     o
o o o o      
x   x   x    


入力例31 0


出力例3 



ヒント
クリックでヒントを開く
まずは 試合結果の表をプログラムで管理するために N Nの2次元配列を用意しましょう 
この2次元配列の型は 表の要素となる   o  xの型なので char型にすれば良いです 
縦a行 横b列の2次元配列の宣言方法は次の通りでした 
vector vector 要素の型   変数名 a  vector 要素の型  b   




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
4 6
1 2
1 3
1 4
2 3
2 4
3 4

テスト出力1
  o o o
x   o o
x x   o
x x x  


テスト入力2
20 56
14 18
8 19
18 20
5 15
17 3
12 15
7 3
14 12
18 17
2 12
4 12
17 5
11 10
14 13
8 5
8 1
16 13
17 7
16 18
20 8
10 7
9 20
17 11
8 2
6 4
9 19
13 3
7 15
13 9
4 2
18 7
20 2
17 2
8 18
5 16
1 12
6 1
11 2
9 6
11 15
17 19
18 6
8 17
15 10
10 6
1 18
15 19
9 7
2 14
4 19
20 11
16 12
5 2
16 9
13 2
12 20

テスト出力2
          x   x       o           o    
      x x     x     x o x o     x     x
            x           x       x      
  o       x           o             o  
  o           x             o o x      
o     o         x x               x    
    o           x x         o   x x    
o o     o                       o o o x
          o o           x     x     o o
          o o       x       x          
  o               o         o   x     x
x x   x                   x o x       o
  o o           o         x   x        
  x                   o o         o    
        x   x     o x x             o  
        x       o     o o         o    
  o o   o   o x     o             x o  
x         o o x           x   x o     o
      x       x x           x   x      
  o           o x   o x           x    


テスト入力3
データが大きすぎるため省略



解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  int N  M 
  cin    N    M 
  vector int  A M   B M  
  for  int i   0  i   M  i     
    cin    A at i     B at i  
   

     N Nのchar型の2次元配列のすべての要素を   で初期化
  vector vector char   table N  vector char  N        

  for  int i   0  i   M  i     
       1 N   0 N 1 に変換
    A at i     B at i    
    table at A at i   at B at i      o       AはBに勝った
    table at B at i   at A at i      x       BはAに負けた
   

  for  int i   0  i   N  i     
    for  int j   0  j   N  j     
      cout    table at i  at j  
      if  j    N   1   
        cout    endl      行末なら改行
       
      else  
        cout             行末でないなら空白を出力"
7. 2.02,https://atcoder.jp/contests/APG4b/tasks/APG4b_cf,"問題文ある果物屋では リンゴ パイナップルがそれぞれN個売られています i個目のリンゴ パイナップルはそれぞれA i円 P i円です   
リンゴ パイナップルをそれぞれ1つずつ選んで購入しようとするとき 合計金額が丁度S円になるような買い方が何通りあるか求めてください   
ただし 同じ値段の同じ種類の商品でも区別します たとえば同じ値段のリンゴが複数あった場合 それらを買う場合は別の買い方として数えます パイナップルについても同様です また リンゴ パイナップルを買う順番は考慮しないものとします   
 include  bits stdc   h 
using namespace std 

int main    
  int N  S 
  cin    N    S 
  vector int  A N   P N  
  for  int i   0  i   N  i     
    cin    A at i  
   
  for  int i   0  i   N  i     
    cin    P at i  
   

     リンゴ パイナップルをそれぞれ1つずつ購入するとき合計S円になるような買い方が何通りあるか
     ここにプログラムを追記
 



制約
0 N 100
0 S 1000
1 A i  P i 500  1   i   N 
A i  P i  1   i   N は整数



入力入力は次の形式で標準入力から与えられます   
N S
A 1 A 2  cdots A N
P 1 P 2  cdots P N


出力リンゴ パイナップルをそれぞれ1つずつ購入しようとするとき 合計金額が丁度S円になるような
買い方が何通りあるかを出力してください 
出力の最後には改行が必要です 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例13 400
100 100 130
270 300 250


出力例13

合計が400円になる買い方は以下の3通りです 
1つ目のリンゴ 2つ目のパイナップルを購入すると 100円   300円   400円となります 
2つ目のリンゴ 2つ目のパイナップルを購入すると 100円   300円   400円となります 
3つ目のリンゴ 1つ目のパイナップルを購入すると 130円   270円   400円となります 
1つ目のリンゴと2つ目のリンゴがどちらも100円ですが 別の買い方として数えることに注意してください 

入力例210 600
70 110 90 120 90 20 260 150 220 150
170 100 250 350 60 280 450 460 20 220


出力例22


入力例33 200
100 100 100
100 100 100


出力例39


入力例41 0
100
200


出力例40

合計0円で買うことはできません 


ヒント
ループを使わないで書く
パターンを見つける
ループで書き直す

に沿って書く場合の流れをヒントで説明します 
まずは自分で考えてみて 詰まったら見てみましょう 

ヒント1  ループを使わないで書く 

クリックでヒントを見る
合計がS円になるような買い方が何通りあるかを求めるので 
すべての組み合わせをif文で確認できれば答えが求まるはずです 
一般のNでは考えにくいので 試してみるときはNを小さい値で仮定してみるとよいです 
N   3のケースを全て書き出してみます  添え字として0始まりの値を使っている点に注意してください  
  int ans   0 

  if  A at 0    P at 0     S   
    ans   
   
  if  A at 0    P at 1     S   
    ans   
   
  if  A at 0    P at 2     S   
    ans   
   

  if  A at 1    P at 0     S   
    ans   
   
  if  A at 1    P at 1     S   
    ans   
   
  if  A at 1    P at 2     S   
    ans   
   

  if  A at 2    P at 0     S   
    ans   
   
  if  A at 2    P at 1     S   
    ans   
   
  if  A at 2    P at 2     S   
    ans   
   

添え字の変化に着目するとパターン化できそうです 


ヒント2  パターンを見つける 

クリックでヒントを見る
変数i  jを導入してi番目のリンゴ j番目のパイナップルを買う場合を考えます 
条件式は次のようになります 
if  A at i    P at j     S   
  ans   
 

あとはi  jを網羅的に動かして上の文を実行できればよいです 


ヒント3  ループで書き直す 

クリックでヒントを見る
変数i  jを導入してi番目のリンゴ j番目のパイナップルを買う場合の判定文は次のようになります 
if  A at i    P at j     S   
  ans   
 

i  jはそれぞれ別々に0からN   1までの値を取ります 
このように変数 ここではi  j の組み合わせを列挙したい場合は 多重ループを用います 
今回の場合は変数がi  jの2つなので 次のような二重ループになります 
  for  int i   0  i   N  i     
    for  int j   0  j   N  j     
         i  jを使う
     
   




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
10 520
430 310 230 390 130 220 70 370 400 160
390 120 450 30 250 140 200 300 270 30

テスト出力1
4


テスト入力2
100 500
247 365 116 339 302 274 383 230 444 136 12 100 92 498 16 190 252 438 404 493 46 105 197 254 180 455 233 280 289 286 301 205 200 477 273 481 494 287 202 211 327 359 341 4 51 336 101 416 142 35 401 457 61 179 33 362 180 176 60 247 500 44 279 372 424 439 224 99 379 322 110 159 383 143 164 435 6 461 61 391 38 225 163 273 222 156 33 300 42 228 164 22 244 66 28 208 243 36 417 93
62 231 388 7 434 37 474 357 262 182 36 298 426 331 252 129 113 156 111 441 375 210 492 499 302 287 493 170 262 233 475 406 72 401 468 156 220 0 410 12 223 150 240 159 345 239 455 404 419 19 46 174 499 218 423 145 196 307 401 260 470 424 171 284 437 44 500 316 156 192 422 391 365 485 145 22 410 124 110 182 28 143 203 289 95 85 415 401 191 268 262 341 391 130 364 274 379 443 53 389

テスト出力2
15


テスト入力3
100 1000
500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500
500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500

テスト出力3
10000




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
解答例1
 include  bits stdc   h 
using namespace std 

int main    
  int N  S 
  cin    N    S 
  vector int  A N   P N  
  for  int i   0  i   N  i     
    cin    A at i  
   
  for  int i   0  i   N  i     
    cin    P at i  
   

     リンゴ パイナップルをそれぞれ1つずつ購入するとき合計S円になるような買い方が何通りあるか
  int ans   0      買い方が何通りあるか

     実際に全ての買い方を試してみて 合計がS円ならカウントアップ
  for  int i   0  i   N  i     
    for  int j   0  j   N  j     
      if  A at i    P at j     S   
        ans   
       
     
   

  cout    ans    endl 
 

解答例2  範囲for文を用いた解法 
 include  bits stdc   h 
using namespace std 

int main    
  int N  S 
  cin    N    S 
  vector int  A N   P N  
  for  int i   0  i   N  i     
    cin    A at i  
   
  for  int i   0  i   N  i     
    cin    P at i  
   

     リンゴ パイナップルをそれぞれ1つずつ購入するとき合計S円になるような買い方が何通りあるか
  int ans   0      買い方が何通りあるか

     実際に全ての買い方を試してみて 合計がS円ならカウントアップ
  for  int x   A   
    for  int y   P   
      if  x   y    S   
        ans   
       
     
   

  cout    ans    endl"
6. 2.01,https://atcoder.jp/contests/APG4b/tasks/APG4b_cg,"問題文5つの要素からなる配列が与えられます 
同じ値の要素が隣り合っているような箇所が存在するかどうかを判定してください 
存在するなら YES を 存在しなければ NO を出力してください 
この問題も以下の手順で解いてみましょう 

ループを使わないで書く
パターンを見つける
ループで書き直す

 include  bits stdc   h 
using namespace std 

int main    
  vector int  data 5  
  for  int i   0  i   5  i     
    cin    data at i  
   

     dataの中で隣り合う等しい要素が存在するなら YES を出力し そうでなければ NO を出力する
     ここにプログラムを追記
 



制約
0 A i 100  1   i   5 
A i  1   i   5 は整数



入力入力は次の形式で標準入力から与えられます   
A 1 A 2 A 3 A 4 A 5


出力配列の隣り合う要素のうち 値が等しいものが存在するなら YES を 存在しなければ NO を出力してください   
出力の最後には改行が必要です 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例15 3 3 1 4


出力例1YES


入力例21 1 2 3 4


出力例2YES


入力例31 2 1 2 1


出力例3NO


入力例4100 100 100 100 100


出力例4YES



ヒント
ループを使わないで書く
パターンを見つける
ループで書き直す

に沿って書く場合の流れをヒントで説明します 
まずは自分で考えてみて 詰まったら見てみましょう 

ヒント1  ループを使わないで書く 

クリックでヒントプログラムを見る
隣合っている等しい要素があるかを順番に確認します 
 include  bits stdc   h 
using namespace std 

int main    
  vector int  data 5  
  for  int i   0  i   5  i     
    cin    data at i  
   

     dataの中で隣り合う等しい要素が存在するなら YES を出力し そうでなければ NO を出力する
  if  data at 0     data at 1     data at 1     data at 2     data at 2     data at 3     data at 3     data at 4    
    cout     YES     endl 
   
  else  
    cout     NO     endl 
   
 



ヒント2  パターンを見つける 

クリックでヒントを見る
繰り返しのパターンを見つけます 
ヒント1のヒントプログラムでは11行目のif文の中身が同じパターンの繰り返しになっています 
if  data at 0     data at 1     data at 1     data at 2     data at 2     data at 3     data at 3     data at 4    
  cout     YES     endl 
 
else  
  cout     NO     endl 
 

このままだと直接for文に書き換えにくいので  または の条件を複数のif文に分解します 
また 答えがYESなのかNOなのかをbool型の変数に入れるようにします 次のプログラムではYESならtrue NOならfalseとしています 
  bool ans   false      始めはfalseにしておき 条件を満たすときにtrueになるようにする

  if  data at 0     data at 1    
    ans   true 
   
  if  data at 1     data at 2    
    ans   true 
   
  if  data at 2     data at 3    
    ans   true 
   
  if  data at 3     data at 4    
    ans   true 
   

  if  ans   
    cout     YES     endl 
   
  else  
    cout     NO     endl 
   

次のパターンが繰り返し存在していることが分かります 
  if  data at k     data at k 1    
    ans   true 
   



ヒント3  ループで書き直す 

クリックでヒントプログラムを見る
 include  bits stdc   h 
using namespace std 

int main    
  vector int  data 5  
  for  int i   0  i   5  i     
    cin    data at i  
   

     dataの中で隣り合う等しい要素が存在するなら YES を出力し そうでなければ NO を出力する
  bool ans   false      始めはfalseにしておき 条件を満たすときにtrueになるようにする

  for  int i   0  i      ここを変える     i     
    if  data at i     data at i   1    
         ここを変える   
     
   

  if  ans   
    cout     YES     endl 
   
  else  
    cout     NO     endl 
   
 




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
0 1 2 3 3

テスト出力1
YES


テスト入力2
0 1 100 100 4

テスト出力2
YES


テスト入力3
40 30 66 44 65

テスト出力3
NO




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  vector int  data 5  
  for  int i   0  i   5  i     
    cin    data at i  
   

     dataの中で隣り合う等しい要素が存在するなら YES を出力し そうでなければ NO を出力する
  bool ans   false      始めはfalseにしておき 条件を満たすときにtrueになるようにする

  for  int i   0  i   4  i     
    if  data at i     data at i   1    
      ans   true 
     
   

  if  ans   
    cout     YES     endl 
   
  else  
    cout     NO     endl"
5. 1.15,https://atcoder.jp/contests/APG4b/tasks/APG4b_ch,"問題文三人兄弟のA君とB君とC君は お父さんに1つのプレゼントを貰うことになりました 
貰えるプレゼントの予算は テストの合計点の積 で決まります   
三人兄弟はそれぞれN個のテストを受けました 
A君とB君とC君の i番目のテストの点数 をそれぞれA i  B i  C iで表すと プレゼントの予算は次の式で求まります 
プレゼントの予算    A 1   A 2    cdots   A N   times  B 1   B 2    cdots   B N   times  C 1   C 2    cdots   C N 
例えば 2個のテスト受けた結果 A君は5点と7点 B君は4点と10点 C君は9点と2点だったとします 
この場合  5   7   times  4   10   times  9   2    12  times 14  times 11   1848から プレゼントの予算は1848円になります 
A君はこの計算を行うプログラムを途中まで書きました 
A君が書いたプログラムに追記し プログラムを完成させてください  
ページ末尾に問題のヒントがあります 詰まったら見てみましょう 

A君が書いたプログラム
 include  bits stdc   h 
using namespace std 

   1人のテストの点数を表す配列から合計点を計算して返す関数
   引数 scores  scores at i にi番目のテストの点数が入っている
   返り値  1人のテストの合計点
int sum vector int  scores   
     ここにプログラムを追記
 

   3人の合計点からプレゼントの予算を計算して出力する関数
   引数 sum a  A君のテストの合計点
   引数 sum b  B君のテストの合計点
   引数 sum c  C君のテストの合計点
   返り値  なし
void output int sum a  int sum b  int sum c   
     ここにプログラムを追記
 

                      
   ここから先は変更しない
                      

   N個の入力を受け取って配列に入れて返す関数
   引数 N  入力を受け取る個数
   返り値  受け取ったN個の入力の配列
vector int  input int N   
  vector int  vec N  
  for  int i   0  i   N  i     
    cin    vec at i  
   
  return vec 
 

int main    
     科目の数Nを受け取る
  int N 
  cin    N 

     それぞれのテストの点数を受け取る
  vector int  A   input N  
  vector int  B   input N  
  vector int  C   input N  

     それぞれの合計点を計算
  int sum A   sum A  
  int sum B   sum B  
  int sum C   sum C  

     プレゼントの予算を出力
  output sum A  sum B  sum C  
 



制約
1 N 10
0 A i  B i  C i 100
N  A i  B i  C iは整数



入力入力は次の形式で標準入力から与えられます   
N
A 1 A 2  cdots A N
B 1 B 2  cdots B N
C 1 C 2  cdots C N


出力プレゼントの予算を出力してください   
出力の最後には改行が必要です 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例12
5 7
4 10
9 2


出力例11848

問題文で説明したケースです   


入力例23
100 100 100
100 100 100
100 100 100


出力例227000000

300  times 300  times 300   27000000なので 三人兄弟は27000000円分のプレゼントを貰えることになりました   


入力例35
95 20 74 81 10
100 50 32 84 31
0 0 0 0 0


出力例30

C君の合計点が0点だったので プレゼントの予算も0円になります   


入力例42
10 0
0 5
1 1


出力例4100



ヒント1
クリックでヒントを見る
今回の問題は今までの問題とは少し異なり 用意されたプログラムの動作を理解し 意図を読み取る必要があります 
プログラムがどのような順番で実行されていくかに注意して A君が書いたプログラムを読んでみましょう   


ヒント2この問題は A君が書いたプログラムに追記して完成させる という問題ですが ヒントとして関数を使わずにこの問題と同じ処理をするプログラムを示します このプログラムを参考にしてA君のsum関数とoutput関数を完成させてください 

クリックでヒントプログラムを見る
 include  bits stdc   h 
using namespace std 

int main    
     科目の数Nを受け取る
  int N 
  cin    N 


     それぞれのテストの点数を受け取る

     N要素の配列A B Cを宣言
  vector int  A N   B N   C N  

     N個の入力をそれぞれ受け取る
  for  int i   0  i   N  i     
    cin    A at i  
   
  for  int i   0  i   N  i     
    cin    B at i  
   
  for  int i   0  i   N  i     
    cin    C at i  
   


     プレゼントの予算を出力

     テストの点数を表す配列から合計点を計算
  int sum a   0 
  for  int i   0  i   A size    i     
    sum a    A at i  
   
  int sum b   0 
  for  int i   0  i   B size    i     
    sum b    B at i  
   
  int sum c   0 
  for  int i   0  i   C size    i     
    sum c    C at i  
   

     3人の合計点からプレゼントの予算を計算して出力する
  cout    sum a   sum b   sum c    endl 
 



ヒント3output関数の部分のみ答えを示します これを参考にsum関数を完成させてください   

クリックでヒントプログラムを見る
 include  bits stdc   h 
using namespace std 

   1人のテストの点数を表す配列から合計点を計算して返す関数
   引数 scores  scores at i にi番目のテストの点数が入っている
   返り値  1人のテストの合計点
int sum vector int  scores   
     ここにプログラムを追記
 

   3人の合計点からプレゼントの予算を計算して出力する関数
   引数 sum a  A君のテストの合計点
   引数 sum b  B君のテストの合計点
   引数 sum c  C君のテストの合計点
   返り値  なし
void output int sum a  int sum b  int sum c   
  cout    sum a   sum b   sum c    endl 
 

                      
   ここから先は変更しない
                      

   N個の入力を受け取って配列に入れて返す関数
   引数 N  入力を受け取る個数
   返り値  受け取ったN個の入力の配列
vector int  input int N   
  vector int  vec N  
  for  int i   0  i   N  i     
    cin    vec at i  
   
  return vec 
 

int main    
     科目の数Nを受け取る
  int N 
  cin    N 

     それぞれのテストの点数を受け取る
  vector int  A   input N  
  vector int  B   input N  
  vector int  C   input N  

     それぞれの合計点を計算
  int sum A   sum A  
  int sum B   sum B  
  int sum C   sum C  

     プレゼントの予算を出力
  output sum A  sum B  sum C  
 





テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
10
2 8 3 1 10 8 32 15 9 100
5 1 2 0 3 2 1 10 43 20
0 100 7 10 0 82 19 0 90 51

テスト出力1
5871804




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

   1人のテストの点数を表す配列から合計点を計算して返す関数
   引数 scores  scores at i にi番目のテストの点数が入っている
   返り値  1人のテストの合計点
int sum vector int  scores   
  int s   0 
  for  int i   0  i   scores size    i     
    s    scores at i  
   
  return s 
 

   3人の合計点からプレゼントの予算を計算して出力する関数
   引数 sum a  A君のテストの合計点
   引数 sum b  B君のテストの合計点
   引数 sum c  C君のテストの合計点
   返り値  なし
void output int sum a  int sum b  int sum c   
  cout    sum a   sum b   sum c    endl 
 

                      
   ここから先は変更しない
                      

   N個の入力を受け取って配列に入れて返す関数
   引数 N  入力を受け取る個数
   返り値  受け取ったN個の入力の配列
vector int  input int N   
  vector int  vec N  
  for  int i   0  i   N  i     
    cin    vec at i  
   
  return vec 
 

int main    
     科目の数Nを受け取る
  int N 
  cin    N 

     それぞれのテストの点数を受け取る
  vector int  A   input N  
  vector int  B   input N  
  vector int  C   input N  

     それぞれの合計点を計算
  int sum A   sum A  
  int sum B   sum B  
  int sum C   sum C  

     プレゼントの予算を出力
  output sum A  sum B  sum C"
4. 1.14,https://atcoder.jp/contests/APG4b/tasks/APG4b_ci,"問題文三人兄弟のA君とB君とC君が背くらべをしています 
三人の身長が与えられるので 最も大きい人と最も小さい人の身長差を出力してください 
例えば A君の身長が160 B君の身長が154 C君の身長が152であるとします 
このとき最も大きいのはA君で 最も小さいのはC君なので 出力は8になります   

この問題はSTLの関数を使わなくても解けますが STLの関数を使うと簡潔にプログラムを記述できます   


サンプルプログラム
 include  bits stdc   h 
using namespace std 

int main    
  int A  B  C 
  cin    A    B    C 
 



制約
1 A  B  C 200
A  B  Cは整数



入力入力は次の形式で標準入力から与えられます   
A B C


出力最もが大きい人と最も小さい人の身長差を出力してください   
出力の最後には改行が必要です 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例1160 154 152


出力例18

問題文で説明したケースです   


入力例2200 200 200


出力例20

三人に身長差は無いので0と出力します   


入力例3145 1 170


出力例3169



入力例4150 190 160


出力例440



テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
150 130 140

テスト出力1
20


テスト入力2
160 180 130

テスト出力2
50


テスト入力3
100 105 190

テスト出力3
90


テスト入力4
100 100 5

テスト出力4
95


テスト入力5
130 180 180

テスト出力5
50




解答例必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  int a  b  c 
  cin    a    b    c 

  int maximum   max max a  b   c      最大値を計算
  int minimum   min min a  b   c      最小値を計算

  cout    maximum   minimum    endl"
3. 1.13,https://atcoder.jp/contests/APG4b/tasks/APG4b_cj,"問題文N人のテストの点数が与えられます 
それぞれの人の点数が平均点から何点離れているか計算してください   
平均点は次の式で求められます i番目の人の点数はA iで表します   
平均点    frac A 1   A 2    cdots   A N  N  
平均点が整数にならない場合 小数点以下を切り捨てた数値を平均点とします   
例えば3人のテストの点数が 2点 1点 4点 だったとき  frac 2   1   4  3    2 333  cdotsなので 平均点は小数点以下を切り捨てて2点になります 
そして 平均点から何点離れているかを計算した結果である 0点 1点 2点 が答えになります 
 0点  1点 2点 でも 0点 1点  2点 でも無いことに注意してください   
ページ末尾に問題のヒントがあります 詰まったら見てみましょう 

サンプルプログラム
 include  bits stdc   h 
using namespace std 

int main    
  int N 
  cin    N 
 



制約
1 N 1000
0 A i 100 
N  A iは整数



入力入力は次の形式で標準入力から与えられます   
N
A 1 A 2  cdots A N


出力それぞれの人の点数が平均点から何点離れているかを1行ずつ出力してください   
1人目の計算結果
2人目の計算結果
 vdots
N人目の計算結果

出力の最後には改行が必要です 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例13
2 1 4


出力例10
1
2

問題文中で説明した入出力です   


入力例22
80 70


出力例25
5

このケースの平均点は75点です 
どちらの点数も平均点から5点離れています   


入力例35
100 100 100 100 100


出力例30
0
0
0
0

このケースの平均点は100点です   


入力例410
53 21 99 83 75 40 33 62 18 100


出力例45
37
41
25
17
18
25
4
40
42



ヒント今回の問題は次のプログラムに追記すれば解くことができます 
追記箇所が2つあることに注意してください   

クリックでヒントプログラムを見る
 include  bits stdc   h 
using namespace std 

int main    
  int N 
  cin    N 

     N要素の配列
  vector int  A N  

     入力処理
  for  int i   0  i   N  i     
    cin    A at i  
   

     合計点
  int sum   0 

     合計点を計算
  for  int i   0  i   N  i     

       ①ここにプログラムを追記

   

     平均点
  int mean   sum   N 

     平均点から何点離れているかを計算して出力
  for  int i   0  i   N  i     

       ②ここにプログラムを追記
       負の数を出力しないように注意

   
 




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
1
80

テスト出力1
0


テスト入力2
データが大きすぎるため省略



解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  int N 
  cin    N 

     N要素の配列
  vector int  A N  

     入力処理
  for  int i   0  i   N  i     
    cin    A at i  
   

     合計点
  int sum   0 

     合計点を計算
  for  int i   0  i   N  i     

       ①ここにプログラムを追記
    sum    A at i  

   

     平均点
  int mean   sum   N 

     平均点から何点離れているかを計算して出力
  for  int i   0  i   N  i     

       ②ここにプログラムを追記
       負の数を出力しないように注意
    if  A at i    mean   
      cout    A at i    mean    endl 
     
    else  
      cout    mean   A at i     endl"
2. 1.12,https://atcoder.jp/contests/APG4b/tasks/APG4b_ck,"問題文1と と のみからなる式Sが1行で与えられるので 計算結果を出力してください   
例えば式Sが1 1 1 1であったとき 計算結果は2です   
具体的な式Sの形式は以下の通りです   

式Sの1文字目は必ず1です   
その後   または  と1が交互に続きます   
Sの最後の文字も必ず1です   

式と演算子はスペースで区切られていないことに注意してください  
ページ末尾に問題のヒントがあります 詰まったら見てみましょう 

サンプルプログラム
 include  bits stdc   h 
using namespace std 

int main    
  string S 
  cin    S 

     ここにプログラムを追記
 



制約
1  S  100   S は文字列の長さ 
Sは1から始まり その後 または と1が交互に続き 1で終わる



入力入力は次の形式で標準入力から与えられます   
S


出力Sの計算結果を出力してください   
出力の最後には改行が必要です 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例11 1 1 1


出力例12

問題文中で説明した入出力です   


入力例21 1 1 1 1 1


出力例2 4

計算結果は負の値になることもあります   


入力例31


出力例31

入力は1だけで終わることもあります   


入力例41 1 1 1 1 1 1 1 1 1 1 1 1


出力例43



ヒント次のプログラムは9文字の式Sにいくつ1が含まれているを出力するプログラムです 
今回の問題を解く際の参考にしてください   

クリックでヒントプログラムを見る
 include  bits stdc   h 
using namespace std 

int main    
  string S 
  cin    S 

     1の数を表す変数
  int count   0 

     9文字の式に限定していることに注意
  for  int i   0  i   9  i     

       1があればcountを増やす
    if  S at i      1    
      count   
     

   

  cout    count    endl 
 

ヒント入力
1 1 1 1 1

ヒント出力
5




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

テスト出力1
 25


テスト入力2
1 1 1 1 1 1 1 1 1 1 1 1 1

テスト出力2
13


テスト入力3
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

テスト出力3
 33


テスト入力4
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

テスト出力4
2




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  string S 
  cin    S 

     計算結果を保持する変数
  int answer   1 

  for  int i   0  i   S size    i     

    if  S at i           
      answer   
     
    if  S at i           
      answer   
     

   

  cout    answer    endl"
1. 1.11,https://atcoder.jp/contests/APG4b/tasks/APG4b_cl,"問題文電卓の操作が与えられるので 計算途中の値と計算結果の値を出力してください   

電卓の操作は次の形式で入力されます   
入力の形式
計算の数N
最初の値A
演算子op 1 計算する値B 1
演算子op 2 計算する値B 2
 vdots
演算子op N 計算する値B N

次の入力は  2   1    3    2を表しています   
入力例
3
2
  1
  3
  2


出力では 何行目の出力か と  計算途中の値 を出力してください   
出力の形式
1 1個目の計算結果
2 2個目の計算結果
 vdots
N N個目の計算結果

次の出力は上の入力例に対する出力です   
出力例
1 3
2 9
3 4


与えられる計算式のパターンと対応する出力は以下の表の通りです   



入力
出力
備考




  B
  Bの計算結果を出力する 



  B
  Bの計算結果を出力する 



  B
  Bの計算結果を出力する 



  B
  Bの計算結果を出力する 
小数点以下は切り捨てて出力する  Bが0の場合はerrorと出力し それ以降は出力を行わない 



  Bにおいて Bが0の場合はerrorと出力し それ以降は出力を行わない ことに注意してください   
ページ末尾に問題のヒントがあります 詰まったら見てみましょう 

サンプルプログラム
 include  bits stdc   h 
using namespace std 

int main    
  int N  A 
  cin    N    A 

     ここにプログラムを追記
 



制約
0 N 7
0 A  B i 10
A  B i  Nは整数
op iは           のいずれか一つ



入力入力は次の形式で標準入力から与えられます   
N
A
op 1 B 1
op 2 B 2
 vdots
op N B N


出力1 1個目の計算結果
2 2個目の計算結果
 vdots
N N個目の計算結果

出力の最後には改行が必要です 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例13
2
  1
  3
  2


出力例11 3
2 9
3 4

問題文中で説明した入出力です   


入力例22
3
  2
  2


出力例21 1
2 0

割り算では小数点以下を切り捨てます   


入力例34
3
  1
  0
  2
  10


出力例31 4
error

割り算でB iが0の場合はerrorと出力し それ以降は出力をしないことに注意してください   


入力例47
10
  10
  10
  10
  10
  10
  10
  10


出力例41 100
2 1000
3 10000
4 100000
5 1000000
6 10000000
7 100000000



ヒント1次のプログラムは 5つの整数を入力で一つずつ受け取り 受け取った整数を足して出力します 
また 今回の問題と同様に 出力が何行目かも同時に出力します 
今回の問題を解く際の参考にしてください   

クリックでヒントプログラムを見る
 include  bits stdc   h 
using namespace std 

int main    
  int sum   0 

  for  int i   0  i   5  i     
    int x 
    cin    x 

    sum    x 

    cout    i   1           sum    endl 
   
 

ヒント入力
3
4
2
1
10

ヒント出力
1 3
2 7
3 9
4 10
5 20




ヒント2ジャッジでテストされる入力のうち2つをヒントとして示します 
サンプルは全てあっていてWAの原因がわからない人は 以下のケースに正解しているか確かめてみましょう 

クリックでテストケースを見る
テスト入力1
7
0
  5
  7
  4
  0
  0
  10
  5

テスト出力1
1  5
2  35
3  8
4  8
5  8
6  18
7  90


テスト入力2
6
0
  4
  3
  5
  3
  7
  1

テスト出力2
1 0
2 0
3 0
4 3
5 0
6 0




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
7
0
  5
  7
  4
  0
  0
  10
  5

テスト出力1
1  5
2  35
3  8
4  8
5  8
6  18
7  90


テスト入力2
6
0
  4
  3
  5
  3
  7
  1

テスト出力2
1 0
2 0
3 0
4 3
5 0
6 0


テスト入力3
3
1
  4
  3
  0

テスト出力3
1 4
2 12
error


テスト入力4
7
0
  2
  0
  1
  0
  5
  2
  10

テスト出力4
1 0
error




解答例必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  int N  A 
  cin    N    A 

  for  int i   0  i   N  i     
    int x 
    string op 
    cin    op    x 

    if  op          
      A    x 
     
    else if  op          
      A    x 
     
    else if  op          
      A    x 
     
    else if  op           x    0   
      A    x 
     
    else  
      cout     error     endl 
      break 
     

    cout    i   1           A    endl"
0. 1.10,https://atcoder.jp/contests/APG4b/tasks/APG4b_cm,"問題文AさんとBさんのテストの点数A  Bが与えられます 
2人の点数を表す横向きの棒グラフを出力してください   
棒グラフは1点を一つの で表し 次の形式で出力します   
A Aさんの点数個の   
B Bさんの点数個の   

例えば Aさんの点数が5点 Bさんが9点だった場合 次のように出力します   
A      
B          


Bさんの棒グラフを出力した後にも改行が必要なことに注意してください 
cout    endl と書けば改行だけを出力することができます   

ページ末尾に問題のヒントがあります 詰まったら見てみましょう 
サンプルプログラム
 include  bits stdc   h 
using namespace std 

int main    
  int A  B 
  cin    A    B 

     ここにプログラムを追記
 



制約
0 A  B 20
A  Bは整数



入力入力は次の形式で標準入力から与えられます   
入力
A B


出力A Aさんの点数個の   
B Bさんの点数個の   

出力の最後には改行が必要です 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例15 9


出力例1A      
B          

問題文にある例と同じものです   


入力例20 20


出力例2A 
B                     



ヒント次のプログラムはAさんが5点だったときの棒グラフを出力するものです 
このプログラムを書き換えて Aさんの点数が5点ではなかったときにも対応し Bさんの棒グラフも出力するようにしてください 

クリックでヒントプログラムを見る
 include  bits stdc   h 
using namespace std 

int main    
  cout     A   
  int i   0 
  while  i   5   
    cout        
    i   
   
  cout    endl 
 

ヒント出力
A      




テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
7 3

テスト出力1
A        
B    


テスト入力2
20 20

テスト出力2
A                     
B                     


テスト入力3
18 0

テスト出力3
A                   
B 




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  int A  B 
  cin    A    B 

  int i   0 
  cout     A   
  while  i   A   
    cout        
    i   
   
  cout    endl 

  i   0 
  cout     B   
  while  i   B   
    cout        
    i   
   
  cout    endl"
. 1.09,https://atcoder.jp/contests/APG4b/tasks/APG4b_cn,"問題文整数x a bが入力されます 
以下の4つの値を計算し 1行ずつ出力してください   

xに1を足した値
 1 で出力した値 に a b を掛けた値
 2 で出力した値 に 2 で出力した値 を掛けた値
 3 で出力した値 から1を引いた値

サンプルプログラム
 include  bits stdc   h 
using namespace std 

int main    
  int x  a  b 
  cin    x    a    b 

     1 の出力
  x   
  cout    x    endl 

     ここにプログラムを追記
 



制約
0 x  a  b 100
x  a  bは整数



入力入力は次の形式で標準入力から与えられます   
入力
x a b


出力1 の出力
2 の出力
3 の出力
4 の出力

出力の最後には改行が必要です 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例11 2 3


出力例12
10
100
99


xは1なので xに1を足した値は2です   
 1 で出力した値 は2であり a bは5なので  1 で出力した値 に a b を掛けた値は10です   
 2 で出力した値 は10なので  2 で出力した値 に 2 で出力した値 を掛けた値は100です   
 3で出力した値 は100なので  3 で出力した値 から1を引いた値は99です   



入力例23 2 5


出力例24
28
784
783



テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
0 0 0

テスト出力1
1
0
0
 1


テスト入力2
100 100 100

テスト出力2
101
20200
408040000
408039999




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  int x  a  b 
  cin    x    a    b 

  x   
  cout    x    endl 

  x    a   b 
  cout    x    endl 

  x    x 
  cout    x    endl 

  x   
  cout    x    endl"
. 1.08,https://atcoder.jp/contests/APG4b/tasks/APG4b_co,"問題文A君はたこ焼きの情報を処理するプログラムを書いています 
このプログラムは以下の2パターンの入力を処理します   


パターン1
入力
1
price
N

1行目で パターンを表す整数1が入力されます 
2行目で たこ焼き1個あたりの値段priceが入力されます 
3行目で たこ焼き1セットあたりの個数Nが入力されます   
出力
たこ焼き1セットあたりの値段  N  times price を出力します   


パターン2
入力
2
text
price
N

1行目で パターンを表す整数2が入力されます 
2行目で たこ焼きセットの説明文textが入力されます 
3行目で たこ焼き1個あたりの値段priceが入力されます 
4行目で たこ焼き1セットあたりの個数Nが入力されます   
出力
1行目で たこ焼きセットの説明文textの末尾に をつけて出力します 
2行目で たこ焼き1セット辺りの値段  N  times price を出力します   

A君はこの通りの動作をするプログラムを書いたつもりでしたが プログラムを実行してみるとエラーが発生しました 
A君が書いたプログラムのエラーを修正し 正しく動作するようにしてください  
A君が書いたプログラム
 include  bits stdc   h 
using namespace std 

int main    
  int p 
  cin    p 

     パターン1
  if  p    1   
    int price 
    cin    price 
   

     パターン2
  if  p    2   
    string text 
    int price 
    cin    text    price 
   

  int N 
  cin    N 

  cout    text           endl 
  cout    price   N    endl 
 


もしプログラムを修正した結果 A君が書いたプログラムとの違いが大きくなってしまったとしても ACができればOKです   



制約
0 price  N 100
price  Nは整数
textは半角英数字からなる
textは20文字以内


ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例11
80
5


出力例1400



入力例22
umai
150
3


出力例2umai 
450



入力例32
good 
30
8


出力例3good  
240



テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
1
2
3

テスト出力1
6


テスト入力2
2
yeah     ok
100
100

テスト出力2
yeah     ok 
10000




解答例必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  int p 
  cin    p 

     パターン2
  if  p    2   
    string text 
    cin    text 
    cout    text           endl 
   

  int price  N 
  cin    price    N 
  cout    price   N    endl"
. 1.07,https://atcoder.jp/contests/APG4b/tasks/APG4b_cp,"問題文次のプログラムで宣言されているbool型の変数a  b  cに対し trueまたはfalseを代入することで AtCoderと出力されるようにしてください   
5 6 7行目における変数a b cへの代入以外のプログラムの書き換えは行わないものとします   
プログラム
 include  bits stdc   h 
using namespace std 

int main    
     変数a b cにtrueまたはfalseを代入してAtCoderと出力されるようにする 
  bool a      true または false
  bool b      true または false
  bool c      true または false

     ここから先は変更しないこと

  if  a   
    cout     At  
   
  else  
    cout     Yo  
   

  if   a    b   
    cout     Bo  
   
  else if   b    c   
    cout     Co  
   

  if  a    b    c   
    cout     foo   
   
  else if  true    false   
    cout     yeah   
   
  else if   a    c   
    cout     der  
   

  cout    endl 
 



入力この問題に入力はありません

出力AtCoderと出力してください 


回答例答え方の例です 
変数a  b  cの全てにfalseを代入していますが YoCoderと出力されているので この解答は不正解となります   
 include  bits stdc   h 
using namespace std 

int main    
     変数a b cにtrueまたはfalseを代入してAtCoderと出力されるようにする 
  bool a   false     true or false
  bool b   false     true or false
  bool c   false     true or false

     ここから先は変更しないこと

  if  a   
    cout     At  
   
  else  
    cout     Yo  
   

  if   a    b   
    cout     Bo  
   
  else if   b    c   
    cout     Co  
   

  if  a    b    c   
    cout     foo   
   
  else if  true    false   
    cout     yeah   
   
  else if   a    c   
    cout     der  
   

  cout    endl 
 


出力例YoCoder



解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
     変数a b cにtrueまたはfalseを代入してAtCoderと出力されるようにする 
  bool a   true    true または false
  bool b   false    true または false
  bool c   true    true または false

     ここから先は変更しないこと

  if  a   
    cout     At  
   
  else  
    cout     Yo  
   

  if   a    b   
    cout     Bo  
   
  else if   b    c   
    cout     Co  
   

  if  a    b    c   
    cout     foo   
   
  else if  true    false   
    cout     yeah   
   
  else if   a    c   
    cout     der  
   

  cout    endl"
. 1.06,https://atcoder.jp/contests/APG4b/tasks/APG4b_cq,"問題文1行の計算式が与えられるので その結果を出力してください  
与えられる計算式のパターンと対応する出力は以下の表の通りです   



入力
出力
備考




A   B
A   Bの計算結果を出力



A   B
A   Bの計算結果を出力



A   B
A   Bの計算結果を出力



A   B
A   Bの計算結果を出力
小数点以下は切り捨てて出力 Bが0の場合はerrorと出力


A   B
errorと出力



A   B
errorと出力



A   B
errorと出力




サンプルプログラム
このプログラムを元に解答を作成することを推奨します   
 include  bits stdc   h 
using namespace std 

int main    
  int A  B 
  string op 
  cin    A    op    B 

  if  op          
    cout    A   B    endl 
   
     ここにプログラムを追記
 


制約
0 A  B 100
A  Bは整数
opは                    のいずれか一つ



入力入力は次の形式で標準入力から与えられます   
A op B


出力入力の計算式の計算結果を出力してください 
出力の最後には改行が必要です 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例11   2


出力例13



入力例25   3


出力例22



入力例310   20


出力例3200



入力例410   3


出力例43

計算結果の小数点以下は切り捨てます   


入力例5100   0


出力例5error

Bが0の場合はerrorと出力することに注意してください   


入力例625   31


出力例6error



入力例70   0


出力例70



テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください 

クリックでテスト入出力を見る
テスト入力1
100   100

テスト出力1
error


テスト入力2
17   91

テスト出力2
error


テスト入力3
0   20

テスト出力3
0


テスト入力4
0   0

テスト出力4
0


テスト入力5
0   0

テスト出力5
0




解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  int A  B 
  string op 
  cin    A    op    B 

  if  op          
    cout    A   B    endl 
   
  else if  op          
    cout    A   B    endl 
   
  else if  op          
    cout    A   B    endl 
   
  else if  op           B    0   
    cout    A   B    endl 
   
  else  
    cout     error     endl"
. 1.05,https://atcoder.jp/contests/APG4b/tasks/APG4b_cr,"問題を解く前に 以下の2つのリンク先の説明を読んでください 

付録1 コードテストの使い方

付録2 提出結果の見方


問題文2つの整数A  Bが与えられます A Bの計算結果を出力してください   
サンプルプログラム
 include  bits stdc   h 
using namespace std 

int main    
     ここにプログラムを追記
 


制約
0 A  B 100
A  Bは整数



入力入力は次の形式で標準入力から与えられます   
A B


出力A Bの計算結果を出力してください 出力の最後には改行が必要です 

ジャッジでは以下の入力例以外のケースに関してもテストされることに注意   

入力例11 2


出力例13



入力例2100 99


出力例2199



テスト入出力書いたプログラムがACにならず 原因がどうしてもわからないときだけ見てください  

クリックでテスト入出力を見る
テスト入力1
0 0

テスト出力1
0


テスト入力2
0 50

テスト出力2
50


テスト入力3
0 50

テスト出力3
50


テスト入力4
27 81

テスト出力4
108




解答例必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
     ここに追記
  int A  B 
  cin    A    B 
  cout    A   B    endl"
. 1.04,https://atcoder.jp/contests/APG4b/tasks/APG4b_cs,"問題文次のプログラムをコピー ペーストして 指定した場所にプログラムを追記することで問題を解いて下さい 
 include  bits stdc   h 
using namespace std 

int main    
     一年の秒数
  int seconds   365   24   60   60 

     以下のコメント     を消して追記する
  cout       1年は何秒か       endl 
  cout       2年は何秒か       endl 
  cout       5年は何秒か       endl 
  cout       10年は何秒か       endl 
 

int型の変数secondsは一年の秒数を表しています これを利用して  

1年は何秒か  
2年は何秒か  
5年は何秒か  
10年は何秒か  

を順に一行ずつ表示するプログラムを作って下さい 
うるう秒やうるう年のことは考え無くて良いとします   
実行結果 一部を       で隠しています 
31536000
63072000
     
     



解答例必ず自分で問題に挑戦してみてから見てください 

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
     一年の秒数
  int seconds   365   24   60   60 

     以下のコメントを消して追記する
  cout    seconds    endl 
  cout    seconds   2    endl 
  cout    seconds   5    endl 
  cout    seconds   10    endl"
. 1.03,https://atcoder.jp/contests/APG4b/tasks/APG4b_ct,"問題文Aくんは1から100までの和を求めようと思いました 
数学の授業で習ったとおり 1から100までの和は次の式で求められます 
 frac 1  2   times 100  times  100 1 
この式の値を出力してください   
ヒント C  版 
 1 03 四則演算と優先順位 の 注意点 に書かれている項目を読んでみましょう 
コードテストで正しく動作することを確認してから提出しましょう  
サンプルプログラム
次のプログラムをコピー ペーストした後 コメント     を消して式を書いてください   
 include  bits stdc   h 
using namespace std 

int main    
  cout       ここに式を書く       endl 
 



解答例必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
       2を最後に計算することで正しい計算結果になる
  cout    100    100   1    2    endl"
. 1.02,https://atcoder.jp/contests/APG4b/tasks/APG4b_cu,"問題を解く前に 付録2 提出結果の見方を読んでください 


問題文A君は次の出力をするプログラムを作ろうとしました   
実行結果
いつも2525
AtCoderくん

しかし 書いたプログラムを実行してみるとエラーが発生しました 
A君が書いたプログラムのエラーを修正し 正しく動作するようにしてください  
A君が書いたプログラム
 include  bits stdc   h 
using namespace std 

int main    
  cout     いつも    252    endl 
  cout     AtCoderくん 　   endl
 

このコードをコードテストで実行すると 標準エラー出力に以下のエラーメッセージが表示されます   
標準エラー出力
  Main cpp 5 11  warning  missing terminating   character
   cout     いつも    252    endl 
            
  Main cpp 5 3  error  missing terminating   character
   cout     いつも    252    endl 
    
  Main cpp 6 3  error  stray   343  in program
   cout     AtCoderくん 　   endl
    
  Main cpp 6 3  error  stray   200  in program
  Main cpp 6 3  error  stray   200  in program
  Main cpp  In function  int main    
  Main cpp 5 8  error  no match for  operator     operand types are  std  ostream  aka std  basic ostream char    and  std  ostream  aka std  basic ostream char    
   cout     いつも    252    endl 
         
  Main cpp 5 8  note  candidate  operator   int  int   built in 
  Main cpp 5 8  note    no known conversion for argument 2 from  std  ostream  aka std  basic ostream char    to  int 
In file included from  usr include c   5 istream 39 0 
                 from  usr include c   5 sstream 38 
                 from  usr include c   5 complex 45 
                 from  usr include c   5 ccomplex 38 
       

この問題の取り組み方
Aくんのプログラムには複数のエラーが含まれています 
わかるエラーから一つずつ直し コードテスト上で実行してみて 直っているかどうか確かめましょう   
コードテストの使い方は付録1 コードテストの使い方に書いてあります   

 AtCoder の C は大文字であることに注意しましょう 

ヒント
1 02 プログラムの書き方とエラーの コンパイルエラーの例 を参考にしましょう   


解答例必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  cout     いつも     2525    endl 
  cout     AtCoderくん     endl"
. 1.01,https://atcoder.jp/contests/APG4b/tasks/APG4b_cv,"問題を解く前に 付録1 コードテストの使い方を読んでください 


問題文次の出力をするプログラムを書いてください   
実行結果
こんにちは
AtCoder

出力の最後 つまりAtCoderの後 に改行する必要があります 注意してください   
回答プログラムの作成方法
回答プログラムは 次のサンプルプログラムを改変して作成することを推奨します 
プログラムをコピーし コードテストのページに貼り付けましょう   
サンプルプログラム
 include  bits stdc   h 
using namespace std 

int main    
  cout     Hello  world      endl 
  cout     Hello  AtCoder      endl 
  cout     Hello  C        endl 
 

このプログラムを実行すると次のように出力されます   
サンプルプログラムの実行結果
Hello  world 
Hello  AtCoder 
Hello  C   

これを次の出力を行うようにプログラムを書き換え 正しく動作することが確認できたら提出しましょう   
正しい実行結果
こんにちは
AtCoder


 AtCoder の C は大文字であることに注意しましょう 
今後の提出は必ず問題ページから行ってください 説明ページに提出した場合TLEと表示されます 



解答例必ず自分で問題に挑戦してみてから見てください  

クリックで解答例を見る
 include  bits stdc   h 
using namespace std 

int main    
  cout     こんにちは     endl 
  cout     AtCoder     endl"
積雪深差,https://atcoder.jp/contests/abc001/tasks/abc001_1,"ある時刻の積雪深 H 1 と その 1 時間前の積雪深 H 2 が与えられます この時 この 1 時間の積雪深差 H 1   H 2 の値を計算して出力してください 


入力は以下の形式で標準入力から与えられる 

H 1
H 2


1 行目には 整数で ある時刻の積雪深 H 1   0 H 1 2 000  が与えられる 
2 行目には 整数で 1 時間前の積雪深 H 2   0 H 2 2 000  が与えられる 


積雪深差 H 1   H 2 の値を 1 行で出力せよ 
また 出力の末尾には改行を入れること 


15
10



5


15 10  5



0
0



0


0 0  0



5
20



 15


5 20   15"
視程の通報,https://atcoder.jp/contests/abc001/tasks/abc001_2,"気象情報は 世界中に様々な形で流れています そのひとつの地上実況気象通報式  SYNOP  では 視程  肉眼で物体がはっきりと確認できる最大の距離  を 次の規則に従って VVという値  通報式  に変換して報じます 

0 1  rm km  未満  VVの値は 00 とする 
0 1  rm km  以上 5  rm km  以下 距離    rm km   を 10 倍した値とする 1 桁の場合は上位に 0 を付す 

例えば 2 000  rm m   2 0  rm km  ならば VVは 20 である 同じく 200  rm m の場合VVは 02 である 

6  rm km  以上 30  rm km  以下 距離    rm km   に 50 を足した値とする 

例えば 15 000  rm m   15  rm km  ならば VVは 65 である 

35  rm km  以上 70  rm km  以下 距離    rm km   から 30 を引いて 5 で割った後 80 を足した値とする 

例えば 40 000  rm m   40  rm km  ならば VVは 82 である 

70  rm km  より大きい VVの値は 89 とする 

いま あなたに視程の距離をメートルで与えるので 上記のルールに従って計算されるVVを出力するプログラムを作成してください 

なお VVは必ず 上位の 0 を含めて 2桁の整数であり 上記のルールに従って計算した時に整数にならないような入力や 上記の範囲に入らない入力  例 5  rm km  より大きく 6  rm km  未満  などはありません 

入力は以下の形式で標準入力から与えられる 

m


1 行目には 距離を表す整数 m   0 m 100 000  が与えられる 単位はメートル    rm m   である 


VVの値を 1 行で出力せよ 
また 出力の末尾には改行を入れること 


15000



65


入力は15 000  rm m   15  rm km  であり 6  rm km  以上 30  rm km  以下なので    rm km  での値に 50 を足してVVとする  というルールに従う 
そのため 15 50 65が正解である 



75000



89


70  rm km  より大きい場合は VVは 89 である 



200



02


VVは 2 桁でなければならない"
風力観測,https://atcoder.jp/contests/abc001/tasks/abc001_3,"ある風向風速計は 風向の角度と風程を 1 分毎に自動で記録してくれます 

風向の角度というのは真北を 0 度とし そこから時計回りに風の吹いてくる方向を定めたものです 気象観測等では全体を等しく 16 分割した 16 方位が用いられます 16 方位と角度は 以下の表のように対応します 



 風向と角度の関係

　方位　　角度　
　方位　　角度　


　N  北 　　他のいずれにも当てはまらない　
　S  南 　　168 75 度以上 191 25 度未満　


　NNE  北北東 　　11 25 度以上 33 75 度未満　
　SSW  南南西 　　191 25 度以上 213 75 度未満　


　NE  北東 　　33 75 度以上 56 25 度未満　
　SW  南西 　　213 75 度以上 236 25 度未満　


　ENE  東北東 　　56 25 度以上 78 75 度未満　
　WSW  西南西 　　236 25 度以上 258 75 度未満　


　E  東 　　78 75 度以上 101 25 度未満　
　W  西 　　258 75 度以上 281 25 度未満　


　ESE  東南東 　　101 25 度以上 123 75 度未満　
　WNW  西北西 　　281 25 度以上 303 75 度未満　


　SE  南東 　　123 75 度以上 146 25 度未満　
　NW  北西 　　303 75 度以上 326 25 度未満　


　SSE  南南東 　　146 25 度以上 168 75 度未満　
　NNW  北北西 　　326 25 度以上 348 75 度未満　





風程というのは 風向風速計の風車が ある一定の時間に風によって回った量を距離によって表したものです 
例えば 1 分間の風程が 300  rm m  というのは 1 分間に吹いた風によって風車が 300  rm m  回ったという事です この時 この 1 分間の平均風速は 300  rm m  を 60 秒で割って 5  rm m    rm s  と求められます 

与えられたデータを ラジオ等で流れる 気象通報 と同様の形式に直そうと思います 
気象通報では 16 方位での風向と 風力  ビューフォート風力階級  が伝えられます 

風向は 先の表の 16 方位です 
ただし 風力 0 の場合 実際には 風弱く と伝えられるため 風向は 16 方位ではなく 特別な向きであるCとします 

風力は 風速を計算し 小数第 2 位を四捨五入して 以下の対応により風力に変換します 
　


 風力と風速の関係 　 ビューフォート風力階級 

風力　　風速　　
風力　　風速　　
風力　　風速　　


風力0　　 0 0  rm m    rm s  以上 0 2  rm m    rm s  以下　　
風力5　　 8 0  rm m    rm s  以上 10 7  rm m    rm s  以下　　
風力10　　 24 5  rm m    rm s  以上 28 4  rm m    rm s  以下　　


風力1　　 0 3  rm m    rm s  以上 1 5  rm m    rm s  以下　　
風力6　　 10 8  rm m    rm s  以上 13 8  rm m    rm s  以下　　
風力11　　 28 5  rm m    rm s  以上 32 6  rm m    rm s  以下　　


風力2　　 1 6  rm m    rm s  以上 3 3  rm m    rm s  以下　　
風力7　　 13 9  rm m    rm s  以上 17 1  rm m    rm s  以下　　
風力12　　 32 7  rm m    rm s  以上　　


風力3　　 3 4  rm m    rm s  以上 5 4  rm m    rm s  以下　　
風力8　　 17 2  rm m    rm s  以上 20 7  rm m    rm s  以下　　
　


風力4　　 5 5  rm m    rm s  以上 7 9  rm m    rm s  以下　　
風力9　　 20 8  rm m    rm s  以上 24 4  rm m    rm s  以下　　
　




風向  角度  と 1 分間の風程が入力されるとき それを気象通報の形式に直して出力するプログラムを作成してください 

入力は以下の形式の 1 行からなる 

Deg Dis


Degは風向を示し 本来の角度を 10 倍した整数で与えられる  例えば 90 度なら 900 137 5 度なら1375と与えられる   


Disは 1 分間の風程を示す整数である 単位はメートル    rm m   である 




0 Deg 3 600
0 Dis 12 000


出力は以下の形式の 1 行とする 

Dir W



Dirは風向を示し C  N  E  W  S からなる 1 3 文字の文字列である 


Wは風力を示し 0 以上 12 以下の整数である 


また 出力の末尾には改行を入れること 


2750 628


この場合 風向は 275 度 風程は 1 分あたり 628  rm m  である 



W 5


275 度は西向きなので Wと出力する 
1 分で628  rm m ということは 10 46  rm m    rm s なので 小数第 2 位を四捨五入して10 5  rm m    rm s となり 風力 5 に相当する 



161 8



C 0


風向は本来NNEだが 風力 0 であるためCとする 



3263 15



NNW 1


浮動小数点数型での計算は 誤差が発生する恐れがあります 
環境によって計算結果が変わることもありますので 誤差には十分注意しましょう 



1462 1959



SE 12


誤差には十分注意しましょう 



1687 1029



SSE 8


誤差には十分注意しましょう 



2587 644



WSW 5


誤差には十分注意しましょう 



113 201



NNE 3


誤差には十分注意しましょう 



2048 16



SSW 1"
感雨時刻の整理,https://atcoder.jp/contests/abc001/tasks/abc001_4,"雨の降っていた時刻というのは 降水量と並んで重要です 今 ある 1 日の 雨が降っていた時刻に関するメモが見つかったので これを整理して 雨の降っていた時刻を調べたいと思います 

整理は 以下の規則に従って行います 


感雨時間のメモから その日 1 日の雨の降っていた時刻を時系列順に出す 日付を超えて降っている雨は  00 00 降り始めや 24 00 降り終わりとして扱われるものとし 日付をまたぐようなメモは入力されない 


雨の降り始め 降り終わりはそれぞれ直前 直後の 5 分単位の時刻に丸める 例えば 13 23 に降り始めて 14 01 にやんだ雨は 13 20 から 14 05 まで降っていたということにする 


丸めた後の結果において 2 つ以上のメモに書かれていた感雨時刻が重複した場合 1 つの連続した雨とみなす 例えば 11 06 に降り始めて 11 23 にやんだ雨 11 29 に降り始めて 12 03 にやんだ雨 11 48 に降り始めて 12 10 にやんだ雨の 3 つがあった場合 11 05 11 25 11 25 12 05 11 45 12 10 の 3 つの雨であるが 時間がかぶっているところをくっつけて 11 05 から 12 10 まで降っていた 1 つの連続した雨ということにする 



メモの内容が入力される時 雨の降っていた時刻を この規則に合致するよう整理して出力するプログラムを作成してください 

入力は以下の形式で標準入力から与えられる 

N
S 1 E 1
S 2 E 2
 
S N E N


1 行目には 連続して雨の降っていた時刻の数を表す整数 N   1 N 30 000  が与えられる 
2 行目から N 1 行目までの N 行で 雨の降り始めの時刻と降り終わりの時刻が与えられる 

この中の i   1 i N  行目において 雨が降り始めた時刻 S i と雨が降り終わった時刻 E i がハイフンで区切られて与えられる 
時刻 S i と E i において

時刻は必ず 4 桁の非負整数で与えられる 
時刻の上 2 桁が時間    rm hour    下 2 桁が分    rm minute   を表す 
時刻は 0000 から 2400 まで取り得る ただし下 2 桁の部分が 59 を超えることはない 
S i が E i より前の時刻であることが保証されている 




雨が降っていた時刻を整理して 降り始めの時刻の早い順番に 降り始めた時刻と降り終わりの時刻をハイフンで区切って出力せよ 
その際 連続した 1 つの雨を 1 行に出力し 時刻の形式は入力と同じ形式を用いること 
また 出力の末尾には改行を入れること 


4
1148 1210
1323 1401
1106 1123
1129 1203


11 48 12 10 の間 雨が降っていた 
13 23 14 01 の間 雨が降っていた 
11 06 11 23 の間 雨が降っていた 
11 29 12 03 の間 雨が降っていた 



1105 1210
1320 1405


入力を 5 分単位に丸めると 順に 1145 1210 1320 1405 1105 1125 1125 1205となる 
これを降り始めの時刻の早い順に直すと 1105 1125 1125 1205 1145 1210 1320 1405となる 
1105 1125 1125 1205の 2 つは 前者の降り終わりの時刻と後者の降り始めの時刻が一致するので くっついて 1105 1205 となる 
さらに 1105 1205 と 1145 1210 は 後者の降り始めの時刻が前者の降っている時刻の間に入るので くっついて 1105 1210 となる 
そのため 結局この例のような出力となる 
なお 出力は雨の降った時刻の早い順でなければならない 



1
0000 2400



0000 2400


一日中雨が降っている場合である 



6
1157 1306
1159 1307
1158 1259
1230 1240
1157 1306
1315 1317


全く同じメモが複数存在する場合もある 



1155 1310
1315 1320"
正直者,https://atcoder.jp/contests/abc002/tasks/abc002_1,"いま 神の恵みで高橋くんにお金が与えられます 
神は高橋くんに 2 つの金額を提示します 
正直者の高橋くんは 常に大きな金額を選択します 
そこで 与えられた 2 つの整数のうち 大きい方の値を出力するプログラムを書いてください 
A問題では 提出した結果 全てのテストに対する判定がWAまたはREになってしまった場合のみ 質問タブにて可能な限りのトラブルシューティングを受け付けます 
提出結果のURLを添えて お気軽にご質問ください 
よくある質問も 併せてご活用ください 

入力は以下の形式で標準入力から与えられる 

X Y


1 行目には 金額の大きさを示す整数 X   Y が与えられる 

2 つの整数 X   Y は 0 X Y 10 9 を満たし 互いに異なることが保証されている 



X と Y のうち 大きい方の値を 1 行で出力してください 
また 出力の末尾には改行を入れること 


10 11



11


10 と 11 では 11 のほうが大きいので 11 を出力します 



100000000 10000000



100000000


100 000 000 と 10 000 000 では 100 000 000 のほうが大きいので 100 000 000 を出力します"
罠,https://atcoder.jp/contests/abc002/tasks/abc002_2,"B問題のリジャッジ 再採点 が終了しました 21  50
B問題のテストケースにミスがあったので 提出されたコードをリジャッジ 再採点 してます 21  40



神の恵みで財産を築いた高橋くんですが なんとそこには罠がありました 
神は 高橋くんの発した言葉から母音 a i u e o を全て盗んでいったのです 
高橋くんが発した言葉を表す文字列 W が与えられるので 周囲の人が聞く言葉を表す文字列を出力するプログラムを書いてください 

入力は以下の形式で標準入力から与えられる 

W


1 行目には 高橋くんの発した言葉を表す文字列 W が与えられる 

W の長さ  W  は 1  W  30 を満たす 
W は半角英小文字 a から zまで のみで構成される 
W には母音以外の文字が少なくとも 1 文字含まれることが保証されている 



W から母音を全て除いた文字列を 1 行で出力してください 
また 出力の末尾には改行を入れること 


chokudai



chkd


chokudai から a i u e o を除くと chkd になります



okanemochi



knmch


okanemochi から a i u e o を除くと knmch になります



aoki



k


aoki から a i u e o を除くと k になります
このように 与えられる文字列 W には母音以外の文字が少なくとも 1 文字含まれます



mazushii



mzsh"
直訴,https://atcoder.jp/contests/abc002/tasks/abc002_3,"神に盗まれた母音を取り戻すため 高橋くんは神へ直訴しました 
 神様 どうかお願いです 僕の母音を返してください  
神はこう言いました 
 そんなに母音がほしいのか ならば私の仕事を手伝ってもらおう  

現在 神は天界のいたるところで測量を行っており 高橋くんは神の測量を手伝わなければなりません 
今回は三角形の測量です 高橋くんには 2 次元平面上の 3 つの点 A   B   C が与えられます 
少しでも早く母音を取り戻すために 三角形 ABC の面積を出力するプログラムを書いてください 

入力は以下の形式で標準入力から与えられる 

x a y a x b y b x c y c


1 行目には 3 点 A   B   C の座標が半角空白区切りで与えられる 

点 A の座標が  x a   y a  点 B の座標が  x b   y b  点 C の座標が  x c   y c  であることを表す 
各座標の値 x a   y a   x b   y b   x c   y c は  1 000 以上 1 000 以下の整数であることが保証されている 
3 点 A   B   C が同一直線上に配置されていることはない 



三角形 ABC の面積を 1 行で出力してください 
また 出力の末尾には改行を入れること 
出力は絶対誤差が 10   2  以下であれば許容される 

3 点  0 0     a b     c d  で構成される三角形の面積は  ad bc  2 となります 
 このヒントは コンテスト開始 1 時間後に公開されたものです  


1 0 3 0 2 5



5 0




図1 入力例 1 を図示したもの




 1  2 3 4 5 6



2 0



298 520 903 520 4 663



43257 5"
派閥,https://atcoder.jp/contests/abc002/tasks/abc002_4,"神からの財産と 母音を取り戻した高橋くんは AtCoder国の腐敗した政治を正すため 国会議員となろうと決めました 
もともと人心掌握術とスピーチに定評があった高橋くんは 何の苦労をすることもなく当選しました 
しかし 議員になってからが本番です 国を正すためには 首相に任命される必要があります 

AtCoder国には高橋くんを除いて N 人の国会議員と M 個の人間関係  x   y  が存在します 
人間関係  x   y  とは 議員 x と議員 y が知り合いであることを意味します 
高橋くんは N 人の議員から何人かを選んで派閥を作ろうと企んでいます 
派閥に含まれるすべての議員は互いに知り合いでなければなりません 
高橋くんが作成することができる最大の派閥に属する議員数を求めるプログラムを書いてください 

入力は以下の形式で標準入力から与えられる 

N M
x 1 y 1
x 2 y 2
 
x M y M


1 行目には 高橋くん以外の国会議員の数 N   1 N 12  と 人間関係の数 M  0 M N N 1  2  が半角空白区切りで与えられる 
2 行目から M 1 行目までの M 行で 人間関係が与えられる 

各議員は 1 から N までの整数で番号がつけられている 
2 行目を基準とした第 i   1 i M  行において 議員 x i と議員 y i は知り合いであることを意味する 
x i と y i はともに整数で  1   x i   y i   N を満たす 
i j のとき  x i   y i   x j   y j  であることが保証されている 



高橋くんが作成することができる最大の派閥に属する議員数を 1 行で出力してください 
また 出力の末尾には改行を入れること 


5 3
1 2
2 3
1 3


1 行目 5 人の議員と 3 つの人間関係が存在する 
2 行目 議員 1 と議員 2 は知り合いである 
3 行目 議員 2 と議員 3 は知り合いである 
4 行目 議員 1 と議員 3 は知り合いである 



3


議員 1 議員 2 議員 3 は互いに知り合いなので この 3 人は派閥を構成することができる 



5 3
1 2
2 3
3 4



2


議員数 2 の派閥として
		
議員 1 と議員 2 の派閥
議員 2 と議員 3 の派閥
議員 3 と議員 4 の派閥

		の 3 通りが考えられます 
	



7 9
1 2
1 3
2 3
4 5
4 6
4 7
5 6
5 7
6 7



4



12 0



1"
AtCoder社の給料,https://atcoder.jp/contests/abc003/tasks/abc003_1,"AtCoder社の社員である青木さんの給料は以下のように決められます 
		ある月に 青木さんがタスクをこなした数を x とします 
		この月の給料は 1 から x までの整数が 1 面ずつに書かれた x 面ダイスを振って出た目    times   1 万円がもらえます 
		ただし このダイスは どの面が出る確率も等しく 1 x です 
		青木くんは 暮らしていくのに十分な給料が得られるかどうかが心配で 平均いくら程度給料がもらえるか調べたいです 
		毎月 青木くんはちょうど N 個のタスクをこなすこととし 毎月の給料の平均値を求めるプログラムを書いてください 


A問題では 提出した結果 全てのテストに対する判定がWAまたはREになってしまった場合のみ 質問タブにて可能な限りのトラブルシューティングを受け付けます 
提出結果のURLを添えて お気軽にご質問ください 
また ページ下部  よくある質問 も 併せてご活用ください 


入力は以下の形式で標準入力から与えられる 

N


1 行目には 整数で 青木くんが毎月こなすタスクの数 N   4   N   100  が与えられる 


		青木くんがもらえる毎月の給料 単位は円 の平均値を 1 行で出力せよ 
		絶対誤差 または 相対誤差が 10   6  以下であれば許容される 
		また 出力の末尾には改行を入れること 
	

6



35000


1 万円から 6 万円がもらえる確率がそれぞれ 1 6 であるので 答えは

10000  times  1 6    20000  times  1 6    30000  times  1 6    40000  times  1 6    50000  times  1 6    60000  times  1 6    35000

となります 



91



460000"
AtCoderトランプ,https://atcoder.jp/contests/abc003/tasks/abc003_2,"AtCoder社では 1 人で行うトランプを使ったゲームが流行っています 
		AtCoder社特製トランプでは 各カードにアルファベット小文字 1 文字 a z  または の文字が書かれています 

		ゲームは以下の手順で行います 

カードを同じ枚数ずつ 2 列に並べて文字列を 2 つ作ります 
 のカードは それぞれa t c o d e rのどれかのカードと置き換えます 
2 つの列が指し示す文字列が同じであれば勝ち 同じでなければ負けです 

		手順 1  で並べられた 2 つの列が指し示す2つの文字列与えられるので 適切に を置き換えて このゲームで勝つことができるかどうかを判定するプログラムを書いてください 

入力は以下の形式で標準入力から与えられる 

S
T


1 行目には 1 列目のトランプが表す文字列 S が与えられる 
2 行目には 2 列目のトランプが表す文字列 T が与えられる 

S T ともにアルファベット小文字 および  のみから構成されることが保証される 
S T の文字数は等しく 1 文字以上 10文字以下であることが保証される 



このゲームで勝つことが可能であればYou can winと 不可能であればYou will loseと シングルクォーテーションを除いて 1 行で出力せよ 
また 出力の末尾には改行を入れること 


ch ku ai
choku  i



You can win


例えば  をうまく置き換えることによって 両方ともchokudaiと一致させることが可能です 



aoki
 ok 



You will lose


4 文字目において   で i を置き換えることができないので 一致させることができません 



arc
abc



You will lose


2 文字目において 一致させることができません"
AtCoderプログラミング講座,https://atcoder.jp/contests/abc003/tasks/abc003_3,"AtCoder社では 優秀な競技プログラマーの講座動画を N 個配信しています 
		初心者競技プログラマーの高橋くんは AtCoder社が配信している動画を見て修練しようとしています 
		高橋くんの実力はレートという実数値で表され レートが高いほど実力が高いことを表します 

		高橋くんのレートが C の時に レート R の競技プログラマーの講座動画を見ると 高橋くんのレートは  C R  2 に変化します 
		高橋くんは 講座動画を合計で K 個まで好きな順番で見ることができますが 同じ競技プログラマーの講座動画は一度までしか見ることができません 
		講座動画を配信している N 人のレートが与えられた時 高橋くんが講座動画を見ることによって達成できるレートの最大値を求めるプログラムを書いてください 
		ただし 高橋くんの初期レートは 0 です 

入力は以下の形式で標準入力から与えられる 

N K
R 1 R 2     R N


1 行目には 講座動画の数を表す整数 N   1   N   100  と高橋くんが見ることのできる動画の数を表す整数 K   1   K   N  がスペース区切りで与えられる 
2 行目には 講座動画を配信している競技プログラマーのレートを表す整数 R i   1   R i   4 000  がスペース区切りで与えられる 


高橋くんが達成できる最大レートを 1 行で出力せよ 
絶対誤差 または 相対誤差が 10   6  以下であれば許容される 
また 出力の末尾には改行を入れること 


2 2
1000 1500



1000 000000


以下の方法が最適です 

まず レート 1000 の競技プログラマーの講座動画を見ます これにより 高橋くんはレート 0 から  0 1000  2   500 になります 
次に レート 1500 の競技プログラマーの講座動画を見ます これにより 高橋くんはレート 500 から  500 1500  2   1000 になります 

しかし 例えば 以下の方法は最適ではありません 

まず レート 1500 の競技プログラマーの講座動画を見ます これにより 高橋くんはレート 0 から  0 1500  2   750 になります 
次に レート 1000 の競技プログラマーの講座動画を見ます これにより 高橋くんはレート 750 から  750 1000  2   875 になります 




2 1
1000 1500



750


このケースでは高橋くんは 1 個の講座動画しか見ることができません 
レート 1500 の競技プログラマーの講座動画を見るのが最適です 



10 5
2604 2281 3204 2264 2200 2650 2229 2461 2439 2211



2820 031250000"
AtCoder社の冬,https://atcoder.jp/contests/abc003/tasks/abc003_4,"AtCoder社の社員室は R  times C R 行 C 列 の区画に区切られており 各区画には 社員のデスク サーバーラックのどちらかがあるか 何もない空きスペースのどれかです 
		AtCoder社のある地域の冬は寒く 暖房代をできるだけ節約するため 社員室の必要なスペースのみを区切って使用することに決めました 
		しかし 資材の問題で 区画に平行な長方形の領域で区切らなければいけません 
		そこで 

デスク または サーバーラックのある最も上の行のすぐ上 
デスク または サーバーラックのある最も下の行のすぐ下 
デスク または サーバーラックのある最も左の列のすぐ左 
デスク または サーバーラックのある最も右の列のすぐ右

		の 4 辺で囲まれた区画を壁で囲みました 
		すると壁で囲まれた領域は X  times Y X 行 Y 列 の区画になりました 
		また AtCoder社の社員室には D 個のデスクと L 個のサーバーラックがあります 
		もともと 社員室に どのようにデスクとサーバーラックの配置されていたのか 考えうるパターン数を 1000000007   10 9 7 で割った余りを求めるプログラムを書いてください 

入力は以下の形式で標準入力から与えられる 

R C
X Y
D L


1 行目には AtCoder社の社員室の区画の行数 列数を表す整数 R   C   1   R  C   30  がスペース区切りで与えられる 
2 行目には 社員室の壁に囲まれた部分の区画の行数 列数を表す整数 X   Y   1   X   R   1   Y   C  がスペース区切りで与えられる 
3 行目には 社員室にある社員のデスクの数 サーバーラックの数を表す整数 D   L   D  L   0   1   D L   X  times Y  がスペース区切りで与えられる 


		社員室にどのようにデスクとサーバーラックの配置されていたのか 考えうるパターン数を 1000000007   10 9 7 で割った余りを 1 行で出力せよ 
		また 出力の末尾には改行を入れること 
	
D L   X  times Y の場合のテストケースに全て正解した場合 101 点満点中の 100 点が与えられる 
		満点解法は非常に難しいので 部分点を確実に取ることから考えましょう 
	

3 2
2 2
2 2



12


このケースは D L X  times Y を満たすため 部分点のテストケースに含まれる可能性があります 
以下の 12 通りの配置が考えられます ここでDはデスク Lはサーバーラック  は何もないことを表します 


DD  DL  DL  LD  LD  LL                        
LL  DL  LD  DL  LD  DD  DD  DL  DL  LD  LD  LL
                        LL  DL  LD  DL  LD  DD



4 5
3 1
3 0



10


このケースは D L X  times Y を満たすため 部分点のテストケースに含まれる可能性があります 



23 18
15 13
100 95



364527243


このケースは D L X  times Y を満たすため 部分点のテストケースに含まれる可能性があります 
社員室の配置パターンは 145180660592914517790287604376765671109248284280228061640640 通りで これを 10 9 7 で割った余りである 364527243 を出力してください 



30 30
24 22
145 132



976668549


このケースは D L X  times Y を満たさないため 部分点のテストケースに含まれることはありません 
無理に正解しようとせず 余裕のある人だけ挑戦してみてください"
流行,https://atcoder.jp/contests/abc004/tasks/abc004_1,"高橋君は N 円借金をしました 
		倍返しでおもてなしするのが流行だと小耳に挟んだ高橋君は 2 N 円返済します 
		高橋君が返済する金額 2 N 円を出力してください 
	
        入力は以下の形式で標準入力から与えられる 

N

1 行目には 高橋君が借金した金額を示す整数 N が与えられる 
        
Nは 0 N 10 6 を満たす 


		高橋君が返済する金額 2 N 円を 1 行で出力してください 

			また 出力の末尾には改行を入れること 
		


1000



2000


1000   2   2000



1000000



2000000


1000000   2   2000000



0



0


0   2   0"
回転,https://atcoder.jp/contests/abc004/tasks/abc004_2,"高橋君は 4 x 4 マスの盤面を見つけました 
        各マスには  ox のいずれかの文字が書かれています 
        彼はこの盤面を回転させた後 どういった状態になるのか気になりました 
        盤面を正面から見たときの状態が与えられるので 180 度回転させた後の盤面を出力してください 
    
        入力は以下の形式で標準入力から与えられる 

c  0 0  c  0 1  c  0 2  c  0 3 
c  1 0  c  1 1  c  1 2  c  1 3 
c  2 0  c  2 1  c  2 2  c  2 3 
c  3 0  c  3 1  c  3 2  c  3 3 

1 行目から 4 行目にわたって 盤面の初期状態が半角スペース区切りで与えられる 
        
c  i j   0 i  j 3  は 盤面のマスを意味し   ox から構成される 


180 度回転させた後の盤面を入力と同じフォーマットで出力してください 

			また 出力の末尾には改行を入れること 
		


       
  o o  
  x x  
       



       
  x x  
  o o  
       


マスとマスの間は半角スペースで区切ってください 



o o x x
o o x x
x x o o
x x o o



o o x x
o o x x
x x o o
x x o o


180 度回転させた結果 たまたま初期状態と一致しました"
入れ替え,https://atcoder.jp/contests/abc004/tasks/abc004_3,"ここにカードが 6 枚あり それぞれ 1 から 6 までの整数が書かれています 
        最初 左から右へ 1 のカードから 6 のカードまでがソートされた状態で並んでいます 



        高橋君には整数 N が与えられます 高橋君は以下の操作を i   0 1 2       N 1 に対して i   0 から 順番に行います 
        
左から  i mod 5  1 番目にあるカードと 左から  i mod 5  2 番目にあるカードの位置を入れ替える 

mod とは  剰余 を意味し 例えば 8 mod 5 は 3 であり 15 mod 5 は 0 になります 
        ここで実際に N   5 のときに行われる操作を例示します 

i   0 のとき 
 0 mod 5  1   1  0 mod 5  2   2
            より 左から 1 番目のカード と  左から 2 番目のカード を入れ替えます 
            


i   1 のとき 



i   2 のとき 



i   3 のとき 



i   4 のとき 



よって N 5 のとき カードの並びは左から234561の順に並びます 

        あなたは高橋君の代わりに 上記の操作が全て終わった後のカードの並びを答えてください 
    
        入力は以下の形式で標準入力から与えられる 

N

1 行目には 高橋君に与えられた整数 N 1 N 10 9  を与える 
        
この問題には部分点が設定されている 後述する部分点の項も参照すること 


        操作が終わった後のカードの並びを左から順に 1 行で出力してください 

			また 出力の末尾には改行を入れること 
		

1 N 50 を満たすテストケース全てに正解すると 100 点満点のうち 30 点が与えられる 


1



213456


 左から 1 番目のカード と  左から 2 番目のカード を入れ替えます 



5



234561


問題文中で示した例です 



22



615234



100000000



345612


N 50 なので 部分点ではなく 満点解答のための入力になります"
マーブル,https://atcoder.jp/contests/abc004/tasks/abc004_4,"一直線上に無限個の箱が並んでいます それぞれの箱に 左から右にかけて      2  1 0 1 2     の番号が付いています 
        いま 番号が  100 の箱に赤いマーブルが R 個入っています 同様に 番号が 0 の箱に緑のマーブルが G 個 番号が 100 の箱に青いマーブルが B 個入っています これら以外の箱には何も入っていません 
        以下の操作を繰り返して 全ての箱に入っているマーブルの個数が 1 個以下になるようにして下さい 

マーブルを 1 つ選び それを左右どちらかの隣接する箱に移動させる 
ただしこのとき 1 つの箱に複数の異なる色のマーブルを入れてはならない 

        必要となる最小の操作回数を求めてください 

        入力は以下の形式で標準入力から与えられる 

R G B

1 行目に マーブルの数を表す整数 R G B を半角スペース区切りで与える 
        
R は番号が  100 の箱にある赤いマーブルの数を示す 
G は番号が 0 の箱にある緑のマーブルの数を示す 
B は番号が 100 の箱にある青いマーブルの数を示す 
R G B の範囲はそれぞれ  1 R G B 300 である 

この問題には部分点が設定されている 後述する部分点の項も参照すること 



        必要となる最小の操作回数を 1 行で出力してください 

			また 出力の末尾には改行を入れること 
		

1 R G B 5を満たすテストケース全てに正解すると 100 点満点のうち 10 点が与えられる 
1 R G B 40を満たすテストケース全てに正解すると 100 点満点のうち 30 点が与えられる 


2 3 4



7

        以下の 7 回の移動により 目的を達成することができます 
            
番号が  100 の箱に入っている赤いマーブルを左に移動します 
番号が 0 の箱に入っている緑のマーブルを左に移動します 
番号が 0 の箱に入っている緑のマーブルを右に移動します 
番号が 100 の箱に入っている青いマーブルを左に移動します 
番号が 99 の箱に入っている青いマーブルを左に移動します 
番号が 100 の箱に入っている青いマーブルを左に移動します 
番号が 100 の箱に入っている青いマーブルを右に移動します 

        これは 10 点分の部分点に含まれる入力になります 
    

17 2 34



362


これは  30 点分の部分点に含まれる入力になります 



267 294 165



88577"
おいしいたこ焼きの作り方,https://atcoder.jp/contests/abc005/tasks/abc005_1,"高橋君はたこ焼き屋をはじめることにしました 
たこ焼きを１つ作るのに必要な小麦粉の量xグラムと 高橋くんが今持っている小麦粉の量yグラムが与えられるので高橋くんが最大でいくつたこ焼きを作れるか出力して下さい 

入力は以下の形式で標準入力から与えられる 

x　y

たこ焼きを１つ作るのに必要な小麦粉の量を表す整数x 1 x 100 と 高橋くんが今持っている小麦粉の量を表す整数y 1 y 100 が半角スペース区切りで与えられる 

高橋くんが最大でいくつたこ焼きを作れるか出力して下さい 
また 出力の末尾には改行を入れて下さい 


4 8



2


8 4 2



4 7



1


7 4 1 75



4 3



0


高橋くんは１つもたこ焼きを作ることができません"
おいしいたこ焼きの食べ方,https://atcoder.jp/contests/abc005/tasks/abc005_2,"高橋君は試作したたこ焼きを食べることにしました 
    

        高橋君は熱々のたこ焼きが好きなので できてすぐのたこ焼きから食べます 
    

        それぞれのたこ焼きが何秒前にできたかが与えられるので 一番できたてのたこ焼きが何秒前にできたか出力して下さい 
    

入力は以下の形式で標準入力から与えられる 

N
T1
T2
 
TN


１行目にたこ焼きの個数を表す整数 N 1 N 100  が与えられます 
続く N 行にはそれぞれのたこ焼きが何秒前にできたかを表す整数 Ti 1 Ti 100  が与えられます 


一番できたてのたこ焼きが何秒前にできたか出力して下さい 
また 出力の末尾には改行を入れて下さい 


3
1
2
3



1


一番できたてのたこ焼きは1秒前にできたものです 



3
3
3
3



3


たこ焼きはすべて 3 秒前にできたものです 


5
3
1
4
1
5



1"
おいしいたこ焼きの売り方,https://atcoder.jp/contests/abc005/tasks/abc005_3,"高橋君は たこ焼きをどの順番で売るか悩んでいました というのも 作り置きされたたこ焼きは美味しくないとわかっているので 高橋君はそのようなたこ焼きを売りたくないのですが できたてばかり売ってしまうと売れるたこ焼きの数が減ってしまいます 
    

        また お客さんを待たせてばかりだと 次第にお客さんが離れてしまうだろうと高橋君は考えています 
        そこで 彼は T 秒以内に作成されたたこ焼きを売り続けることで お客さんを捌ききれるかどうかを調べることにしました 


        たこ焼きは A 1 A 2   A N 秒後に焼きあがります 
        お客さんは B 1 B 2   B M 秒後にやってきます 
1 人のお客さんに対して たこ焼きを 1 つ売るとします すべてのお客さんにたこ焼きを売れるならyes 売れないならnoを出力して下さい 
    

入力は以下の形式で標準入力から与えられる 

T
N
A 1 A 2     A N
M
B 1 B 2     B M


1 行目に 何秒以内のたこ焼きまで売るかを表す整数T 1 T 100 が与えられます 
2 行目に 高橋君が作成するたこ焼きの総数を表す整数N 1 N 100 が与えられます 
3 行目に それぞれのたこ焼きが何秒後にできるかを表す整数 Ai 1 Ai 100 A1 A2     AN  が半角スペース区切りで N 個与えられます 
4 行目に 来店するお客さんの人数を表す整数M 1 M 100 が与えられます 
5 行目に それぞれのお客さんが何秒後に来るかを表す整数 Bi 1 Bi 100 B1 B2     BM  が半角スペース区切りで M 個与えられます 



        すべてのお客さんにたこ焼きをすぐ売れるならyes 売れないならnoを出力して下さい 
    

        また 出力の末尾には改行を入れて下さい"
おいしいたこ焼きの焼き方,https://atcoder.jp/contests/abc005/tasks/abc005_4,"高橋君のたこ焼き屋で使っているたこ焼き器は焼く場所によって美味しさの変わるクセの強いたこ焼き器です 
また 店員の力量によって一度に焼けるたこ焼きの数が違います 
高橋君はそれぞれの店員ができるだけ美味しくたこ焼きを焼けるようにしようと思いました 
たこ焼き器はN Nの正方形をしています 
それぞれの場所ごとにたこ焼きの美味しさD  ij が決まっています 
それぞれの店員は一度に焼けるたこ焼きの上限P kが決まっています 
また 一度に焼くたこ焼きは必ずたこ焼き器の長方形の部分になっていて その中の全てを使わなければなりません 
それぞれの店員について一度に焼けるたこ焼きの美味しさの合計の最大値を求めて下さい 
ただし 店員が焼き始める時はたこ焼き器が完全に空いていてどの場所でも使えるとします 

入力は以下の形式で標準入力から与えられる 

N
D  11  D  12      D  1N 
D  21  D  22      D  2N 
   
D  N1  D  N2      D  NN 
Q
P 1
P 2
   
P Q


１行目にたこ焼き器の一辺の大きさを表す整数N 1 N 50 が与えられます 
続くN行にたこ焼き器のそれぞれの場所で焼けるたこ焼きの美味しさを表す整数D  ij  1 D  ij  100 が与えられます 
次の行に店員の人数を表す整数Q 1 Q N 2 が与えられます 
続くQ行にそれぞれの店員が焼けるたこ焼きの数を表す整数P k 1 P k N 2 が与えられます 


それぞれの店員について一度に焼けるたこ焼きの美味しさの合計の最大値を出力して下さい 
また 出力の末尾には改行を入れて下さい 

1 N 5を満たすテストケース全てに正解すると 100点満点のうち 50点が与えられる 


3
3 2 1
2 2 1
1 1 1
3
1
4
9



3
9
14


１人目の店員は左上でたこ焼きを焼くと美味しさの合計が3になります 
２人目の店員は左上の2 2の範囲でたこ焼きを焼くと美味しさの合計が9になります 
３人目の店員はたこ焼き器全てを使えるので美味しさの合計が14になります 

これは部分点に含まれる入力になります 


3
1 1 1
1 1 1
9 9 9
1
4



27


一番下の列の範囲1 3でたこ焼きを焼くと美味しさの合計が27になります 
この店員はたこ焼きを４個焼くことができますが ３個しか焼かないほうが美味しさの合計が大きくなります 

これは部分点に含まれる入力になります"
世界のFizzBuzz,https://atcoder.jp/contests/abc006/tasks/abc006_1,"数字 N が与えられます 
            N に 3 が含まれる もしくは 3 で割り切れる場合はYES それ以外は NO と出力してください 
        

        入力は以下の形式で標準入力から与えられる 

N

        整数 N 1 N 9  が 1 行で与えられる 
    

N に 3 が含まれる もしくは 3 で割り切れる場合はYES それ以外は NO と出力してください 
        

			また 出力の末尾には改行を入れること 
		


2



NO


2 は 3 で割り切ることができません また 3 が含まれている数字でもありません 



9



YES


9 は 3 で割り切ることができます 



3



YES


3 は 3 で割り切ることができます"
トリボナッチ数列,https://atcoder.jp/contests/abc006/tasks/abc006_2,"トリボナッチ数列というものがあります この数列は3つ前までの数字を足したものです 
            厳密には 



a 1   0  a 2   0  a 3   1


a n   a  n 1    a  n 2    a  n 3 



            と定義されています 参考までに トリボナッチ数列表を掲載します 
        



 
a 1
a 2
a 3
a 4
a 5
a 6
a 7
a 8
   
a n




値
0
0
1
1
2
4
7
13
   
a  n 1  a  n 2  a  n 3 




            この数列の第 n 項 a n を 10007 で割った余りを求めてください 
        

        入力は以下の形式で標準入力から与えられる 

n

        整数 n 1 n 10 6  が 1 行で与えられる 
    

            トリボナッチ数列の第 n 項 a n を 10007 で割った余りを 1 行で出力してください 
        

			また 出力の末尾には改行を入れること 
		


7



7


7 番目のトリボナッチ数は 7 です 



1



0


最初のトリボナッチ数は 0 です 



100000



7927


a n を 10007 で割った余りを出力することに気をつけてください"
スフィンクスのなぞなぞ,https://atcoder.jp/contests/abc006/tasks/abc006_3,"新学期に向けて新たな気持ちで通学しているあなたの前に スフィンクスが立ちふさがっています 
            このスフィンクスは なぞなぞ を出すことで有名で このなぞなぞに答えられない場合 留年します 
        

            なぞなぞは以下のとおりです 
             この街には人間が N 人いる 人間は 大人 老人 赤ちゃんの 3 通りだ 
            この街にいる人間の 足の数の合計は M 本で 大人の足は 2 本 老人の足は 3 本 赤ちゃんの足は 4 本と仮定した場合 存在する人間の組み合わせとしてあり得るものを 1 つ答えよ  
        

            新学期早々留年したくないあなたは このなぞなぞに正解する必要があります 
            なぞなぞの答えとなる この街に存在する人間の組み合わせ を 1 つ出力してください 
            もし そのような組み合わせが存在しない場合は 1  1  1と出力してください 
        

        入力は以下の形式で標準入力から与えられる 

N M

        この街に住んでいる人間の数 N 1 N 10 5  この街に住んでいる人間の足の本数 M 1 M 5  times 10 5  が半角スペース区切りで 1 行で与えられる 
        
N と M は整数である 
この問題には部分点が設定されている 後述する部分点の項も参照すること 



            なぞなぞの答えとなる この街に存在する人間の組み合わせ を 1 つ出力してください 
            出力形式は  大人の数 老人の数 赤ちゃんの数 順番で 半角スペース区切りで 1 行に出力してください 
            もし そのような組み合わせが存在しない場合は  1  1  1 と出力してください 
        

			出力の末尾には改行を入れること 
		


            この問題には 3 つのデータセットがあり データセット毎に部分点が設定されている 
        


N 1 N 100  M 1 M 500  を満たすデータセット全てに正解すると 10 点が与えられる 
            

N 1 N 1 500  M 1 M 7 500  を満たすデータセット全てに正解すると 上記のデータセットとは別に 20 点が与えられる 
            

                全てのデータセットに正解すると 100 点が与えられる 
            



3 9



1 1 1


            入力は 人間が 3 人いて 足の数の合計が 9 本であることを示します 
        

            出力は 大人が 1 人 老人が 1 人 赤ちゃんが 1 であることを示しています 
        


                大人 1 人の足の数は 2 本 
            

                老人 1 人の足の数は 3 本 
            

                赤ちゃん 1 人の足の数は 4 本 
            


            人間の数が 3 人で 足の数を 9 本とする組み合わせの例です 
        


7 23



1 3 3



                大人 1 人の足の数は 2 本 
            

                老人 3 人の足の数は 9 本 
            

                赤ちゃん 3 人の足の数は 12 本 
            



10 41



 1  1  1



                なぞなぞの答えとなる組み合わせは存在しません"
トランプ挿入ソート,https://atcoder.jp/contests/abc006/tasks/abc006_4,"数字が書かれたカードが N 枚あります このカードの束 山札 に対して以下の操作が可能です 
        


                山札からカードを 1 枚抜き取り 任意の場所に挿入する 
            


            山札の上から下に向けて カードを昇順に並べ替えるために必要な 最小の操作回数を求めてください 
        

        入力は以下の形式で標準入力から与えられる 

N
c 1
c 2
 
c N



1 行目にはカードの枚数を示す整数 N 1 N 3  times 10 4  が与えられる 
            

2 行目からは N 行にわたって 山札の初期状態が与えられる 
                

c i は山札の上から i 番目にあるカードを示す整数で 1 c i N を満たす 
                        

c 1 が山札の一番上にあるカードで c N が山札の一番下にあるカードを示す 
                            



i  neq j ならば c i  neq c j である つまり N 枚のカードは全て異なる数字が書かれている 
                    





            山札の上から下に向けて カードを昇順に並べ替えるために必要な 最小の操作回数を求めてください 
        

			また 出力の末尾には改行を入れること 
		


            この問題には 3 つのデータセットがあり データセット毎に部分点が設定されている 
        


N 1 N 16  を満たすデータセット全てに正解すると 10 点が与えられる 
            

N 1 N 1 000  を満たすデータセット全てに正解すると 上記のデータセットとは別に 40 点が与えられる 
            

                全てのデータセットに正解すると 100 点が与えられる 
            



6
1
3
5
2
4
6



2


2 を抜いて 1 と 3 の間に入れます 
5 を抜いて 4 と 6 の間に入れます 



5
5
4
3
2
1



4



7
1
2
3
4
5
6
7



0"
植木算,https://atcoder.jp/contests/abc007/tasks/abc007_1,"問題文
小学生のたかはし君は 遠足で林にきています 遠足を楽しんでいる彼は 木が一直線に並んでいることに気づきました 
そして 授業で  植木算 というものを習ったことを思い出しました 彼が授業で習った植木算の問題は  木が 4 本 一直線に並んでいるとき 隣り合う木の 間 は何箇所存在するか  というもので その答えは図1の通り 3 箇所です 

図1  4本の木の間は3箇所

今回 遠足中の彼が見ている光景は その問題のシチュエーションとよく似通っていて 隣り合う木の間の数を数えたくなりました 
彼は遠足パンフレットに 一直線に生えている木々の本数が書かれていることに気づきました しかし 彼は実際に木の間を数える手段しか知らないので 本数によってはとても時間がかかってしまうかもしれません 
そこで あなたにお願いがあります 
一直線に並んでいる木々が n 本あるという情報が与えられるので 隣り合う木の間の数を出力するプログラムをたかはし君のために作ってあげてください 

入力
入力は以下の形式で標準入力から与えられる 

n


1 行目には 一直線に並んでいる木々の本数を表す整数 n  1   n   10 000  が与えられる 


出力
隣り合う木の間の数を 1 行に出力せよ 出力の末尾に改行をいれること 

入力例1

4


出力例1

3

問題文中で説明したケースであり 彼が授業で習った時の値設定です 

入力例2

100


出力例2

99

100本並んでいるので 間は99箇所あります 

入力例3

1


出力例3

0

1 本の木しかないので 0 と出力してください 

図2  サンプル3の図 木が1本のケース"
辞書式順序,https://atcoder.jp/contests/abc007/tasks/abc007_2,"問題文
文字列 A が与えられる 小文字アルファベット a z のみを使って辞書順比較したとき文字列 A より小さいものを1つ何でも良いので出力せよ ただし 文字列は 1 文字以上 100 文字以下でなければならない もし存在しない場合は   1  を出力せよ 
ただし ある文字列 S S 1S 2   S n と T T 1T 2   T m について 辞書順比較した際に S T であるとは 次のどちらか一方の状態が成り立っていることを言う 

ある整数 i  1 i   rm min  n m   に関して  1 j i 1 を満たすどの整数 j に関しても S j T j が成立し かつ S i T i が成立する
任意の整数 i  1 i   rm min  n m   に関して  常に S i T i が成立し かつ  S   T  である ただし  X  は文字列 X の長さを表すものとする 

なにやら頭が痛くなる記述だが 言い換えると次の通りである 

それぞれの文字列の同じ位置同士を先頭から比較していって 初めて不一致になったら その文字同士の アルファベットでの 比較結果が文字列の全体の比較結果である  例えば  abcd  と  ax  を比較すると 2 文字目で  b   x  となるので  abcd   ax  である 
もし 比較している途中で片方の文字列が尽きてしまったら 文字列の長さが短い方が小さい 例えば  ab     abc である 


入力
入力は以下の形式で標準入力から与えられる 

A


1 行目には 文字列 A  1    A    11  が与えられる  A は文字列  A  の長さを表す Aは小文字アルファベット a z のみから成る 


出力
文字列 A より小さい文字列を 1 つ 1 行に出力せよ ただし 小文字アルファベット a z のみを用いており 長さは1以上100以下でなければならない 解が複数ある場合はどれを出力しても良い 存在しない場合は 代わりに   1  を出力すること 出力の末尾に改行をいれること 

入力例1

xyz


出力例1

xy

もちろん  xy  の他に  abcd  等を出力しても正答として扱われる 

入力例2

c


出力例2

b

 a  もしくは  b  が正答として扱われる 

入力例3

a


出力例3

 1

 a  より小さい文字列は存在しない 出力する文字列は長さ1以上でなければならないため    空文字列 は不適切であることに注意せよ 

入力例4

aaaaa


出力例4

aaaa"
幅優先探索,https://atcoder.jp/contests/atc002/tasks/abc007_3,"問題文
たかはし君は迷路が好きです 今 上下左右に移動できる二次元盤面上の迷路を解こうとしています 盤面は以下のような形式で与えられます 

まず 盤面のサイズと 迷路のスタート地点とゴール地点の座標が与えられる 
次に それぞれのマスが通行可能な空きマス   か通行不可能な壁マス   かという情報を持った盤面が与えられる 盤面は壁マスで囲まれている スタート地点とゴール地点は必ず空きマスであり スタート地点からゴール地点へは 空きマスを辿って必ずたどり着ける 具体的には 入出力例を参考にすると良い 

今 彼は上記の迷路を解くのに必要な最小移動手数を求めたいと思っています どうやって求めるかを調べていたところ  幅優先探索 という手法が効率的であることを知りました 幅優先探索というのは以下の手法です 

スタート地点から近い たどり着くための最短手数が少ない マスから順番に たどり着く手数を以下のように確定していく 説明の例として図1の迷路を利用する 


図1  説明に用いる盤面

最初に スタート地点は スタート地点から手数0でたどり着ける 当然 ので 最短手数0で確定させる 図2  


図2  最短手数0でたどり着けるマスが確定 初期 

次に スタート地点の四近傍 上下左右 の空きマスについて 手数1で確定させる 図3  


図3  最短手数1でたどり着けるマスが確定

次に 手数1で確定したそれぞれのマスの4近傍を見て まだ確定していない空きマスがあればそのマスを手数2で確定させる 図4  


図4  最短手数2でたどり着けるマスが確定

次に 手数2で確定したそれぞれのマスの4近傍を見て まだ確定していない空きマスがあればそのマスを手数3で確定させる 図5  


図5  最短手数3でたどり着けるマスが確定

次に 手数3で確定したそれぞれのマスの4近傍を見て まだ確定していない空きマスがあればそのマスを手数4で確定させる 図6  


図6  最短手数4でたどり着けるマスが確定

上記の手順を確定の更新が無くなるまで繰り返すと スタート地点からたどり着ける全ての空きマスについて最短手数が確定する 図7  スタートとゴールは必ず空きマスを辿ってたどり着けるという制約があるので ゴール地点への最短手数も分かる 


図7  すべてのたどり着けるマスへの最短手数が確定
さて この処理をスマートに実装するためには 先入れ先出し FIFO のキュー Queue というデータ構造を用いると良いことが知られています もちろん 使わなくても解くことは可能です 今回 よく分からなければ思いついた方法で解くことをおすすめします 先入れ先出しのキューとは以下のような機能を持つデータ構造です 

追加 Push   キューの末尾にデータを追加する 
取り出し Pop   キューの先頭のデータを取り出す 

このデータ構造を使うと 先ほどの幅優先探索の説明における マスの最短手数の確定 のタイミングでその確定マスをキューに追加し 追加操作が終わればPopを行い 取り出したマスの4近傍を調べるということを繰り返せば つまり先に追加されたものから順番に処理していけば  簡潔に処理ができることが分かります 

入力
入力は以下の形式で標準入力から与えられる 

R  C
sy  sx
gy  gx
c   1 1  c   1 2       c   1 C  
c   2 1  c   2 2       c   2 C  
 
c   R 1  c   R 2       c   R C  


1 行目には 行数 R 1 R 50 と列数 C 1 C 50 がそれぞれ空白区切りで与えられる 
2 行目には スタート地点の座標  sy sx  が空白区切りで与えられる スタート地点が sy 行 sx 列にあることを意味する  1 sy R　かつ 1 sx C である 
3 行目には ゴール地点の座標  gy gx  が空白区切りで与えられる ゴール地点が gy 行 gx 列にあることを意味する  1 gy R　かつ 1 gx C であり  gy gx   sy sx であることが保障されている 
4 行目から R 行 長さ C の文字列が 1 行ずつ与えられる 各文字は   もしくは   のいずれかであり i 回目  1 i R  に与えられられる文字列のうち j 文字目  1 j C  について その文字が   なら マス  i j  が空きマスであり   なら マス  i j  が壁マスであることをあらわす 
盤面は壁マスで囲まれている つまり i 1 i R j 1 j C のうちいずれか1つでも条件を満たすマス  i j  について c   i j   は  である また スタート地点とゴール地点は必ず空きマスであり スタート地点からゴール地点へは 空きマスを辿って必ずたどり着ける 


出力

スタート地点からゴール地点に移動する最小手数を 1 行に出力せよ 最後に改行を忘れないこと 


入力例1

7 8
2 2
4 5
        
        
        
        
        
        
        


出力例1

11

問題文中の例です 

入力例2

5 8
2 2
2 4
        
        
        
        
        


出力例2

10

図8のように進めば 10 手でたどり着くことが進むことができます  Sはスタート Gはゴールをあらわす  

図8  入出力例2において最小手数10を達成する進み方

入力例3

50 50
2 2
49 49
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  


出力例3

94

もはやただの広い空間であり 迷路と呼んで良いのかは分からないがこの問題でこのような盤面も迷路として扱う 兎にも角にも スタートからゴールへの最短手数は 94 である"
禁止された数字,https://atcoder.jp/contests/abc007/tasks/abc007_4,"問題文
たかはし王国の国王であるたかはし君主は数字の 4 と 9 が大嫌いです それらの数字を国内で目にするだけで気分が悪いので それらを使ってはいけないという法律を定めました この法律を破ってしまうと罰せられます 数字が禁止されているので ある数の10進表現を考えたとき いずれかの桁に禁止された数字が1つでも含まれている場合 その数を使うことはできません 
今まで使っていた数字を使えなくなったあなたは うっかり使ってしまって罰せられては困るので 使う可能性がある数の区間  A B    A A 1 A 2     B   に いくつ禁止された数が含まれているかを確かめることにしました そのためのプログラムを作ってください 

部分点
この問題には2つのデータセットがあり データセット毎に部分点が設定されている 

1   A   B   10 000 を満たすデータセット 1 に正解した場合は 30 点が与えられる 
追加制約のないデータセット 2 に正解した場合は 上記のデータセットとは別に 70 点が与えられる 


入力
入力は以下の形式で標準入力から与えられる 

A B


1 行目には 整数 A B  1 A B 10  18   が空白区切りで与えられる 


出力
区間  A B  に含まれる禁止された数がいくつ含まれているかを 1 行に出力せよ 出力の末尾に改行をいれること 

入力例1

1 9


出力例1

2

4 と 9 が禁止されています 

入力例2

40 49


出力例2

10

40   49 は全て禁止された数です 

入力例3

1 1000


出力例3

488


入力例4

1 1000000000000000000


出力例4

981985601490518016"
アルバム,https://atcoder.jp/contests/abc008/tasks/abc008_1,nan
投票,https://atcoder.jp/contests/abc008/tasks/abc008_2,"問題文
とある組織で リーダーを選ぶ選挙が行われた 
組織は N 人の構成員で構成されており 各人は最もリーダーにふさわしい人物の名前を書いた 
リーダーは 得票数が最も多い人物が選ばれることになっている 
得票数が最も多い人物の名前を出力せよ 得票数が最も多い人物が複数いる場合は そのうちどの名前を出力してもよい 

入力
入力は以下の形式で標準入力から与えられる 

N
S 1
S 2
 
S N


1 行目には 組織の構成員の人数を表す整数 N  1   N   50  が与えられる 
2 行目から N 行では それぞれの構成員の投票内容を表す N 行のうち i  1   i   N  行目には文字列 S i が書かれている S i は i 番目の人の投票内容を表している S i は小文字の半角英字のみで構成されており 長さは 1 文字以上 50 文字以下である 


出力
得票数が最も多い人物の名前を出力せよ 得票数が最も多い人物が複数いる場合は そのうちどの名前を出力してもよい 出力の末尾にも改行を入れること 

入力例1

4
taro
jiro
taro
saburo


出力例1

taro

taro が 2 票 jiro と saburo が 1 票ずつです 

入力例2

1
takahashikun


出力例2

takahashikun

takahashikun 以外の投票がありません 

入力例3

9
a
b
c
c
b
c
b
d
e


出力例3

b

b が 3 票で最多ですが c も 3 票で同様に最多なので c を出力しても正解となります"
コイン,https://atcoder.jp/contests/abc008/tasks/abc008_3,"問題文
高橋君は裏表が区別できる N 枚のコインを持っている コインの大きさは異なり それぞれのコインには 1 つずつ正の整数が書かれている 
これらのコインを無作為に  N  通りの組み合わせがすべて同じ確率で出てくるように  一列に並べる その後 以下の手順を実行する 

すべてのコインを表向きにする 
左端のコインから順に 現在見ているコインよりも右側  それ自身を除く  にあるコインのうち 現在見ているコインに書かれている整数の倍数が書かれているコインすべての裏表をひっくり返す 

高橋君はこの操作を終了した後に表を向いているコインの枚数の期待値が知りたい 
あなたは高橋くんの代わりに 期待値を計算するプログラムを作成してほしい 

入力
入力は以下の形式で標準入力から与えられる 

N
C 1
C 2
 
C N


1 行目には コインの枚数を表す整数 N  1   N   100  が与えられる 
2 行目から N 行のうち i  1   i   N  行目には i 番目に大きいコインに書かれている整数 C i  1   C i   10 9  が書かれている 


部分点
この問題には部分点が設定されている 

N   8 を満たすデータセット 1 に正解した場合は 99 点が与えられる 
追加制約のないデータセット 2 に正解した場合は さらに 1 点が与えられ 合計で 100 点が得られる 


出力
表を向いているコインの枚数の期待値を出力せよ 絶対誤差または相対誤差が 10   6  以下であれば許容される 出力の末尾にも改行を入れること 

入力例1

3
2
4
8


出力例1

2 166666666667

コインには サイズの小さい方から順にそれぞれ 2   4   8 という数が書かれています 例えば 3  通りの並べ方のうち コインが大きさの昇順に並んでいる場合は 以下の手順が行われることになります 

初期状態で すべてのコインを表に向けるので コインは左から順に  表  表  表  となっています 
次に 左から 2 番目以降のコインの中で 2 の倍数が書かれたコインを探します 左から 2 番目のコインと左から 3 番目のコインが該当するので これらのコインを裏返します その結果 コインは左から順に  表  裏  裏  となります 
次に 左から 3 番目以降のコインの中で 4 の倍数が書かれたコインを探します 左から 3 番目のコインのみが該当するので このコインを裏返します その結果 コインは左から順に  表  裏  表  となります 

コインの裏表は下図のように変化します この図において 白いコインは表向きのコイン 黒いコインは裏向きのコインで表してあります 

このように 3    6 通りの並べ方について それぞれの並べ方での最終状態は下図のようになります 

以上より期待値は 13 6   2 16666666666    となります 

入力例2

4
5
5
5
5


出力例2

2 000000000000

どのような順番で並べても 左から順に  表  裏  表  裏  となります 

入力例3

5
2
3
2
6
12


出力例3

3 100000000000"
金塊ゲーム,https://atcoder.jp/contests/abc008/tasks/abc008_4,"問題文
高橋君はとあるゲームをプレイしている このゲームでは縦横方向に無限に広がるマス目の上で行われる 各マス目は正方形状で 各辺は東西方向または南北方向に平行である マス目のうちあるマスには  0 0  という数字の組が割り当てられており このマスから東方向に x マス  x 0 のときは西方向に  x マス 進み 北方向に y マス  y 0 のときは南方向に  y マス 進んだところにあるマスには  x y  という数字の組が割り当てられている 
マス目上には W   H 個の金塊がある これらの金塊は 1   p   W かつ 1   q   H を満たすすべてのマス  p q  に 1 個ずつ置かれている また 金塊があるマスのうちちょうど N マスには金塊回収装置がある 装置には 1 から N までの番号が付いている どの 2 つのマス  a b     c d  に関しても 2 つのマスの両方に装置があるならば a c かつ b d である また 複数の装置が同じマスにあることはない 最初 どの金塊回収装置も作動していない 
金塊回収装置は作動すると まずは装置のあるマスにある金塊を回収する その後 東西南北それぞれの方向にクレーンを伸ばすことで更に金塊を回収することができる クレーンの性質上 クレーンを下ろす場所には金塊がなく かつ回収する区間では金塊が連続して存在していなければならない つまり クレーンのあるマスを  x y  としたとき 以下に示す条件でのみクレーンを下ろし 金塊を回収することができる 


東方向に回収する処理 次の条件を満たす整数 p を選ぶ その後 x 1   i   p 1 を満たすすべてのマス  i y  の金塊を回収する 


条件 p   x 1 であり x 1   i   p 1 を満たすすべてのマス  i y  に金塊があり かつマス  p y  に金塊がない 




西方向に回収する処理 次の条件を満たす整数 p を選ぶ その後 p 1   i   x 1 を満たすすべてのマス  i y  の金塊を回収する 


条件 p   x 1 であり p 1   i   x 1 を満たすすべてのマス  i y  に金塊があり かつマス  p y  に金塊がない 




南方向に回収する処理 次の条件を満たす整数 q を選ぶ その後 q 1   j   y 1 を満たすすべてのマス  x j  の金塊を回収する 


条件 q   y 1 であり q 1   j   y 1 を満たすすべてのマス  x j  に金塊があり かつマス  x q  に金塊がない 




北方向に回収する処理 次の条件を満たす整数 q を選ぶ その後 y 1   j   q 1 を満たすすべてのマス  x j  の金塊を回収する 


条件 q   y 1 であり y 1   j   q 1 を満たすすべてのマス  x j  に金塊があり かつマス  x q  に金塊がない 




それぞれの方向に関して 条件を満たす p または q が存在しない場合は その方向にクレーンを伸ばすことができない 
また それぞれの方向に関して 金塊を回収可能ならば 必ず回収しなければならない 下に条件を満たす回収方法の一例を示す ただし 以降の図において装置を M の記号で表し 回収可能な範囲は太枠で表している 

高橋君はすべての装置を順番を決めて作動させるつもりである 作動の順番によっては 最終的に得られる金塊の個数が変化するかもしれない 金塊が大好きな高橋君は 最終的に得られる金塊の個数をできるだけ多くしようと考えている 
あなたは高橋くんの代わりに 最大値を計算するプログラムを作成してほしい 

入力
入力は以下の形式で標準入力から与えられる 

W H
N
X 1 Y 1
X 2 Y 2
 
X N Y N


1 行目には 金塊の個数と配置に関する 2 つの整数 W  1   W   10 6  と H  1   H   10 6  が空白区切りで与えられる 
2 行目には 金塊回収装置の個数を表す整数 N  1   N   30  が与えられる 
3 行目から N 行のうち i  1   i   N  行目には i 番目の装置があるマスに関する 2 つの整数 X i  1   X i   W  と Y i  1   Y i   H  が空白区切りで与えられる これは i 番目の装置がマス  X i   Y i  にあることを表す 

また この入力では さらに以下の条件も満たされる 

任意の 2 つの整数 i j  1   i   j   N  について X i   X j かつ Y i   Y j である 


部分点
この問題には部分点が設定されている 

N   8   W   80   H   80 を満たすデータセット 1 に正解した場合は 80 点が与えられる 
W   80   H   80 を満たすデータセット 2 に正解した場合は さらに 19 点が与えられ 合計で 99 点が得られる 
追加制約のないデータセット 3 に正解した場合は さらに 1 点が与えられ 合計で 100 点が得られる 


出力
回収可能な金塊の個数の最大値を出力せよ 出力の末尾にも改行を入れること 

入力例1

6 4
3
2 4
3 1
4 3


出力例1

19

入力例 1 において 初期状態は以下のようになっています 

以下に示すように 1 番目 2 番目 3 番目の装置という順番で実行することにより 19 個の金塊を回収できます 


入力例2

3 3
3
1 1
2 3
3 2


出力例2

9

うまく稼働させればすべての金塊を回収することができます 

入力例3

15 10
8
7 10
12 8
4 4
5 7
9 9
1 6
6 5
3 2


出力例3

112"
引越し作業,https://atcoder.jp/contests/abc009/tasks/abc009_1,"問題文
高橋君は引越し作業の真っ最中です 荷物をすべてダンボールにまとめ終え ちょうどいま家の前にトラックが到着したところです 高橋君は N 個あるダンボールをすべてトラックまで運ぶ必要があります 
ダンボールはとても重いですが 高橋君は力持ちなので片手で 1 つのダンボールを持つことができます つまり 家とトラックの間を 1 往復するときに最大でそれぞれの手にダンボールを 1 個ずつ 合計で 2 個のダンボールをいちどに持って運ぶことができます 
ダンボールの個数が多いため 高橋君は N 個すべてのダンボールを運びきるために家とトラックの間を最低何往復しなければならないのかが気になりました 

入力
入力は以下の形式で標準入力から与えられる 

N


1 行目には ダンボールの個数を表す整数 N  1   N   1 000  が与えられる 


出力
ダンボールをすべて運びきるために必要な最低の往復回数を 1 行に出力せよ 
出力の末尾にも改行をいれること 

入力例1

2


出力例1

1

2 個のダンボールは 1 回の往復で運びきることができます 

入力例2

5


出力例2

3

たとえば はじめの 2 回は 2 個のダンボールを運び 最後の 1 回で残った 1 個のダンボールを運びます 

入力例3

1


出力例3

1

ダンボールが 1 個しかない場合でも 1 往復はする必要があります"
心配性な富豪、ファミリーレストランに行く。,https://atcoder.jp/contests/abc009/tasks/abc009_2,"問題文
私は富豪だ それも大富豪と言っていいぐらいお金を持っている 欲しいと思ったものはまずこの有り余るお金を使って買うことができる しかし この底の尽きないように思えるほどのお金でさえ人の心を買うことはできない いくらお金があろうとも ひとたび多くの庶民の反発を買ってしまえば これまでのように生きていくことは難しくなるだろう 
この度私は庶民の気持ちを理解するため 初めてファミリーレストランという場所を訪れた メニューを広げ 料理の内容とその金額を確かめると なるほど驚きの安さである どの料理の金額も取るに足らないようなものだから とりあえず最も金額が高いものを選ぼうかと考えた 
しかし 考えてみれば 私は何のためにファミリーレストランに来たのであったか 庶民の気持ちを理解しようというのに 金額のことを考えずに最も高いものを選ぼうなどと まるで意味がないではないか ファミリーレストランに来たうえ これ見よがしに最も高い料理を注文したとなったら 私の悪評が広まってしまう可能性だってある 
とはいえ せっかくだから高いものを選んでその味をみてみたいというのも確かである そうだ そういうことなら この店で 2 番目に高い料理を注文することにしよう そう思って料理の金額を書き出してみたが 料理の種類が多いために 2 番目に高いものを探すのはなかなか骨が折れる 自分で探すかわりに プログラムを書いてなんとかできないだろうか 
おっと プログラムを書き始める前にひとつ言っておくが 最も高い金額の料理が複数あるときには注意してもらいたい というのは たとえば 4 種類の料理があり それぞれの金額が 100 円 200 円 300 円 300 円であったときには 2 番目に高いものというのは 200 円の料理になるということだ 

入力
入力は以下の形式で標準入力から与えられる 

N
A 1
A 2
 
A N


1 行目には 料理の種類の個数を表す整数 N  2   N   100  が与えられる 
2 行目から N 行では それぞれの料理の金額が与えられる N 行のうち i 行目には整数 A i  1   A i   1 000  が書かれており これは i 番目の料理の金額が A i 円であることを表す すべての料理の金額が同じであることはない 


出力
N 個の料理のうち 2 番目に高いものの金額を 1 行に出力せよ 
出力の末尾にも改行をいれること 

入力例1

4
100
200
300
300


出力例1

200

問題文にも出てきた例です この場合 最も高い料理が 300 円で その次に高い料理は 200 円のものになります 

入力例2

5
50
370
819
433
120


出力例2

433


入力例3

6
100
100
100
200
200
200


出力例3

100"
辞書式順序ふたたび,https://atcoder.jp/contests/abc009/tasks/abc009_3,"問題文
文字列の辞書式順序による比較についてはご存知だろうか 知らない場合は ABC007 の B 問題にその定義が載っているので読むとよいだろう 
今回は この辞書式順序が重要な役割を果たす問題を解いてもらいたいと思う 
まず 英小文字 a z のみからなる N 文字の文字列 S が与えられる S   S 1   S 2         S N の文字を並び替えて作れるような文字列 T   T 1   T 2         T N のうち 辞書順で最小になるようなものを求めてほしい 
ただし 並び替え方には 1 つだけ制限がある 別に整数 K が与えられ 元から位置の変わった文字の個数を K 以下にしなければならない つまり S i   T i となるような 文字が不一致となるような  i  1   i   N の個数が K 以下であるような並び替え方しかできない 
 この問題は普段の ABC の C 問題に比べ難しくなっています 下のボタンを押すことで ヒントとしてこの問題を解くためのアイデアの説明を読むことができます じっくり取り組んでみてください 
ヒントを表示する


	重要な点は 辞書順で最小を目指すときには 
	文字列の先頭にできるだけ小さいアルファベットがある方がよい
	 ということです なので まずは T の 1 文字目をできるだけ小さいアルファベットにすることを考えましょう 

S の文字のうち 小さいアルファベットから順に T の先頭にできるかを試していって 最初にできるとわかった文字が T の 1 文字目として決まります 次は残った文字のうち小さいものから順に T の 2 文字目にできるか試していき 3 文字目 4 文字目と同様に決めていきます 入出力例2 でもう少し具体的な説明をしています  
試すときに必要なのは T をある文字列 t で始めることができるか  を判定することです これは S のうちまだ t で使っていない文字をうまく並び替えて S の後ろのほうとの文字の不一致の数をできるだけ少なくし 全体として不一致の数を K 以下にできるかどうかで判定できます 
たとえば S   program K   3 で T の最初 3 文字を aro にできるかを判定したいとします このとき すでに aro と S の先頭 3 文字 pro で不一致が 1 つあるので 残りの部分で不一致の数を 2 以下にしないといけません つまり まだ使っていない文字 pgrm をうまく並び替えて S の後ろのほうである gram との不一致の数をできるだけ減らして 2 以下にできれば OK です 
この方法と 判定の部分を具体的にどうプログラムにするかについては自力で頑張ってみましょう 


入力
入力は以下の形式で標準入力から与えられる 

N K
S


1 行目には文字列の文字数を表す整数 N  1   N   100  と 位置を変えてよい文字数の上限を表す整数 K  0   K   N  が与えられる 
2 行目には英小文字のみからなる N 文字の文字列 S が与えられる 


出力
S の文字を並び替えて作れるような文字列で しかも元から位置の変わった文字の個数が K 個以下であるようなもののうち 辞書式順序で最も小さくなるような文字列を 1 行に出力せよ 
出力の末尾にも改行をいれること 

入力例1

3 2
abc


出力例1

abc


	位置の変わった文字の個数は 2
以下
	 でなければならないので まったく並び替えをしなくても構いません 

このケースでは 並び替えをまったくしない場合が最も小さくなります 

入力例2

7 2
atcoder


出力例2

actoder



		まず T の先頭の文字を a  元の文字列 atcoder のうち最も小さいアルファベット にできるかについて考えます 
		
今回は元から S の先頭の文字が a であるため T の先頭の文字を a にすることができます  たとえば並び替えをまったくせず S   T とすれば T の先頭の文字を a にできることが確かめられます 
なので T の 1 文字目が a に決まります 



		次に 2 文字目を c にできるかについて考えます 
		
T の最初の 2 文字が ac であるとすると この時点で少なくとも c は元の位置から場所が変わっています 
なので S の 3 文字目以降である coder に対して まだ T に使っていないアルファベット deort をうまく並べて 位置の変わった文字の個数を 1 以下にできるかどうかを考える必要があります 
今回は deort を並び替えて toder とすれば T   actoder となって 位置の変わった文字の個数が 2 で済ませられます 
よって 2 文字目が c と決まります 



		次に 3 文字目を d にできるかについて考えます 
		
T の最初の 3 文字が acd であるとすると この時点で c と d は元の位置から場所が変わっています 
なので 4 文字目以降ではこれ以上元の位置から文字を動かしてはいけないことになります 
しかし まだ T に使っていないアルファベット eort をどのように並べても S の 4 文字目以降である oder とぴったり一致させることはできません 
なので 3 文字目を d にすることはできません 



d がだめだったので 3 文字目に e を使えるかを考えます 
		
さきほどの d の場合と同じように 3 文字目を e にすることもできません 



e もだめだったので 3 文字目に o が使えるかを考えます 
		
   


   

このようにして最初の文字から順に まだ使っていない文字のなかで最も小さいアルファベットが使えるかどうか を順に試していくことで答えである actoder に辿り着くことができます 

入力例3

7 7
atcoder


出力例3

acdeort

K   7 なので 好きなように並び替えをして構いません 問題文にもあるように この場合はアルファベット順に並べることで最小の文字列を作ることができます 

入力例4

10 3
helloworld


出力例4

dehloworll"
漸化式,https://atcoder.jp/contests/abc009/tasks/abc009_4,"問題文
数列 A はすべての要素が 32 ビットの符号なし整数で表現でき その値は次のようにして決まる 

はじめの K 項 A 1   A 2         A K は入力で与えられる 

A とは別に K 項の数列 C 1   C 2         C K  こちらもすべての要素が 32 ビットの符号なし整数におさまる が入力で与えられ K 1 項目以降の A の値はこの C を用いて次のように計算される 
		
N   1 に対し A  N K     C 1  AND  A  N K 1    XOR   C 2  AND  A  N K 2    XOR        XOR   C K  AND  A N 
ただし AND はビットごとの論理積  XOR はビットごとの排他的論理和を表す 



この数列 A の M 番目の値 A M を求めるプログラムを作成せよ 

入力
入力は以下の形式で標準入力から与えられる 

K M
A 1 A 2     A K
C 1 C 2     C K


1 行目には はじめに決まっている項の数を表す整数 K  1   K   100  および数列の求める項の番号を表す整数 M  1   M   10 9  が与えられる 
2 行目には 数列 A の最初の K 項が順に与えられる A の値はすべて 32 ビット符号なし整数におさまる 
3 行目には 数列 A の K 1 項目以降を計算するときに使う数列 C の要素が順に与えられる C の値はすべて 32 ビット符号なし整数におさまる 


出力
A M の値を 1 行に出力せよ 
出力の末尾にも改行をいれること 

入力例1

3 5
10 20 30
7 19 13


出力例1

16

実際に A の値を計算していくと次のようになる 

A 4    7  AND  30   XOR   19  AND  20   XOR   13  AND  10    30
A 5    7  AND  30   XOR   19  AND  30   XOR   13  AND  20    16


入力例2

5 100
2345678901 1001001001 3333333333 3141592653 1234567890
2147483648 2147483647 4294967295 4294967294 3434343434


出力例2

1067078691


入力例3

30 999999999
11627 5078 8394 6412 10346 3086 3933 668 9879 11739 4501 6108 12336 8771 2768 2438 2153 7047 5476 313 1264 369 12070 10743 10663 747 370 4671 5235 3439
114 3613 3271 5032 11241 6961 3628 150 12191 2396 7638 3046 11594 8162 11136 786 9878 2356 11660 1070 3649 10882 9746 1415 3307 7077 9319 9981 3437 544


出力例3

2148"
ハンドルネーム,https://atcoder.jp/contests/abc010/tasks/abc010_1,"問題文
高橋君の秘書のなぎさちゃんは 高橋君からハンドルネームを貰いました 
しかし 残念なことに このハンドルネームは 既に登録しようとしたサービスで使われてしまっていました 
仕方がないので なぎさちゃんが好きなC  に肖って ハンドルネームの末尾にppを付けることにしました 
元のハンドルネームが入力されるので 新しいハンドルネームを出力してください 

入力
入力は以下の形式で標準入力から与えられる 

S


1 行目には 元のハンドルネーム S  1    S    10  が与えられる 
S に含まれる文字は 全て小文字アルファベットであることが保障されている 


出力
新しいハンドルネームを 1 行で出力せよ 出力の末尾にも改行をいれること 

入力例1

chokudai


出力例1

chokudaipp

ハンドルネームがchokudaiなので それにppを足したものが 新しいハンドルネームになります 

入力例2

sanagi


出力例2

sanagipp"
花占い,https://atcoder.jp/contests/abc010/tasks/abc010_2,"問題文
高橋君の秘書のなぎさちゃんは 高橋君が大好きです つまり 高橋君もなぎさちゃんの事が大好きであるに違いありません 
そのことを確認するために 庭に咲いている花で 花占いをすることにしました 
 好き   嫌い   好き   嫌い   好き   嫌い    
おかしいです 高橋君はなぎさちゃんの事が好きであるはずなのに 花占いの結果は 嫌い でした 
これは 花が悪いに違いありません 
なぎさちゃんは 使用人達に 花占いの結果が 嫌い にならないように 花びらを毟るよう命じました 
なぎさちゃんの花占いは 2つのパターンがあります 
一つは  好き  嫌い を交互に言いながら 花びらを 1 枚ずつ毟っていくパターンです 
もう一つは  好き  嫌い  大好き の 3 つを繰り返しながら 花びらを1枚ずつ毟っていくパターンです 
どちらのパターンにおいても 最後に言った言葉が 花占いの結果となります 
なぎさちゃんの使用人であるあなたは なぎさちゃんがどちらのパターンで花占いをしたときも  嫌い にならないように 
花びらを事前に毟ってあげる必要があります 
庭に咲いている花の数と その花びらの枚数が与えられるので 花びらを毟る必要のある枚数を出力してください 

入力
入力は以下の形式で標準入力から与えられる 

n
a 1 a 2     a n


1 行目には 庭に咲いている花の数を表す整数 n  1   n   10   が与えられる 
2 行目では それぞれの花の花びらの枚数に関する情報が スペース区切りで与えられる  i 番目の花の花びらの枚数は  i 番目に与えられる整数 a i  1   a i   9 によって与えられる 


出力
毟る必要のある花びらの枚数を 1 行で出力せよ 出力の末尾には改行をいれること 

入力例1

3
5 8 2


出力例1

4

最初の花に注目します 

花びらの数が 5 枚の時 2 つ目のパターンの花占いで  好き  嫌い  大好き  好き  嫌い となり  嫌い になってしまうので 花びらを毟らなければなりません 
花びらの数が 4 枚の時 1 つ目のパターンの花占いで  好き  嫌い  好き  嫌い となり  嫌い になってしまうので 花びらを毟らなければなりません 
花びらの数が 3 枚の時 1 つ目のパターンで 好き  2 つ目のパターンで 大好き となるため 花びらを毟る必要がありません 

同様に 花びら 8 枚の花は 7 枚に 花びら 2 枚の花は 1 枚にすることにより  嫌い になることを防ぐことが出来ます 
花びらを毟る必要のある枚数の合計は 2   1   1   4 枚となります 

入力例2

9
1 2 3 4 5 6 7 8 9


出力例2

8"
浮気調査,https://atcoder.jp/contests/abc010/tasks/abc010_3,"問題文
高橋君の秘書のなぎさちゃんは 高橋君が大好きです 今日も高橋君に電話をかけてみることにしました 
すると どうでしょう 　電話口から 高橋君の声以外の 女の声が聞こえてきます 
なぎさちゃんは 高橋君と付き合ってはいませんが 高橋君に悪い虫が付いたら大変なので 浮気調査を行うことにしました 
高橋君の携帯に仕込んだアプリケーションから 高橋君の居場所をGPSで取得すると 高橋君は 電話をかける前は座標  tx a  ty a  に 
電話をかけた後は 座標  tx b  ty b  にいることがわかりました また この間にかかった時間は T 分です 
高橋君は 最大毎分 V の距離を移動することが可能であり 家などの障害物を無視して同じ速度で移動することが可能です 
なぎさちゃんは このデータを元に 高橋君が 近所の女の子の家に寄っていないかを調査することにしました 
近所の女の子は n 人おり それぞれ座標  x i  y i  に住んでいます 
高橋君が 他の女の子の家に寄った可能性が少しでもある場合はYES そうでない場合はNOと出力しなさい 

入力
入力は以下の形式で標準入力から与えられる 

tx a ty a tx b ty b T V
n
x 1 y 1
x 2 y 2
 
x n y n


1 行目には 高橋君の電話前の座標を表す整数 tx a  ty a  0   tx a  ty a   1000  電話後の座標を表す整数 tx b  ty b  0   tx b  ty b   1000  移動に掛かった時間を表す整数 T  1   T   50  高橋君の毎分の速度を表す整数 V  1   V   100 がスペース区切りで与えられる 
2 行目には 浮気調査の対象となる女の子の数 n  1   n    1000  が与えられる 
3 行目から n 行では 女の子の家の情報が与えられる このうち i 行目では i 番目の女の子の家の座標を表す整数 x i  y i  0   x i  y i   1000  が与えられる 
高橋君が 座標  tx a  ty a  から 座標  tx b  ty b まで真っ直ぐ毎分 V 移動した時に T 分より長くかかってしまうような入力は与えられない 


出力
高橋君が 他の女の子の家に寄ることが可能であればYES そうでなければNOを 1 行で出力せよ 出力の末尾にも改行をいれること 

入力例1

1 1 8 2 2 4
1
4 5


出力例1

NO

高橋君が  1 1  から  8 2  に移動した際に  4 5  の家に寄ることが可能かどうか考えます 

 1 1 から 4 5 に移動する際  sqrt  4 1  2    5 1  2    5となるため 移動距離は 5
 4 5 から 8 2 に移動する際  sqrt  8 4  2    2 5  2    5となるため 移動距離は 5

となり 総移動距離は10となります 
高橋君が移動可能な距離は 2 分間で 分速 4 なので  8 までしか移動することが出来ません 
よって 高橋君がこの家に寄る事は不可能なため NOと出力します 

入力例2

1 1 8 2 2 6
1
4 5


出力例2

YES

入力例1と同じ配置ですが 高橋君の移動速度が 6 に変わっています 
高橋君の移動可能距離が 12 になったので 今度は家に寄ることが可能となっています 
よって YESと出力します 

入力例3

1 1 8 2 2 5
1
4 5


出力例3

YES

ぴったり移動可能な場合も 寄ること自体は可能なので YESと出力します 

入力例4

7 7 1 1 3 4
3
8 1
1 7
9 9


出力例4

YES

2 番目の女の子の家にだけ 寄ることが可能です"
浮気予防,https://atcoder.jp/contests/abc010/tasks/abc010_4,"問題文
高橋君の秘書のなぎさちゃんは 高橋君が大好きです 今日も 高橋君に悪い虫が取り憑かないように 高橋君を監視しなければなりません 
高橋君は 女の子と仲良くなるために 自前のSNSを使います SNSで友人関係にある人を辿って行き 見つけた女の子にメッセージを送ります 
なぎさちゃんは 高橋君のメッセージを女の子が見ることがないように このSNSに対して 工作を行うことにしました 
行える工作活動は 以下の 2つです 


特定の二人の友人関係を解消する
特定の一人のパスワードを変え ログイン出来なくする　高橋君のパスワードは変更できません  21 11追記 

友人関係が解消されると 高橋君は その二人の間を辿ることが出来なくなります しかし 他の友人を経由して 辿ることが可能な場合は その限りではありません 
パスワードを変更すると その人は メッセージを見ることが不可能になります 友人関係に変化はないので パスワードを変更された人を辿って 別の友人を探すのは可能です 
なぎさちゃんは 出来るだけ工作の回数を少なくして 予めマークした女の子達が 高橋君のメッセージを閲覧できないようにしたいです なぎさちゃんが工作を行う必要のある回数を求めてください 

入力
入力は以下の形式で標準入力から与えられる 

N G E
p 1 p 2     p G
a 1 b 1
a 2 b 2
 
a E b E


1 行目には SNSの登録人数を表す整数 N  1   N   100  と なぎさちゃんがマークしている女の子の数 G  0   G   N   1   SNSの友人関係の数を表す整数 E  0   E   N    N 1    2 がスペース区切りで与えられる 
2 行目では なぎさちゃんがマークしている i 番目の女の子のIDを表す整数 p i  1   p i   N   1  の値が スペース区切りで G 個与えられる 
3 行目から E 行では 友人関係に関する情報が与えられる このうち i 行目では i 番目の友人関係における 二人のID番号を表す 2 つの整数 a i  0   a i   N   1  b i  0   b i   N   1  の値が スペース区切りで与えられる 
i   j のとき a i   a j かつ b i   b j または a i   b j かつ b i   a j になることはないことが保障されている 
全ての入力において 高橋君のIDは 0 であることが保障されている 


部分点
0   E   12 を満たすテストケースに正解した場合 部分点として 99 点が与えられる 

出力
なぎさちゃんが工作を行う必要のある回数の最小値を  1 行で出力せよ 出力の末尾には改行をいれること 

入力例1

4 2 3
2 3
0 1
1 2
1 3


出力例1

1




図のように  1 つの友人関係を解消するだけで 2 人の女の子を高橋君から切り離すことが出来ます 

入力例2

4 1 4
3
0 1
0 2
1 3
2 3


出力例2

1




マークしている女の子は一人だけなので この人をログイン出来なくするだけで 目的を達成することができます 

入力例3

10 3 11
7 8 9
0 1
0 2
0 3
0 4
1 5
2 5
5 6
6 7
6 8
3 9
4 9


出力例3

2




図のように工作を行うことで 全ての女の子に対して工作を行えます 

入力例4

6 2 6
4 5
0 1
0 2
1 3
2 3
3 4
3 5


出力例4

2

IDが 3 の人をログイン出来ないようにしても 高橋君が友達を探すのに影響がないことに注意してください 

入力例5

4 3 3
1 2 3
1 2
1 3
2 3


出力例5

0

高橋君には友達がいないため 工作を行う必要はありません"
来月は何月？,https://atcoder.jp/contests/abc011/tasks/abc011_1,"問題文
高橋君は 来月遊びに行く約束をしました 
ですが 高橋君は頭が悪いので 来月が何月であるかが解りません 
今月が何月かが与えられるので 来月が何月であるかを出力するプログラムを作ってあげてください 

入力
入力は以下の形式で標準入力から与えられる 

N


1 行目には 今月の月を表す整数 N  1   N   12  が与えられる 


出力
来月が何月であるかを  1 行で出力せよ 出力の末尾にも改行をいれること 

入力例1

1


出力例1

2

1 月の次の月は 2 月です 

入力例2

12


出力例2

1

12 月の次の月は 1 月です"
名前の確認,https://atcoder.jp/contests/abc011/tasks/abc011_2,"問題文
新米プログラマーであるあなたは 簡単な文字列操作を行うプログラムを作成する仕事を任されました 
名前が入力として与えられるので 正しいフォーマットに直すプログラムです 
正しい名前のフォーマットは 以下の通りです 

1 文字目は大文字アルファベット
2 文字目以降は小文字アルファベット

要件を満たすプログラムを作成してください 

入力
入力は以下の形式で標準入力から与えられる 

S


1 行目には 名前 S  1    S    12  が与えられる 
S に含まれる文字は 全て小文字 もしくは大文字のアルファベットであることが保障されている 


出力
正しいフォーマットに変換した文字列を 1 行で出力せよ 出力の末尾にも改行をいれること 

入力例1

taKahAshI


出力例1

Takahashi

先頭 1 文字が大文字 それ以降は小文字になっています 

入力例2

A


出力例2

A

名前は 1 文字の場合もあります 
最初から正しいフォーマットの文字列が与えられている場合は そのまま出力して構いません"
123引き算,https://atcoder.jp/contests/abc011/tasks/abc011_3,"問題文
あなたは 友人から 一人用のゲームを紹介されました 
最初に 数字 N が与えられます 
1   2   3 の中から好きな数字を選び 
与えられた数字に対し 引き算を行う という処理を行うことできます 
この処理は 100 回まで行うことが可能であり 最終的に数字を 0 にすることが目標のゲームです 
しかし 計算途中でなってはいけないNG数字が 3 つ与えられており 
この数字に一時的にでもなってしまった瞬間 このゲームは失敗となります 
NG数字が N と同じ場合も失敗となります 
NG数字が N と同じ場合について 正しい判定が行われていませんでした リジャッジを行いました 
あなたは このゲームが 目標達成可能なゲームとなっているか調べたいです 
目標達成可能な場合はYES そうでない場合はNOと出力してください 

入力
入力は以下の形式で標準入力から与えられる 

N
NG 1
NG 2
NG 3


1 行目には 最初に与えられる数字 N  1   N   300  が与えられる 
2 行目には  1 番目のNG数字 NG 1  1   NG 1   300  が与えられる 
3 行目には  2 番目のNG数字 NG 2  1   NG 2   300  が与えられる 
4 行目には  3 番目のNG数字 NG 3  1   NG 3   300  が与えられる 


出力
目標達成可能な場合はYES そうでない場合はNOを 1 行で出力せよ 出力の末尾にも改行をいれること 

入力例1

2
1
7
15


出力例1

YES

2 を 1 回引くことにより  0 を作ることが出来ます 

入力例2

5
1
4
2


出力例2

YES

最初に 2 を引き 次に 3 を引くことで 5   3   0 と変化し 目標を達成することが出来ます 

入力例3

300
57
121
244


出力例3

NO

100 回連続で 3 を引かなければ 目標を達成することはできません 
しかし  3 だけを引き続けていると 途中でNG数字である 57 になってしまいます"
大ジャンプ,https://atcoder.jp/contests/abc011/tasks/abc011_4,"問題文
XY 座標上に スタート地点とゴール地点が 1 つずつあります 
スタート地点は  0  0  にあり ゴール地点は  X  Y  です 
あなたは ジャンプという移動法を用いて 移動を行います 
ジャンプを 1 回行うと あなたは 以下の 4 つのうち ランダムで選ばれた 1 つの移動が行われます 

X 軸に平行に  D だけ移動する 
X 軸に平行に  D だけ移動する 
Y 軸に平行に  D だけ移動する 
Y 軸に平行に  D だけ移動する 

これらの移動は どれもちょうど 1 4 の確率で選択されます 
あなたは 最初にスタート地点におり ちょうど N 回のジャンプでゴール地点にたどり着きたいです 
目的を達成できる確率を出力しなさい 

入力
入力は以下の形式で標準入力から与えられる 

N D
X Y


1 行目には ジャンプする回数を表す整数 N  1   N   1 000  と ジャンプの距離 D   1   D   10 9  が スペース区切りで与えられる 
2 行目には ゴール地点の座標を表す整数 X  Y   10 9   X  Y   10 9  が スペース区切りで与えられる 


部分点
1   N   8 のケースに全て正解すると 部分点として 90 点が与えられる 
1   N   30 のケースに全て正解すると 追加で 10 点が与えられる 
全てのケースに正解すると ボーナス点として 1 点が与えられる 

出力
あなたが最終的にゴール地点にたどり着ける確率を 1 行で出力せよ 出力の末尾にも改行をいれること 
なお 想定解答との絶対誤差または相対誤差が 10   9  以下であれば 正解として扱われる 

入力例1

2 10000000
10000000 10000000


出力例1

0 125

 0  0  から 2 回のジャンプで  10000000  10000000  へ飛ぶ確率は  1 8 です 

入力例2

100 2
3 7


出力例2

0 0

偶数の距離のジャンプでは 奇数の座標にたどり着くことはできないため 到達する確率は 0 となります 

入力例3

11 8562174
25686522 17124348


出力例3

0 018174648284912"
スワップ,https://atcoder.jp/contests/abc012/tasks/abc012_1,"問題文
A  B の 2 つの整数が与えられます 
A と B の数値を入れ替えた後 A  B を出力しなさい 

入力
入力は以下の形式で標準入力から与えられる 

A B


1 行目には 2 つの整数 A  B  1   A  B   100  が与えられる 


出力
数字の入れ替えた後の A と B を スペース区切りで 1 行で出力せよ 出力の末尾には改行をいれること 

入力例1

1 2


出力例1

2 1

初めに A   1  B   2 となっています 
この A と B を入れ替えると A   2  B   1 となります 

入力例2

5 5


出力例2

5 5

同じ数字が入力として与えられた時 数字を入れ替えても変化はありません"
入浴時間,https://atcoder.jp/contests/abc012/tasks/abc012_2,"問題文
高橋君は お風呂で湯船に浸かった秒数を数える習慣があります 
今日は 高橋君は湯船で N 秒まで数えました 
しかし 秒だと解りにくいので 何時間何分何秒 という形に直したいです 
秒数 N が与えられるので  hh mm ss の形式に変換しなさい 

入力
入力は以下の形式で標準入力から与えられる 

N


1 行目には 高橋君が湯船に浸かった秒数を表す整数 N  0   N   86399  が与えられる 


出力
高橋君が湯船に浸かっていた時間を hh mm ss の形式で  1 行で出力せよ 出力の末尾には改行をいれること 

入力例1

3661


出力例1

01 01 01

高橋君が湯船に浸かっていた時間は 1 時間 1 分 1 秒です 

入力例2

86399


出力例2

23 59 59

高橋君が 24 時間以上湯船に浸かっていることはありません"
九九足し算,https://atcoder.jp/contests/abc012/tasks/abc012_3,"問題文
高橋君は 先日 九九の表を全て暗記することに成功しました 
九九で物足りなくなった高橋君は  1   1 から 9   9 までの値を 全て足してみることにしました 
高橋君は 九九のうちの一つの答えを忘れてしまったので その計算を後回しにして 残りの和を求めたところ N になりました 
しかし 高橋君は 後回しにした問題がどれだか解らなくなってしまいました 
高橋君が後回しにしてしまった問題として あり得るものを辞書順で全て出力しなさい 

入力
入力は以下の形式で標準入力から与えられる 

N


1 行目には 高橋君の演算結果を表す整数 N  1944   N   2024  が与えられる 
答えが存在しないような N は与えられない 


出力
高橋君が飛ばした演算を  1 行ずつ辞書順で全て出力せよ 出力の末尾にも改行をいれること 

入力例1

2013


出力例1

2 x 6
3 x 4
4 x 3
6 x 2

高橋君の求めた値は 本来の値より 12 少ないものです 
よって 答えが 12 となる  2   6  3   4  4   3  6   2 の 4 つが答えとなります 

入力例2

2024


出力例2

1 x 1"
バスと避けられない運命,https://atcoder.jp/contests/abc012/tasks/abc012_4,"問題文
高橋君は バスがあまり好きではありません ですが 社会に出ると バスを乗るという行為を避けることはできません 
社会人になると 自宅から会社まで バスで通わなければなりません 高橋君はまだ内定を貰っていないので 会社の場所は解りません 
高橋君は バスに乗っている時間が最も長くなってしまうような 最悪のケースを常に想定します 
この 最悪なケースのバスに乗っている時間が 出来るだけ短くなるような場所に引っ越そうと思っています 
追記 なお 最悪のケースとは バスに乗る時間の合計が最も短くなるように 乗るバスを選択した時に 最もバスに乗る時間の合計が長くなってしまうような位置に会社があるケースのことを指します また 自宅から会社に行く際に 高橋君が乗るバスを選ぶことができ 高橋君はバスに乗る時間の合計が最も短い経路を選択するものとします 
各バスは 2 つのバス停を往復するように走っており 行き 帰りでかかる時間に差はありません 
バスにはいつでも乗ることが可能であり 乗継にかかる時間などは無視することが可能です 
また 自宅や会社はバス停に隣接しており 他のバス停まで歩いたり バス以外の手段で移動することはできません 
高橋君が引っ越すべき場所を求め そこに引っ越した際の バスに乗らなければならない時間の最大値を出力してください 

入力
入力は以下の形式で標準入力から与えられる 

N M
a 1 b 1 t 1
a 2 b 2 t 2
 
a M b M t M


1 行目には バス停の数を表す整数 N  2   N   300  と 路線の数を表す整数 M  N   1   M   44850  が スペース区切りで与えられる 
続く 2 行目から M 行は バスの情報を表す  i 番目の行には バスの出発地点と往復する 2 つのバス停を表す番号 a i  b i  1   a i  b i   N  と その移動に何分かかるかを表す数字 t i   1   t i   1000  が それぞれ整数で与えられる 
辿り着けないバス停のペアは存在しないことが保証されている 
a i   b i であることが保障されている 
ある 2 つのバス停を往復する路線は 高々 1 つしか存在しない 


出力
高橋君が引っ越した後 最も長くバスに乗らないといけない時にかかってしまう時間を  1 行で出力せよ 出力の末尾には改行をいれること 

入力例1

3 2
1 2 10
2 3 10


出力例1

10

バス停 1 からバス停 2 に行くのには 10 分かかります 
バス停 1 からバス停 3 に行くのには 20 分かかります 
バス停 2 からバス停 3 に行くのには 10 分かかります 
よって バス停 2 に引っ越した時 乗車時間の最大値は 10 分となり これが最も良い引っ越し先となります 

入力例2

5 5
1 2 12
2 3 14
3 4 7
4 5 9
5 1 18


出力例2

26

バス停 3 に引っ越すと最善となります 

入力例3

4 6
1 2 1
2 3 1
3 4 1
4 1 1
1 3 1
4 2 1


出力例3

1

複数の経路があっても 遠回りしないことに注意してください"
A,https://atcoder.jp/contests/abc013/tasks/abc013_1,"問題文
高橋君はとても英語が苦手で アルファベットもまだ覚えきれていません 
そこで 高橋君のために 入力として与えられたアルファベットが A から数えて何番目のアルファベットかを求めるプログラムを作成してください 
ただし 高橋君は 5 より大きい数を知らないので 与えられるアルファベットは A  B  C  D  E のいずれかです また A 自身は A から数えて 1 番目であるとします 0 番目ではありません  

入力
入力は以下の形式で標準入力から与えられる 

X


1 行目には 英大文字のアルファベット X が与えられる X は　A  B  C  D  E のいずれかである 


出力
X が A から数えて何番目のアルファベットであるかを 1 行に出力せよ 
出力の末尾には改行をいれること 

入力例1

A


出力例1

1

A は最初のアルファベットなので 1 を出力します 

入力例2

B


出力例2

2


入力例3

C


出力例3

3


入力例4

D


出力例4

4"
錠,https://atcoder.jp/contests/abc013/tasks/abc013_2,"問題文
セキュリティ意識の高い高橋君はこの度 自分の家に新しい錠をつけることにしました 
この錠はダイヤルロック式で 1 桁の数字が表示されるディスプレイと 赤色と青色の 2 種類のボタンがついています 赤いボタンを押すとディスプレイに表示されている数が 1 増え 青いボタンを押すと 1 減ります 
ただし ディスプレイの表示が 9 のときに赤いボタンを押すと 0 になり ディスプレイの表示が 0 のときに青いボタンを押すと 9 になります 
いま ディスプレイに表示されている数字は a で この数字が b になった瞬間に錠が開きます さて 錠を開けるためには最低何回はボタンを押す必要があるでしょうか 

入力
入力は以下の形式で標準入力から与えられる 

a
b


1 行目には 現在ディスプレイに表示されている数字を表す整数 a  0     a     9  が与えられる 

2 行目には 解錠するために表示させる必要のある数字を表す整数 b  0     b     9  が与えられる 
		
a と b が同じ値になることはない 




出力
錠を開けるために必要な ボタンを押す回数の最小値を 1 行に出力せよ 
出力の末尾には改行をいれること 

入力例1

4
6


出力例1

2

この例では 次のようにボタンを 2 回押すことで解錠することができます 

赤いボタンを押し 数字を 4 から 5 にする 
赤いボタンを押し 数字を 5 から 6 にする 


入力例2

6
4


出力例2

2

この場合は青いボタンを 2 回押すことで解錠することができます 

入力例3

8
1


出力例3

3

青いボタンを 7 回押すことでも解錠できますが 次のように 3 回ボタンを押すことでも解錠することができます 

赤いボタンを押し 数字を 8 から 9 にする 
赤いボタンを押し 数字を 9 から 0 にする 
赤いボタンを押し 数字を 0 から 1 にする"
節制,https://atcoder.jp/contests/abc013/tasks/abc013_3,"問題文
セキュリティ意識が高く 最新鋭の錠を購入した高橋君ですが 財布の管理は甘かったらしくお金がピンチな状況です 
高橋君の収入は安定せず 次の収入があるのは今から N 日後です 高橋君は N 日間 できるだけ食費を抑えて節約生活を送ることにしました 
はじめ 高橋君の満腹度は H です N 日間のそれぞれの日について その日にとる食事を次の 3 種類の中から 1 つ選びます 

普通の食事  A 円の出費をして 満腹度が B 増える 
質素な食事  C 円の出費をして 満腹度が D 増える  ただし C   A かつ D   B 
食事抜き  出費なしで 満腹度が E 減る 

厳しく節約すれば出費を抑えることができますが あまりに節約しすぎて体調を崩してしまってはいけないため N 日間で一度も満腹度が 0 以下にならないようにしなければなりません 
高橋君は最低何円の食費で N 日間を乗り切ることができるでしょうか 
ただし 高橋君は超人級の胃袋を持っており その満腹度には上限がないとする すなわち いくら食事をしても高橋君の満腹度が頭打ちになることはない 

入力
入力は以下の形式で標準入力から与えられる 

N H
A B C D E


1 行目には 節約生活の日数を表す整数 N  1     N     5  times 10 5  と 節約生活を始める前の高橋君の満腹度を表す整数 H  1     H     10 9  が空白区切りで与えられる 

2 行目には 3 種類の食事に関する情報を表す整数 A  B  C  D  E がこの順に空白区切りで与えられる 
		
出費について 1     C   A     10 6 が成り立つ 
満腹度の増減について 1     D   B     10 6 および 1     E     10 6 が成り立つ 




部分点
この問題には部分点が設定されている 

N     10 を満たすテストケース全てに正解すると 部分点として 10 点が与えられる 
N     50  H     50  B     50  D     50 を満たすテストケースすべてに正解すると 部分点として 30 点が与えられる  N     10 を満たすテストケース全てにも正解していた場合は合計で 40 点となる 
N     1 000 を満たすテストケース全てに正解すると 100 点が与えられる 
全てのテストケースに正解すると ボーナス点として追加で 1 点が与えられる 

ボーナス点に対応するテストケースに関しては 答えが 32 ビットの整数型に収まらない可能性があることに注意せよ 

出力
高橋君が満腹度を一度も 0 以下にせずに N 日間の節約生活を乗り切るために必要な食費の最小値が何円かを 1 行に出力せよ 
出力の末尾には改行をいれること 

入力例1

4 5
100 4 60 1 4


出力例1

160

たとえば 4 日間の食事を以下のようにすれば 160 円の出費で済ませることができます 

節約生活を始める前 高橋君の満腹度は 5 である 
1 日目には質素な食事をとる 60 円を出費して 満腹度が 1 増えて 6 になる 
2 日目は食事を抜く 出費はなく 満腹度は 4 減って 2 になる 
3 日目には普通の食事をとる 100 円を出費して 満腹度が 4 増えて 6 になる 
4 日目は食事を抜く 出費はなく 満腹度は 4 減って 2 になる 


入力例2

10 1
5000 2 2000 1 300


出力例2

20000

この例では 高橋君は 1 日食事を抜くと満腹度が 300 も減ってしまうので 毎日食事をとる必要があります 
質素な食事を 10 日間とり続けることで 2 000  times 10   20 000 円の出費となり これが最小の出費になります 

入力例3

9 23
170 8 120 5 12


出力例3

650


入力例4

653 314159
6728 123456 5141 41928 222222


出力例4

2818162

この例は N     10 という 10 点の部分点の制約および N     50  H     50  B     50  D     50 という 30 点の部分点の制約を満たしていないことに注意せよ"
阿弥陀,https://atcoder.jp/contests/abc013/tasks/abc013_4,"問題文
古くより伝わる日本の伝統的なくじ引き あみだくじをご存知だろうか 
あみだくじを行うときは まず N 本の平行な縦線を引く 次に M 本の横線をその中に引いていく それぞれの横線は隣り合う 2 本の縦線を結ぶように引かなければならず 2 本以上の横線がまったく同じ高さにあってはいけない ここでは 上から i  1     i     M  番目にある横線が 左から A i  1     A i   N  番目の縦線と A i   1 番目の縦線を結んでいるとしよう 
N   5  M   7  A     1 4 3 4 2 3 1   の場合のあみだくじを以下に示す くじを引くときは 縦線を 1 本選び その上端から線を下っていく 途中で横線に遭遇したときには必ず曲がらなければならず また縦線を上向きに辿ってはいけない たとえばこのあみだくじで左から 4 番目の縦線から始めてくじを引くと 左から 3 番目の縦線に辿り着く 



さて ここまでは普通のあみだくじであるが 何かにつけビッグデータという言葉が騒がれる昨今である あみだくじがこれから先生きのこるためには あみだくじもビッグになってビッグデータに対抗していかなければならない 
そこで あみだくじを縦に D 個つなげることで巨大なあみだくじを作ることを考えよう たとえば 先ほど例に挙げたあみだくじを 2 個つなげてみると以下のようになる この場合 左から 4 番目の縦線から始めてくじを引くと 辿り着く場所は左から 5 番目の縦線になる 



こうして作った巨大あみだくじだが あみだくじ本来の目的を果たせなければビッグになった意味もない つまり この巨大なあみだくじを使ってくじを引いた結果がどうなるかを効率よく計算できなければ せっかく作った巨大あみだくじもただの落書きである 
そこで 1     k     N を満たすすべての整数 k に対し 巨大あみだくじの左から k 番目の縦線を選んで線を辿っていったとき 最終的に下端で左から何番目の縦線に行き着くかを計算するプログラムを書いて欲しい 

入力
入力は以下の形式で標準入力から与えられる 

N M D
A 1 A 2     A M


1 行目には 元のあみだくじの縦線の本数を表す整数 N  2     N     10 5  横線の本数を表す整数 M  0     M     2  times 10 5  元のあみだくじを縦につなげる回数を表す整数 D  1     D     10 9  が空白区切りで与えられる 
2 行目には 元のあみだくじにおける横線の情報を表す M 個の整数 A i  1     i     M  が空白区切りで与えられる 


部分点
この問題のテストケースは 4 つのグループに分けられており それぞれに配点が決まっている 

1 つめのグループにおいて テストケースは D   1 を満たす このグループのテストケース全てに正解すると 10 点が与えられる 
2 つめのグループにおいて テストケースは N     1 000 および D     1 000 を満たす このグループのテストケース全てに正解すると 20 点が与えられる 
3 つめのグループにおいて テストケースは N     8 を満たす このグループのテストケース全てに正解すると 20 点が与えられる 
4 つめのグループにおいてはテストケースに追加の制限はない このグループのテストケース全てに正解すると 50 点が与えられる 


出力
N 行出力せよ このうち k 行目には 巨大あみだくじの左から k 番目の縦線を選んで線を辿っていったとき 下端で左から何番目の縦線に到達するかを表す整数を出力せよ 
出力の末尾にも改行をいれること 

入力例1

5 7 1
1 4 3 4 2 3 1


出力例1

4
2
5
3
1

この入出力例は問題文中の最初の図で示されたあみだくじに対応している 

入力例2

5 7 2
1 4 3 4 2 3 1


出力例2

3
2
1
5
4

この入出力例は問題文中の 2 番目の図で示されたあみだくじに対応している このケースは 1 つめのテストグループの制約を満たさないことに注意せよ 

入力例3

10 20 300
9 1 2 5 8 1 9 3 5 6 4 5 4 6 8 3 2 7 9 6


出力例3

3
7
2
4
5
9
6
1
8
10

このケースは 1 つめおよび 3 つめのテストグループの制約を満たさないことに注意せよ"
けんしょう先生のお菓子配り,https://atcoder.jp/contests/abc014/tasks/abc014_1,"問題文
　幼稚園の先生であるけんしょう先生は 持っている a 個のお菓子を b 人の児童に同じ数ずつ配りたいと思っています けんしょう先生は持っているお菓子を全て配りきりたいと思っていますが a と b の組によっては全員に同じ数ずつ配りきれないことがあることに気づきました 
そこで けんしょう先生は必要最低限のお菓子を買い足すことにしました たとえば 7 つのお菓子を 3 人に配るシチュエーションを考えてみましょう 今のままでは同じ数配りきれないので 2 個のお菓子を買い足せばお菓子の数は 9 個となり 3 人に 3 個ずつ配ることが出来ます 
　さて 天才プログラマ児童たかはし君であるあなたは いくつのお菓子を買い足せば良いかを先生に教えてあげるために プログラムを作ることにしました 

入力
入力は以下の形式で標準入力から与えられる 

a
b


1 行目には けんしょう先生が最初に持っているお菓子の数を表す整数 a  1   a   100  が与えられる 
2 行目には 児童の数を表す整数 b  1   b   100  が与えられる 


出力
けんしょう先生が買い足さなければならないお菓子の個数を 1 行に出力せよ 出力の末尾に改行をいれること 

入力例1

7
3


出力例1

2

問題文中で説明したケースです 7を3で割った余りは1なので もう2 個買い足すことで3つになり 全員に同じ数のお菓子を配りきることができます 

入力例2

5
5


出力例2

0

買い足さなくても 5 人の児童にちょうど 1 つずつ配ることができます 

入力例3

1
100


出力例3

99

1 つのお菓子しかないので 99 個買い足して全員に 1 個ずつ配ります 

入力例4

25
12


出力例4

11

11 個買い足すことで お菓子は合計 36個となり  12人に 3 個ずつ配ることができます"
価格の合計,https://atcoder.jp/contests/abc014/tasks/abc014_2,"問題文
　あなたは買い物をしていて 商品リストからいくつかの商品を選んだ そして今 その商品の価格を合計しようとしている 
　ところで とある集合の任意の部分集合を 2 進数を用いて表す方法が存在し forループで全ての部分集合 組み合わせ を列挙する際などに用いることができる 

n 個の商品があり  商品0 商品1    商品n 1 があるとする 添字が0から始まることに注意せよ 
部分集合を表す 10 進整数を X とし その 2 進 n 桁表現をb  n 1 b  n 2    b 1b 0とする b 0 が最下位ビットで b  n 1  が最上位ビットである 先頭の0 を許す表現であることに注意せよ 

そして この整数 X の 2 進表現を用いて ある部分集合を以下のように定義する 

b 0 1 ならば集合は商品0 を含み b 0 0 ならば集合は商品 0 を含まない 
b 1 1 ならば集合は商品1 を含み b 1 0 ならば集合は商品 1 を含まない 
   
b  n 1  1 ならば集合は商品 n 1 を含み b  n 1  0 ならば集合は商品 n 1 を含まない 

例えば n 4 X 5 のとき  b 0101 であり 部分集合は   商品0 商品2   である 
簡単にいえば Xの 2 進表現において k 0   k   n 1  番目のビットが立っていれば k 番目のアイテムを含むということである あるビットが立っているかどうかは 多くのプログラミング言語で容易に判定できるので 各自調べられたい 
　あなたの仕事は 商品の数 それぞれの商品の価格 そして部分集合を表す 10 進整数 X が与えられるので 部分集合に含まれる商品の価格を合計することである 
　 今回の問題には直接関係は無いが 部分集合を上記のように表現することで 大きさ n の集合の全ての部分集合 空集合を含む を0   2 n 1 の連続した整数で表現できるので 全列挙を行う際には応用するとよい 

入力
入力は以下の形式で標準入力から与えられる 

n X
a 0 a 1 a 2     a  n 1 


1 行目には 商品の数 n  1   n   20  と 商品の部分集合を表す 10 進整数 X  0   X   2  n  1  が空白区切りで与えられる 
2 行目には 商品 0   n 1 の商品の価格 a 0 a 1     a  n 1  0   a 0 a 1     a  n 1    1 000  が順番に空白区切りで与えられる 


出力

部分集合に含まれる商品の価格を合計したものを 1 行に出力せよ 出力の末尾に改行をいれること 


入力例1

4 5
1 10 100 1000


出力例1

101

n と X は問題文中の説明で用いた値である 部分集合は  商品0 商品2  であるので 1 100 101となる 

入力例2

20 1048575
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20


出力例2

210

X の 2 進表現は11111111111111111111 20個の1が並んでいる であるので 部分集合は全商品を含んでいる 

入力例3

4 0
1000 1000 1000 1000


出力例3

0

部分集合が空集合であることもある"
AtColor,https://atcoder.jp/contests/abc014/tasks/abc014_3,"問題文
　AtColor社は 0 から 1 000 000 まで 1 000 001 通りの濃さがある灰色の絵の具を販売することにしました 0 が最も黒く 1 000 000 が最も白い絵の具です 
　しかし 途方も無い数の濃さのバリエーションがある一方 消費者には細かい違いが分からないということが判明しました これを知ったAtColor社は 売れない濃さの絵の具を生産するのはやめて 最も人気のある濃さの色の絵の具1つだけを販売することにしました 
　AtColor社は上記を達成するために 最も人気な絵の具がどのくらい売れるかをアンケート調査で調べることにしました 
AtColor社がどの範囲の濃さの絵の具なら購入したいかというアンケートを消費者に対して行ったところ   a   x   b を満たす濃さ x の絵の具ならば購入する という形式の情報が n 件得られました 
　あなたの仕事は これらの情報から 最も多くの消費者に購入される濃さの絵の具について その絵の具を購入する消費者の数を出力するプログラムを作ることです 

入力
入力は以下の形式で標準入力から与えられる 

n
a  1   b  1 
a  2   b  2 
 
a  n   b  n 


1 行目には アンケート情報の数 n  1   n   100 000  が与えられる 
続く 2 行目から n行は 各アンケート情報を表す  a i b i 0 a i b i 1 000 000  はそれぞれ i 番目のアンケート情報における濃さの下限と上限 端を含む を表す整数で 空白区切りで与えられる 


部分点
この問題には2つのデータセットがあり データセット毎に部分点が設定されている 

1 n 2 000 を満たすデータセット 1 に正解した場合は 30 点が与えられる 
追加制約のないデータセット 2 に正解した場合は 上記のデータセットとは別に 70 点が与えられる 


出力
最も多くの消費者に購入される濃さの絵の具について それを購入する消費者の数を 1 行に出力せよ 出力の末尾に改行を入れること 

入力例1

4
0 2
2 3
2 4
5 6


出力例1

3


濃さ 0 1 4 5 6 の絵の具は 1人の消費者によって購入してもらえます 
濃さ 2 の絵の具は 3人の消費者によって購入してもらえます 
濃さ 3 の絵の具は 2人の消費者によって購入してもらえます 
他の濃さの絵の具は誰にも購入してもらえません 

よって 3 を出力します 

入力例2

4
1000000 1000000
1000000 1000000
0 1000000
1 1000000


出力例2

4"
閉路,https://atcoder.jp/contests/abc014/tasks/abc014_4,"問題文
n 個の頂点と n 1 本の辺からなる連結な無向グラフが与えられます それぞれの頂点には 1 から n までの番号が順番にふられています 
グラフ理論において このような条件を満たすグラフは木と呼ばれ 閉路を含まないという性質があります 
このグラフに対し 元のグラフに含まれない追加辺  a b  を1つ追加したグラフについて考えてみると このグラフはちょうど1つの閉路を含みます 
あなたの仕事は そのようなグラフについて 閉路の長さ 閉路に含まれる辺の数 を出力することです ただ 追加辺の候補はいくつかあり Q 個与えられるので それら全ての候補について答えを出力してください 

入力
入力は以下の形式で標準入力から与えられる 

N
x 1  y 1
x 2  y 2
 
x  N 1   y  N 1 
Q
a 1  b 1
a 2  b 2
 
a  Q   b  Q 


1 行目には グラフの頂点数を表す整数 N  1 N 100 000  が与えられる 
続く2 行目からN 1行は グラフの辺情報を表す i番目の行には 辺が結ぶ頂点 x i と y iが空白区切りで与えられる 
続く1 N 行目には 辺 a b の候補の数を表す整数 Q  1 Q 100 000  が与えられる 
続く2 N 行目からQ行は i番目の追加辺候補の情報を表す i 番目の行には 追加辺が結ぶ頂点 a i と b iが空白区切りで与えられる 
与えられる辺は全て 存在する頂点を結んでいる 
グラフは自己辺を含まない つまり 任意のiについて x i y iが成り立つ 
グラフは多重辺を含まない つまり 任意のi j i j について x i x jもしくはy i y jが成り立つ 
追加辺は 元のグラフに含まれない辺であり自己辺でないことが保障されている 


部分点
この問題には2つのデータセットがあり データセット毎に部分点が設定されている 

Q 1 を満たすデータセット 1 に正解した場合は 30 点が与えられる 
追加制約のないデータセット 2 に正解した場合は 上記のデータセットとは別に 70 点が与えられる 


出力
全ての追加辺候補について それを元のグラフに追加したときにできる閉路の長さを 1 行目から Q 行順番に出力せよ 出力の末尾に改行を入れること 

入力例1

5
1 2
1 3
1 4
4 5
3
2 3
2 5
2 4


出力例1

3
4
3

図は以下の通りです 




入力例2

6
1 2
2 3
3 4
4 5
5 6
4
1 3
1 4
1 5
1 6


出力例2

3
4
5
6


入力例3

7
3 1
2 1
2 4
2 5
3 6
3 7
5
4 5
1 6
5 6
4 7
5 3


出力例3

3
3
5
5
4"
高橋くんの研修,https://atcoder.jp/contests/abc015/tasks/abc015_1,"問題文
高橋くんは ソフトウェア会社に勤めています 
その会社では 短い変数名はバグを生む原因だと信じられており 長い変数名を使う習慣があります 
いま高橋くんは 2 つの変数名を思いつきましたが 残念なことにその長さを見分けることが出来ません 
いろんな意味で可哀想な彼の代わりに 与えられた 2 つの小文字アルファベットのみからなる文字列のうち 文字数が長い方の文字列を求めてください 

入力
入力は以下の形式で標準入力から与えられる 

A
B


1 行目には 文字列 A  1    A    50  が与えられる 
2 行目には 文字列 B  1    B    50  が与えられる 
文字列 A B には 小文字アルファベットのみが含まれることが保証されている 
文字列 A B の長さは異なることが保証されている 


出力
文字数が長い方の文字列を 1 行で出力せよ 出力の末尾にも改行をいれること 

入力例1

isuruu
isleapyear


出力例1

isleapyear

isuruuは 6 文字 isleapyearは 10 文字であるため isleapyearを出力します 

入力例2

ttttiiiimmmmeeee
time


出力例2

ttttiiiimmmmeeee

このような変数名は邪悪ですが 彼の所属する会社では正義です"
高橋くんの集計,https://atcoder.jp/contests/abc015/tasks/abc015_2,"問題文
高橋くんは 上司から

会社で作っている N 個のソフトウェアに平均でどれくらいのバグがあるか調べろ
ただし バグがないソフトは調査母数に含めるな

と指示されました 
しかも 上司は小数が嫌いです とはいえ バグ数の平均値を過小報告するわけにもいかないので 値を切り上げて報告することにしました 
高橋くんは 素早くバグ数の平均値をまとめて上司に報告する必要があります 
ソフトウェアごとのバグ数が与えられるので バグが含まれるソフトウェアの バグ数の平均値を小数で切り上げて求めてください 

入力
入力は以下の形式で標準入力から与えられる 

N
A 1 A 2     A N


1 行目には ソフトウェアの数を表す整数 N  1   N   100   がスペース区切りで与えられる 
2 行目では それぞれのソフトウェアに含まれるバグの数の情報が スペース区切りで与えられる  i 番目のソフトウェアのバグの数は  i 番目に与えられる整数 A i  0   A i   100 によって与えられる 
与えられるソフトウェアのバグの合計数は  1 つ以上であることが保証されている 


出力
バグが含まれるソフトウェアの バグ数の平均値を小数で切り上げて 1 行で出力せよ 出力の末尾には改行をいれること 

入力例1

4
0 1 3 8


出力例1

4

バグが含まれるソフトウェアは 3 つであり そのバグの総数は 12 個です 
よって バグ数の平均値は 4 個です 

入力例2

5
1 4 9 10 15


出力例2

8

バグ数の平均値は 7 8 であるため 切り上げて 8 と出力する必要があります"
高橋くんのバグ探し,https://atcoder.jp/contests/abc015/tasks/abc015_3,"問題文
高橋くんは上司からあるアンケートアプリにバグがあるかどうか調べて欲しいと頼まれました 
このアプリは ユーザに選択肢が K 個ある質問を N 回答えさせることにより ユーザの性格を判定します 
質問や選択肢はユーザの回答によって変わらず一定であり ユーザは全ての質問にちょうど 1 つの選択肢を選ぶことで 結果を閲覧できます 
全ての選択肢はある整数値を持ちます このアプリは ユーザによって選ばれた 全ての回答がそれぞれ保持する整数値の排他的論理和 XOR を使って結果を算出します 計算の最後でこの値が 0 になってしまうと 結果が表示されずバグが発生してしまいます 
あなたには全ての選択肢が持つ整数値が与えられるので 高橋くんの代わりに ユーザの選択によってはバグが発生する可能性があるかどうかを判定してください 

入力
入力は以下の形式で標準入力から与えられる 

N K
T  1 1  T  1 2    T  1 K 
T  2 1  T  2 2    T  2 K 
 
T  N 1  T  N 2    T  N K 


1 行目には 質問の個数を表す整数 N  1 N 5  と それぞれの質問に対する選択肢の個数を表す整数 K  1 K 5  が スペース区切りで与えられる 
2 行目から N 行は 選択肢が保持する整数値が スペース区切りで与えられる  このうち  i 行目の j 番目にある整数 T  i j   0 T  i j  127   は  i 番目の質問に対する j 番目の選択肢が保持する整数値である 


出力
バグが発生することがある場合はFound そうでなければNothingを 1 行で出力せよ 出力の末尾には改行をいれること 

入力例1

3 4
1 3 5 17
2 4 2 3
1 3 2 9


出力例1

Found

1 つ目の質問で 1 つ目の選択肢を 2 つ目の質問で 3 つ目の選択肢を  3 つ目の質問で 2 つ目の選択肢を選んだとします 
すると 対応する数字はそれぞれ  1 2 3 となり これらのXORを取ると 0 となります 
よって バグが発生してしまうため Foundと出力します 

入力例2

5 3
89 62 15
44 36 17
4 24 24
25 98 99
66 33 57


出力例2

Nothing

バグの発生する回答の組み合わせはありません"
高橋くんの苦悩,https://atcoder.jp/contests/abc015/tasks/abc015_4,"問題文
高橋くんは ソフトウエアが期待通りに動いたというエビデンス 証拠 として 画面のスクリーンショットを表計算ソフトに貼り付ける作業を命じられました 
画面のスクリーンショットは N 枚あり 高さは全て等しいのですが 幅が異なります 
また 表計算ソフトに貼りつけ可能なスクリーンショットには 2 つの制約が存在します 

表計算ソフトの幅は W しかない そのため 貼りつけるスクリーンショットの幅の合計値は W 以下でなければならない 
表計算ソフトは K 枚より多くのスクリーンショットを貼りつけることが出来ない よって 表計算ソフトに貼りつけ可能なスクリーンショットは K 枚までである 

さらに スクリーンショットには 重要度 が存在するため 高橋くんは 2 つの制約を満たしながら 貼り付けるスクリーンショットが持つ重要度の合計値を最大化したいです 
しかし 彼にとってこの仕事は難しいので あなたが彼の代わりに表計算ソフトに貼り付け可能なスクリーンショットが持つ重要度の合計の最大値を求めてください 

入力
入力は以下の形式で標準入力から与えられる 

W
N K
A 1 B 1
A 2 B 2
 
A N B N


1 行目には 表計算ソフトの幅 W  1   W   10000  が与えられる 
2 行目には スクリーンショットの数 N  1 N 50  と 表計算ソフトに貼り付け可能なスクリーンショットの枚数 K 1 K N  が スペース区切りで与えられる 
3 行目から N 行では 各スクリーンショットに関する情報が与えられる このうち i 行目では i 番目のスクリーンショットにおける 幅 A i  1   A i   1000  と 重要度 B i  1   B i   100  の値が スペース区切りで与えられる 


出力
表計算ソフトに貼り付け可能なスクリーンショットが持つ重要度の合計の最大値を 1 行で出力せよ 出力の末尾には改行をいれること 

入力例1

10
3 2
4 20
3 40
6 100


出力例1

140

2 番目と 3 番目のスクリーンショットを選ぶと 合計の幅が 9  使用するスクリーンショットが 2 枚となり 条件を満たす 
この時の重要度の和は  40   100 で 140 となる 

入力例2

10
5 4
9 10
3 7
3 1
2 6
4 5


出力例2

18

必ず K 枚のスクリーンショットを使わなくても良いことに注意してください 

入力例3

22
5 3
5 40
8 50
3 60
4 70
6 80


出力例3

210

幅が足りていても スクリーンショットを最大で K 枚までしか置けないことに注意してください"
12月6日,https://atcoder.jp/contests/abc016/tasks/abc016_1,"問題文
12月6日は 月を日で割って割り切れる日です 日付が与えられるので月が日で割り切れるかを判定してください 

入力
入力は以下の形式で標準入力から与えられる 

M D


月を表す整数 M と日を表す整数 D が空白区切りで与えられる 


出力
月が日で割り切れるなら YES  割り切れないなら NO を出力せよ 出力の末尾には改行をつけること 

入力例1

1 1


出力例1

YES


入力例2

2 29


出力例2

NO


入力例3

12 6


出力例3

YES"
A±B Problem,https://atcoder.jp/contests/abc016/tasks/abc016_2,"問題文
高橋くんはプログラミングコンテストで A B を出力するプログラムを書いたつもりでしたが  A B を出力するプログラムを書いたような気がしてきて不安になりました 高橋くんは書いたプログラムをうっかり消してしまって入出力しか残っていません 高橋くんが書いたプログラムが A B なのか  A B なのか どちらの可能性もあるか どちらでもないかを判定してください 
ただし  A B と A B のどちらかの可能性しかない場合 そのプログラムを書いたと判定します 例えば 1 1 という入力に対して 2 を出力しているなら  A B の可能性はあるが A B の可能性はないので 高橋くんは A B を書いたと判定してください 

入力
入力は以下の形式で標準入力から与えられる 

A B C


高橋くんのプログラムに対する入力を表す整数 A  B  0 A B 100  と 高橋くんのプログラムの出力を表す整数 C  0 C 100  がスペース区切りで与えられる 


出力
高橋くんが書いたプログラムが A B だとわかるなら     A B だとわかるなら    どちらの可能性もあるなら     どちらでもないなら   を出力せよ 出力の末尾には改行をつけること 

入力例1

1 0 1


出力例1

 


入力例2

1 1 2


出力例2

 


入力例3

1 1 0


出力例3

 


入力例4

1 1 1


出力例4"
友達の友達,https://atcoder.jp/contests/abc016/tasks/abc016_3,"問題文
高橋くんはSNSの管理者をしています このSNSではユーザ同士が友達という関係で繋がることができます 高橋くんはそれぞれのユーザの 友達の友達 が何人いるかを調べることにしました 友達関係が与えられるので 各ユーザの 友達の友達 の人数を求めてください ただし 自分自身や友達は  友達の友達 に含みません 

入力
入力は以下の形式で標準入力から与えられる 

N M
A 1 B 1
A 2 B 2
 
A M B M


1 行目には ユーザ数 N  1 N 10  と友達の組の数 M  0 M N  N 1  2  がスペース区切りで与えられる 
各ユーザには 1 から N までのユーザIDが割り当てられている 
2 行目からの M 行では 友達関係にあるユーザのID A i B i  1 A i がスペース区切りで与えられる ただし  i j ならば  A i B i   A j B j  を満たす 


出力
各ユーザの友達の友達の人数をユーザIDの小さい順に一行ごと出力せよ 出力の末尾には改行をつけること 

入力例1

3 2
1 2
2 3


出力例1

1
0
1


入力例2

3 3
1 2
1 3
2 3


出力例2

0
0
0


入力例3

8 12
1 6
1 7
1 8
2 5
2 6
3 5
3 6
4 5
4 8
5 6
5 7
7 8


出力例3

4
4
4
5
2
3
4
2"
一刀両断,https://atcoder.jp/contests/abc016/tasks/abc016_4,"問題文
高橋くんは鍛錬の結果 空手チョップで木の板を切断できるようになりました 空手チョップの軌道を表す線分と板の形を表す多角形が与えられるので 板がいくつに切断されたか求めてください 

入力
入力は以下の形式で標準入力から与えられる 

A x A y B x B y
N
X 1 Y 1
X 2 Y 2
 
X N Y N


1 行目には 線分の端点の座標 A x A y B x B y がスペース区切りで与えられる 
2 行目には 多角形の頂点数 N  3 N 100  が与えられる 
3 行目からの N 行では 各頂点の座標 X i Y i がスペース区切りで与えられる 
入力で与えられる座標は 1000以上1000以下の整数である 

入力で与えられる線分と多角形は以下の性質を満たす 

多角形の頂点は反時計回りの順で与えられる 
多角形の頂点は線分から0 1以上離れている 
線分の端点は多角形から0 1以上離れている 
線分の端点は多角形の外部にある 
多角形の連続する３頂点が一直線上に並ぶことはない 

すなわち 以下のような入力は与えられない 

A B 多角形の頂点が線分上にある 
C 線分の端点が多角形の辺上にある 
D 多角形の辺と線分が重なる 
E 線分の端点が多角形の内部にある 





出力
板がいくつに切断されるかを出力せよ 出力の末尾には改行をつけること 

入力例1

 2 0 2 0
4
1 1
 1 1
 1  1
1  1


出力例1

2


入力例2

 3 1 3 1
8
2 2
1 2
1 0
 1 0
 1 2
 2 2
 2  1
2  1


出力例2

3"
プロコン,https://atcoder.jp/contests/abc017/tasks/abc017_1,"問題文
高橋君はプロコン ここでいうプロコンとは グラフ上に適切にプロットする力を問うコンテストである に参加している 
高橋君は 3 つの課題に取り組んだ 
課題ごとに配点が定められており 各課題ごとに 1 以上 10 以下の整数による評価が付けられる 評価の数字が X であるとき その課題においては配点の X 割の得点が与えられる 
3 つの課題の配点と評価が与えられるので 高橋君が合計で何点獲得したのかを求めてほしい 

入力
入力は以下の形式で標準入力から与えられる 

s 1 e 1
s 2 e 2
s 3 e 3


1 行目には 1 つめの課題の情報を表す 2 つの整数 s 1  10   s 1   990  と e 1  1   e 1   10  が与えられる これは 1 つめの課題の配点が s 1 点で 評価が e 1 だったことを表す 
2 行目には 2 つめの課題の情報を表す 2 つの整数 s 2  10   s 2   990  と e 2  1   e 2   10  が与えられる これは 2 つめの課題の配点が s 2 点で 評価が e 2 だったことを表す 
3 行目には 3 つめの課題の情報を表す 2 つの整数 s 3  10   s 3   990  と e 3  1   e 3   10  が与えられる これは 3 つめの課題の配点が s 3 点で 評価が e 3 だったことを表す 
s 1 と s 2 と s 3 のいずれも 10 の倍数であることが保証されている そのため 合計得点は整数値となる 


出力
合計得点を 1 行に出力せよ 出力の末尾にも改行を入れること 

入力例1

50 7
40 8
30 9


出力例1

94

課題 1 では配点 50 点のうち 7 割の得点を得るので 50   0 7   35 点を獲得する 
課題 2 では配点 40 点のうち 8 割の得点を得るので 40   0 8   32 点を獲得する 
課題 3 では配点 30 点のうち 9 割の得点を得るので 30   0 9   27 点を獲得する 
3 つの課題の合計得点は 35   32   27   94 点となる 

入力例2

990 10
990 10
990 10


出力例2

2970

配点がそのまま得点となる場合もある"
choku語,https://atcoder.jp/contests/abc017/tasks/abc017_2,"問題文
高橋君は ある日不思議な生物を見た 
その生物は choku 語という言語を用いていることがわかった 
文字列 S が以下の条件を満たしているときに S は choku 語であると定義する 

文字列 S が空文字列であるとき 
文字列 S が choku 語である文字列 T の末尾に ch をつけた文字列であるとき 
文字列 S が choku 語である文字列 T の末尾に o をつけた文字列であるとき 
文字列 S が choku 語である文字列 T の末尾に k をつけた文字列であるとき 
文字列 S が choku 語である文字列 T の末尾に u をつけた文字列であるとき 

choku 語の理解を深めるため 与えられた文字列が choku 語であるかを判定するプログラムを作成することにした 

入力
入力は以下の形式で標準入力から与えられる 

X


1 行目には choku 語か判定したい文字列 X  1    X    50  が与えられる 
X は半角小文字アルファベットのみで構成されている 


出力
X が choku 語なら文字列 YES を そうでないなら文字列 NO を 1 行に出力せよ 出力の末尾にも改行を入れること 

入力例1

chokuou


出力例1

YES

文字列 chokuou は choku 語である 

入力例2

kuccho


出力例2

NO

文字列 kuccho は choku 語ではない 

入力例3

atcoder


出力例3

NO"
ハイスコア,https://atcoder.jp/contests/abc017/tasks/abc017_3,"問題文
高橋君はあるゲームが大好きである 
このゲームには N 個の遺跡があり 好きな順番に探索することができる 遺跡には 1 から N までの番号が付けられている 
ゲーム中に宝石を獲得することがある 宝石は M 種類あり 1 から M まで番号が付けられている 
遺跡を探索することで報酬として得点といくつかの宝石を入手することができる 遺跡 i  1   i   N  を探索することで 得点 s i 点を獲得し 番号が l i 以上 r i 以下のすべての宝石を 1 つずつ獲得する 同じ遺跡を複数回探索することはできない 
獲得した宝石は捨てることができず またすべての種類の宝石を 1 つ以上獲得してしまうと 魔王が復活するイベントが進行する 魔王が復活する際に探索していた遺跡で得られるはずの得点は消滅してしまう 
高橋君はスコアをできるだけ高くすることを目標としており うまく探索する遺跡を選ぶことで 魔王が復活しない状態で得られる得点の合計値を最大化したい 
考えられる最大値はいくらか 

入力
入力は以下の形式で標準入力から与えられる 

N M
l 1 r 1 s 1
l 2 r 2 s 2
 
l N r N s N


1 行目には 2 つの整数 N  1   N   100 000  と M  1   M   100 000  が空白区切りで書かれている これは 遺跡が N 個 宝石が M 種類あることを表す 
2 行目から N 行には 遺跡に関する情報を表す 3 つの整数 l i  r i  1   l i   r i   M   s i  1   s i   5 000  が与えられる これは 遺跡 i  1   i   N  を探索することで 得点 s i 点を獲得し 番号が l i 以上 r i 以下のすべての宝石を 1 つずつ獲得することを表す 


配点と部分点
この問題は 101 点満点で 部分点が設定されている 

N   8 かつ M   8 を満たすデータセット 1 に正解した場合は 30 点が与えられる 
N   5 000 かつ M   5 000 を満たすデータセット 2 に正解した場合は 上記とは別に 70 点が与えられる 
追加制約のないデータセット 3 に正解した場合は 上記とは別に 1 点が与えられる 


出力
魔王が復活しないような探索方法として考えられるものの中で得られる得点の最大値を 1 行に出力せよ 出力の末尾にも改行を入れること 

入力例1

4 6
1 3 30
2 3 40
3 6 25
6 6 10


出力例1

80

例えば 以下の順番に 3 つの遺跡を探索します 

遺跡 1 を探索する 得点は 30 点で 宝石 1 と宝石 2 と宝石 3 を獲得する 
遺跡 2 を探索する 得点は 40 点で 宝石 2 と宝石 3 を獲得する 
遺跡 4 を探索する 得点は 10 点で 宝石 6 を獲得する 

最終的に獲得している宝石の種類は宝石 1 と宝石 2 と宝石 3 と宝石 6 の 4 種類なので 魔王は復活しません 合計得点は 80 点となり これが最大値です 

入力例2

2 7
1 3 90
5 7 90


出力例2

180

すべての遺跡を探索しても魔王は復活しません 

入力例3

1 4
1 4 70


出力例3

0

魔王が復活しないように遺跡を探索することができません"
サプリメント,https://atcoder.jp/contests/abc017/tasks/abc017_4,"問題文
健康志向の高橋君は通販で購入したサプリメントを摂取することにした 
サプリメントは N 個あり 1 から N まで番号が付けられている 
また サプリメントの味は M 種類あり 1 から M まで番号が付けられている サプリメント i  1   i   N  の味は f i  1   f i   M  である 
高橋君はサプリメントを番号順に複数日かけて摂取する予定である 高橋君はサボらないように サプリメントが 1 つ以上残っている場合はその日中に必ず 1 つ以上サプリメントを摂取しなければならないという規則を定めた 
高橋君は強靭な肉体を持っているため 1 日にどれだけサプリメントを摂取しても大丈夫だが 同じ味には飽きてしまうので 同じ日に同じ味のサプリメントを 2 つ以上摂取することはできない 
高橋君は サプリメントの摂取方法の是非について吟味するため このような条件下で全部で何通りの摂取方法があるかを知りたい 
ここで 2 つの摂取方法についてそれらが違うというのは ある日について摂取したサプリメントの番号の組み合わせが異なることを定義する 

入力
入力は以下の形式で標準入力から与えられる 

N M
f 1
f 2
 
f N


1 行目には 2 つの整数 N  1   N   100 000  と M  1   M   100 000  が空白区切りで書かれている これはサプリメントが N 個あり 味の種類が M 種類あることを表す 
2 行目から N 行には サプリメントの味に関する情報が与えられる これら N 行のうち上から i  1   i   N  行目には整数 f i  1   f i   M  が書かれている これは サプリメント i の味が f i であることを表す 


部分点
この問題には部分点が設定されている 

N   5 000 かつ M   5 000 を満たすデータセット 1 に正解した場合は 上記とは別に 30 点が与えられる 
追加制約のないデータセット 2 に正解した場合は 上記とは別に 70 点が与えられる 


出力
摂取方法の総数を 1 000 000 007    1000000007  で割ったあまりを 1 行に出力せよ 出力の末尾にも改行を入れること 

入力例1

5 2
1
2
1
2
2


出力例1

5

以下の 5 通りが考えられます 


1 日目
2 日目
3 日目
4 日目
5 日目


サプリメント 1
サプリメント 2
サプリメント 3
サプリメント 4
サプリメント 5


サプリメント 1
サプリメント 2
サプリメント 3 4
サプリメント 5
なし


サプリメント 1
サプリメント 2 3
サプリメント 4
サプリメント 5
なし


サプリメント 1 2
サプリメント 3
サプリメント 4
サプリメント 5
なし


サプリメント 1 2
サプリメント 3 4
サプリメント 5
なし
なし



入力例2

6 6
1
2
3
4
5
6


出力例2

32

どのように食べても飽きません"
豆まき,https://atcoder.jp/contests/abc018/tasks/abc018_1,"問題文
太郎君と次郎君と三郎君の 3 人の人が豆まきで対戦をした 得点が高いほうが上の順位である それぞれの得点が与えられるので それぞれの順位を答えよ 

入力
入力は以下の形式で標準入力から与えられる 

A
B
C


1 行目には 太郎君の得点を表す整数 A  1   A   100  が与えられる 
2 行目には 次郎君の得点を表す整数 B  1   B   100  が与えられる 
3 行目には 三郎君の得点を表す整数 C  1   C   100  が与えられる 
A  B  C は互いに異なる 


出力
出力は 3 行からなる 

1 行目には太郎君の順位を表す整数を出力せよ 
2 行目には次郎君の順位を表す整数を出力せよ 
3 行目には三郎君の順位を表す整数を出力せよ 

 21 49 表現の変更 出力の末尾に改行を入れること 

入力例1

12
18
11


出力例1

2
1
3


太郎くんは次郎君には負けて 三郎君には勝っている 太郎君の順位は 2 位である 
次郎くんは太郎君と三郎君に勝っている 次郎君の順位は 1 位である 
三郎くんは太郎君と次郎君に負けている 三郎君の順位は 3 位である 


入力例2

10
20
30


出力例2

3
2
1"
文字列の反転,https://atcoder.jp/contests/abc018/tasks/abc018_2,"問題文
半角の小文字アルファベットのみからなる文字列 S が与えられる 
文字列 S に対して以下の操作 1 から操作 N までを番号の昇順に行う 

操作 i   左から l i 番目の文字を左端 左から r i  1   l i   r i    S   番目の文字を右端とした部分文字列を逆順にする 

例えば 文字列 abcdef に対して 左から 3 番目の文字 c を左端 左から 5 番目の文字 e を右端とした部分文字列を逆順にすると 文字列 abedcf が得られる 
操作 1 から操作 N までを番号の昇順に行った後の文字列を出力せよ 

入力
入力は以下の形式で標準入力から与えられる 

S
N
l 1 r 1
l 2 r 2
 
l N r N


1 行目には 半角の小文字アルファベットのみからなる文字列 S  1    S    100  が与えられる 
2 行目には 操作の回数を表す整数 N  1   N   100  が与えられる 
3 行目から N 行では 操作に関する情報が与えられる N 行のうち i 行目では 2 つの整数 l i と r i  1   l i   r i    S   が空白区切りで与えられる これは 操作 i が左から l i 番目の文字を左端 左から r i 番目の文字を右端とした部分文字列を逆順にする操作であることを表す 


出力
全操作後の文字列を 1 行に出力せよ  21 49 表現の変更 出力の末尾に改行を入れること 

入力例1

abcdef
2
3 5
1 4


出力例1

debacf


操作 1 の後 文字列は abedcf となっている 
操作 2 の後 文字列は debacf となっている 


入力例2

redcoat
3
1 7
1 2
3 4


出力例2

atcoder"
菱型カウント,https://atcoder.jp/contests/abc018/tasks/abc018_3,"問題文
縦 R 行 横 C 列の長方形領域がある 上から i  1   i   R  行目 左から j  1   j   C  列目にあるマスをマス  i  j  と呼ぶことにする これらのマスのうちいくつかのマスは黒く 他のマスは白く塗られている 
また ある整数 K が定められている 
ここで 以下の条件を満たすように新たに緑色を塗ることを考える この操作は1 回だけ行う 

ある整数 の組 x  K   x   R   K   1   y  K   y   C   K   1  に対して  i x   j y   K   1 を満たすすべてのマス  i j  について マス  i j  は元々白いマスで かつ この操作で緑色に塗られる さらに  i x   j y   K を満たすすべてのマスについて そのマスは緑色に塗らない 

このような色の塗り方の総数はいくらか ただし ここでいう塗り方とは どのマスがどの色になったかという組み合わせのことで 色の塗る順番は考慮しないものとする 

入力
入力は以下の形式で標準入力から与えられる 

R C K
s 1
s 2
 
s R


1 行目には 3 つの整数 R  3   R   500   C  3   C   500   K  2   K   500  が空白区切りで書かれている これは 長方形領域が縦 R 行 横 C 列あることを表す K は文中で定められた整数である 
2 行目から R 行には マスに関する情報が与えられる R 行のうち i  1   i   R  行目には 長さ C の文字列 s i が与えられる 文字列 s i は o  x の 2 種類の文字でのみ構成されており s i の左から j  1   j   C  文字目の文字が o ならマス  i j  が白いマスであることを x ならマス  i j  が黒いマスであることを表す 


部分点
この問題には部分点が設定されている 

R   50 かつ C   50 を満たすデータセット 1 に正解した場合は 30 点が与えられる 


出力
緑色の塗り方の総数を 1 行に出力せよ 出力の末尾に改行を入れること 

入力例1

4 5 2
xoooo
oooox
ooooo
oxxoo


出力例1

3

以下の 3 通りが考えられます  o は白いマス x は黒いマス   は緑色のマスを表します  

x ooo
   ox
o ooo
oxxoo



xo oo
o   x
oo oo
oxxoo



xoooo
ooo x
oo   
oxx o


入力例2

4 5 2
ooooo
oxoox
oooox
oxxoo


出力例2

0


入力例3

8 6 3
oooooo
oooooo
oooooo
oooooo
oxoooo
oooooo
oooooo
oooooo


出力例3

4"
バレンタインデー,https://atcoder.jp/contests/abc018/tasks/abc018_4,"問題文
あるクラスには女子が N 人 男子が M 人いる 女子には 1 から N までの出席番号が 男子には 1 から M までの出席番号が割り当てられている 
幸運のキューピットはここから女子 P 人と男子 Q 人からなる 1 つの旅行グループを作る 
N 人の女子は合わせて R 個のチョコレートを持っており チョコレートには 1 から R までの番号が付けられている 
チョコレート i  1   i   R  は出席番号が x i である女子が持っており 旅行中に出席番号が y i である男子に渡す予定である そのため旅行グループに出席番号が x i である女子と出席番号が y i である男子が両方含まれていた場合に限り渡すことができる 無事にチョコレート i が渡された場合の幸福度は z i である 
無事に渡されたチョコレートによる幸福度の合計値として考えられる最大値はいくらか 

入力
入力は以下の形式で標準入力から与えられる 

N M P Q R
x 1 y 1 z 1
x 2 y 2 z 2
 
x R y R z R


1 行目には 5 つの整数 N  1   N   18   M  1   M   18   P  1   P   N   Q  1   Q   M   R  1   R   N M  が空白区切りで書かれている これは クラスに女子が N 人 男子が M 人おり 旅行グループは女子 P 人 男子 Q 人からなり チョコレートが R 個あることを表す 
2 行目から R 行には チョコレートに関する情報が与えられる R 行のうち i  1   i   R  行目には 3 つの整数 x i  1   x i   N   y i  1   y i   M   z i  1   z i   10 000  が空白区切りで与えられる これは チョコレート i を出席番号が x i である女子が持っており 旅行中に出席番号が y i である男子に渡す予定であり チョコレート i の幸福度が z i であることを表す 
1   i   j   R である整数 i j に対して x i x j または y i y j が成り立つ 


部分点
この問題には部分点が設定されている 

N   8 かつ M   8 を満たすデータセット 1 に正解した場合は 30 点が与えられる 


出力
無事に渡されたチョコレートによる幸福度の合計値として考えられる最大値を 1 行に出力せよ  21 51 表現の変更 出力の末尾に改行を入れること 

入力例1

3 4 2 3 7
1 1 9
1 2 7
1 3 15
1 4 6
2 2 3
2 4 6
3 3 6


出力例1

37

出席番号が 1  2 の女子と出席番号が 2  3  4 の男子からなる旅行グループを考えます 

チョコレート 1 は出席番号が 1 の男子が旅行に参加しないため 渡されません 
チョコレート 2 は受け渡しする男女がともに旅行に参加するため 無事に渡されます チョコレートの幸福度は 7 です 
チョコレート 3 は受け渡しする男女がともに旅行に参加するため 無事に渡されます チョコレートの幸福度は 15 です 
チョコレート 4 は受け渡しする男女がともに旅行に参加するため 無事に渡されます チョコレートの幸福度は 6 です 
チョコレート 5 は受け渡しする男女がともに旅行に参加するため 無事に渡されます チョコレートの幸福度は 3 です 
チョコレート 6 は受け渡しする男女がともに旅行に参加するため 無事に渡されます チョコレートの幸福度は 6 です 
チョコレート 7 は出席番号が 3 の女子が旅行に参加しないため 渡されません 

幸福度の合計値は 7   15   6   3   6   37 となり これが最大値となります 

入力例2

4 5 3 2 9
2 3 5
3 1 4
2 2 2
4 1 9
3 5 3
3 3 8
1 4 5
1 5 7
2 4 8


出力例2

26"
高橋くんと年齢,https://atcoder.jp/contests/abc019/tasks/abc019_1,"問題文
高橋くんは自分の年齢を忘れてしまいました 
ひとまず 3 人の友達を集めることに成功したので その 3 人が予想する高橋くんの年齢の中央値を 高橋くんの年齢として代用することにしました 
高橋くんに代わって 3 つの整数 a  b  c から中央値を求めるプログラムを書いてください 
3 つの整数の中央値とは それらを小さい順に並べて中央に位置する整数のことです 

入力
入力は以下の形式で標準入力から与えられる 

a b c


3 つの整数 a  b  c  1   a  b  c   100  が空白区切りで与えられる 


出力
a  b  c の中央値を標準出力に出力せよ 
末尾の改行を忘れないこと 

入力例1

2 3 4


出力例1

3

2  3  4 の中央値は 3 です 

入力例2

5 100 5


出力例2

5

5  100  5 の中央値は 5 です 

入力例3

3 3 3


出力例3

3


入力例4

3 3 4


出力例4

3"
高橋くんと文字列圧縮,https://atcoder.jp/contests/abc019/tasks/abc019_2,"問題文
高橋くんはある文字列 s を持っています 文字列を短く表現することに興味のある高橋くんは 以下の圧縮方法を試してみることにしました 

文字列 s を同じ文字が連続する文字列に分割します  分割 
分割された各文字列を 文字と その文字が連続する長さをつなげた新たな文字列に変換します  変換 
最後に 変換した各文字列を前から順に結合します  結合 

aabbbaad という文字列に上記の圧縮方法を適用すると

aabbbaad を aa bbb aa d に分割
aa bbb aa d を それぞれ a2 b3 a2 d1 に変換
a2 b3 a2 d1 を a2b3a2d1 と結合

以上より a2b3a2d1 を得ることができます 
あなたには文字列 s が与えられるので 上記の方法で圧縮された文字列を求めるプログラムを 高橋くんの代わりに書いてください 

入力
入力は以下の形式で標準入力から与えられる 

s


圧縮する文字列 s  1    s    1 000   が与えられる   s   は文字列 s の長さを表す  
s は英小文字から成る文字列であることが保証される 


出力
s から作られた圧縮された文字列を標準出力に出力せよ 
末尾の改行を忘れないこと 

入力例1

aabbbaad


出力例1

a2b3a2d1

問題文中の例です 

入力例2

aabbbbbbbbbbbbxyza


出力例2

a2b12x1y1z1a1

長さは10進表記です 

入力例3

edcba


出力例3

e1d1c1b1a1

圧縮された結果 元の文字列より長くなることもあります"
高橋くんと魔法の箱,https://atcoder.jp/contests/abc019/tasks/abc019_3,"問題文
高橋くんは魔法の箱を持っています 
この箱に整数を入れるとそれに対応した整数が出てきます 
出てくる整数は入れた整数だけによって決まり 同じ整数を入れると毎回同じ結果が得られます 
高橋くんは任意の整数 x について x を入れた時と 2x を入れた時に出てくる整数が同じであることに気づきました 
高橋くんが入れた整数が N 個与えられるので 最大で何種類の整数が出てくるか答えてください 

入力
入力は以下の形式で標準入力から与えられる 

N
a 1 a 2    a N


1 行目には 高橋くんが箱に入れる整数の個数 N   1   N   10 5   が与えられる 
2 行目には 高橋くんが箱に入れる N 個の整数が空白を区切りとして与えられる 
1   a i   10 9   1   i   N   であることが保証される 
i   j のとき a i   a j であることが保証される 


出力
最大で何種類の整数が出てくるかを標準出力に出力せよ 
末尾の改行を忘れないこと 

部分点
この問題には部分点が設定されている 

20 点分のテストケースにおいて 1   N   3 000 を満たす 
別の 30 点分のテストケースにおいて 1   a i   5 10 5   1   i   N   を満たす 


入力例1

3
1 2 3


出力例1

2

2 を入れた時に出てくる整数は 1 を入れた時に出てくる整数と等しいので 最大で 2 種類の整数が出てきます 

入力例2

4
2 4 8 16


出力例2

1

すべて同じ整数が出てきます 

入力例3

4
2 3 5 7


出力例2

4

出てくる整数が全て違う可能性があります"
高橋くんと木の直径,https://atcoder.jp/contests/abc019/tasks/abc019_4,"問題文
高橋くんは木の直径を求めるのに夢中です 
木とは 頂点とそれを結ぶ辺からなる構造 グラフ の 1 種で 頂点の数を N 個とすると 辺は N 1 本あり どの頂点も他の全ての頂点に辺で間接 直接的につながっています 



この問題では 辺には整数の重みがついています 2頂点の間の距離を その2つの頂点をつなぐ辺の重みの和と定義します 
木の直径とは 最も離れた2つの頂点の間の距離です 
以下のような木を考えてみましょう 辺の側に書かれた数が その辺の重みです 



この場合 頂点 1 と 2 の距離は 1 頂点 2 と 4 の間の距離は 1 2 3 となります 頂点 3 と 5 の間の距離は 3 4 7 頂点 4 と 5 の間の距離も 2 1 4 7 で この距離がこの木の頂点の間では最大なので 木の直径は 7 となります 
高橋くんは 頂点の数と 2 頂点間の距離の情報から 木の直径を求めることに興味が出てきました 
この問題では あなたは木の頂点の数 N を最初に与えられ 2 頂点の間の距離を尋ねる質問を何回か行い 木の直径を求めます 
ただし 2 頂点間の距離を聞く回数には制限があります 
制限された質問の回数以内で木の直径を求めるプログラムを書いてください 

入出力
まず 木の頂点の数 N が標準入力に与えられる 

N

続いて あなたのプログラムは何回か応答プログラムに質問をする 質問のフォーマットは以下のとおりである 

  a b

この質問で a b 間の距離が標準入力に1行で渡される 1   a  b   N かつ a b を満たしていなければならない 
何回か質問を行った後 あなたは木の直径を当てる 木の直径を diameter とおくと 

  diameter

というフォーマットで出力する 木の直径を出力した後 あなたのプログラムは直ちに終了しなければならない 終了しなかった場合のジャッジ結果は不定である 
また これら以外のフォーマットで出力した場合のジャッジ結果も不定である 
この問題ではテストケースごとに質問回数の上限値が設定されており プログラムの行った質問の回数がその上限値を上回ると誤答と判定される 
正答かどうかは木の直径の出力で判断される 木の直径を特定し得ない質問しかしていない場合でも 直径が正しければ正答となる 

頂点 1 と頂点 2 の間の距離を質問し dist という変数で結果を受け取る例をいくつかの言語について示す 
ただし ここに書かれている方法以外で入出力を行っても良い 
出力した後に 出力をflushしなければならないことに注意せよ flushしなかった場合 TLEとなることがある 
C

printf     d  d n   1  2  
fflush stdout  
scanf   d    dist  

C  

cout            1           2    endl 
cin    dist 

Java

System out printf     d  d n   1  2  
Scanner scanner   new Scanner System in  
dist   scanner nextInt   

C 

Console WriteLine     0   1    1  2  
dist   int Parse Console ReadLine    

D

writeln       1       2  
stdout flush   
dist   readln chomp to int 

PHP

echo       1       2  PHP EOL 
 dist   trim fgets STDIN   

Python

print     0   1   format 1  2 
sys stdout flush  
dist   int raw input   

Perl

   1 
print       1       2    n  
 dist      

Ruby

print       1       2    n 
STDOUT flush
dist   gets to i


制約

2   N   50
1    それぞれの辺の重み    10 6


部分点
この問題には部分点が設定されている 

20 点分のテストケースにおいて 質問回数の上限値は 1300 回である 
別の 80 点分のテストケースにおいて 質問回数の上限値は 100 回である 


入出力例
木が以下のような形状のとき 



以下のような入出力が考えられる 







プログラムへの入力
プログラムの出力




5
 


 
  1 2


5
 


 
  2 4


1
 


 
  4 5


2
 


 
  2 3


9
 


 
  1 5


8
 


 
  14



これは入出力の一つの例であり 意味のある質問をしているとは限らない"
クイズ,https://atcoder.jp/contests/abc020/tasks/abc020_a,"問題文
クイズです 

第 1 問  あなたが今参加しているこのコンテストの略称は何でしょう  アルファベット大文字 3 文字で答えてください 
第 2 問  あなたが今参加しているこのコンテストなどを運営しているAtCoder株式会社の代表取締役社長は誰でしょう  アルファベット小文字 8 文字のハンドルネームで答えてください 

標準入力から整数 1 または 2 が与えられます  1 が入力された場合は第 1 問の答えを  2 の場合は第 2 問の答えを出力してください 
なお クイズの答えに関してはこの問題ページ内に記載があります 

入力
入力は以下の形式で標準入力から与えられる 

Q


1 行目に 答えるべき問題を指定する 1 個の整数 Q  Q   1 または Q   2  が与えられる 


出力
標準出力に  Q   1 であれば第 1 問の答えを  Q   2 であれば第 2 問の答えを出力せよ アルファベットの大文字と小文字は区別される 
末尾の改行を忘れないこと 

入力例1

1


出力例1

ABC


入力例2

2


出力例2

chokudai"
足し算,https://atcoder.jp/contests/abc020/tasks/abc020_b,"問題文
2 つの正整数 A  B が与えられます  A の十進表記の右に B の十進表記 先頭に 0 を付けない を連結して得られる整数を 2 倍したものを出力してください 

入力
入力は以下の形式で標準入力から与えられる 

A B


1 行目に  2 個の整数 A  B  1   A  B   999  がスペース区切りで与えられる 


出力
標準出力に指示された値を出力せよ 
末尾の改行を忘れないこと 

入力例1

1 23


出力例1

246

123   2   246 となります 

入力例2

999 999


出力例2

1999998"
壁抜け,https://atcoder.jp/contests/abc020/tasks/abc020_c,"問題文
正方形のマスが縦 H 行 横 W 列に並んでいます 各マスは白または黒で塗られており 白マスのうち 2 つがそれぞれスタート地点とゴール地点として指定されています 
高橋君はスタート地点から出発して T 秒以内にゴール地点に到着したいです 高橋君は 各マスから上下左右に隣接する別のマスに移動することができます このとき 移動先が白マスであれば 1 秒 黒マスであれば x 秒の時間がかかります 移動前のマスの色は移動時間に影響しません  ここで  x の値は高橋君がスタート地点から出発する前にあなたに選んでもらいます  x の値は正整数でなければならず 高橋君の出発後に値を変更することはできません 
高橋君が T 秒以内にゴール地点に到着することが可能であるような正整数 x の最大値を求めてください 

入力
入力は以下の形式で標準入力から与えられる 

H W T
s  1 1 s  1 2     s  1 W 
s  2 1 s  2 2     s  2 W 
 
s  H 1 s  H 2     s  H W 


1 行目には  3 個の整数 H  W  T  2   H  W   10  2   T   10 9  が与えられる これらはそれぞれ マスの行数と列数 および高橋君の目標時間を表す 
2 行目から H   1 行目には 各マスの情報が与えられる  i   1 行目の j 文字目 s  i j  が i 行 j 列目のマスに対応する 各文字の意味は以下の通り 
	
    スタート地点にもゴール地点にも指定されていない白マス
S   スタート地点として指定された白マス
G   ゴール地点として指定された白マス
    黒マス

	これら以外の文字は s  i j  として出現せず  S および G はそれぞれちょうど 1 個ずつ出現する また 入力では求める最大値が存在することが保証される すなわち 少なくとも 1 度は黒マスに移動しなければスタート地点から出発してゴール地点に到着できないこと および x   1 のとき T 秒以内にゴール地点に到着することが可能であることが保証される 
	


部分点
この問題には部分点が設定されている 

40 点分のテストケースは 2   H  W   3  2   T   30 を満たす 
別の 30 点分のテストケースは 2   T   30 を満たす 

   問題 D にも部分点が設定されています そちらもご確認ください  

出力
標準出力に  高橋君が T 秒以内にゴール地点に到着することが可能であるような正整数 x の最大値を出力せよ 
末尾の改行を忘れないこと 

入力例1

2 3 10
S  
  G


出力例1

8

i 行 j 列目のマスを  i  j  で表します  x   8  のとき   1  1     2  1     2  2     2  3  と移動すると 1   8   1   10 秒でゴール地点に到着することができます  x  geq 9 のとき  10 秒以内にゴール地点に到着することはできません 

入力例2

3 4 7
S  G
    
    


出力例2

3

スタート地点から右に直進すると 2x   1 秒でゴール地点に到達できます 遠回りすることで黒マスへの移動回数を減らすことができますが  x の値によってはかえって時間がかかってしまいます 

入力例3

4 4 1000000000
S   
    
    
   G


出力例3

199999999"
LCM Rush,https://atcoder.jp/contests/abc020/tasks/abc020_d,"問題文
2 つの正整数 a  b の最小公倍数 LCM a  b  とは  a の倍数であり かつ b の倍数でもあるような正整数のうち最小のものをいいます 
2 つの正整数 N  K が与えられます  1 以上 N 以下のすべての整数 i について LCM i  K  を足しあわせたものを 1 000 000 007 で割った余りを求めてください 

入力
入力は以下の形式で標準入力から与えられる 

N K


1 行目に  2 個の整数 N  K  1   N  K   109  がスペース区切りで与えられる 


部分点
この問題は AtCoder Beginner Contest の問題としては非常に難しいため 通常  100 点満点  と異なり 101 点満点であり 部分点が設定されている 

5 点分のテストケースは 1   N  K   100 を満たす 
別の 10 点分のテストケースは 1   N   104  1   K   100 を満たす 
さらに別の 85 点分のテストケースは 1   N   109  1   K   100 を満たす 以上で合計 100 点となる 


出力
標準出力に 求める和を 1 000 000 007 で割った余りを出力せよ 
末尾の改行を忘れないこと 

入力例1

4 2


出力例1

14

LCM 1  2    LCM 2  2    LCM 3  2    LCM 4  2    2   2   6   4   14 となります 

入力例2

10000 100


出力例2

865504986


入力例3

1000000000 90


出力例3

50001213


入力例4

1000000000 999999900


出力例4

231285006"
足し算,https://atcoder.jp/contests/abc021/tasks/abc021_a,"問題文
正整数 N と  2 の累乗数 1 2 4 8 があります 

	これらのうち  
	同じ 2 の累乗数をいくつ使っても良い
	 ので それらの和が N となるような組み合わせを 1 つ求めてください 
組み合わせが複数考えられる場合は そのうちのどれを出力しても構いません 

例えば N 5 のとき 5 1 2 2 となることから 1 つの組み合わせとして  1 2 2  が考えられます 

入力
入力は以下の形式で標準入力から与えられる 

N


1 行目には 正整数 N  1   N   10  が与えられる 


出力
1 行目に 組み合わせを構成する整数の個数 K を出力せよ 
2 行目から K 行には 組み合わせを構成する K 個の整数をそれぞれ出力せよ 
和がちょうど N になり 組み合わせを構成する各整数が 2 の累乗数であるならば正解として扱われる それ以外の場合は不正解として扱われる 
末尾の改行を忘れないこと 

入力例1

5


出力例1

3
1
2
2

問題文の例です 5 1 2 2 と表せるので このように出力すると正解になります 最初に組み合わせを構成する整数の個数である 3 を出力するのを忘れないでください 
他にも 5 1 4 なので 1 4 という組み合わせを出力しても正解となります 

入力例2

1


出力例2

1
1"
嘘つきの高橋くん,https://atcoder.jp/contests/abc021/tasks/abc021_b,"問題文
あなたと高橋君は AtCoder 王国に住んでいます AtCoder 王国には N 個の町と 町同士を結ぶ何本かの道路が存在し 道路は双方向に移動可能です 
N 個の町はそれぞれ 町 1 町 2   町 N と呼ばれています 
高橋君はあなたの家に遊びに行くことにしました そして 高橋君は町 a から出発して ちょうど K 回 AtCoder 王国のどこかの町を経由して町 b にあるあなたの家に到着しました 
高橋君は町 a から町 b まで最短経路で移動してきたと主張していますが あなたには彼が嘘をついているよう思えます 
しかし あなたは具体的に町同士を結ぶ道路がどのような構成になっているか全く知らないため 高橋君が辿った経路が本当に最短経路なのかどうか判定できません 
あなたは高橋君がどの順番で町を経由したかを聞き出すことに成功しました ただし この情報には出発 到着地点である町 a と町 b が含まれません 
あなたはこの情報を元に 高橋君が最短経路で移動していた可能性があるかどうかを出力するプログラムを書くことにしました 
町 a から町 b への最短経路とは 町 a から町 b への移動経路において道路を通る回数が最小となるような経路のことを言います 
高橋君が辿った経路が最短経路となるような町と道路の構成が 1 つでも存在する場合 最短経路で移動した可能性があると言えます 一方 そのような構成がない場合 その可能性は無いと言えます 

入力
入力は以下の形式で標準入力から与えられる 

N
a b
K
P 1 P 2   P K


1 行目には AtCoder 王国に存在する町の個数を表す整数 N 2 N 100  が与えられる 
2 行目には 高橋君が出発する町とあなたの家がある町の番号を表す 2 つの整数 a b 1 a b N a b  が空白区切りで与えられる 
3 行目には 高橋君の移動において経由した町の個数を表す整数 K  1 K 100  が与えられる 
4 行目には 高橋君の移動において経由した町の番号が順番に空白区切りで与えられる そのうち i 1 i K  番目の整数は 町 a を出発した後 i 番目に経由した町の番号 P i 1 P i N  を表す 
  P i   の隣接する要素は全て異なる つまり全ての j 2 j K について P j P  j 1  が成り立つ さらに P 1   a かつ P K   b が成り立つ 


出力
1 行目に 高橋君が最短経路で移動していた可能性があるならば YES その可能性がないならば NO と出力せよ 
末尾の改行を忘れないこと 

入力例1

5
1 5
3
3 4 2


出力例1

YES

たとえば以下のような道路の構成を考えると 1 3 4 2 5 という経路が最短経路となります 


入力例2

7
1 3
4
2 4 2 7


出力例2

NO

1 2 4 2 7 3 という経路が最短経路となるような道路の構成は存在しません 
どのような道路の構成においても 一度訪れた町に再び訪れるような移動は必ず省略できるからです 


入力例3

4
1 4
3
2 1 3


出力例3

NO

1 2 1 3 4 と移動しています 一度出発地点に戻っていますが そのような移動をしてしまうと最短経路を達成することはできません 

入力例4

4
1 4
3
2 4 3


出力例4

NO

1 2 4 3 4 と移動しています 今度は到着地点に一度辿り着いたのにも関わらず移動しています 

入力例5

20
1 4
12
2 3 5 7 8 9 10 11 12 15 13 14


出力例5

YES"
正直者の高橋くん,https://atcoder.jp/contests/abc021/tasks/abc021_c,"問題文
あなたと高橋君は AtCoder 王国に住んでいます AtCoder 王国には N 個の町と 町どうしを結ぶ M 本の道路が存在し それらは双方向に移動可能です 
N 個の町はそれぞれ 町 1 町 2   町 N と呼ばれています 
また M 個の道路はそれぞれ 道路 1 道路 2   道路 M と呼ばれています 
高橋君はあなたの家に遊びに行くことにしました そして 高橋君は町 a から出発して AtCoder 王国のいくつかの町 0 個でも良い を経由して町 b にあるあなたの家に到着しました 
高橋君は最短経路を辿ってきたと主張しています 
高橋君は正直なので 絶対に嘘をつきません 
そこで あなたは町 a から町 b への最短経路が何通りあるかを数えることにしました 答えは非常に大きくなる可能性があるので 実際の答えを 1 000 000 007  10 9 7  で割った余りを出力してください 
町 a から町 b への最短経路とは 町 a から町 b への移動経路において道路を通る回数が最小となるような経路のことを言います 

入力
入力は以下の形式で標準入力から与えられる 

N
a b
M
x 1 y 1
x 2 y 2
 
x M y M


1 行目には AtCoder 王国に存在する町の個数を表す整数 N 2 N 100  が与えられる 
2 行目には 高橋君が出発する町とあなたの家がある町の番号を表す 2 つの整数 a b 1 a b N a b  が空白区切りで与えられる 
3 行目には AtCoder 王国に存在する道路の個数を表す整数 M 1 M 200  が与えられる 
4 行目から M 行には 道路の情報が与えられる そのうち i 1 i M  行目には道路 i が結んでいる 2 つの町の番号 x i y i 1 x i y i N x i y i  が空白区切りで与えられる 
どの町からどの町へもいくつかの道を辿ることによって行くことができる 


出力
1 行目に 町 a から町 b への最短経路の個数を 1 000 000 007 で割った余りを出力してください 
末尾の改行を忘れないこと 

入力例1

7
1 7
8
1 2
1 3
4 2
4 3
4 5
4 6
7 5
7 6


出力例1

4

この入力例に対する図は以下の通りで 最短経路として次の 4 通りが考えられます 

1 2 4 5 7
1 3 4 5 7
1 2 4 6 7
1 3 4 6 7



入力例2

7
1 7
9
1 2
1 3
4 2
4 3
4 5
4 6
7 5
7 6
4 7


出力例2

2

この入力例に対する図は以下の通りです"
多重ループ,https://atcoder.jp/contests/abc021/tasks/abc021_d,"問題文
新入社員の高橋君は とある企業の新人プログラマーとして部署に配属されました 
高橋君が担当した初めての仕事は 以下の擬似コードで表されるプログラムを高速化するというものでした 

n  標準入力 
ans 0
for i 1  n
  for j i  n
    ans   ans 1
ansの値を表示

高橋君にかかってしまえばこんな仕事はお茶の子さいさいです 
各 i に対する内側のループ回数を考えて総和の公式を用いれば ans n n 1   1 n n 1  2 となり これを用いればすぐ答えが出せます 
劇的な高速化に成功した高橋君への部署からの期待は鰻登りです そこで 上司は彼に更なる仕事を与えることにしました 
その仕事内容は 以下のような for ループのネストの深さが k の場合におけるプログラムの高速化です 

n  標準入力 
k  標準入力 
ans 0
for a 1 1  n
  for a 2 a 1  n
    for a 3 a 2  n
       
      for a k a  k 1   n    a 0 1とする
        ans   ans 1
ansの値を表示

さすがの高橋君もこれには少し悩みました 総和の公式が使えないからです 
いろいろ考えてみたところ このプログラムの出力する答えは 1 a 1 a 2   a k n であるような整数の組  a 1 a 2   a k  の個数に等しいということに気づきました 
しかし 彼はそのようなものの個数を数える方法を思いつきませんでした 
彼の同僚であるあなたは 彼の代わりにこの課題をこなすプログラムを作ってあげることにしました 
ただし 答えは非常に大きくなることがあるので ans の代わりに ans を 1 000 000 007  10 9 7  で割った余りを出力してください 

入力
入力は以下の形式で標準入力から与えられる 

n
k


1 行目には 整数 n  1   n   10 5  が与えられる 
2 行目には 整数 k  1   k   10 5  が与えられる 


部分点
この問題には部分点が設定されている 

1 n 1000 かつ 1 k 1000 であるようなデータセットに正解した場合は 99 点が得られる 
上記のデータセットを含む全てのデータセットに正解した場合はさらに 1 点が得られる 


出力
1 行目に 2 つ目のプログラムにおける最終的な ans の値を 1 000 000 007 で割った余りを出力してください 
末尾の改行を忘れないこと 

入力例1

10
2


出力例1

55


入力例2

10
3


出力例2

220


入力例3

10
4


出力例3

715


入力例4

400
296


出力例4

546898535


入力例5

100000
100000


出力例5

939733670"
Best Body,https://atcoder.jp/contests/abc022/tasks/abc022_a,"問題文
高橋君は太りやすく痩せやすい体質です そこで彼は N 日間の体重の変化量を記録してみました 
1 日目の高橋くんの体重は W キログラムでした 
i 日目  2 i N  の体重の変化量は A i キログラムでした A i は負になり得ます  
つまり i 1 日目の体重を X キログラムとすると  i 日目の体重は X   A i キログラムだったということです 
ところで 高橋君の個人的な価値観では 体重が S キログラム以上 T キログラム以下の体型が ベストボディー だと考えています 
体重を記録した N 日間のうち 高橋君がベストボディーであった日数を求めてください 

入力
入力は以下の形式で標準入力から与えられる

N S T
W
A 2
A 3
 
A N


1 行目には高橋君が体重を記録した日数を表す整数 N 2   N   1 000   ベストボディーの基準となる値 S  T 1   S   T   10 5  が空白区切りで与えられる 
2 行目には 1 日目の高橋君の体重を表す整数 W 1   W   10 5  が与えられる 
3 行目からの N 1 行のうち i 行目には i 1 日目の体重の変化量を表す整数 A  i 1   10 5   A  i 1    10 5  が与えられる 
高橋君の体重が 0 キログラム以下になることはない 


出力
高橋君がベストボディーであった日数を 1 行で出力せよ 出力の末尾にも改行を入れること 

入力例1

5 60 70
50
10
10
10
10


出力例1

2

高橋君の体重を 1 日目から順に書き出すと 50  60  70  80  90 になります 
よって2 日目と 3 日目にのみ高橋君はベストボディーだったことになります 

入力例2

5 50 100
120
 10
 20
 30
70


出力例2

2"
Bumble Bee,https://atcoder.jp/contests/abc022/tasks/abc022_b,"問題文
高橋君はマルハナバチ Bumblebee という種類のミツバチです 
今日も花の蜜を求めて異なる N 個の花を訪れました 
高橋君が i 番目に訪れた花の種類は A i です 
i 番目の花は i   j かつ i 番目の花の種類と j 番目の花の種類が同じになるような j が存在すれば受粉します 
高橋君が訪れた N 個の花の種類の情報が与えられるので そのうちいくつの花が受粉したか求めてください 
なお 高橋君以外による受粉や自家受粉を考える必要はありません 

入力
入力は以下の形式で標準入力から与えられる

N
A 1
A 2
 
A N


1 行目には高橋君が訪れた花の個数を表す整数 N 1   N   10 5  が与えられる 
2 行目からの N 行のうち i 行目には i 番目に高橋君が訪れた花の種類を表す整数 A i  1   A i   10 5  が与えられる 


出力
受粉した花の個数を 1 行で出力せよ 出力の末尾にも改行を入れること 

入力例1

5
1
2
3
2
1


出力例1

2

4 番目と 5 番目の花が受粉します 

入力例2

11
3
1
4
1
5
9
2
6
5
3
5


出力例2

4"
Blue Bird,https://atcoder.jp/contests/abc022/tasks/abc022_c,"問題文
高橋君の住む街には N 個の家と M 個の道があります 
家は 1   N の整数によって番号付けされています 
高橋君は家 1 に住んでいます 
道も 1   M の整数によって番号付けされています 
i 番目の道は家 u i と 家 v i を双方向につなぐ長さ l i メートルの道です 
高橋君は街のどこかの家に居るという 幸せの青い鳥 を探しています 
実は  幸せの青い鳥 は高橋くんの家にいて 高橋君もそのことを知っています 
しかし 形だけでも探す旅に出ないと盛り上がりに欠けて面白くないので 仕方なく旅の計画をたてることにしました 
高橋君は自分の家から開始して 同じ道を二度以上通らないようにいくつかの家に訪れ 最後に自分の家に戻ってくる という旅の計画をたてる予定です 
このとき盛り上がりを作るために 旅の途中で自分の家以外の家を少なくとも 1 軒訪れる予定です 
高橋君はこの茶番をできるだけ早く終わらせたいので 通る道の長さの総和が最も小さくなるような計画が最適だと考えています 
高橋君の住む街の家と道の情報が与えられるので 高橋君が上の条件のもとで最適な計画をたてることができるかどうかを求めてください 
もし最適な計画をたてることができるならば そのとき通る道の長さの総和を求めてください 

入力
入力は以下の形式で標準入力から与えられる

N M
u 1 v 1 l 1
u 2 v 2 l 2
 
u M v M l M


1 行目には高橋君の住む街にある家の個数 N 3   N   300  と 道の本数 M 3   M   N N 1  2  が空白区切りで与えられる 
2 行目からの M 行のうち i 行目には i 番目の道路が結ぶ家の番号 u i  v i 1   u i   v i   N  とその長さを表す整数 l i 1   l i   10 5  が空白区切りで与えられる 
i   j ならば u i   u j または v i   v j の少なくとも一方が成り立つ 


出力
最適な計画をたてることができないならば  1 を できるならばそのとき通る道の長さの総和を 1 行に出力せよ 出力の末尾にも改行を入れること 

入力例1

5 7
1 2 2
1 4 1
2 3 7
1 5 12
3 5 2
2 5 3
3 4 5


出力例1

13

家と道の様子は以下のようになります



1  2  5  3  4  1 という順番に訪れる計画が最適です 
1  2  1 という順番に訪れる計画は 1 番目の道を 2 回通っているので条件を満たしていません 

入力例2

5 4
1 2 1
1 3 1
1 4 1
1 5 1


出力例2

 1

同じ道を 2 度以上通らない旅の計画をたてることはできません よって  1 を出力します 

入力例3

10 12
1 4 3
1 9 1
2 5 4
2 6 1
3 7 5
3 10 9
4 7 2
5 6 6
5 8 5
6 8 3
7 9 5
8 10 8


出力例3

11"
Big Bang,https://atcoder.jp/contests/abc022/tasks/abc022_d,"問題文
宇宙はビッグバンによって誕生して以来 膨張し続けていることが知られています 
天文学者である高橋君はその宇宙の膨張の速度を計測することにしました 
高橋君はある 2 つの日について 同じ N 個の星の位置を観測しました 星の位置は座標平面上の点として記録されます つまり各日の観測結果は座標平面上の N 個の点からなる点集合になります 
2 回の観測の結果を見比べてみると 1 回目の観測結果である点集合に対して以下の 3 つの操作を順に実行すると 2 回目の観測結果である点集合に一致することがわかりました 

同じ向きに同じ距離だけ平行移動する 
原点を中心に同じ角度だけ回転する 
原点を中心に P 倍  1   P  に相似拡大する つまり点  a  b  を点  a P  b P  に移すという操作をすべての点に実行する 

ここで P の値がわかれば膨張速度を求めることができそうです 
いざ P を求めようとした高橋君でしたが うっかりどの点がどの星に対応するのか記したデータをなくしてしまいました 
そこで高橋君は優秀なプログラマーであるあなたに助けを借りることにしました 
1 回目と 2 回目の観測結果が与えられるので P を求めてください 

入力
入力は以下の形式で標準入力から与えられる

N
Ax 1 Ay 1
Ax 2 Ay 2
 
Ax N Ay N
Bx 1 By 1
Bx 2 By 2
 
Bx N By N


1 行目には高橋君が観測した星の個数 N  2   N   10 5  が与えられる 
2 行目からの N 行のうち i 行目には 1 回目に観測された i 番目の星の位置の x 座標と y 座標の値を表す 2 つの整数 Ax i  Ay i   15 000  Ax i  Ay i   15 000  が空白区切りで与えられる 
N 2 行目からの N 行のうち i 行目には 2 回目に観測された i 番目の星の位置の x 座標と y 座標の値を表す 2 つの整数 Bx i  By i   10 9  Bx i  By i   10 9  が空白区切りで与えられる 
1 回目も 2 回目も 同じ点に複数の星が観測されることはない 
1 回目に観測された i 番目の星と 2 回目に観測された i 番目の星が同一の星とは限らない 


部分点
この問題には部分点が設定されている 

1   N   3 000を満たすデータセットに正解した場合は 50 点が与えられる 
1   N   10 5を満たすデータセットに正解した場合はさらに 50 点が与えられる 合計で100点となる 


出力
P の値を 1 行に出力せよ 
出力は絶対誤差あるいは相対誤差の少なくとも片方が 10   6  以下であれば許容される 出力の末尾にも改行を入れること 

入力例1

4
0 0
0 1
1 0
1 1
0 2
2 0
 2 0
0  2


出力例1

2 8284271247

以下のように操作を実行すれば  1 回目の観測結果の点集合が  2 回目の観測結果の点集合に移されます 

x 軸方向に  0 5  y 軸方向に  0 5 平行移動させる 
原点を中心にして 45  時計回りに回転させる 
原点を中心に 2 2 倍する 

よって P   2 2 となります 

入力例2

6
3 4
1 3
4 3
2 2
0 1
2 0
5 5
 1 2
 1  3
2 1
2 6
4  3


出力例2

2 2360679775"
加算王,https://atcoder.jp/contests/abc023/tasks/abc023_a,"問題文
今回は 23 回目の AtCoder Beginner Contest です 今回のコンテストは 5 月に開かれています 
高橋君は 23 という整数を見て 十の位と一の位に分割して足し合わせることによって 2   3   5 と現在の月と等しい数となることに気が付きました 
このことに興味を持った高橋君は 手元にあった 2 桁の正整数 X の各位の和を計算することにしました 
あなたの課題は 正整数 X の各位の和を求めることです 

入力
入力は以下の形式で標準入力から与えられる 

X


1 行目には 2 桁の正整数 X  10   X   99  が与えられる 


出力
正整数 X の各位の和を 1 行に出力せよ 出力の末尾にも改行を入れること 

入力例1

23


出力例1

5


問題文の説明の通り 2   3   5 となります 


入力例2

70


出力例2

7


一の位が 0 となることもあります 


入力例3

99


出力例3

18"
手芸王,https://atcoder.jp/contests/abc023/tasks/abc023_b,"問題文
高橋君は趣味でアクセサリーを作っている 
アクセサリーは a  b  c のいずれか 1 文字が書かれたブロックを横 1 列に並べることで作成できる 
高橋君は 以下の手順でアクセサリーの作成を行う 

手順 0   高橋君は b 1 文字からなるアクセサリーを作成する 

以降の手順では 既にあるアクセサリーの両端にブロックを 1 つずつ追加することでアクセサリーを改造する 

手順 3n   1  n   0    手順 3n で完成したアクセサリーの左端に文字 a が書かれたブロックを 右端に文字 c が書かれたブロックを付け足す 
手順 3n   2  n   0    手順 3n 1 で完成したアクセサリーの左端に文字 c が書かれたブロックを 右端に文字 a が書かれたブロックを付け足す 
手順 3n  n   1    手順 3n 1 で完成したアクセサリーの左端に文字 b が書かれたブロックを 右端に文字 b が書かれたブロックを付け足す 

高橋君はアクセサリーの作成を好きな手順の直後に終了することができる 終了した場合 アクセサリーには アクセサリーを構成するブロックに書かれた文字を左から右に読んだものと同じ名前が付けられる 
例えば 手順 0  1  2  3 それぞれの直後にアクセサリーの作成を終了した場合 アクセサリーの名前は順に b  abc  cabca  bcabcab となる 
文字列 S が与えられるので その文字列がアクセサリーの名前として考えられるかを判定し 考えられるなら何番目の手順の直後にアクセサリーの作成を終了したのかを求めよ 

入力
入力は以下の形式で標準入力から与えられる 

N
S


1 行目には 文字列 S の長さを表す整数 N  1   N   100  が与えられる 
2 行目には 半角の小文字アルファベットのみからなる文字列 S が与えられる 


出力
文字列 S が手順 K の直後にアクセサリーの作成を終了したときのアクセサリーの名前と等しいような整数 K が存在する場合は整数 K を いつアクセサリーの作成を終了してもアクセサリーの名前が S とならないときは  1 を 1 行に出力せよ 出力の末尾にも改行を入れること 

入力例1

3
abc


出力例1

1


手順 1 の直後にアクセサリーの作成を終了したときのアクセサリーの名前は abc となる 


入力例2

6
abcabc


出力例2

 1


文字列 abcabc はアクセサリーの名前として考えられない 


入力例3

7
atcoder


出力例3

 1


文字列 S には a  b  c 以外の文字が入ることがある 


入力例4

19
bcabcabcabcabcabcab


出力例4

9"
収集王,https://atcoder.jp/contests/abc023/tasks/abc023_c,"問題文
高橋君はある部屋に移動する予定です 
部屋は正方形のマスが縦に R 行 横に C 列並んだ形状をしています このうち i  1   i   R  行目の j  1   j   C  列目にあるマスをマス  i j  と呼ぶことにします 
これらのマスには飴が合計 N 個存在します 飴には 1 から N までの番号が付けられており 飴 i  1   i   N  はマス  r i c i  に置いてあります これらのうちどの 2 つの飴も同一のマス上にありません 
高橋君はマスのうち任意の 1 マスに移動します 移動した後 高橋君は次に示すように飴を獲得します 

最初に 高橋君がいるマスと同じ行にあるすべてのマスについて そのマスにある飴をすべて獲得する 
次に 高橋君がいるマスと同じ列にあるすべてのマスについて そのマスにあるすべての飴を獲得する 

高橋君はこの行動以外には何も行動しません 
高橋君は獲得する飴の個数がちょうど K 個になるようにしたいです このような移動先として考えられるマスの総数を求めてください 

入力
入力は以下の形式で標準入力から与えられる 

R C K
N
r 1 c 1
r 2 c 2
 
r N c N


1 行目には 3 つの整数 R  1   R   100 000   C  1   C   100 000   K  1   K   100 000  が空白区切りで書かれている これは 部屋を構成する正方形マスが縦 R 行 横 C 列あることを表す K は高橋君が獲得したい飴の個数である 
2 行目には 飴の個数を表す整数 N  K   N   100 000  が与えられる 
3 行目から N 行には 飴に関する情報が与えられる N 行のうち i  1   i   N  行目には 2 つの整数 r i  1   r i   R   c i  1   c i   C  が空白区切りで書かれている これは飴 i がマス  r i c i  にあることを表す 
i j のとき  r i c i   r j c j  となる 


部分点
この問題には部分点が設定されている 

R   50 かつ C   50 かつ N   50 を満たすデータセット 1 に正解した場合は 30 点が与えられる 
追加制約のないデータセット 2 に正解した場合は 上記とは別に 70 点が与えられる 


出力
獲得する飴の個数がちょうど K 個になるような移動先の総数を 1 行に出力せよ 出力の末尾にも改行を入れること 

入力例1

3 5 3
5
1 2
2 1
2 5
3 2
3 5


出力例1

5

例えば マス  3 2  に高橋君が移動した場合を考えます 

飴 1 は マス  1 2  にあります このマスはマス  3 2  と同じ列にあるので 高橋君は飴 1 を獲得します 
飴 2 は マス  2 1  にあります このマスはマス  3 2  と同じ行にも同じ列にもないので 高橋君は飴 2 を獲得しません 
飴 3 は マス  2 5  にあります このマスはマス  3 2  と同じ行にも同じ列にもないので 高橋君は飴 3 を獲得しません 
飴 4 は マス  3 2  にあります このマスはマス  3 2  と同じマス  同じ行かつ同じ列  にあるので 高橋君は飴 4 を獲得します 
飴 5 は マス  3 5  にあります このマスはマス  3 2  と同じ行にあるので 高橋君は飴 5 を獲得します 

以上より 飴 1  4  5 のちょうど 3 個だけ飴を獲得するので マス  3 2  は獲得する飴の個数がちょうど K 個になるような移動先です 
他にもマス  1 5    2 5    3 1    3 5  が条件をみたすので答えとして 5 を出力します 

入力例2

7 3 1
4
3 2
3 3
4 2
4 3


出力例2

0

どのように移動先を指定しても 獲得する飴の個数をちょうど 1 個にすることはできません 

入力例3

5 5 2
5
1 1
2 2
3 3
4 4
5 5


出力例3

20"
射撃王,https://atcoder.jp/contests/abc023/tasks/abc023_d,"問題文
高橋君は最近 射撃にハマっている 
高橋君は N 個の風船すべてを射撃で割り 得られる得点をできるだけ小さくする競技に参加している 
風船には 1 から N までの番号が付けられていて 風船 i  1   i   N  は競技開始時に高度 H i のところにあり 1 秒経過するにつれて高度が S i だけ増加する 
高橋君は競技開始時に 1 個風船を割ることができ そこから 1 秒ごとに 1 個の風船を割ることができる どの順番で風船を割るのかは高橋君が自由に決定できる 
どの風船についても その風船を割ることによるペナルティが発生する ペナルティはその風船が割られたときの高度と等しい整数値となる 高橋君が最終的に得る得点は N 個の風船のペナルティのうちの最大値となる 
高橋君が得ることのできる得点として考えられる最小値を求めよ 

入力
入力は以下の形式で標準入力から与えられる 

N
H 1 S 1
H 2 S 2
 
H N S N


1 行目には 風船の個数を表す整数 N  1   N   100 000  が書かれている 
2 行目から N 行には 風船に関する情報が与えられる N 行のうち i  1   i   N  行目には 2 つの整数 H i  1   H i   1 000 000 000   S i  1   S i   1 000 000 000  が空白区切りで与えられる これは 風船 i が競技開始時に高度 H i にあり 1 秒経過するにつれて高度が S i ずつ上昇していくことを表す 


部分点
この問題には部分点が設定されている 

N   50 かつ H i   100 000 かつ S i   2 000  を満たすデータセット 1 に正解した場合は 30 点が与えられる 
追加制約のないデータセット 2 に正解した場合は 上記とは別に 70 点が与えられる 


出力
高橋君が得ることのできる得点として考えられる最小値を 1 行に出力せよ 出力の末尾にも改行を入れること 

入力例1

4
5 6
12 4
14 7
21 2


出力例1

23

例えば 以下に示す順番で風船を割ります 

競技開始直後に風船 3 を割ります 風船 3 のペナルティは 14   7   0   14 です 
競技開始から 1 秒後に風船 4 を割ります 風船 4 のペナルティは 21   2   1   23 です 
競技開始から 2 秒後に風船 2 を割ります 風船 2 のペナルティは 12   4   2   20 です 
競技開始から 3 秒後に風船 1 を割ります 風船 1 のペナルティは 5   6   3   23 です 

以上より高橋君の得点は 23 となり これが最小値となります 

入力例2

6
100 1
100 1
100 1
100 1
100 1
1 30


出力例2

105"
動物園,https://atcoder.jp/contests/abc024/tasks/abc024_a,"問題文
ABC動物園は 高橋王国で一番の人気を誇る動物園です 
ABC動物園の入場料の設定は以下のようになっています 

子供 1 人あたり A 円
大人 1 人あたり B 円
合計人数が K 人以上の団体は 1 人あたり C 円引き

今 子供 S 人 大人 T 人からなる団体が入場しようとしています 
この団体が合計で支払わなければならない入場料を求めてください 

入力
入力は以下の形式で標準入力から与えられる 

A B C K
S T



1 行目には入場料の値段設定を表す 4 つの整数 A  B  C  K が空白区切りで与えられる 各変数の意味は問題文と同様である 各変数は以下の制約を満たす 
		
0   C   A   B   1 000
0   K   100


2 行目には団体が含む子供と大人の人数を表す 2 つの整数 S 0   S   100   T 0   T   100  が空白区切りで与えられる 


出力
団体が合計で支払わなければならない入場料を 1 行に出力せよ 
出力の末尾に改行を入れること 

入力例1

100 200 50 20
40 10


出力例1

3500

子供 40 人 大人 10 人の団体です 合計人数が 20 人以上なので一人あたり 50 円割引 つまり全体で 2500 円割引されます 

入力例2

400 1000 400 21
10 10


出力例2

14000

団体の合計人数が 21 人以上ではないので割引は適応されません 

入力例3

400 1000 400 20
10 10


出力例3

6000"
自動ドア,https://atcoder.jp/contests/abc024/tasks/abc024_b,"問題文
ABCマーケットは高橋王国で最も人気なスーパーマーケットです 
入り口は自動ドアになっています 
この自動ドアは人が前を通りかかると自動で開き そこから T 秒後まで開き続け その後自動的に閉じます 
ドアが開いている状態で新たに人が前を通りかかると 通りかかった時刻のさらに T 秒後まで開き続ける時間が延長されます 
今日はのべ N 人の客が自動ドアの前を通りかかりました 
i 番目の人が通りかかった時刻はABCマーケットが開店してから A i 秒経った時刻です 
今日 この自動ドアが開いていた合計秒数を求めてください 

入力
入力は以下の形式で標準入力から与えられる 

N T
A 1
A 2
 
A N


1 行目に今日自動ドアの前を通りかかった人数を表す整数 N 1   N   10 5  とドアが開き続ける時間を表す整数 T 1   T   10 5  が空白区切りで与えられる 
2 行目からの N 行のうち i 行目には i 番目の客が自動ドアの前を通りかかった時刻 A i 1   A i   10 6  が与えられる 
A 1   A 2       A N が成り立つ 


部分点
この問題には部分点が設定されている 

1   T   100を満たすデータセットに正解した場合は 50 点が与えられる 
1   T   10 5を満たすデータセットに正解した場合はさらに 50 点が与えられる 合計で100点となる 


出力
ドアが開いていた秒数を 1 行に出力せよ 
出力の末尾に改行を入れること 

入力例1

5 10
20
100
105
217
314


出力例1

45

時刻が 20   30 100   115 217   227 314   324 のときにドアが開いています 

入力例2

10 10
1
2
3
4
5
6
7
8
9
10


出力例2

19


入力例3

10 100000
3
31
314
3141
31415
314159
400000
410000
500000
777777


出力例3

517253"
民族大移動,https://atcoder.jp/contests/abc024/tasks/abc024_c,"問題文
高橋王国には N 個の街があり それぞれ 1   N の整数によって番号付けされています 
高橋王国には K 種類の民族が住んでおり i 番目の民族は街 S i に住んでいます 
高橋王国の民族たちには 百年に一回住む街を変える 民族大移動 という文化が有ります 
基本的には全民族が同時期に 民族大移動 を行うのですが 全く同じ日に全民族が移動すると混雑が予想されるため  以下の様な移動制限を毎日設けて  D 日かけて行います 

i 日目は 街の番号が L i 以上 R i 以下であるよう街の間を自由に行き来できる それ以外の行き来は禁止される 

各民族はこの移動制限を守り いくつかの街を経由しながら目的地の街まで移動します 
i 番目の民族の目的地は街 T i です どの民族もできるだけ早く目的地に到着したいと思っています 
各民族について 目的地に到着できる最も早い日を求めてください 
なお どの民族も D 日以内に目的地に到着できることが保証されています 

入力
入力は以下の形式で標準入力から与えられる 

N D K
L 1 R 1
L 2 R 2
 
L D R D
S 1 T 1
S 2 T 2
 
S K T K


1 行目には高橋王国の街の個数 N 1   N   10 9   大移動にかける日数 D 1   D   10 4   高橋王国に住む民族の個数 K 1   K   100  が空白区切りで与えられる 
2 行目からの D 行のうち i 行目には i 日目の移動制限の内容を表す 2 つの整数 L i  R i 1   L i   R i   N  が空白区切りで与えられる 
D 2 行目からの K 行のうち i 行目には i 番目の民族の初め住んでいる街 S i  1   S i   N  目的地の街 T i  1   T i   N  が空白区切りで与えられる このとき S i   T i が成り立つ 
どの民族も D 日以内に目的地に到着できることが保証されている 


出力
出力は K 行からなる 
i 行目には i 番目の民族が目的地に到着できる最初の日を出力せよ 
出力の末尾にも改行を入れること 

入力例1

10 10 3
1 5
3 6
7 10
5 8
4 4
1 4
2 9
1 3
1 1
4 5
1 6
2 7
10 1


出力例1

2
4
8

1 番目の民族は以下のように移動すれば 2 日で目的地に到着できます これより早く移動することはできません 

1 日目に街 1 から街 4 に移動する 
2 日目に街 4 から街 6 に移動する 

2 番目の民族は以下のように移動すれば 4 日で目的地に到着できます これより早く移動することはできません 

1 日目に街 2 から街 5 に移動する 
4 日目に街 5 から街 7 に移動する 

3 番目の民族は以下のように移動すれば 8 日で目的地に到着できます これより早く移動することはできません 

3 日目に街 10 から街 9 に移動する 
7 日目に街 9 から街 3 に移動する 
8 日目に街 3 から街 1 に移動する 


入力例2

10 10 4
1 2
2 4
3 6
4 8
5 10
9 10
7 8
5 6
3 5
1 3
10 1
3 8
2 4
1 3


出力例2

10
4
2
2


入力例3

314159265 10 1
1 10000
500 12031
1414 113232
111111 777777
666661 23423423
12345678 123456789
111111111 314159265
112334 235235235
1 223445
314 1592
1 314159265


出力例3

7"
動的計画法,https://atcoder.jp/contests/abc024/tasks/abc024_d,"21 52 ジャッジに使われているサンプルテストケースのうち1つのテストケースが問題文のものと異なることが判明致しました ご不便をおかけして申し訳ありません なお テストケース自体は正しいものであるため リジャッジ等は行いません ご了承ください 
問題文
高橋君はタテ ヨコともに 10 8 マスずつある方眼紙を使って以下の問題を解くことにしました 
 一番左下のマスから開始して 右もしくは上に1マス移動するという操作を繰り返して 各マスにたどり着く方法の個数を 1 000 000 007 で割った余りを求めよ  
高橋君は動的計画法が好きなので この問題が動的計画法を使って解けるということにすぐ気づきました 
具体的には

最も左の列もしくは最も下の行に属する全てのマスに 1 を書き込む 
まだ整数が書き込まれていないマスについて 左のマスにも下のマスにも整数が書かれていたら その 2 マスの和を1 000 000 007 で割った余りをそのマスに書き込む 
整数が書かれていないマスがなくなるまで操作2を繰り返す 

というアルゴリズムによって 答えを求めることが出来ます 
高橋君は上記のアルゴリズムですべてのマスに 左下からたどり着く方法の個数を 1 000 000 007 で割った余り を書き込みました 
できあがった方眼紙の左下の一部は下図のようになります 



しかし書き込み終わったあと 達成感のために舞い上がってしまい 方眼紙の一部を破いてしまいました 
高橋君の手元には あるマスと その上のマスと右のマスの部分のみが書かれている方眼紙の欠片があります 
高橋君はこの欠片を元の位置に戻そうと思ったのですが 方眼紙が大きすぎるので どこに置けばいいのかわかりません 
欠片の情報から この欠片が元々の方眼紙の左から何マス 下から何マスの位置にあったのか求めてください 
つまり 左からxマス 下からyマスのマスのことを  x  y  と書くとして  r  c   r  c   1   r   1  c のマスに書かれている整数が与えられるので  r と c を求めてください 
なお 一番左下のマスは  0  0  です 

入力
入力は以下の形式で標準入力から与えられる 

A
B
C


1 行目には  r  c  のマスに書かれている整数 A 0   A   1 000 000 007  が与えられる 
2 行目には  r  c   1  のマスに書かれている整数 B 0   B   1 000 000 007  が与えられる 
3 行目には  r   1  c  のマスに書かれている整数 C 0   C   1 000 000 007  が与えられる 
0   r  c   99 999 999となるような答えが存在するような A  B  C が与えられる 


出力
欠片が元々あった位置を表す 2 つの整数 r 0   r   99 999 999  と c 0   c   99 999 999  を空白区切りで出力せよ 
答えとして考えられる r  c が複数あった場合はそのなかで r が最小のものを出力せよ 
それでも答えが 1 つに定まらない場合は rが最小のもののなかで c が最小のものを出力せよ 
出力の末尾には改行を入れること 

入力例1

15
35
21


出力例1

4 2

高橋君の手元にある欠片は下図のようなものです 



元はあった位置としては下図の位置があてはまります 




入力例2

126
252
210


出力例2

5 4


入力例3

144949225
545897619
393065978


出力例3

314159 365358"
25個の文字列,https://atcoder.jp/contests/abc025/tasks/abc025_a,"問題文
高橋君は短めの呼び名を考えています 呼び名は半角小文字アルファベット 2 文字で構成されます 
高橋君には好きな 5 種類のアルファベットがあります 高橋君は 以下の条件を満たす長さ 2 の文字列すべてを考え それらの集合を 呼び名候補の集合 と呼ぶことにします 

条件   文字列の 1 文字目も 2 文字目も高橋君が好きな 5 種類のアルファベットのいずれかである 

ここで 2 つの長さ 2 の異なる文字列 S T に関して S が T よりも辞書順で先に来るというのは 以下の条件のうちのいずれかが満たされたときです 

文字列 S の 1 文字目と文字列 T の 1 文字目が異なり かつ文字列 S の 1 文字目が文字列 T の 1 文字目よりもアルファベット順  ABC 順  で先である 
文字列 S の 1 文字目と文字列 T の 1 文字目が同じで かつ文字列 S の 2 文字目が文字列 T の 2 文字目よりもアルファベット順  ABC 順  で先である 

例えば 好きなアルファベットが a  b  c  d  e のとき  呼び名候補の集合 に含まれる文字列は 辞書順に aa  ab  ac  ad  ae  ba  bb  bc  bd  be  ca  cb  cc  cd  ce  da  db  dc  dd  de  ea  eb  ec  ed  ee となります 
 呼び名候補の集合 を構成する文字列は全部で 25 個あります 高橋君はそれらの文字列を辞書順に並べたときに先頭から N 番目となる文字列を最終的な呼び名にすることにしました 
あなたの課題は 高橋君が定めた最終的な呼び名を求めることです 

入力
入力は以下の形式で標準入力から与えられる 

S
N


1 行目には 長さ 5 の文字列 S が与えられる S の各文字はいずれも半角小文字アルファベットであり S に使われている文字には重複がなく かつ昇順に並んでいる すなわち文字列 S の左から i  1   i   5  文字目の文字を c i としたとき c i   c j  i j  であり i j ならアルファベット c i はアルファベット c j よりもアルファベット順で前である 
2 行目には 整数 N  1   N   25  が与えられる 


出力
高橋君が定めた最終的な呼び名を 1 行に出力せよ 出力の末尾に改行を入れること 

入力例1

abcde
8


出力例1

bc


 呼び名候補の集合 は 問題文中の例と同一です  呼び名候補の集合 の中で 辞書順で 8 番目の文字列は bc なので bc を出力します 


入力例2

aeiou
22


出力例2

ue


入力例3

vwxyz
25


出力例3

zz"
双子とスイカ割り,https://atcoder.jp/contests/abc025/tasks/abc025_b,"問題文
直大くんと直子さんは双子の兄妹です 今日は家の廊下でスイカ割りの練習をすることになりました 
廊下は東西方向に無限に長く 途中の 1 箇所に直大くんの部屋の入り口があります 最初 直大くんの部屋の前に直大くんと直子さんがいます 
スイカ割りの練習では 以下の N 回の移動を順に実行します 

i 番目の移動   最初に直子さんが方角とメートル単位の距離 d iを指定します 指定する方角は東か西で d i は正整数です その後 直大くんが指定された方向を向いて 距離 d i を目標に移動します 

直大くんは 1 回の移動において A メートルよりも少ない距離を移動することと B メートルよりも多い距離を移動することが苦手です そのため 目標移動距離が d i メートルだったときの最終移動距離は以下のようになります 

d i   A のとき 直大くんは向いている方向に A メートル進む 
A  d i   B のとき 直大くんは向いている方向に d i メートル進む 
d i   B のとき 直大くんは向いている方向に B メートル進む 

あなたの課題は 直大くんが N 回の移動を終えたときにどこにいるのかを求めることです 

入力
入力は以下の形式で標準入力から与えられる 

N A B
s 1 d 1
s 2 d 2
 
s N d N



1 行目には 3 つの整数 N  1   N   100  と A と B  1   A   B   100  が空白区切りで書かれている 
2 行目からの N 行には 移動の情報が書かれている N 行のうちの i  1   i   N  行目には 文字列 s i と整数 d i  1   d i   100  が空白区切りで書かれている 文字列 s i は East または West であり 直子さんが指定する方角がそれぞれ東 西であることを表す 


出力

直大くんの最終的な位置が直大くんの部屋の前よりも X  1   X  メートル東になったとき 文字列 East と X をこの順に空白区切りで 1 行に出力せよ 
直大くんの最終的な位置が直大くんの部屋の前よりも X  1   X  メートル西になったとき 文字列 West と X をこの順に空白区切りで 1 行に出力せよ 
直大くんの最終的な位置が直大くんの部屋の前と同じ場所になったとき 整数 0 を 1 行に出力せよ 

いずれの場合においても 出力の末尾に改行を入れること 

入力例1

3 5 10
East 7
West 3
West 11


出力例1

West 8


1 番目の移動では 直子さんは東に 7 メートルと指定しました 直大くんは東に 7 メートル移動し この時点で直大くんは直大くんの部屋の前から東に 7 メートルの位置にいます 
2 番目の移動では 直子さんは西に 3 メートルと指定しました 直大くんは西に 5 メートル移動し この時点で直大くんは直大くんの部屋の前から東に 2 メートルの位置にいます 
3 番目の移動では 直子さんは西に 11 メートルと指定しました 直大くんは西に 10 メートル移動し この時点で直大くんは直大くんの部屋の前から西に 8 メートルの位置にいます 
最終的に直大くんは直大くんの部屋の前から西に 8 メートルの位置にいます 


入力例2

3 3 8
West 6
East 3
East 1


出力例2

0


この例では 最終的に直大くんは直大くんの部屋の前と同じ位置にいることになります 


入力例3

5 25 25
East 1
East 1
West 1
East 100
West 1


出力例3

East 25"
双子と○×ゲーム,https://atcoder.jp/contests/abc025/tasks/abc025_c,"問題文
直大くんと直子さんは双子の兄妹です 時々 休日に 2 人でゲームをしています 
ゲームは  ゲームをベースにしており 以下の要領でゲームが行われます 

ゲームは縦 3 マス 横 3 マスの盤面を使います ゲーム開始時点ではどのマスにも文字が書かれていません 
挨拶した後 直大くんから始めて交互に文字を書いていきます 文字は盤面上のまだ文字が書かれていないマスの上にのみ書くことができます そのようなマスが複数ある場合は好きな 1 箇所を選んで書きます 書く文字は 直大くんが  直子さんが です 
合わせて 9 回文字を書いた時点で すべてのマスが埋まります その後 得点計算を行い 得点の高い方が勝ちます 

得点計算は以下の方法で行われます ここで 盤面の左上のマスをマス  1  1  とし 左上から下に i 1  1   i   3  マス 右に j 1  1   j   3  マス進んだところにあるマスをマス  i  j  と呼ぶことにします 

1   i   2 および 1   j   3 を満たすすべての整数組  i j  に対して マス  i j  とマス  i 1 j  に書かれているマスを見て 同じ文字が書かれていたなら直大くんに 違う文字が書かれていたなら直子さんに b  i j  点が入る 
1   i   3 および 1   j   2 を満たすすべての整数組  i j  に対して マス  i j  とマス  i j 1  に書かれているマスを見て 同じ文字が書かれていたなら直大くんに 違う文字が書かれていたなら直子さんに c  i j  点が入る 

直大くんも直子さんも 最終的に得られる自分の得点ができるだけ多くなるようにゲームを行います 両者が最善を尽くしたときのそれぞれの得点を計算してください 

入力
入力は以下の形式で標準入力から与えられる 

b  1 1  b  1 2  b  1 3 
b  2 1  b  2 2  b  2 3 
c  1 1  c  1 2 
c  2 1  c  2 2 
c  3 1  c  3 2 


1 行目には 3 つの整数 b  1 1   0   b  1 1    100  と b  1 2   0   b  1 2    100  と b  1 3   0   b  1 3    100  が空白区切りで書かれている 
2 行目には 3 つの整数 b  2 1   0   b  2 1    100  と b  2 2   0   b  2 2    100  と b  2 3   0   b  2 3    100  が空白区切りで書かれている 
3 行目には 2 つの整数 c  1 1   0   c  1 1    100  と c  1 2   0   c  1 2    100  が空白区切りで書かれている 
4 行目には 2 つの整数 c  2 1   0   c  2 1    100  と c  2 2   0   c  2 2    100  が空白区切りで書かれている 
5 行目には 2 つの整数 c  3 1   0   c  3 1    100  と c  3 2   0   c  3 2    100  が空白区切りで書かれている 


出力
出力は 2 行からなる 1 行目には直大くんの得点を 2 行目には直子さんの得点を出力せよ 出力の末尾に改行を入れること 

入力例1

0 15 0
0 0 25
20 10
0 0
25 0


出力例1

15
80


例えば マス  2 1   マス  1 1   マス  2 2   マス  1 3   マス  1 2   マス  2 3   マス  3 1   マス  3 2   マス  3 3  の順に文字が書かれた場合を考えます この場合 盤面は最終的に以下のようになります 

   
   
   

この場合 直大くんの得点は  b  1 2    b  1 3    b  2 1    c  1 2      15   0   0   0   15 点となります 
一方 直子さんの得点は  b  1 1    b  2 2    b  2 3    c  1 1    c  1 2    c  2 2    c  3 1    c  3 2      0   0   25   20   10   0   25   0   80 点となります 


入力例2

18 22 15
11 16 17
4 25
22 15
10 4


出力例2

72
107"
25個の整数,https://atcoder.jp/contests/abc025/tasks/abc025_d,"問題文
高橋君は縦 5 マス 横 5 マスの盤面に 1 から 25 までの整数を 1 つずつ書き込もうとしています 
高橋君は以下の条件をすべて満たすように整数を配置しようと考えています 

整数は各マスに 1 つずつ割り当てる 
縦または横に連続する 3 つの整数をどのように取り出しても それらは昇順または降順になっていない すなわち 上から i  1   i   5  番目 左から j  1   j   5  番目のマスに書かれた整数を n  i j  としたとき 以下の 2 条件が成立する 

n  i j    n  i 1 j    n  i 2 j  あるいは n  i j    n  i 1 j    n  i 2 j  を満たす整数組  i j   1   i   3  1   j   5  が存在しない 
n  i j    n  i j 1    n  i j 2  あるいは n  i j    n  i j 1    n  i j 2  を満たす整数組  i j   1   i   5  1   j   3  が存在しない 


すでにいくつかのマスについては どの整数を書き込むかは決まっています あなたの課題は 上記の条件を満たすような残りの整数の配置の総数を計算することです 

入力
入力は以下の形式で標準入力から与えられる 

x  1 1  x  1 2  x  1 3  x  1 4  x  1 5 
x  2 1  x  2 2  x  2 3  x  2 4  x  2 5 
x  3 1  x  3 2  x  3 3  x  3 4  x  3 5 
x  4 1  x  4 2  x  4 3  x  4 4  x  4 5 
x  5 1  x  5 2  x  5 3  x  5 4  x  5 5 


1 行目には 5 つの整数 x  1 1   0   x  1 1    25  と x  1 2   0   x  1 2    25  と x  1 3   0   x  1 3    25  と x  1 4   0   x  1 4    25  と x  1 5   0   x  1 5    25  が空白区切りで書かれている 
2 行目には 5 つの整数 x  2 1   0   x  2 1    25  と x  2 2   0   x  2 2    25  と x  2 3   0   x  2 3    25  と x  2 4   0   x  2 4    25  と x  2 5   0   x  2 5    25  が空白区切りで書かれている 
3 行目には 5 つの整数 x  3 1   0   x  3 1    25  と x  3 2   0   x  3 2    25  と x  3 3   0   x  3 3    25  と x  3 4   0   x  3 4    25  と x  3 5   0   x  3 5    25  が空白区切りで書かれている 
4 行目には 5 つの整数 x  4 1   0   x  4 1    25  と x  4 2   0   x  4 2    25  と x  4 3   0   x  4 3    25  と x  4 4   0   x  4 4    25  と x  4 5   0   x  4 5    25  が空白区切りで書かれている 
5 行目には 5 つの整数 x  5 1   0   x  5 1    25  と x  5 2   0   x  5 2    25  と x  5 3   0   x  5 3    25  と x  5 4   0   x  5 4    25  と x  5 5   0   x  5 5    25  が空白区切りで書かれている 


上記 25 個の整数は 以下の情報を表している 


整数 x  i j   1   i   5  1   j   5  は上から i 番目 左から j 番目のマスに書かれる整数に関する情報である x  i j    0 ならそのマスに書かれる整数が決まっていないことを x  i j    0 ならそのマスに書かれる整数が x  i j  であることを表す 


また 入力は以下の条件を満たす 


1 以上 5 以下の 4 つの整数組 i j k l に関して x  i j    1 かつ x  k l    1 かつ  i j     k l  ならば x  i j    x  k l  
x  i j    0 を満たす整数組  i j   1   i   5  1   j   5  は 5 個以上存在する 


部分点
この問題には部分点が設定されている 

データセット 1 において すべての入力には x  i j    0 を満たす整数組  i j   1   i   5  1   j   5  が 17 個以上存在する データセット 1 に正解した場合は 30 点が与えられる 
追加制約のないデータセット 2 に正解した場合は 上記とは別に 70 点が与えられる 


出力
条件を満たすような残りの整数の配置の総数を 1000000007    1 000 000 007  で割った余りを 1 行に出力せよ 出力の末尾に改行を入れること 

入力例1

0 0 15 2 7
0 0 16 1 22
20 25 4 19 0
3 23 9 18 10
17 0 5 21 8


出力例1

2


まだ書かれていない整数は 6  11  12  13  14  24 の 6 つです 以下の 2 通りが 条件を満たす配置です 




14121527
131116122
20254196
32391810
17245218



14131527
121116122
20254196
32391810
17245218




入力例2

10 14 13 15 11
16 0 17 0 18
0 19 0 20 9
21 12 22 0 23
0 24 0 25 0


出力例2

40320


どのように残りを書いても条件を満たします 


入力例3

1 2 3 4 5
6 7 8 9 10
11 12 13 14 15
16 17 18 19 20
0 0 0 0 0


出力例3

0


どのように置いても条件を満たさない場合があります 


入力例4

1 25 2 24 3
23 4 22 5 21
6 20 7 19 8
18 9 17 10 16
11 15 12 14 13


出力例4

1


すでにすべての整数の配置が決まっている場合もあります"
掛け算の最大値,https://atcoder.jp/contests/abc026/tasks/abc026_a,"問題文
正の偶数 A が与えられる 
x   y   A となる正の整数 x  y のうち  x y が最大となるものを選び その値を出力しなさい 

入力
入力は以下の形式で標準入力から与えられる 

A


1 行目には 正の偶数 A  2 A 100  が与えられる 


出力
x   y の最大値を出力しなさい  出力の末尾には改行を入れること 

入力例1

10


出力例1

25

x   5  y   5 のとき  x   y   25 となり これが最大値となります 

入力例2

60


出力例2

900"
N重丸,https://atcoder.jp/contests/abc026/tasks/abc026_b,"問題文
高橋君は 丸が大好きです 今日も 原点を中心とした大きさの違う円を N 個書きました 
その円の集合に対し 外側から赤白交互に色を塗ったとき 赤く塗られる部分の面積を出力しなさい 




入力
入力は以下の形式で標準入力から与えられる 

N
R 1
R 2
 
R N


1 行目には 円の個数を表す整数 N 1 N 1000   が与えられる 
2 行目から N 行は 円の半径の情報を表す N 個の整数が 1 行ずつ与えられる そのうち i 番目は  i 番目の円の半径を表す整数 R i  1   R i   1000  である 
i   j の時  R i   R j を満たす 


出力
赤く塗られる部分の面積を 1 行で出力せよ 
答えは 相対誤差または絶対誤差が 10   6  以下であれば許容される 
出力の末尾には改行を入れること 

入力例1

3
1
2
3


出力例1

18 8495559215

以上のような入力だと 問題文に与えられた図のような色の塗られ方になります 
この際 赤い部分の面積は 　 3 2   2 2   1 2    π   18 8495559215 となります 

入力例2

6
15
2
3
7
6
9


出力例2

508 938009881546

入力がソートされて与えられないこともあることに注意してください"
高橋君の給料,https://atcoder.jp/contests/abc026/tasks/abc026_c,"問題文
高橋君は 社員が N 人いる会社の社長です 高橋君の会社では 以下のように給料が決まっています 

高橋君を含む社員の全員が  1 から N までの社員番号を持っている 高橋君の社員番号はもちろん 1 である 
高橋君以外の社員には 必ず自分より社員番号が小さい上司がただ一人存在する 自分が上司になっている社員のことを 直属の部下と呼ぶ 
直属の部下がいない社員の給料は 1 であり 直属の部下がいる社員の給料は    rm max  その社員の直属の部下の給料      rm min  その社員の直属の部下の給料    1 である 直属の部下が一人しかいない場合は その部下の給料の 2 倍   1 が その社員の給料となる 

この時 高橋君の給料を求めなさい 

入力
入力は以下の形式で標準入力から与えられる 

N
B 2
B 3
 
B N


1 行目には 社員の数を表す整数 N  1 N 20  が与えられる 
2 行目からの N 1 行には 各社員の上司の情報が与えられる このうち i 行目には  社員番号 i   1 番の社員の上司の社員番号を表す整数 B i 1 B i i  が  1 行で与えられる 


出力
高橋君の給料を 1 行で出力しなさい 
出力の末尾には改行を入れること 

入力例1

5
1
1
1
1


出力例1

3

高橋君は 直属の部下が 4 人いますが その全ての部下の給料が 1 です よって 高橋君の給料は 1   1   1   3となります 

入力例2

7
1
1
2
2
3
3


出力例2

7

社員番号 2  3 の二人の社員が二人部下を持ち その二人の上司が高橋君 という構成です 
ほかの社員の給料は 1 なので 社員番号 2  3 の二人の社員の給料は 1   1   1   3 となります 
よって 高橋君の給料は  3   3   1   7 となります 

入力例3

6
1
2
3
3
2


出力例3

11

高橋君の直属の部下は 社員番号 2 の社員一人だけです 
この社員の直属の部下は 社員番号 3  6 の二人の社員です  この二人の給料はそれぞれ 3  1 なので 社員番号 2 の社員の給料は 5 です 
よって 高橋君の給料は  5 5 1   11 となります 

入力例4

10
1
2
3
4
5
6
7
8
9


出力例4

1023

高橋君の給料は非常に多くなることがあります"
高橋君ボール1号,https://atcoder.jp/contests/abc026/tasks/abc026_d,"問題文
高橋君は野球が得意です 高橋君は 高橋君ボール 1 号という変化球を投げることが出来ます 
このボールは 投げてから t 秒後のボールの位置を f t  とすると  f t    A  times t   B  times  rm sin  C  times t  times π  と表すことが出来ます 
あなたは t   0 かつ f t    100 となるタイミングで ボールを打たなければいけません この時の t を求めたいです 

入力
入力は以下の形式で標準入力から与えられる 

A B C


1 行目には f t  の式を表す整数 A B C  1 A B C 100  が スペース区切りで与えられる 


出力
f t    100 となる  0 以上の t を 1 つ出力せよ 解が複数ある場合は どの解を出力しても良い 
この問題は誤差が発生するが   f t    100    10   6  であれば 正解となる 
出力の末尾には改行を入れること 
誤差が出やすい問題ですので 誤差に十分に注意してください 

入力例1

1 1 1


出力例1

100

t   100 のとき  f t    100 となります 

入力例2

53 82 49


出力例2

1 63372043395339

解が一つではないことに注意してください"
長方形,https://atcoder.jp/contests/abc027/tasks/abc027_a,"問題文
ある長方形の 3 つの辺の長さが与えられる 
残り 1 つの辺の長さを求めよ 

入力
入力は以下の形式で標準入力から与えられる 

l 1 l 2 l 3


1 行目には 長方形の 3 つの辺の長さを表す整数 l 1  l 2  l 3  1 l 1 l 2 l 3 10  が与えられる 


出力
長方形の残り 1 つの辺の長さを出力せよ 
ただし 答えはちょうど 1 つ存在することが保証される 
出力の末尾には改行を入れること 

入力例1

1 1 2


出力例1

2

1 2 の長方形である 

入力例2

4 3 4


出力例2

3

入力は任意の順序で与えられる 

入力例3

5 5 5


出力例3

5

正方形も長方形である"
島と橋,https://atcoder.jp/contests/abc027/tasks/abc027_b,"問題文
N 個の島が横一列に並んでいる 
1 i N 1 について 左から i 番目の島と i 1 番目の島は隣り合っている 
はじめ 左から i  1 i N  番目の島には a i 人の住人が住んでいる 
高橋君はすべての島に同じ人数の住人が住むようにしたいと考えている 
高橋君は隣り合う 2 つの島の間に橋を架けることができる 
また 直接的または間接的に橋で結ばれた複数の島の間で 住人を自由に移動させることができる 
すべての島に同じ人数の住人が住むようにするために 架ける必要のある橋の本数の最小値を求めよ 

入力
入力は以下の形式で標準入力から与えられる 

N
a 1 a 2    a N


1 行目には 島の個数を表す整数 N  2 N 100  が与えられる 
2 行目には 整数 a i  0 a i 100  が空白区切りで与えられる これは 左から i 番目の島には a i 人の住人が住んでいることを表す 


出力
すべての島に同じ人数の住人が住むようにするために 架ける必要のある橋の本数の最小値を 1 行に出力せよ 
ただし どのように橋を架けてもすべての島に同じ人数の住人が住むようにできないならば 代わりに  1 を出力せよ 
出力の末尾には改行を入れること 

入力例1

3
1 2 3


出力例1

2

図のように橋を架ければよい 


入力例2

5
2 0 0 0 3


出力例2

3

図のように橋を架ければよい 


入力例3

2
0 99


出力例3

 1

どのように橋を架けてもすべての島に同じ人数の住人が住むようにできない 

入力例4

4
0 0 0 0


出力例4

0

はじめからすべての島に同じ人数の住人が住んでいる"
倍々ゲーム,https://atcoder.jp/contests/abc027/tasks/abc027_c,"問題文
高橋君と青木君が以下のような二人ゲームで勝負する 
まず 正の整数 N が与えられる 
また 変数 x を 1 に初期化する 高橋君から始め 高橋君と青木君が交互に次の操作を行う 

x の値を 2x または 2x 1 に置き換える 

x が N よりも大きくなったとき 最後に操作を行った人が負けである 
二人が最善を尽くすとき どちらが勝つか求めよ 

入力
入力は以下の形式で標準入力から与えられる 

N


1 行目には 正の整数 N  1 N 10  18   が与えられる 


出力
高橋君が勝つならば Takahashi を 青木君が勝つならば Aoki を 1 行に出力せよ 
出力の末尾には改行を入れること 

入力例1

1


出力例1

Aoki

高橋君がどのように操作を行っても x 1 となってしまう 

入力例2

5


出力例2

Takahashi

高橋君が x 3 とすると 青木君がどのように操作を行っても x 5 となってしまう 

入力例3

7


出力例3

Aoki


入力例4

10


出力例4

Takahashi


入力例5

123456789123456789


出力例5

Aoki

N は 32 bit 整数型に収まらない"
ロボット,https://atcoder.jp/contests/abc027/tasks/abc027_d,"問題文
数直線の原点にロボットが置かれている 
はじめ ロボットの幸福度は 0 である 
このロボットに命令列が与えられる 
命令列は次の 3 文字のみからなり 先頭から末尾まで順に実行される 

M   正または負の好きな向きに 距離 1 だけ移動する 
    今の座標を x とすると 幸福度が  x だけ変化する 
    今の座標を x とすると 幸福度が  x だけ変化する 


	命令列を実行し終えた後 
	ロボットは原点に戻っていなければならない
	 
命令列を実行している間 ロボットの座標および幸福度は負になり得る 

最終的な幸福度を最大化するようにロボットが移動したとき 最終的な幸福度を求めよ 

入力
入力は以下の形式で標準入力から与えられる 

S


1 行目には 命令列 S  1  S  10 5  が与えられる S は M       のみからなり M が偶数個含まれる 


部分点
この問題には部分点が設定されている 

1  S  1 000 を満たすデータセットに正解した場合は 30 点が得られる 


出力
最終的な幸福度を最大化するようにロボットが移動したとき 最終的な幸福度を 1 行に出力せよ 
出力の末尾には改行を入れること 

入力例1

M MM M


出力例1

2

以下では 正の向きへの移動を   負の向きへの移動を   と表す 
       のように移動すればよい 

入力例2

MMM M


出力例2

1

例えば       のように移動すればよい 

入力例3

MMM   MMM


出力例3

3

          のように移動すればよい 

入力例4

 


出力例4

0"
テスト評価,https://atcoder.jp/contests/abc028/tasks/abc028_a,"問題文
テストの点数を入れるとその評価を出力してくれるプログラムを作成してください 
プログラムの仕様は以下の通りです 

テストの点数として 0 以上 100 以下の整数を受け取る 
テストの点数が 59 点以下ならば Bad と出力 
60 点以上 89 点以下ならば Good と出力 
90 点以上 99 点以下ならば Great と出力 
100 点ならば Perfect と出力 


入力
入力は以下の形式で標準入力から与えられる 

N

1 行に整数 N 0   N   100  が与えられる これはプログラムに入力するテストの点数を表す 

出力
テストの点数の評価を出力せよ 出力は標準出力に行い 末尾に改行を入れること 

入力例1

80


出力例1

Good

テストの点数は 60 点以上 89 点以下のため Good と出力する 

入力例2

100


出力例2

Perfect

テストの点数が 100 点のときは Perfect と出力する 

入力例3

59


出力例3

Bad


入力例4

95


出力例4

Great"
文字数カウント,https://atcoder.jp/contests/abc028/tasks/abc028_b,"問題文
文字列 S が与えられます 
この文字列は A  B  C  D  E  F の 6 種類の文字から構成されている事が分かっています 
6 種類の文字それぞれについて S のなかに何回出てくるかを数えてください 

入力
入力は以下の形式で標準入力から与えられる 

S

1 行に文字列 S 1    S    100  が与えられる ただし  S  とは S の長さを表す また S は必ず A  B  C  D  E  F の 6 種類の文字から構成されている 

出力
A  B  C  D  E  F の出現回数を空白区切りで 1 行に出力せよ 出力は標準出力に行い 末尾に改行を入れること また 行の末尾に余計な空白を入れないよう注意せよ 

入力例1

BEAF


出力例1

1 1 0 0 1 1


入力例2

DECADE


出力例2

1 0 1 2 2 0


入力例3

ABBCCCDDDDEEEEEFFFFFF


出力例3

1 2 3 4 5 6"
数を3つ選ぶマン,https://atcoder.jp/contests/abc028/tasks/abc028_c,"問題文
異なる整数が 5 個与えられます 
この中から 3 つ選んでその和で表すことの出来る整数のうち 3 番目に大きいものを出力してください 

入力
入力は以下の形式で標準入力から与えられる 

A B C D E

1 行に 5 つの整数 A  B  C  D  E 1   A   B   C   D   E   100  が空白区切りで与えられる 

出力
問題文に述べた通りの結果を出力せよ 出力は標準出力に行い 末尾に改行を入れること 

入力例1

1 2 3 4 5


出力例1

10

3 つ選んでその和で表すことのできる整数は 6  7  8  9  10  11  12 です なので このなかで 3 番目に大きい 10 を出力します 

入力例2

1 2 3 5 8


出力例2

14"
乱数生成,https://atcoder.jp/contests/abc028/tasks/abc028_d,"問題文
2 つの整数 N K が与えられます 
1 以上 N 以下の整数のなかからどれか 1 つ 等確率に選ぶ機械を考えます 
その機械を 3 回動かした時 選ばれた 3 つの数の中央値が K となる確率を求めてください 

入力
入力は以下の形式で標準入力から与えられる 

N K

1 行目には整数 N 1   N   10 6  K 1   K   N  が空白区切りで与えられる 

出力
出力の中央値が K となる確率を出力せよ 出力は標準出力に行い 末尾に改行を入れること 
なお 想定解との絶対誤差または相対誤差が 10   9  以下であれば 正解として扱われる 

入力例1

3 2


出力例1

0 48148148148148148148

中央値が 2 となるのは   1 回目の出力  2 回目の出力  3 回目の出力  が

 1  2  3 
 1  3  2 
 2  1  3 
 2  3  1 
 3  1  2 
 3  2  1 
 1  2  2 
 2  1  2 
 2  2  1 
 3  2  2 
 2  3  2 
 2  2  3 
 2  2  2 

となる場合で このいずれかが出る確率は 13 27   0 481481481    です

入力例2

3 1


出力例2

0 25925925925925925926


入力例3

765 573


出力例3

0 00147697396984624371"
複数形,https://atcoder.jp/contests/abc029/tasks/abc029_a,"問題文
英小文字からなる文字列 W が入力されます  W の末尾に英小文字の s を付け足したものを出力してください 

入力
入力は以下の形式で標準入力から与えられる 

W


1 行目に 英小文字からなる文字列 W  1    W    10  ここで  W  は W の長さを表す  が与えられる 


出力
標準出力に  W の末尾に英小文字の s を付け足したものを出力し 最後に改行せよ 空白などの余計な出力をしてはならない 大文字と小文字は区別される 

入力例1

dog


出力例1

dogs


入力例2

chokudai


出力例2

chokudais"
カキ,https://atcoder.jp/contests/abc029/tasks/abc029_b,"問題文
英小文字からなる 12 個の文字列 S 1  S 2       S  12  が入力されます これらの文字列のうち 文字 r が含まれるものの個数を数えてください 

入力
入力は以下の形式で標準入力から与えられる 

S 1
S 2
 
S  12 


i 行目  1   i   12  に 英小文字からなる文字列 S i  1    S i    10  が与えられる これらの文字列はすべて異なる 


出力
標準出力に  12 個の文字列 S 1  S 2       S  12  のうち文字 r が含まれるものの個数を出力し 最後に改行せよ  r を複数個含む文字列は一度だけ数える 

入力例1

january
february
march
april
may
june
july
august
september
october
november
december


出力例1

8

S 1  S 2  S 3  S 4  S 9  S  10   S  11   S  12  の 8 個の文字列に文字 r が含まれています S 2 には r が 2 回出現していますが 一度しか数えません 

入力例2

rrrrrrrrrr
srrrrrrrrr
rsr
ssr
rrs
srsrrrrrr
rssrrrrrr
sss
rrr
srr
rsrrrrrrrr
ssrrrrrrrr


出力例2

11"
Brute force Attack,https://atcoder.jp/contests/abc029/tasks/abc029_c,"問題文
あなたはスーパーハッカーです 高橋君を攻撃対象に定めたあなたは 高橋君のパソコンのパスワードに関して次の事実を突き止めました 

長さは N 文字である 
a  b  c 以外の文字は含まれない 

高橋君のパソコンのパスワードの候補として考えられる文字列をすべて列挙してしまいましょう 


入力
入力は以下の形式で標準入力から与えられる 

N


1 行目にパスワードの長さ N  1   N   8  が与えられる 


出力
標準出力に 問題文中の二つの条件をともに満たす文字列すべてを一行に一個ずつ辞書順に出力せよ  辞書順 に関しては出力例2の注釈を見よ 最後の文字列の後ろにも改行を入れること 大文字と小文字は区別される 

入力例1

1


出力例1

a
b
c


入力例2

2


出力例2

aa
ab
ac
ba
bb
bc
ca
cb
cc

    英小文字からなる同じ長さの異なる文字列 s と t について 次の条件が満たされるとき s は t より辞書順で先となり そうでなければ s は t より辞書順で後となります 

ある整数 i  1   i    s     t   が存在し   1 文字目から i 1 文字目  両端含む  までは s と t は一致するが  i 文字目は一致せず  s の i 文字目の方がアルファベット順で先である 

例えば  cabac は cabca より辞書順で先となります  i   4 とすると条件が成立します"
1,https://atcoder.jp/contests/abc029/tasks/abc029_d,"問題文
高橋君は 1 以上 N 以下のすべての整数を十進表記で一回ずつ紙に書きました この作業で 高橋君は 1 という数字を何個書いたでしょうか 

入力
入力は以下の形式で標準入力から与えられる 

N


1 行目に整数 N  1   N   10 9  が与えられる 


部分点
この問題には部分点が設定されている 

20 点分のテストケースは 1   N   999 を満たす 


出力
標準出力に 高橋君が書いた 1 という数字の個数を出力し 最後に改行せよ 

入力例1

12


出力例1

5


入力例2

345


出力例2

175


入力例3

999999999


出力例3

900000000"
勝率計算,https://atcoder.jp/contests/abc030/tasks/abc030_a,"問題文
野球のAtCoderリーグのシーズンが終了しました チーム高橋は A 試合中 B 回勝ち チーム青木は C 試合中 D 回勝ちました AtCoderリーグでは勝率の高い順に高い順位が与えられます チーム高橋とチーム青木のどちらが勝率で勝っているか答えるプログラムを作成してください 

入力
入力は以下の形式で標準入力から与えられる 

A B C D


1 行目には 4 つの整数 A  B  C  D  1   A  B  C  D   100  が与えられる 
B   A かつ D   C を満たすことが保証される 


出力
チーム高橋の勝率がより高いときは TAKAHASHI チーム青木の勝率がより高いときは AOKI 両チームの勝率が等しいときは DRAW と 1 行に出力せよ 出力の末尾にも改行をいれること 

入力例1

5 2 6 3


出力例1

AOKI

チーム高橋の勝率は 2   5   0 4 チーム青木の勝率は 3   6   0 5 なので チーム青木の勝率がより高いです また 試合数は両チームで異なることがあります 

入力例2

100 80 100 73


出力例2

TAKAHASHI

試合数が同じときは 勝ちの多いチームの勝率が高くなります 

入力例3

66 30 55 25


出力例3

DRAW"
時計盤,https://atcoder.jp/contests/abc030/tasks/abc030_b,"問題文
n 時 m 分のアナログ時計があります 短針と長針のなす角度のうち小さい方を度数法で求めてください 

入力
入力は以下の形式で標準入力から与えられる 

n m


1 行目には アナログ時計の時刻を表す整数 n  m   0   n   23  0   m   59   が空白区切りで書かれている 


出力
短針と長針のなす角度を 1 行目に出力せよ 絶対誤差または相対誤差が 10   4  以下であれば許容される 
末尾の改行を忘れないこと 

入力例1

15 0


出力例1

90

時計の短針と長針は以下の図のようになります 

赤の矢印が長針 オレンジの矢印が短針です 

入力例2

3 17


出力例2

3 5

時計の短針と長針は以下の図のようになります 


入力例3

0 0


出力例3

0


入力例4

6 0


出力例4

180


入力例5

23 59


出力例5

5 5000"
飛行機乗り,https://atcoder.jp/contests/abc030/tasks/abc030_c,"問題文
ウナギの高橋くんは飛行機に乗ることが趣味です 今回は空港Aと空港Bを往復することにしました 
空港Aから空港Bの飛行機には X 時間かかり 空港Bから空港Aへの飛行機には Y 時間かかります 
空港Aから空港Bへの飛行機は N 本あり i 番目の便は a i 時に出発します 
空港Bから空港Aへの飛行機は M 本あり j 番目の便は b j 時に出発します 
ある飛行機には 出発する空港に出発する時刻以前にいれば乗ることができます 出発する時刻ちょうどに到着した場合も すぐに飛行機に乗って出発できます 
高橋くんははじめ空港Aに 0 時にいます 
空港Aと空港Bの間を最大何往復できるか調べてください 

入力
入力は以下の形式で標準入力から与えられる 

N M
X Y
a 1 a 2    a N
b 1 b 2    b M


1 行目には 空港Aから空港Bへの本数 N   1   N   10 5   空港Bから空港Aへの本数 M   1   M   10 5   が空白区切りで与えられる 
2 行目には 空港Aから空港Bへの飛行機にかかる時間 X   1   X   10 9   空港Bから空港Aへの飛行機にかかる時間 Y   1   Y   10 9   が空白区切りで与えられる 
3 行目には N 個の空港Aから飛行機が出発する時刻を表す整数 a i が空白を区切りとして与えられる 
4 行目には M 個の空港Bから飛行機が出発する時刻を表す整数 b j が空白を区切りとして与えられる 
1   a i   10 9  1   i   N   であることが保証される 
1   b j   10 9  1   j   M   であることが保証される 
a i   a  i 1   1   i   N 1   であることが保証される 
b i   b  j 1   1   j   M 1   であることが保証される 


出力
高橋くんが空港Aと空港Bの間を最大何往復できるかを 1 行に出力せよ 
末尾の改行を忘れないこと 

部分点
この問題には部分点が設定されている 

30 点分のテストケースにおいて 1   a i   10 5  1   b j   10 5   1   i   N  1   j   M   を満たす 


入力例1

3 4
2 3
1 5 7
3 8 12 13


出力例1

2

1 時の空港Aを出発する飛行機に乗り 3 時に到着しますが すぐに 3 時の空港Bを出発する飛行機に乗り 6 時に空港Aに到着します 
次に 7 時の空港Aを出発する飛行機に乗り 9 時に到着 12 時の空港Bを出発する飛行機に乗ると 合計 2 往復できます 3 往復する手段はありません 

入力例2

1 1
1 1
1
1


出力例2

0

空港Bに行くと空港Aに帰れないので 1 度も往復できません 

入力例3

6 7
5 3
1 7 12 19 20 26
4 9 15 23 24 31 33


出力例3

3"
へんてこ辞書,https://atcoder.jp/contests/abc030/tasks/abc030_d,"問題文
ミカミくんは怪しい英単語帳を使っています その単語帳には N 個の単語の意味が載っており 単語 i の説明には 単語 b i と同じ意味である とだけ書いてあります ここで i 番目の単語を単語 i と呼ぶことにします 
ミカミくんはまだ一つの英単語も知らないので 単語 i の意味を調べようとしたとき 単語 b i の意味を調べようとします ミカミくんは真面目なので 今までにすでに調べようとしたことのある単語でも同じように単語帳をひき続けます 
しかし 残念ながらこの単語帳では英単語の意味自体はどこにも書いていないため 意味を知ることはできません 
ある単語 i を調べようとして 単語帳を参照し 単語 b i を調べようとするまでを1ステップとします 
ミカミくんが単語 i を調べようとして k ステップ経ったとき ミカミくんはどの単語を調べようとしているでしょうか 

入出力
入力は以下の形式で標準入力から与えられる 

N a
k
b 1 b 2   b N


1 行目には 単語の数 N  2   N   10 5  とミカミくんが調べようとしている単語の番号 a  1   a   N  がスペース区切りで与えられる 
2 行目には ミカミくんが単語を調べるステップ数 k 1   k   10  100000   が与えられる 
3 行目には 各単語の説明を表す N 個の整数 b 1     b N が空白区切りで与えられる 
1   b i   N かつ b i   i  1   i   N  であることが保証される 


部分点
この問題には部分点が設定されている 

k   10  18  を満たすデータセットに正解した場合は 50 点が与えられる 


出力
ミカミくんが単語 a を調べようとしてから k ステップ経ったとき 調べようとしている単語の番号を 1 行に出力せよ 出力の末尾にも改行をいれること 

入力例1

6 4
5
2 3 1 2 6 5


出力例1

3

ミカミくんは それぞれのステップで以下のように単語を調べます 
1 ステップ目で 単語 4 の意味を知るため 単語 2 を調べようとします 
2 ステップ目で 単語 2 の意味を知るため 単語 3 を調べようとします 
3 ステップ目で 単語 3 の意味を知るため 単語 1 を調べようとします 
4 ステップ目で 単語 1 の意味を知るため 単語 2 を調べようとします 
5 ステップ目で 単語 2 の意味を知るため 単語 3 を調べようとします 
よって 5 ステップ経ったとき ミカミくんは単語 3 を調べようとしています 

入力例2

4 1
100000000000000000000
2 3 4 1


出力例2

1

k はたいへん大きくなることがあります 

入力例3

8 1
1
2 3 4 5 3 2 4 5


出力例3

2"
ゲーム,https://atcoder.jp/contests/abc031/tasks/abc031_a,"問題文
高橋君は新しくゲームを買った 
高橋君のゲームキャラクターには攻撃力と防御力が定まっており レベルが上がると攻撃力と防御力のうち好きなひとつを 1 だけ上げることができる 
高橋君はゲームキャラクターの攻撃力と防御力の積が最大となるように攻撃力か防御力のうちひとつを選んで上げる もしもどちらを選んでもレベルアップ後の攻撃力と防御力の積が等しくなる場合 攻撃力を選んで上昇させる 
高橋君がゲームキャラクターをレベルアップさせた場合の レベルアップ後の攻撃力と防御力の積を求めよ 

入力
入力は以下の形式で標準入力から与えられる 

A D


1 行目には 2 個の整数 A  1 A 200   D  1 D 200  が空白区切りで与えられる これは ゲームキャラクターの攻撃力が A で 防御力が D であることを表す 


出力
高橋君がゲームキャラクターをレベルアップさせた後の ゲームキャラクターの攻撃力と防御力の積を 1 行に出力せよ 
出力の末尾にも改行を入れること 

入力例1

31 87


出力例1

2784

高橋君のキャラクターは レベルアップ前において攻撃力が 31 防御力は 87 である 

攻撃力を上昇させた場合 攻撃力と防御力の積は  31 1    87   2784 である 
防御力を上昇させた場合 攻撃力と防御力の積は 31    87 1    2728 である 

高橋君は攻撃力を上げる選択を取るので レベルアップ後のキャラクターにおける攻撃力と防御力の積は 2784 である 

入力例2

101 65


出力例2

6666

この場合 高橋君は防御力を上げる 

入力例3

3 3


出力例3

12"
運動管理,https://atcoder.jp/contests/abc031/tasks/abc031_b,"問題文
高橋君は AtCoder 社のマスコットキャラクターである 
マスコットキャラクターとしての魅力を維持するために 高橋君は適度な運動をすることになっている 高橋君は週の運動時間が L 分以上 H 分以下でなければならない 
しかしながら 青木君は最近 高橋君が運動しているところを見ていない 高橋君の運動状況が気になった青木君は 高橋君の過去 N 週間の運動時間が制限にあっているのか そして足りないなら少なくともあと何分運動する必要があったのかを計算するプログラムを作成することにした 

入力
入力は以下の形式で標準入力から与えられる 

L H
N
A 1
A 2
 
A N


1 行目には 2 個の整数 L  H  1 L H 10 4  が空白区切りで与えられる これは 高橋君が週に L 分以上 H 分以下の運動をしなければならないことを表す 
2 行目には 整数 N  1 N 50  が与えられる これは青木君が N 週分の運動時間について調べていることを表す 
3 行目からの N 行には 高橋君の運動状況を表す整数が与えられる N 行の内 i  1 i N  行目には 整数 A i  0 A i 10 4  が与えられる これは i 個前の週において高橋君が A i 分運動したことを表す 


出力
出力は N 行からなる i  1 i N  行目には i 個前の週において高橋君が必要な分よりも多く運動している場合は  1 を そうでない場合は追加で必要な運動時間の最小値を分単位で 1 行に出力せよ 
出力の末尾にも改行を入れること 

入力例1

300 400
3
240
350
480


出力例1

60
0
 1

青木君は 3 個の週について調査している 

1 個前の週において 高橋君は 240 分運動しており これは運動時間の下限である 300 分に満たない 高橋君はあと 60 分追加で運動する必要があるため 1 行目には 60 を出力する 
2 個前の週において 高橋君は 350 分運動しており これは運動時間の制限に適している そのため 2 行目には 0 を出力する 
3 個前の週において 高橋君は 480 分運動しており これは運動時間の上限である 400 分を越えており 運動しすぎである そのため 3 行目には  1 を出力する 


入力例2

50 80
5
10000
50
81
80
0


出力例2

 1
0
 1
0
50"
数列ゲーム,https://atcoder.jp/contests/abc031/tasks/abc031_c,"問題文
高橋君と青木君は長さ N の数列 S を用いたゲームを行う 
ゲームは高橋君の手番と青木君の手番 1 回ずつからなる 
ゲームは以下の要領で行われる 

最初に高橋君が数列の要素のうち 1 つに丸をつける 
次に青木君が数列の要素で高橋君が丸を付けなかったもののうち 1 つに丸をつける 
高橋君と青木君が丸を付けた 2 つの要素に対して その 2 つの要素およびそれらの間にあるすべての要素を残して それ以外の要素をすべて削除する 残った数列を T と置く 
数列 T のうち 数列 T 内で左から奇数番目の要素の合計が高橋君の得点 偶数番目の要素の合計が青木君の得点となる 

青木君は 丸を付けられる要素の中で 青木君が得点を最も多く得られる要素に丸を付ける そのような要素が複数あるならばそれらのうち最も左側にある要素に丸を付ける 
高橋君は青木君の丸の付け方を知っている 高橋君が得られる得点として考えられる得点の最大値を求めよ 

入力
入力は以下の形式で標準入力から与えられる 

N
a 1 a 2     a N


1 行目には 整数 N  2 N 50  が与えられる N は数列 S の要素数である 
2 行目には N 個の整数 a 1  a 2        a N   50 a i 50  1 i N  が与えられる 整数 a i は数列 S の左から i 番目の要素を表す 


出力
高橋君が得られる得点の最大値を 1 行に出力せよ 
出力の末尾にも改行を入れること 

入力例1

6
1  3 3 9 1 6


出力例1

6

高橋君は左から 2 番目の要素を選ぶのが最適である この場合 青木君は左から 5 番目の要素を選ぶことになり 得られる数列 T は左から順に  3  3  9  1 となる 高橋君は 6 の得点を 青木君は 4 の得点を得ることができる 

入力例2

3
5 5 5


出力例2

10

青木君にとってどの要素を選んでも得られる得点が 5 であることには変わりがないが 得られる得点が最大となる選び方が複数ある場合にその中で最も左を選ぶので 高橋君の得点は 10 になりうる 

入力例3

8
 1 10  1 2  1 10  1 0


出力例3

 1"
語呂合わせ,https://atcoder.jp/contests/abc031/tasks/abc031_d,"問題文
日本には数字と短い文字列を対応させる語呂合わせの文化がある 
このことに興味を持った高橋君は 1 以上 K 以下の数字のみからなる正整数 v 1  v 2        v N とそれぞれの正整数に対応する文字列 w 1  w 2        w N の組  v 1  w 1    v 2  w 2          v N  w N  から どの数字がどの文字列に対応しているかを推論することにした 
すなわち 以下の条件を満たす K 個の文字列 s 1  s 2        s K を求めたい 

1 i K を満たす任意の整数 i に対して 1  s i  3 を満たす 
1 i N を満たす任意の整数 i に対して 整数 v i を桁ごとに分解した際に得られる数字が上から順に d 1  d 2        d l としたとき 文字列 s  d 1   s  d 2         s  d l  をこの順に連結した文字列が w i に等しい 

K 個の文字列 s 1  s 2        s K を出力するプログラムを作成せよ 

入力
入力は以下の形式で標準入力から与えられる 

K N
v 1 w 1
v 2 w 2
 
v N w N


1 行目には 整数 K  1 K 9  と N  1 N 50  が空白区切りで与えられる 
2 行目から N 行には 数字と文字列の組に関する情報が与えられる N 行のうち i  1 i N  行目には 1 以上 K 以下の数字のみからなる整数 v i  1 v i 10 9  と半角小文字英字のみからなる文字列 w i  1  w i  27  が空白区切りで与えられる 
1 以上 K 以下のどの数字も v 1  v 2        v N のうち 1 つ以上に登場する 
与えられる入力では 条件を満たす K 個の文字列 s 1  s 2        s K は必ず存在する 


部分点
この問題には部分点が設定されている 

K   3 かつ w 1 から w N までのどの文字列も a  b  c のいずれかのみで構成されているデータセット 1 に正解した場合は 40 点が与えられる 
追加制約のないデータセット 2 に正解した場合は 上記とは別に 60 点が与えられる 


出力
出力は K 行からなる K 行のうち i  1 i K  行目には文字列 s i を出力せよ 
条件を満たす K 個の文字列の組み合わせが複数存在する場合は それらの組み合わせのうちどの 1 つを出力してもよい 
出力の末尾にも改行を入れること 

入力例1

6 4
356 migoro
461 yoroi
2 ni
12 ini


出力例1

i
ni
mi
yo
go
ro

この入力例では s 1    i  s 2    ni  s 3    mi  s 4    yo  s 5    go  s 6    ro と置くことによって題意を満たす K 個の文字列とすることができる 実際に 

v 1   356 を桁ごとに分解した場合に 3  5  6 が得られ s 3    mi  s 5    go  s 6    ro をこの順に連結した文字列 migoro は w 1 に等しい 
v 2   461 を桁ごとに分解した場合に 4  6  1 が得られ s 4    yo  s 6    ro  s 1    i をこの順に連結した文字列 yoroi は w 2 に等しい 
v 3   2 を桁ごとに分解した場合に 2 が得られ s 2    ni は w 3 に等しい 
v 4   12 を桁ごとに分解した場合に 1  2 が得られ s 1    i  s 2    ni をこの順に連結した文字列 ini は w 4 に等しい 

なお この入力例はデータセット 1 の条件を満たさないことに注意せよ 

入力例2

3 4
21 aaa
12 aaa
123 aaaaaa
13 aaaa


出力例2

a
aa
aaa


入力例3

2 3
12211 abcaaaaabcabc
2121 aaabcaaabc
222221 aaaaaaaaaaabc


出力例3

abc
aa


入力例4

2 1
12 abcab


出力例4

ab
cab"
高橋君と青木君の好きな数,https://atcoder.jp/contests/abc032/tasks/abc032_a,"問題文
青木君は整数 a で割り切れる数が好きです 
高橋君は整数 b で割り切れる数が好きです 
n 以上の整数で 青木君と高橋君の両方が好きな最小の数を答えてください 

入力
入力は以下の形式で標準入力から与えられる 

a
b
n


1 行目には 整数 a  1 a 100  が与えられる 
2 行目には 整数 b  1 b 100  が与えられる 
3 行目には 整数 n  1 n 20 000  が与えられる 


出力
出力は以下の形式で標準出力に行うこと 
1 行目に n 以上の整数で青木君と高橋君の両方が好きな数の最小値を出力せよ 末尾の改行を忘れないこと 

入力例1

2
3
8


出力例1

12

12 は 8 以上の整数のうち  2 と 3 で割り切れるものの最小値です 

入力例2

2
2
2


出力例2

2


入力例3

12
8
25


出力例3

48"
高橋君とパスワード,https://atcoder.jp/contests/abc032/tasks/abc032_b,"問題文
高橋君の会社には 秘密の金庫があります この金庫にはパスワードをかけているのですが 高橋君はそのパスワードを忘れてしまいました 
しかし 幸運なことに 手元にはパスワードのヒントが以下のように書かれていました 

パスワードは この紙に書かれている文字列 s の長さ k の部分文字列   のどれかである 

高橋君は ありうるパスワードを全部試せば金庫を開けられる と喜びました 
しかし 文字列 s はとても長い可能性があるし しかも同じ部分文字列が複数個文字列 s 中に存在する可能性もあります 明らかに 重複したパスワードを繰り返し試す必要はありません 
そこで 手動で全てのパスワードを試す前に 試す必要がある異なるパスワードの数がいくつあるかを数えることにしました 
あなたの仕事は 文字列 s の内容が与えられるので 試す必要がある異なるパスワードの数がいくつあるかを高橋君に教えてあげることです 
   文字列 s の 部分文字列 とは 文字列 s に含まれるある区間を取り出した文字列のことです 
例えば abc の部分文字列として a b c ab bc abc などが挙げられます 
ac や ba などは部分文字列ではないことに注意してください 

入力
入力は以下の形式で標準入力から与えられる 

s
k


1 行目には ヒントの紙に書かれている文字列 s  1  s  300  が与えられる s は英小文字 a z のみから成る  s  は文字列 s の長さを表す 
2 行目には パスワードとしてありうる整数 k  1 k 300  が与えられる  k は  s  よりも大きいことがある 


出力
出力は以下の形式で標準出力に行うこと 
1 行目に パスワードとして考えられる文字列の数を出力せよ 末尾の改行を忘れないこと 

入力例1

abcabc
2


出力例1

3

パスワードとしてありうる部分文字列の集合は  ab bc ca  です 

入力例2

aaaaa
1


出力例2

1

パスワードとしてありえる部分文字列は a のみです 

入力例3

hello
10


出力例3

0"
列,https://atcoder.jp/contests/abc032/tasks/abc032_c,"問題文

	長さ N の非負整数列 S  s 1 s 2     s N  と整数 K があります 
あなたの仕事は 以下の条件を満たす S の 
	連続する
	 部分列のうち 最も長いものの長さを求めることです 部分列の長さは 1 以上の列でないといけません 


その部分列に含まれる全ての要素の値の積は K 以下である 

もし条件を満たす部分列が一つも存在しないときは 0 を出力してください 

入力
入力は以下の形式で標準入力から与えられる 

N K
s 1
s 2
 
s N


1 行目には 数列の長さを表す整数 N  1 N 10 5  と問題文中の整数 K  0 K 10 9  が空白区切りで与えられる 
2 行目からの N 行には 数列の各要素の値が与えられる そのうち i 1 i N  行目には s i  0 s i 10 9  が書かれている 


部分点
この問題には部分点が設定されている 満点は 100 点である 

N 1000 を満たすデータセット 1 に正解した場合は 20 点が与えられる 
追加制約のないデータセット 2 に正解した場合 上記の点数に加え 80 点が与えられる 


出力
出力は以下の形式で標準出力に行うこと 
1 行目に 含まれる全ての要素の値の積が K 以下となる連続する部分列のうち最長のものの長さを出力せよ もし条件を満たす部分列が一つも存在しないときは 0 を出力せよ 末尾の改行を忘れないこと 

入力例1

7 6
4
3
1
1
2
10
2


出力例1

4

部分列 S 2  5  s 2 s 3 s 4 s 5 を選ぶと 積は 3 1 1 2 6 となり K 以下になります 

入力例2

6 10
10
10
10
10
0
10


出力例2

6


入力例3

6 9
10
10
10
10
10
10


出力例3

0


入力例4

4 0
1
2
3
4


出力例4

0"
ナップサック問題,https://atcoder.jp/contests/abc032/tasks/abc032_d,"問題文
0 1ナップサック問題を解いてください 0 1ナップサック問題とは以下のような問題のことです 

N 個の荷物があり i  1 i N  番目の荷物には価値 v i と重さ w i が割り当てられている 
許容重量 W のナップサックが1つある 
重さの和が W 以下となるように荷物の集合を選びナップサックに詰め込むとき 価値の和の最大値を求めよ ただし 同じ荷物は一度しか選ぶことができない 


入力
入力は以下の形式で標準入力から与えられる 

N W
v 1 w 1
v 2 w 2
 
v N w N


1 行目には 荷物の数を表す整数 N  1 N 200  とナップサックの許容重量を表す整数 W 1 W 10 9  が空白区切りで与えられる 
2 行目からの N 行には 各荷物の情報が与えられる そのうち i 1 i N  行目には i 番目の荷物の価値を表す整数 v i  1 v i 10 9  と重さを表す整数 w i  1 w i 10 9  が空白区切りで与えられる 
 N 30   全てのi 1 i N  について 1 w i 1000   全てのi 1 i N  について 1 v i 1000 という 3 つの条件のうち少なくとも1つの条件が成り立つ 


部分点
この問題には部分点が設定されている 満点は 100 点である 

N 30 を満たすデータセット 1 に正解した場合は 34 点が与えられる 
N 200 かつ全ての i 1 i N  について 1 w i 1000 を満たすデータセット 2 に正解した場合は 上記の点数とは別に 33 点が与えられる 
N 200 かつ全ての i 1 i N  について 1 v i 1000 を満たすデータセット 3 に正解した場合は 上記の点数とは別に 33 点が与えられる 


出力
出力は以下の形式で標準出力に行うこと 
1 行目に 達成できる最大の合計価値を出力せよ 末尾の改行を忘れないこと 

入力例1

3 10
15 9
10 6
6 4


出力例1

16

2 番目と 3 番目のアイテムを選ぶと 合計の重みが 10 で価値が 16 となり 最大価値を達成できます 
この入出力例は データセット 1 2 3 の制約を満たしているため 全てのデータセットの採点に用いられます 

入力例2

30 499887702
128990795 137274936
575374246 989051853
471048785 85168425
640066776 856699603
819841327 611065509
704171581 22345022
536108301 678298936
119980848 616908153
117241527 28801762
325850062 478675378
623319578 706900574
998395208 738510039
475707585 135746508
863910036 599020879
340559411 738084616
122579234 545330137
696368935 86797589
665665204 592749599
958833732 401229830
371084424 523386474
463433600 5310725
210508742 907821957
685281136 565237085
619500108 730556272
88215377 310581512
558193168 136966252
475268130 132739489
303022740 12425915
122379996 137199296
304092766 23505143


出力例2

3673016420

この入出力例は データセット 1 の制約のみ満たしているため データセット 2 3 の採点には用いられません 

入力例3

10 2921
981421680 325
515936168 845
17309336 371
788067075 112
104855562 96
494541604 960
32007355 161
772339969 581
55112800 248
98577050 22


出力例3

3657162058

この入出力例は データセット 3 の制約を満たしていないため データセット 3 の採点には用いられません 

入力例4

10 936447862
854 810169801
691 957981784
294 687140254
333 932608409
832 42367415
642 727293784
139 870916042
101 685539955
853 243593312
369 977358410


出力例4

1686

この入出力例は データセット 2 の制約を満たしていないため データセット 2 の採点には用いられません"
暗証番号,https://atcoder.jp/contests/abc033/tasks/abc033_a,"問題文
あなたはゲーム開発メンバーの一員です 
現在 あなたはプレイヤーがゲームをプレイするために必要な暗証番号を決めさせる部分を実装しています 
この暗証番号は 4 桁 であり それぞれの桁は 0 以上 9 以下の数字のいずれかです 暗証番号が 0 で始まる可能性もあります 
安全上の関係で  4 桁とも同じ数字である暗証番号は認めないことにしました プレイヤーが入力した 4 桁の数 N が与えられるので 
これが 4 桁とも全て同じ数字であるかどうかを判定してください 

入力
入力は以下の形式で標準入力から与えられる 

N


1 行目には N が与えられる N は 4 文字の 0 から 9 の数字からなる 
N が 0 で始まることもある 


出力
N が 4 桁とも全て同じ数字であるなら SAME を そうでないなら DIFFERENT を 1 行に出力せよ 
出力の末尾にも改行を入れること 

入力例 1

2222


出力例 1

SAME

4 桁とも同じ数です 

入力例 2

1221


出力例 2

DIFFERENT

4 桁とも同じ数ではありません 

入力例 3

0000


出力例 3

SAME

N が 0 から始まることもあります"
町の合併,https://atcoder.jp/contests/abc033/tasks/abc033_b,"問題文
N 個の町が合併し 1 つの新しい市になることになりました 合併前の i  1   i   N  番目の町は名称が S i で 人口が P i 人です 
新しい市の名称を 以下のように決めようとしています 

N 個の町の人口の合計の過半数以上の人口を有する町が存在するならば 新しい市の名称はその町の名称を引き継ぐことにする 
そのような町が存在しないならば 新しい市の名称は atcoder とする 

それぞれの町の名称と人口が与えられるので 合併後の新しい市の名称を出力してください 

入力
入力は以下の形式で標準入力から与えられる 

N
S 1 P 1
S 2 P 2
 
S N P N


1 行目には 整数 N  2   N   1 000  が与えられる 
2 行目から N 行では それぞれの町の情報が与えられる このうち i 行目には 英小文字のみからなる長さ 1 以上 20 以下の文字列 S i と 整数 P i  1   P i   100 000  が空白区切りで与えられる 
S 1  S 2     S N は全て異なる 


出力
合併後の新しい市の名称を 1 行に出力せよ 
出力の末尾にも改行を入れること 

入力例 1

4
unagi 20
usagi 13
snuke 42
smeke 7


出力例 1

snuke

4 つの町の合計人口は 20   13   42   7   82 人です 3 番目の町はこの過半数以上の人口を有しています 

入力例 2

5
a 10
b 20
c 30
d 40
e 100


出力例 2

atcoder

5 つの町の合計人口は 10   20   30   40   100   200 人ですが この過半数以上の人口を有する町は存在しないので  atcoder という市名になります 
なお  5 番目の町は合計人口のちょうど半数の人口を有していますが 過半数ではないことに注意してください 

入力例 3

14
yasuzuka 3340
uragawara 4032
oshima 2249
maki 2614
kakizaki 11484
ogata 10401
kubiki 9746
yoshikawa 5142
joetsu 100000
nakago 4733
itakura 7517
kiyosato 3152
sanwa 6190
nadachi 3169


出力例 3

joetsu"
数式の書き換え,https://atcoder.jp/contests/abc033/tasks/abc033_c,"問題文
次のような制約を満たす数式 S が与えられます 

演算子は    加算  と    乗算  のみからなる 乗算を優先して計算する 
括弧は存在しない 
それぞれの項は  1 桁の整数である 

例えば 1 3 4 0   1 2 3 4 5 などの数式はこの条件を満たしますが 12 3 5 4 6 7 3  3 4  5 2 のような数式は
条件を満たさないため 入力として与えられません 
あなたは この数式のうち数字の部分をいくつか選んで 0 に書き換えることで この式の値を 0 にしたいです 式の値を 0 にするために
0 に書き換えなければならない数字の個数の最小値を求めてください 

入力
入力は以下の形式で標準入力から与えられる 

S


1 行目には 問題文の条件を満たす数式 S  S の長さは 1 以上 100 000 以下 が与えられる 


出力
0 に書き換えなければならない数字の個数の最小値を 1 行に出力せよ 
出力の末尾にも改行を入れること 

入力例 1

0 0 2 0


出力例 1

0

すでに与えられた数式は  0   0   2   0   0 であるので 数字を書き換える必要はありません 

入力例 2

3 1 1 2


出力例 2

2

たとえば 入力の 1 文字目と 5 文字目を 0 に書き換えることで  0   1   0   2   0 となり 値が 0 になります 

入力例 3

3 1 4 0 2 0 5 2 9 8 6 1 3


出力例 3

5"
三角形の分類,https://atcoder.jp/contests/abc033/tasks/abc033_d,"問題文
2 次元平面上の N 個の点が与えられます  i 番目の点の座標は  x i  y i  です ただし このうちのどの 3 点も同一直線上にありません 
N 点のうち 3 点を選ぶことによってこの 3 点を頂点とした三角形を作ることを考えます 三角形は全部で N    N   1     N   2    6 個できます 
これらの三角形のうち 鋭角三角形の個数 直角三角形の個数 鈍角三角形の個数を求めてください 
ただし 鋭角三角形とは 3 つの角が全て 90  より小さい三角形で 直角三角形とは ある 1 つの角が 90  である三角形で 
鈍角三角形とは ある 1 つの角が 90  より大きい三角形のことをいいます 

入力
入力は以下の形式で標準入力から与えられる 

N
x 1 y 1
x 2 y 2
 
x N y N


1 行目には 点の個数を表す整数 N  3   N   2 000  が与えられる 
2 行目から N 行には 点の座標に関する情報が与えられる このうち i 行目には 整数 x i   10 000   x i   10 000   y i   10 000   y i   10 000  が空白区切りで与えられる 
N 個の点は全て異なる 
N 個の点のうち 異なる 3 点が同一直線上にあることはない 


部分点
この問題には部分点が設定されている 

N   100 を満たすデータセットに正解した場合 部分点として 30 点が与えられる 


出力
鋭角三角形の個数 直角三角形の個数 鈍角三角形の個数をこの順に空白区切りで 1 行に出力せよ 
出力の末尾にも改行を入れること 

入力例 1

5
1 3
2 2
3 2
4 1
4 3


出力例 1

1 2 7


2 番目の点 4 番目の点 5 番目の点を選ぶと 鋭角三角形ができます 
1 番目の点 4 番目の点 5 番目の点を選ぶと 直角三角形ができます 
3 番目の点 4 番目の点 5 番目の点を選ぶと 直角三角形ができます 
その他の 7 通りの選び方では 全て鈍角三角形ができます 


入力例 2

9
2 0
1 1
3 1
1 2
5 2
0 3
4 3
2 4
4 4


出力例 2

27 14 43"
テスト,https://atcoder.jp/contests/abc034/tasks/abc034_a,nan
ペア,https://atcoder.jp/contests/abc034/tasks/abc034_b,nan
経路,https://atcoder.jp/contests/abc034/tasks/abc034_c,nan
食塩水,https://atcoder.jp/contests/abc034/tasks/abc034_d,nan
テレビ,https://atcoder.jp/contests/abc035/tasks/abc035_a,"問題文高橋君は画面の幅が W  高さが H のテレビを持っています 
このテレビの画面アスペクト比 W H が 4 3 か 16 9 か判定してください 

入力入力は以下の形式で標準入力から与えられる 
W H


1 行目にテレビの画面の幅と高さを表す 2 つの整数 W H  1 H W 10 5  が空白区切りで与えられる 
テレビの画面アスペクト比は 4 3 か 16 9 になることが保証される 


出力高橋君のテレビの画面アスペクト比 W H が 4 3 ならば4 3を  16 9 ならば 16 9 を 1 行に出力せよ 改行を忘れないこと 

入力例 14 3


出力例 14 3


画面の幅が 4  高さが 3 のテレビの画面アスペクト比は 4 3 なので4 3と出力してください 


入力例 216 9


出力例 216 9


画面の幅が 16  高さが 9 のテレビの画面アスペクト比は 16 9 なので16 9と出力してください 


入力例 328 21


出力例 34 3"
ドローン,https://atcoder.jp/contests/abc035/tasks/abc035_b,"問題文無限に広い二次元グリッドの原点  0  0  に高橋君と 1 台のドローンがいます このドローンは文字列が与えられた時 文字列の先頭から末尾までのそれぞれの文字を 1 つの命令と解釈して順に実行します 命令は以下の 4 種類です 

L 現在のドローンの位置を  x  y  として  x 1  y  に移動する
R 現在のドローンの位置を  x  y  として  x 1  y  に移動する
U 現在のドローンの位置を  x  y  として  x  y 1  に移動する
D 現在のドローンの位置を  x  y  として  x  y 1  に移動する

今 ドローンに何らかの命令が与えられ どこかへと移動しました 高橋君はドローンに送られた命令を表す文字列である S を手に入れたものの いくつかの箇所は破損し になり分からなくなってしまいました ただし  が元々はL R U Dのいずれかの文字だったことが分かっています 
ドローンと高橋君の距離はドローンの位置を  x y  としてマンハッタン距離  x   y  で表されます 求める値の種類を表す整数 T が与えられるので 移動を終えたあとのドローンと高橋君の距離としてありうる値のうち  T 1 ならば最大値を  T 2 ならば最小値を求めてください 

入力入力は以下の形式で標準入力から与えられる 
S
T


1 行目にドローンに与えられた命令を表す文字列 S 1  S  10 5  が与えられる ここで   S  は文字列 S の長さを表す 
S はL R U D  の 5 種類の文字のみからなる 
2 行目に求める値の種類を表す整数 T  1 T 2  が与えられる 


出力
T 1 ならば移動を終えたあとのドローンと高橋君の距離としてありうる値のうち 最大値を 1 行に出力せよ 
T 2 ならば移動を終えたあとのドローンと高橋君の距離としてありうる値のうち 最小値を 1 行に出力せよ 
改行を忘れないこと 


部分点この問題には部分点が設定されている 

T 1 のデータセットに全て正解した場合 100 点が与えられる 
追加制約のないデータセットに正解した場合 追加で 1 点が与えられ 合計 101 点が得られる 


入力例 1UL 
1


出力例 13


ドローンが最終的にいる可能性がある位置は   2 1     1 0     1 2    0 1  の 4 つです ドローンと高橋君の距離  x   y  のうち最大値は 3 となります 
このケースは部分点の追加制約を満たします 


入力例 2UD 
1


出力例 21


ドローンが最終的にいる可能性がある位置は  1 0     1 0    0 1    0  1  の 4 つです ドローンと高橋君の距離  x   y  のうち最大値は 1 となります 
このケースは部分点の追加制約を満たします 


入力例 3UUUU DDR LLLL
1


出力例 37


このケースは部分点の追加制約を満たします 


入力例 4UULL 
2


出力例 43


このケースは部分点の追加制約を満たしません"
オセロ,https://atcoder.jp/contests/abc035/tasks/abc035_c,"問題文黒の面に0 白の面に1が書かれた N 個のオセロの駒が どの駒も黒の面が上を向くように一列に並べられています その後 ある区間にある駒を全て裏返すという操作が Q 回だけ行なわれました 
具体的には i 回目の操作においては 左から l i 番目の駒から r i 番目の駒までの駒全てが裏返されました 
最終的な盤面を求めてください 

入力入力は以下の形式で標準入力から与えられる 
N Q
l 1 r 1
 
 
 
l Q r Q


1 行目に駒の数と操作回数を表す 2 つの整数 N Q  1 N Q 200 000  が空白区切りで与えられる 
2 行目から続く Q 行のうち i 行目においては  i 回目の操作の範囲を表す 2 つの整数 l i  r i  1 l i r i N  が空白区切りで与えられる 


出力最終的な盤面を表す文字列 S を 1 行に出力せよ  S の左から i 文字目は左から i 番目の駒の上向きの面に書かれた数字となる 改行を忘れないこと 

部分点この問題には部分点が設定されている 

1 N Q 2 000 を満たすデータセットに正解した場合  60 点が与えられる 
追加制約のないデータセットに正解した場合は 追加で 40 点が与えられ 合計 100 点が得られる 


入力例 15 4
1 4
2 5
3 3
1 5


出力例 101010


盤面ははじめ00000です 
1 回目の操作により  盤面は11110となります 
2 回目の操作により  盤面は10001となります 
3 回目の操作により  盤面は10101となります 
4 回目の操作により  盤面は01010となります 
最終的な盤面である01010が求める答えです 
このケースは部分点の追加制約を満たします 


入力例 220 8
1 8
4 13
8 8
3 18
5 20
19 20
2 7
4 9


出力例 210110000011110000000


このケースは部分点の追加制約を満たします"
トレジャーハント,https://atcoder.jp/contests/abc035/tasks/abc035_d,"問題文高橋君が住む国には N 箇所の町と町同士をつなぐ一方通行の道が M 本あり それぞれの町には 1 から N の番号が割りふられています  i 番目の道は a i 番の町から b i 番の町へ移動することが可能であり 移動に c i 分だけかかります 
所持金が 0 円の高橋君は T 分間のトレジャーハントに出かけることにしました 高橋君は開始 0 分の時点で 1 番の町にいます また 開始から T 分の時点にも 1 番の町にいなくてはなりません 高橋君が i 番の町に 1 分間滞在すると  A i 円が高橋君の所持金に加算されます 
T 分間のトレジャーハントによって高橋君の所持金は最大いくらになるか求めてください 

入力入力は以下の形式で標準入力から与えられる 
N M T
A 1   A N
a 1 b 1 c 1
 
 
 
a M b M c M


1 行目に町の数と道の数 トレジャーハントの分数を表す 3 つの整数 N M T  2 N 10 5  1 M min N N 1  10 5   1 T 10 9  が空白区切りで与えられる 
2 行目には i 番目の町に滞在したときに得られるお金の情報を表す整数 A i 1 A i 10 5  が空白区切りで与えられる 
3 行目から続く M 行のうち i 行目においては  i 番目の道の情報を表す 3 つの整数 a i  b i  c i  1 a i b i N a i b i  1 c i 10 5 が空白区切りで与えられる 
i j であるような i j において a i a j または b i b j のどちらかが成立する 


出力トレジャーハントの結果としてありうる高橋君の所持金のうち最大値を 1 行に出力せよ 改行を忘れないこと 

部分点この問題には部分点が設定されている 

1 N 200 を満たすデータセットに正解した場合 50 点が与えられる 
追加制約のないデータセットに正解した場合は 追加で 50 点が与えられ 合計 100 点が得られる 


入力例 12 2 5
1 3
1 2 2
2 1 1


出力例 16


開始から 0 分の時点から 2 分かけて町 1 から町 2 に移動します 
開始から 2 分の時点から 2 分間 町 2 に滞在します 所持金は 6 円になります 
開始から 4 分の時点から 1 分かけて町 2 から町 1 に移動します 
開始から 5 分の時点で町 1 にいます トレジャーハントが終了します 
このケースは部分点の制約を満たします 


入力例 22 2 3
1 3
1 2 2
2 1 1


出力例 23


開始 0 分の時点から 3 分間 町 1 に滞在するのが最適であり 所持金を 3 円にすることができます 
このケースは部分点の制約を満たします 


入力例 38 15 120
1 2 6 16 1 3 11 9
1 8 1
7 3 14
8 2 13
3 5 4
5 7 5
6 4 1
6 8 17
7 8 5
1 4 2
4 7 1
6 1 3
3 1 10
2 6 5
2 4 12
5 1 30


出力例 31488


このケースは部分点の制約を満たします"
お茶,https://atcoder.jp/contests/abc036/tasks/abc036_a,nan
回転,https://atcoder.jp/contests/abc036/tasks/abc036_b,nan
座圧,https://atcoder.jp/contests/abc036/tasks/abc036_c,nan
塗り絵,https://atcoder.jp/contests/abc036/tasks/abc036_d,nan
饅頭,https://atcoder.jp/contests/abc037/tasks/abc037_a,"問題文
あなたは饅頭の店に来ています ここでは白と緑の 2 種類の饅頭が売られていて それぞれの種類は何個でも買うことができます 
白色の饅頭は 1 個 A 円で 緑色の饅頭は 1 個 B 円です 
あなたは C 円持っています あなたはとにかく沢山の個数を食べたいので 種類は気にせず なるべく多くの個数の饅頭を買おうと思っています 
2 種類で買う個数が違ったり 片方の種類しか買わなかったりしてもかまいません 
最大で何個の饅頭が買えるでしょうか 

制約

1  leq A B  leq 1 000
1  leq C  leq 1 000 000


入力
入力は以下の形式で標準入力から与えられる 

A B C


出力
あなたが買える饅頭の個数の最大値を出力せよ 

入力例 1

3 5 6


出力例 1

2


入力例 2

8 6 20


出力例 2

3"
編集,https://atcoder.jp/contests/abc037/tasks/abc037_b,"問題文
長さ N の数列   a i   があります 最初 この数列の全ての要素は 0 です 
この数列に対し 計 Q 回次の操作を入力で与えられた順に行ってください 

数列の L i 番目から R i 番目  両端を含む  を T i に書き換える ただし 数列の最初の要素が 1 番目である 

最終的に数列の各値が何になったかを求めてください 

制約

1  leq N  leq 100
1  leq Q  leq 100
1  leq L i  leq R i  leq N
1  leq T i  leq 10 9
T i は整数である 


入力
入力は以下の形式で標準入力から与えられる 

N Q
L 1 R 1 T 1
 
L Q R Q T Q


出力
出力は N 行からなる 上から i 行目に操作後の a i の値を出力せよ 

入力例 1

5 2
1 3 10
2 4 20


出力例 1

10
20
20
20
0

最初 数列は   0  0  0  0  0   です 
1 回目の操作の後 数列は   10  10  10  0  0   となります 
2 回目の操作の後 数列は   10  20  20  20  0   となります 

入力例 2

10 4
2 7 22
3 5 4
6 10 1
4 4 12


出力例 2

0
22
4
12
4
1
1
1
1
1"
総和,https://atcoder.jp/contests/abc037/tasks/abc037_c,"問題文
長さ N の数列   a i   と1 以上 N 以下の整数 K が与えられます 
この数列には長さ K の連続する部分列が N K 1 個あります これらのそれぞれ部分列に含まれる値の合計の総和を求めてください 

制約

1  leq K  leq N  leq 10 5
0  leq a i  leq 10 8
a i は整数である 


部分点

50 点分のテストケースでは  N  leq 10 3 である 


入力
入力は以下の形式で標準入力から与えられる 

N K
a 1    a N


出力
部分列に含まれる値の合計 N K 1 個の総和を出力せよ 

入力例 1

5 3
1 2 4 8 16


出力例 1

49

 1 2 4   2 4 8   4 8 16  49 なので 答えは 49 です 

入力例 2

20 10
100000000 100000000 98667799 100000000 100000000 100000000 100000000 99986657 100000000 100000000 100000000 100000000 100000000 98995577 100000000 100000000 99999876 100000000 100000000 99999999


出力例 2

10988865195

オーバーフローに注意してください"
経路,https://atcoder.jp/contests/abc037/tasks/abc037_d,"問題文
H   W のマス目があり それぞれのマスには整数が書かれています  i 行 j 列に書かれている数は a  ij  です 
あなたはこのグリッドの中の好きなマスから好きなだけ動きます 最初のマスから動かなくてもかまいません  
今いるマスの上下左右に隣接しているマスのうち 今いるマスより大きな整数が書かれたマスに移動することができます 
ありうる移動経路の個数を10 9 7で割った余りを求めてください 

制約

1  leq H  W  leq 1 000
1  leq a  ij   leq 10 9


入力
入力は以下の形式で標準入力から与えられる 

H W
a  11     a  1W 
 
a  H1     a  HW 


出力
移動経路の個数を10 9 7で割った余りを出力せよ 

入力例 1

2 3
1 4 5
2 4 9


出力例 1

18

例えば 1 行 2 列から出発し 右 下と移動する経路や  1 行 1 列から出発し 下に移動する経路などがあります 
全部で 18 種類の経路があります 

入力例 2

6 6
1 3 4 6 7 5
1 2 4 8 8 7
2 7 9 2 7 2
9 4 2 7 6 5
2 8 4 6 7 6
3 7 9 1 2 7


出力例 2

170"
お茶,https://atcoder.jp/contests/abc038/tasks/abc038_a,"問題文
高橋くんはドリンクバーにやってきました 彼は今お茶を飲みたい気分です しかし ドリンクバーの飲み物の表記はすべてローマ字で 高橋くんはそれを読むことができません 高橋くんは ある飲み物について それがお茶であるかどうか知りたいと思っています 
ただし ある飲み物がお茶であることは そのローマ字表記がTで終わる文字列であることと等しいです 
あなたの仕事は ある飲み物のローマ字表記の文字列Sが与えられたとき 飲み物がお茶であるか判定するプログラムを書くことです 

制約

S の長さは1以上50以下である 
S の各文字は英大文字からなる 


入力
入力は以下の形式で標準入力から与えられる 

S


出力
文字列 S が表す飲み物がお茶のとき YES そうでないとき NO と 1 行に出力せよ 

入力例1

ICEDT


出力例1

YES

ICEDTはTで終わる文字列なので YESを出力します 

入力例2

MUGICHA


出力例2

NO

Tで終わる文字列のみ お茶とみなします 

入力例3

OOLONGT


出力例3

YES


入力例4

T


出力例4

YES


入力例5

TEA


出力例5

NO"
ディスプレイ,https://atcoder.jp/contests/abc038/tasks/abc038_b,"問題文
高橋くんは2つのディスプレイを買いました 片方のディスプレイのサイズは高さH 1mm 幅W 1mmで もう片方のサイズは高さH 2mm 幅W 2mmです 
ディスプレイを机に横に並べて置くことになりました それぞれのディスプレイは そのまま置くか 90度回転させて置くかのどちらかです 
2つのディスプレイを机に横に並べて置き 高さを揃えることができるか判定してください 

制約

1  H 1  W 1  H 2  W 2  10 5
H 1  W 1  H 2  W 2は全て整数である


入力
入力は以下の形式で標準入力から与えられる 

H 1 W 1
H 2 W 2


出力
高さを揃えることができるとき YES そうでないとき NO と 1 行に出力せよ 

入力例1

1080 1920
1080 1920


出力例1

YES

どちらも回転させないまま置けば 高さ1080mmで揃います 

入力例2

1080 1920
1920 1080


出力例2

YES

例えば 2つ目のディスプレイを90度回転させると 高さ1080mmとなり 2つのディスプレイは高さ1080mmで揃います 

入力例3

334 668
668 1002


出力例3

YES


入力例4

100 200
300 150


出力例4

NO


入力例5

120 120
240 240


出力例5

NO"
単調増加,https://atcoder.jp/contests/abc038/tasks/abc038_c,"問題文
N個の数からなる数列が与えられます i番目の数をa iと呼びましょう 
a l a  l 1      a r が単調増加 すなわち l r であって a i a  i 1  がl i r を満たす全てのiに対して成り立つような l r の数を求めてください 

制約

1 N 10 5
1 a i 10 5
a iは全て整数である


部分点

N   3 000 を満たすテストケース全てに正解した場合 部分点として40点が与えられる 


入力
入力は以下の形式で標準入力から与えられる 

N
a 1 a 2   a N


出力
a l a  l 1      a r が単調増加となるような l r の数を 1 行に出力せよ 

入力例1

5
1 2 3 2 1


出力例1

8

条件を満たす l r は 1 1   1 2   1 3   2 2   2 3   3 3   4 4   5 5 の8つです 

入力例2

4
1 2 3 4


出力例2

10

1 l r Nを満たす l r 全てが条件を満たします 

入力例3

6
3 3 4 1 2 2


出力例3

8

例えば 3  3  4はこの問題で単調増加ではないことに注意してください 

入力例4

6
1 5 2 3 4 2


出力例4

10"
プレゼント,https://atcoder.jp/contests/abc038/tasks/abc038_d,"問題文
高橋くんはプレゼントを用意することになりました プレゼントの中身はすでに決まり あとはプレゼントを入れる箱を用意するだけです 
高橋くんが使える箱はN個あり i番目の箱は縦h icm 横w icmのサイズです 
プレゼントがより多くの箱に入っていたほうが面白いと考えた高橋くんは なるべく多くの箱を入れ子にし 最も内側の箱にプレゼントを入れることにしました 
ある箱は 縦 横ともにより大きいサイズの箱にのみ入れることができます また ある箱は1つまでしか他の箱を入れることはできません 
プレゼントを入れる箱を最大で何重の入れ子にできるか答えてください 

制約

1 N 10 5
1 h i 10 5
1 w i 10 5


部分点

N   1 000 を満たすテストケース全てに正解した場合 部分点として30点が与えられる 


入力
入力は以下の形式で標準入力から与えられる 

N
w 1 h 1
w 2 h 2
 
w N h N


出力
プレゼントを包む箱の数の最大値を 1 行に出力せよ 

入力例1

3
3 3
1 1
2 2


出力例1

3

外側の箱から順に 1  3  2番目の箱でプレゼントを包むことができます 

入力例2

2
4 5
4 3


出力例2

1

箱を90度回転することはできないことに注意してください また ある箱を縦または横の長さが等しい箱に入れることはできません 

入力例3

4
2 5
3 3
4 5
6 6


出力例3

3


入力例4

5
8 8
5 3
2 2
4 2
2 1


出力例4

4"
高橋直体,https://atcoder.jp/contests/abc039/tasks/abc039_a,"問題文
高橋君は高さが A cm 幅が B cm 奥行きが C cm の直方体を持っています この直方体の表面積は何 cm 2 でしょうか 

制約

1   A  B  C   100
与えられる数は全て整数である 


入力
入力は以下の形式で標準入力から与えられる 
A B C


出力
1 行にこの直方体の表面積を整数で出力せよ 

入力例1
2 3 4


出力例1
52


入力例2
3 4 2


出力例2
52


入力例3
100 100 100


出力例3
60000


入力例4
1 1 1


出力例4
6"
エージェント高橋君,https://atcoder.jp/contests/abc039/tasks/abc039_b,"問題文
TK国のエージェントである高橋君は とある正整数 X を青木君から受け取りました 
しかし実は青木君はAO国のスパイであり 本来渡すべき正整数を 4 乗したものを渡していました 
つまり 本来渡すべき正整数を N とすると X   N 4 です 
高橋君は非常に優秀なのでこれを見破りましたが 計算が苦手なので元の正整数 つまり N はなんだったのかがわかりません 
なので代わりにあなたが N を求めてください 

制約

1   X   10 9
X   N 4 となる N がただ一つのみ存在する


入力
入力は以下の形式で標準入力から与えられる 
X


出力
1 行に N を出力せよ 

入力例1
1


出力例1
1


入力例2
981506241


出力例2
177


入力例3
390625


出力例3
25"
ピアニスト高橋君,https://atcoder.jp/contests/abc039/tasks/abc039_c,"問題文
高橋君は青木君に突然魔法で小さくされ ピアノの上に乗せられてしまいました 
高橋君は 今ピアノのある鍵盤の上に立っていますが どの鍵盤の上にいるのかを知りたいです 
高橋君は 自分の今いる鍵盤から右 20 個の鍵盤の色を調べました 高橋君のいる鍵盤の音階を調べてください 
調べた鍵盤の色は W B からなる文字列 S として与えられ W は白色 B は黒色を表します そして 高橋くんのいる鍵盤の色は文字列の先頭に対応します 
なお ピアノの鍵盤は下図のように 色は 白黒白黒白白黒白黒白黒白  音階は  ド ド  レ レ  ミ ファ ファ  ソ ソ  ラ ラ  シ  を繰り返しています 


制約

与えられる鍵盤の色は正しい
高橋君は白い鍵盤の上に立っている
S は 20 文字の W B からなる文字列である


入力
入力は以下の形式で標準入力から与えられる 
S


出力
高橋君のいる鍵盤の音階が 

 ド  ならば Do
 レ  ならば Re
 ミ  ならば Mi
 ファ  ならば Fa
 ソ  ならば So
 ラ  ならば La
 シ  ならば Si

と出力する 

入力例1
WBWBWWBWBWBWWBWBWWBW


出力例1
Do"
画像処理高橋君,https://atcoder.jp/contests/abc039/tasks/abc039_d,"問題文
2 値画像に対して行う 収縮という処理があります なお 2 値画像とは 画素の色が白か黒かの 2 種類しかない画像の事です 
収縮とは それぞれの画素についてその画素と周り 8 方向の画素のうち 一つでも黒い画素があったらその画素を黒くするという処理です 
ここで 画素数が高さ H 幅 W の 2 値画像を考えます この画像はある画像に一回収縮を行ったものであることがわかっています 元の画像として考えられるものがあるかを判定し もしあるならばそのうちどれか 1 つを復元してください 
画像は H 個の W 文字の文字列 S i で与えられます S i の j 文字目は 上から i 個目 左から j 個目の画素の色を表しており   なら白   なら黒です 

制約

1   H  W   100
S i は W 文字の     からなる文字列である


入力
入力は以下の形式で標準入力から与えられる 
H W
S 1
S 2
 
S H


出力
もし条件を満たす画像が無いならば 1 行に impossible と出力する 
条件を満たす画像があるならば 1 行に possibleと出力したあと W 文字の     からなる文字列を H 行出力する 
i 行目の文字列の j 番目の文字は 条件を満たす画像の上から i 個目 左から j 個目の画素の色が白なら   黒なら   とすること 

入力例1
4 4
    
    
    
    


出力例1
possible
    
    
    
    


入力例2
4 4
    
    
    
    


出力例2
possible
    
    
    
    


入力例3
4 4
    
    
    
    


出力例3
impossible"
赤赤赤赤青,https://atcoder.jp/contests/abc040/tasks/abc040_a,"問題文
n 個のブロックが一列に並んでいます 前から数えて x 個目のブロックだけが青色で 残りはすべて赤色です 
高橋君は 隣り合うブロックを交換する操作を何度か行って 青いブロックが列の端  前から 1 番目かもしくは n 番目  に来るようにしようとしています 
最小で何回の操作が必要かを求めてください 

制約

1   n   100
1   x   n


入力
入力は以下の形式で標準入力から与えられる 

n x


出力
必要な最小の操作回数を表す整数を 1 行に出力せよ 

入力例1

5 2


出力例1

1

はじめ 前から 2 番目のブロックが青いので 1 番目と 2 番目のブロックを交換すると青いブロックが端に来ます 

入力例2

6 4


出力例2

2


まず 4 番目と 5 番目のブロックを交換します 
次に 5 番目と 6 番目のブロックを交換すると青いブロックが端に来ます 


入力例3

90 30


出力例3

29"
□□□□□,https://atcoder.jp/contests/abc040/tasks/abc040_b,"問題文
高橋君は大きさ 1 メートル四方のタイルを n 枚持っています 
高橋君はこれらのタイルのうちいくつかを 重ならないように隙間なく並べて大きな長方形を作ろうとしています 
出来上がる長方形はできるだけ正方形に近いほうがよいですが 同時に 使わずに余るタイルの枚数ができるだけ少なくなるようにしたいと考えています 
長方形の縦と横の長さの差の絶対値と 余ったタイルの枚数の和を最小でいくつにできるでしょうか 

制約

1   n   100 000


入力
入力は以下の形式で標準入力から与えられる 

n


出力
求めた最小値を 1 行に出力せよ 

入力例1

26


出力例1

1

5  times 5 の正方形になるように並べると 縦横の長さの差が 0 で 余るタイルの枚数が 1 となり その和は 1 です 
26 枚のタイルを余らせることなく使い正方形を作ることはできないので 答えは 1 となります 

入力例2

41


出力例2

4

この場合 5  times 8 の長方形を作ってタイルを 1 枚余らせるのが最適です 

入力例3

100000


出力例3

37"
柱柱柱柱柱,https://atcoder.jp/contests/abc040/tasks/abc040_c,"問題文
N 本の木の柱が左から右へ一列に並んだアスレチックがあります 左から i 本目の柱の高さは a i センチメートルです 
高橋君は左から 1 本目の柱からスタートし 右へ柱を渡っていき N 本目の柱まで行こうとしています 
高橋君がある柱にいるとき 次には現在の柱から 1 個もしくは 2 個右にある柱のどちらかへ移動することができます 
移動するときには 現在いる柱の高さと 移動後の柱の高さの差の絶対値のぶんだけコストがかかります 
N 本目の柱まで行くとき コストの合計の最小値はいくらになるでしょうか 

制約

2   N   100 000
0   a i   10 000
a i はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる 

N
a 1 a 2     a N


出力
1 本目の柱から N 本目の柱へ移動するまでに必要な合計コストの最小値を 1 行に出力せよ 

入力例1

4
100 150 130 120


出力例1

40

このケースでは以下のような移動によって最小コストを達成できる 

1 本目の柱から 3 本目の柱へ移動する  コスト 30 
3 本目の柱から 4 本目の柱へ移動する  コスト 10 

合計コストは 40 となる 

入力例2

4
100 125 80 110


出力例2

40

このケースでは以下のような移動によって最小コストを達成できる 

1 本目の柱から 2 本目の柱へ移動する  コスト 25 
2 本目の柱から 4 本目の柱へ移動する  コスト 15 

合計コストは 40 となる 

入力例3

9
314 159 265 358 979 323 846 264 338


出力例3

310"
道路の老朽化対策について,https://atcoder.jp/contests/abc040/tasks/abc040_d,"問題文
ある国には N 個の都市があり それぞれ 1 から N までの番号がつけられています これらの都市間を結ぶ M 本の道路があり i 本目の道路は都市 a i と都市 b i を結ぶもので y i 年に造られたものです 
この国の国民はとても心配性なので あまりに古い道は事故の危険性が高いと考えて使わないことがあります そこであなたは この国の交通状況を調査することにしました 
Q 人の国民の情報が与えられます j 人目の国民について 都市 v j に住んでおり 造られた年が w j 年以前  w j 年ちょうども含む  であるような道路を使わないことがわかっています 
それぞれの国民に対し その人が住んでいる都市から道路のみを使って行き来できるような都市の個数を求めてください 

制約

1   N   100 000
0   M   200 000
1   a i b i   N
a i   b i
1   y i   200 000
1   Q   100 000
1   v j   N
0   w j   200 000


部分点

50 点分のテストケースでは N   1 000  M   2 000  Q   1 000 をみたす 


入力
入力は以下の形式で標準入力から与えられる 

N M
a 1 b 1 y 1
 
a M b M y M
Q
v 1 w 1
 
v Q w Q


出力
Q 行出力せよ そのうちの j 行目には j 人目の国民が道路のみを使って行き来可能な都市の個数を出力せよ 

入力例1

5 4
1 2 2000
2 3 2004
3 4 1999
4 5 2001
3
1 2000
1 1999
3 1995


出力例1

1
3
5

Q 人それぞれの国民について 答えは以下のようになります 

1 人目は都市 1 に住んでおり 2000 年以前に造られた道を使いません 都市 1 につながる唯一の道は 2000 年に造られているので 都市 1 以外へ行くことができません したがって答えは 1 となります 
2 人目は都市 1 に住んでおり 都市 2 や 3 へ行くことができます しかし 1999 年以前に造られた道を使わないので都市 4 へ行くことはできません したがって答えは 3 となります 
3 人目は 1995 年以前に造られた道を使いませんが すべての道はそれより新しいため すべての道をつかってすべての都市へ行くことができます したがって答えは 5 となります 


入力例2

4 5
1 2 2005
3 1 2001
3 4 2002
1 4 2004
4 2 2003
5
1 2003
2 2003
1 2001
3 2003
4 2004


出力例2

3
3
4
1
1


入力例3

4 5
1 2 10
1 2 1000
2 3 10000
2 3 100000
3 1 200000
4
1 0
2 10000
3 100000
4 0


出力例3

3
3
2
1

同じふたつの都市間を結ぶ道が 2 本以上あることや すべての道を使っても辿り着けない都市がありうることに注意してください"
添字,https://atcoder.jp/contests/abc041/tasks/abc041_a,nan
直方体,https://atcoder.jp/contests/abc041/tasks/abc041_b,nan
背の順,https://atcoder.jp/contests/abc041/tasks/abc041_c,nan
徒競走,https://atcoder.jp/contests/abc041/tasks/abc041_d,nan
Iroha and Haiku (ABC Edition),https://atcoder.jp/contests/abc042/tasks/abc042_a,"問題文日本の誇る美しいリズムとして 五七五というものがあります いろはちゃんは五七五が大好きです 
3 つの文節の並びの長さがそれぞれ 5 7 5 となるようにこの順番で並んでいるとき その 3 つの文節の並びは五七五であると言います 
並び替えたい 3 つの文節の長さを表す整数 A B C が与えられるので それらの文節を並び替えて五七五にできるか判定してください 

制約
1 A B C 10


入力入力は以下の形式で標準入力から与えられる 
A B C


出力文節の並びを五七五にすることができるなら YES  そうでないなら NO を出力せよ 

入力例 15 5 7


出力例 1YES

与えられる文節の長さはそれぞれ　5 5 7 であり 5 7 5 となるように文節を並び替えることができます したがって 文節の並びを五七五にすることは可能といえます 

入力例 27 7 5


出力例 2NO

Problem StatementIroha loves Haiku  Haiku is a short form of Japanese poetry  A Haiku consists of three phrases with 5  7 and 5 syllables  in this order 
To create a Haiku  Iroha has come up with three different phrases  These phrases have A  B and C syllables  respectively  Determine whether she can construct a Haiku by using each of the phrases once  in some order 

Constraints
1 A B C 10


InputThe input is given from Standard Input in the following format 
A B C


OutputIf it is possible to construct a Haiku by using each of the phrases once  print YES  case sensitive   Otherwise  print NO 

Sample Input 15 5 7


Sample Output 1YES

Using three phrases of length 5  5 and 7  it is possible to construct a Haiku 

Sample Input 27 7 5


Sample Output 2NO"
Iroha Loves Strings (ABC Edition),https://atcoder.jp/contests/abc042/tasks/abc042_b,"問題文いろはちゃんは 長さ L の文字列を N 個持っており それぞれ S 1  S 2       S N です 
それらの文字列を好きな順番で全て結合してできる文字列のうち もっとも辞書順で小さいものを求めてください 
なお ある文字列 s s 1s 2s 3   s n と t t 1t 2t 3   t m について 以下のどちらかを満たすとき 辞書順比較で s t であるといいます 

ある整数 i 1 i min n m   に関して  1 j i を満たす任意の整数 j において s j   t j が成立し かつ s i t i が成立する 
任意の整数 i 1 i min n m   に関して s i   t i が成立し かつ  n m が成立する 


制約
1   N  L   100
全ての i  1 i N  に対し S i の長さは L に等しい 
各 i について  S i は全て半角英小文字のみから成る文字列である 


入力入力は以下の形式で標準入力から与えられる 
N L
S 1
S 2
 
S N


出力与えられる文字列を好きな順番で全て結合してできる文字列のうち もっとも辞書順で小さいものを出力せよ 

入力例 13 3
dxx
axx
cxx


出力例 1axxcxxdxx

与えられた文字列を axx cxx dxx という順番に並び替えてから結合することで 辞書順最小を達成できます 
Problem StatementIroha has a sequence of N strings S 1  S 2       S N  The length of each string is L 
She will concatenate all of the strings in some order  to produce a long string 
Among all strings that she can produce in this way  find the lexicographically smallest one 
Here  a string s s 1s 2s 3   s n is lexicographically smaller than another string t t 1t 2t 3   t m if and only if one of the following holds 

There exists an index i 1 i min n m    such that s j   t j for all indices j 1 j i   and s i t i 
s i   t i for all integers i 1 i min n m    and n m 


Constraints
1   N  L   100
For each i  the length of S i equals L 
For each i  S i consists of lowercase letters 


InputThe input is given from Standard Input in the following format 
N L
S 1
S 2
 
S N


OutputPrint the lexicographically smallest string that Iroha can produce 

Sample Input 13 3
dxx
axx
cxx


Sample Output 1axxcxxdxx

The following order should be used  axx  cxx  dxx"
Children and Candies (ABC Edit),https://atcoder.jp/contests/abc043/tasks/abc043_a,"問題文競プロ幼稚園にはN人の子供がいます えび先生は 子供たちを一列に並べ 一人目にはキャンディーを1個 二人目には2個     N人目にはN個あげることにしました 必要なキャンディーの個数の合計は何個でしょう 

制約
1 N 100


入力入力は以下の形式で標準入力から与えられる 
N


出力必要なキャンディーの個数の合計を出力せよ 

入力例 13


出力例 16

1 2 3 6が答えになります 

入力例 210


出力例 255

1から10までの和は55です 

入力例 31


出力例 31

子供は一人しかいません この時答えは1になります 
Problem StatementThere are N children in AtCoder Kindergarten  Mr  Evi will arrange the children in a line  then give 1 candy to the first child in the line  2 candies to the second child       N candies to the N th child  How many candies will be necessary in total 

Constraints
1 N 100


InputThe input is given from Standard Input in the following format 
N


OutputPrint the necessary number of candies in total 

Sample Input 13


Sample Output 16

The answer is 1 2 3 6 

Sample Input 210


Sample Output 255

The sum of the integers from 1 to 10 is 55 

Sample Input 31


Sample Output 31

Only one child  The answer is 1 in this case"
Unhappy Hacking (ABC Edit),https://atcoder.jp/contests/abc043/tasks/abc043_b,"問題文しぐはキーボードを製作しました シンプルさを極限まで追求したこのキーボードには 0 キー 1 キー バックスペースキーの 3 つしかキーがありません 
手始めに しぐはこのキーボードで簡単なテキストエディタを操作してみることにしました このエディタには常に一つの文字列が表示されます 文字列が空のこともあります  エディタを起動した直後では 文字列は空です キーボードの各キーを押すと 文字列が次のように変化します 

0 キー  文字列の右端に文字 0 が挿入される 
1 キー  文字列の右端に文字 1 が挿入される 
バックスペースキー  文字列が空なら 何も起こらない そうでなければ 文字列の右端の 1 文字が削除される 

しぐはエディタを起動し これらのキーを何回か押しました しぐが押したキーを順番に記録した文字列 s が与えられます s の中の文字 0 は 0 キー 文字 1 は 1 キー 文字 B はバックスペースキーを表します いま エディタの画面にはどのような文字列が表示されているでしょうか 

制約
1    s    10   s  は s の長さを表す 
s は文字 0  1  B のみからなる 
正解は空文字列ではない 


入力入力は以下の形式で標準入力から与えられる 
s


出力最終的にエディタに表示されている文字列を出力せよ   制約 セクションで述べたように この文字列が空になるような入力は与えられない 

入力例 101B0


出力例 100

キーが押されるたびに エディタの文字列は 0  01  0  00 と変化します 

入力例 20BB1


出力例 21

キーが押されるたびに エディタの文字列は 0   空文字列    空文字列   1 と変化します 
Problem StatementSig has built his own keyboard  Designed for ultimate simplicity  this keyboard only has 3 keys on it  the 0 key  the 1 key and the backspace key 
To begin with  he is using a plain text editor with this keyboard  This editor always displays one string  possibly empty   Just after the editor is launched  this string is empty  When each key on the keyboard is pressed  the following changes occur to the string 

The 0 key  a letter 0 will be inserted to the right of the string 
The 1 key  a letter 1 will be inserted to the right of the string 
The backspace key  if the string is empty  nothing happens  Otherwise  the rightmost letter of the string is deleted 

Sig has launched the editor  and pressed these keys several times  You are given a string s  which is a record of his keystrokes in order  In this string  the letter 0 stands for the 0 key  the letter 1 stands for the 1 key and the letter B stands for the backspace key  What string is displayed in the editor now 

Constraints
1    s    10   s  denotes the length of s 
s consists of the letters 0  1 and B 
The correct answer is not an empty string 


InputThe input is given from Standard Input in the following format 
s


OutputPrint the string displayed in the editor in the end 

Sample Input 101B0


Sample Output 100

Each time the key is pressed  the string in the editor will change as follows  0  01  0  00 

Sample Input 20BB1


Sample Output 21

Each time the key is pressed  the string in the editor will change as follows  0   empty    empty   1"
Tak and Hotels (ABC Edit),https://atcoder.jp/contests/abc044/tasks/abc044_a,"問題文1 軒のホテルがあります 
このホテルの宿泊費は 次のようになっています 

最初の K 泊までは 1 泊あたり X 円
K 1 泊目以降は 1 泊あたり Y 円

高橋君は このホテルに N 泊連続で宿泊することにしました 
高橋君の宿泊費は合計で何円になるか求めてください 

制約
1  leq N  K  leq 10000
1  leq Y   X  leq 10000
N   K   X   Y はいずれも整数である


入力入力は以下の形式で標準入力から与えられる 
N
K
X
Y


出力高橋君の宿泊費の合計金額を表す整数を出力せよ 

入力例 15
3
10000
9000


出力例 148000

宿泊費は次のようになります 

1 泊目は 10000 円
2 泊目は 10000 円
3 泊目は 10000 円
4 泊目は 9000 円
5 泊目は 9000 円

したがって 合計は 48000 円です 

入力例 22
3
10000
9000


出力例 220000

Problem StatementThere is a hotel with the following accommodation fee 

X yen  the currency of Japan  per night  for the first K nights
Y yen per night  for the  K 1  th and subsequent nights

Tak is staying at this hotel for N consecutive nights 
Find his total accommodation fee 

Constraints
1  leq N  K  leq 10000
1  leq Y   X  leq 10000
N   K   X   Y are integers 


InputThe input is given from Standard Input in the following format 
N
K
X
Y


OutputPrint Tak s total accommodation fee 

Sample Input 15
3
10000
9000


Sample Output 148000

The accommodation fee is as follows 

10000 yen for the 1 st night
10000 yen for the 2 nd night
10000 yen for the 3 rd night
9000 yen for the 4 th night
9000 yen for the 5 th night

Thus  the total is 48000 yen 

Sample Input 22
3
10000
9000


Sample Output 220000"
Beautiful Strings,https://atcoder.jp/contests/abc044/tasks/abc044_b,"問題文w を 英小文字のみからなる文字列とします 
w が以下の条件を満たすならば w を美しい文字列と呼ぶことにします 

どの英小文字も w 中に偶数回出現する 

文字列 w が与えられます w が美しい文字列かどうか判定してください 

制約
1  leq  w   leq 100
w は英小文字  a z  のみからなる文字列である


入力入力は以下の形式で標準入力から与えられる 
w


出力w が美しい文字列ならば Yes を それ以外の場合は No を出力せよ 

入力例 1abaccaba


出力例 1Yes

a が 4 回 b が 2 回 c が 2 回 それ以外の英小文字が 0 回出現します 

入力例 2hthth


出力例 2No

Problem StatementLet w be a string consisting of lowercase letters 
We will call w beautiful if the following condition is satisfied 

Each lowercase letter of the English alphabet occurs even number of times in w 

You are given the string w  Determine if w is beautiful 

Constraints
1  leq  w   leq 100
w consists of lowercase letters  a z  


InputThe input is given from Standard Input in the following format 
w


OutputPrint Yes if w is beautiful  Print No otherwise 

Sample Input 1abaccaba


Sample Output 1Yes

a occurs four times  b occurs twice  c occurs twice and the other letters occur zero times 

Sample Input 2hthth


Sample Output 2No"
Trapezoids,https://atcoder.jp/contests/abc045/tasks/abc045_a,"問題文上底の長さが a 下底の長さが b 高さが h の台形があります 


台形の例

この台形の面積を求めてください 

制約
1  leq a  leq 100
1  leq b  leq 100
1  leq h  leq 100
入力で与えられる値はすべて整数
h は偶数


入力入力は以下の形式で標準入力から与えられる 
a
b
h


出力台形の面積を整数で出力せよ 面積が整数になることは保障されている 

入力例 13
4
2


出力例 17

上底の長さ 3 下底の長さ 4 高さ 2 の台形の面積は   3 4  2 2   7 です 

入力例 24
4
4


出力例 216

この例で与えられるのは平行四辺形ですが 平行四辺形も台形です 
Problem StatementYou are given a trapezoid  The lengths of its upper base  lower base  and height are a  b  and h  respectively 


An example of a trapezoid

Find the area of this trapezoid 

Constraints
1 a 100
1 b 100
1 h 100
All input values are integers 
h is even 


InputThe input is given from Standard Input in the following format 
a
b
h


OutputPrint the area of the given trapezoid  It is guaranteed that the area is an integer 

Sample Input 13
4
2


Sample Output 17

When the lengths of the upper base  lower base  and height are 3  4  and 2  respectively  the area of the trapezoid is  3 4  2 2   7 

Sample Input 24
4
4


Sample Output 216

In this case  a parallelogram is given  which is also a trapezoid"
Card Game for Three (ABC Edit),https://atcoder.jp/contests/abc045/tasks/abc045_b,"問題文A さん B さん C さんの 3 人が以下のようなカードゲームをプレイしています 

最初 3 人はそれぞれ a b c いずれかの文字が書かれたカードを 何枚か持っている これらは入力で与えられた順番に持っており 途中で並べ替えたりしない 
A さんのターンから始まる 
現在自分のターンである人がカードを 1 枚以上持っているならば そのうち先頭のカードを捨てる その後 捨てられたカードに書かれているアルファベットと同じ名前の人  例えば カードに a と書かれていたならば A さん  のターンとなる 
現在自分のターンである人がカードを 1 枚も持っていないならば その人がゲームの勝者となり ゲームは終了する 

3 人が最初に持っているカードがそれぞれ先頭から順に与えられます 
具体的には 文字列 S A S B S C が与えられます 文字列 S A の i 文字目   1  leq i  leq  S A    に書かれている文字が A さんの持っている中で先頭から i 番目のカードに
書かれている文字です 文字列 S B  S C についても同様です 
最終的に誰がこのゲームの勝者となるかを求めてください 

制約
1  leq  S A   leq 100
1  leq  S B   leq 100
1  leq  S C   leq 100
S A S B S C に含まれる文字はそれぞれ a b c のいずれか


入力入力は以下の形式で標準入力から与えられる 
S A
S B
S C


出力A さんが勝つなら A B さんが勝つなら B C さんが勝つなら C と出力せよ 

入力例 1aca
accc
ca


出力例 1A

ゲームは以下のように進行します 

A さんが 持っている中で最初のカード a を捨てる 次は A さんの番となる 
A さんが 持っている中で最初のカード c を捨てる 次は C さんの番となる 
C さんが 持っている中で最初のカード c を捨てる 次は C さんの番となる 
C さんが 持っている中で最初のカード a を捨てる 次は A さんの番となる 
A さんが 持っている中で最初のカード a を捨てる 次は A さんの番となる 
A さんはもう持っているカードがない よって A さんの勝利となり ゲームは終了する 


入力例 2abcb
aacb
bccc


出力例 2C

Problem StatementAlice  Bob and Charlie are playing Card Game for Three  as below 

At first  each of the three players has a deck consisting of some number of cards  Each card has a letter a  b or c written on it  The orders of the cards in the decks cannot be rearranged 
The players take turns  Alice goes first 
If the current player s deck contains at least one card  discard the top card in the deck  Then  the player whose name begins with the letter on the discarded card  takes the next turn   For example  if the card says a  Alice takes the next turn  
If the current player s deck is empty  the game ends and the current player wins the game 

You are given the initial decks of the players 
More specifically  you are given three strings S A  S B and S C  The i th  1 i  S A   letter in S A is the letter on the i th card in Alice s initial deck  S B and S C describes Bob s and Charlie s initial decks in the same way 
Determine the winner of the game 

Constraints
1  S A  100
1  S B  100
1  S C  100
Each letter in S A  S B  S C is a  b or c 


InputThe input is given from Standard Input in the following format 
S A
S B
S C


OutputIf Alice will win  print A  If Bob will win  print B  If Charlie will win  print C 

Sample Input 1aca
accc
ca


Sample Output 1A

The game will progress as below 

Alice discards the top card in her deck  a  Alice takes the next turn 
Alice discards the top card in her deck  c  Charlie takes the next turn 
Charlie discards the top card in his deck  c  Charlie takes the next turn 
Charlie discards the top card in his deck  a  Alice takes the next turn 
Alice discards the top card in her deck  a  Alice takes the next turn 
Alice s deck is empty  The game ends and Alice wins the game 


Sample Input 2abcb
aacb
bccc


Sample Output 2C"
AtCoDeer and Paint Cans,https://atcoder.jp/contests/abc046/tasks/abc046_a,"問題文シカのAtCoDeerくんはペンキをこれまでに3つ買いました おととい買ったペンキの色は a   昨日買ったペンキの色は b   今日買ったペンキの色は c です 各ペンキの色は1以上100以下の整数で表されます 
AtCoDeerくんはわすれんぼうなため 同じ色のペンキを買ってしまっていることがあります AtCoDeerくんが買ったペンキの色の種類の個数を教えてあげてください 

制約
1 a b c 100


入力入力は以下の形式で標準入力から与えられる 
a b c


出力AtCoDeerくんが買ったペンキの色の種類の個数を出力せよ 

入力例 13 1 4


出力例 13

色 1 3 4 の 3 種類です 

入力例 23 3 33


出力例 22

色 3 33 の 2 種類です 
Problem StatementAtCoDeer the deer recently bought three paint cans 
The color of the one he bought two days ago is a  the color of the one he bought yesterday is b  and the color of the one he bought today is c 
Here  the color of each paint can is represented by an integer between 1 and 100  inclusive 
Since he is forgetful  he might have bought more than one paint can in the same color 
Count the number of different kinds of colors of these paint cans and tell him 

Constraints
1 a b c 100


InputThe input is given from Standard Input in the following format 
a b c


OutputPrint the number of different kinds of colors of the paint cans 

Sample Input 13 1 4


Sample Output 13

Three different colors  1  3  and 4 

Sample Input 23 3 33


Sample Output 22

Two different colors  3 and 33"
Painting Balls with AtCoDeer,https://atcoder.jp/contests/abc046/tasks/abc046_b,"問題文シカのAtCoDeerくんは一列に並んだ N 個のボールをそれぞれ K 色のペンキの色のうちのどれかで塗ろうとしています 見栄えが悪くならないように 隣り合ったボールは別の色で塗ることにします ボールの塗り方としてあり得るものの個数を求めてください 

制約
1 N 1000
2 K 1000
答えは 2  31  1 以下


入力入力は以下の形式で標準入力から与えられる 
N K


出力ボールの塗り方としてあり得るものの個数を出力せよ 

入力例 12 2


出力例 12

色を0 1で表すと 左のボールを0で塗り 右のボールを1で塗る という方法と  左のボールを1で塗り 右のボールを0で塗る という方法の2通りがあります 

入力例 21 10


出力例 210

ボールは一つしか無いため 10色のうちどれを使っても良いので答えは10通りです 

入力例 310 8


出力例 3322828856

Problem StatementThere are N balls placed in a row 
AtCoDeer the deer is painting each of these in one of the K colors of his paint cans 
For aesthetic reasons  any two adjacent balls must be painted in different colors 
Find the number of the possible ways to paint the balls 

Constraints
1 N 1000
2 K 1000
The correct answer is at most 2  31  1 


InputThe input is given from Standard Input in the following format 
N K


OutputPrint the number of the possible ways to paint the balls 

Sample Input 12 2


Sample Output 12

We will denote the colors by 0 and 1  There are two possible ways  we can either paint the left ball in color 0 and the right ball in color 1  or paint the left in color 1 and the right in color 0 

Sample Input 21 10


Sample Output 210

Since there is only one ball  we can use any of the ten colors to paint it  Thus  the answer is ten"
Fighting over Candies,https://atcoder.jp/contests/abc047/tasks/abc047_a,"問題文競プロ幼稚園に通う 2 人の子供がキャンディーの取り合いをしています 
3 個のキャンディーパックがあり それぞれのパックにはキャンディーが a  b  c 個入っています 
えび先生はこの 3 個のパックを キャンディーの個数が等しくなるように 2 人に分けようとしています そのような分け方が可能かどうかを判定してください 
ただし キャンディーをパックから取り出すことはできず それぞれのパックをそのままどちらかの子供にあげる必要があります 

制約
1   a  b  c   100


入力入力は以下の形式で標準入力から与えられる 
a b c


出力キャンディーを同じ個数に分けられるなら Yes を そうでなければ No を出力せよ 

入力例 110 30 20


出力例 1Yes

ひとりめの子供に 30 個のキャンディーの入ったパックを もう一方の子供に 10 個と 20 個のキャンディーの入ったパックをあげると 2 人のもらうキャンディーの個数を等しくすることができます 

入力例 230 30 100


出力例 2No

この場合 100 個のキャンディーの入ったパックを貰った子供は必ずもう一方の子供より多くのキャンディーを貰うことになってしまいます 
3 つすべてのパックをどちらかの子供にあげるように分けなければならないことに注意してください 

入力例 356 25 31


出力例 3Yes

Problem StatementTwo students of AtCoder Kindergarten are fighting over candy packs 
There are three candy packs  each of which contains a  b  and c candies  respectively 
Teacher Evi is trying to distribute the packs between the two students so that each student gets the same number of candies  Determine whether it is possible 
Note that Evi cannot take candies out of the packs  and the whole contents of each pack must be given to one of the students 

Constraints
1   a  b  c   100


InputThe input is given from Standard Input in the following format 
a b c


OutputIf it is possible to distribute the packs so that each student gets the same number of candies  print Yes  Otherwise  print No 

Sample Input 110 30 20


Sample Output 1Yes

Give the pack with 30 candies to one student  and give the two packs with 10 and 20 candies to the other  Then  each gets 30 candies 

Sample Input 230 30 100


Sample Output 2No

In this case  the student who gets the pack with 100 candies always has more candies than the other 
Note that every pack must be given to one of them 

Sample Input 356 25 31


Sample Output 3Yes"
Snuke's Coloring 2 (ABC Edit),https://atcoder.jp/contests/abc047/tasks/abc047_b,"問題文xy 平面上に 左下の座標が  0  0  右上の座標が  W  H  で 各辺が x 軸か y 軸に平行な長方形があります 最初 長方形の内部は白く塗られています 
すぬけ君はこの長方形の中に N 個の点を打ちました i 個目  1   i   N  点の座標は  x i  y i  でした 
また すぬけ君は長さ N の数列 a を決めて 各 1   i   N に対し 

a i   1 のときは長方形の x   x i をみたす領域
a i   2 のときは長方形の x   x i をみたす領域
a i   3 のときは長方形の y   y i をみたす領域
a i   4 のときは長方形の y   y i をみたす領域

を黒く塗りました 
塗りつぶしが終わったあとの長方形内での白い部分の面積を求めてください 

制約
1   W  H   100
1   N   100
0   x i   W  1   i   N 
0   y i   H  1   i   N 
W  H  21 32 追記   x i  y i は整数である
a i  1   i   N  は 1  2  3  4 のいずれかである


入力入力は以下の形式で標準入力から与えられる 
W H N
x 1 y 1 a 1
x 2 y 2 a 2
 
x N y N a N


出力塗りつぶしが終わったあとの長方形内での白い部分の面積を出力せよ 

入力例 15 4 2
2 1 1
3 3 4


出力例 19

すぬけ君が塗りつぶしを始める前の長方形は以下の図のようになっています 



 x 1  y 1     2  1  a 1   1 なので まずすぬけ君は x 座標が 2 より小さい領域を塗りつぶし 長方形は以下のようになります 



 x 2  y 2     3  3  a 2   4 なので 次にすぬけ君は y 座標が 3 より大きい領域を塗りつぶし 長方形は最終的に以下のようになります 



この最終的な状態における白い部分の面積は 9 なので 出力は 9 となります 

入力例 25 4 3
2 1 1
3 3 4
1 4 2


出力例 20

塗りつぶした結果 白い部分が残らないこともありえます 

入力例 310 10 5
1 6 1
4 1 3
6 9 4
9 4 2
3 1 3


出力例 364

Problem StatementThere is a rectangle in the xy plane  with its lower left corner at  0  0  and its upper right corner at  W  H   Each of its sides is parallel to the x axis or y axis  Initially  the whole region within the rectangle is painted white 
Snuke plotted N points into the rectangle  The coordinate of the i th  1   i   N  point was  x i  y i  
Then  he created an integer sequence a of length N  and for each 1   i   N  he painted some region within the rectangle black  as follows 

If a i   1  he painted the region satisfying x   x i within the rectangle 
If a i   2  he painted the region satisfying x   x i within the rectangle 
If a i   3  he painted the region satisfying y   y i within the rectangle 
If a i   4  he painted the region satisfying y   y i within the rectangle 

Find the area of the white region within the rectangle after he finished painting 

Constraints
1   W  H   100
1   N   100
0   x i   W  1   i   N 
0   y i   H  1   i   N 
W  H  21 32  added   x i and y i are integers 
a i  1   i   N  is 1  2  3 or 4 


InputThe input is given from Standard Input in the following format 
W H N
x 1 y 1 a 1
x 2 y 2 a 2
 
x N y N a N


OutputPrint the area of the white region within the rectangle after Snuke finished painting 

Sample Input 15 4 2
2 1 1
3 3 4


Sample Output 19

The figure below shows the rectangle before Snuke starts painting 



First  as  x 1  y 1     2  1  and a 1   1  he paints the region satisfying x   2 within the rectangle 



Then  as  x 2  y 2     3  3  and a 2   4  he paints the region satisfying y   3 within the rectangle 



Now  the area of the white region within the rectangle is 9 

Sample Input 25 4 3
2 1 1
3 3 4
1 4 2


Sample Output 20

It is possible that the whole region within the rectangle is painted black 

Sample Input 310 10 5
1 6 1
4 1 3
6 9 4
9 4 2
3 1 3


Sample Output 364"
AtCoder *** Contest,https://atcoder.jp/contests/abc048/tasks/abc048_a,"問題文すぬけ君は AtCoder s Contest という名前のコンテストを開こうとしています 
ここで s は長さ 1 以上の文字列であり 1 文字目は英大文字 2 文字目以降は英小文字です 
すぬけ君は このコンテストの略称を AxC に決めました 
ここで x は s の先頭の英大文字です 
コンテストの名前が与えられるので コンテストの略称を出力してください 

制約
s の長さは 1 以上 100 以下である 
s の 1 文字目は英大文字である 
s の 2 文字目以降は英小文字である 


入力入力は以下の形式で標準入力から与えられる 
AtCoder s Contest


出力コンテストの略称を出力せよ 

入力例 1AtCoder Beginner Contest


出力例 1ABC

今あなたが参加しているコンテストです 

入力例 2AtCoder Snuke Contest


出力例 2ASC

このコンテストは存在しません 

入力例 3AtCoder X Contest


出力例 3AXC

Problem StatementSnuke is going to open a contest named  AtCoder s Contest  
Here  s is a string of length 1 or greater  where the first character is an uppercase English letter  and the second and subsequent characters are lowercase English letters 
Snuke has decided to abbreviate the name of the contest as  AxC  
Here  x is the uppercase English letter at the beginning of s 
Given the name of the contest  print the abbreviation of the name 

Constraints
The length of s is between 1 and 100  inclusive 
The first character in s is an uppercase English letter 
The second and subsequent characters in s are lowercase English letters 


InputThe input is given from Standard Input in the following format 
AtCoder s Contest


OutputPrint the abbreviation of the name of the contest 

Sample Input 1AtCoder Beginner Contest


Sample Output 1ABC

The contest in which you are participating now 

Sample Input 2AtCoder Snuke Contest


Sample Output 2ASC

This contest does not actually exist 

Sample Input 3AtCoder X Contest


Sample Output 3AXC"
Between a and b ...,https://atcoder.jp/contests/abc048/tasks/abc048_b,"問題文非負の整数 a  b  a   b  と 正の整数 x が与えられます 
a 以上 b 以下の整数のうち x で割り切れるものの個数を求めてください 

制約
0   a   b   10  18 
1   x   10  18 


入力入力は以下の形式で標準入力から与えられる 
a b x


出力a 以上 b 以下の整数のうち x で割り切れるものの個数を出力せよ 

入力例 14 8 2


出力例 13

4 以上 8 以下の整数のうち 2 で割り切れるものは 4  6  8 です 

入力例 20 5 1


出力例 26

0 以上 5 以下の整数のうち 1 で割り切れるものは 0  1  2  3  4  5 です 

入力例 39 9 2


出力例 30

9 以上 9 以下の整数のうち 2 で割り切れるものはありません 

入力例 41 1000000000000000000 3


出力例 4333333333333333333

オーバーフローに注意してください 
Problem StatementYou are given nonnegative integers a and b  a   b   and a positive integer x 
Among the integers between a and b  inclusive  how many are divisible by x 

Constraints
0   a   b   10  18 
1   x   10  18 


InputThe input is given from Standard Input in the following format 
a b x


OutputPrint the number of the integers between a and b  inclusive  that are divisible by x 

Sample Input 14 8 2


Sample Output 13

There are three integers between 4 and 8  inclusive  that are divisible by 2  4  6 and 8 

Sample Input 20 5 1


Sample Output 26

There are six integers between 0 and 5  inclusive  that are divisible by 1  0  1  2  3  4 and 5 

Sample Input 39 9 2


Sample Output 30

There are no integer between 9 and 9  inclusive  that is divisible by 2 

Sample Input 41 1000000000000000000 3


Sample Output 4333333333333333333

Watch out for integer overflows"
UOIAUAI,https://atcoder.jp/contests/abc049/tasks/abc049_a,"問題文英小文字 c が与えられるので c が母音であるか判定してください ここで 英小文字のうち母音は a e i o uの 5 つです 

制約
c は英小文字である 


入力入力は以下の形式で標準入力から与えられる 
c


出力c が母音であるとき vowel と そうでないとき consonant と出力せよ 

入力例 1a


出力例 1vowel

a は母音なので vowel と出力します 

入力例 2z


出力例 2consonant


入力例 3s


出力例 3consonant

Problem StatementGiven a lowercase English letter c  determine whether it is a vowel  Here  there are five vowels in the English alphabet  a  e  i  o and u 

Constraints
c is a lowercase English letter 


InputThe input is given from Standard Input in the following format 
c


OutputIf c is a vowel  print vowel  Otherwise  print consonant 

Sample Input 1a


Sample Output 1vowel

Since a is a vowel  print vowel 

Sample Input 2z


Sample Output 2consonant


Sample Input 3s


Sample Output 3consonant"
Thin,https://atcoder.jp/contests/abc049/tasks/abc049_b,"問題文縦 H ピクセル 横 W ピクセルの画像があります 全てのピクセルは   または   で表されるものとします 上から i 番目 左から j 番目のピクセルを表す文字を C  i j  で表します 
この画像を 2 倍縦長にした画像を出力してください すなわち 縦 2H ピクセル 横 W ピクセルの画像であって 上から i 番目 左から j 番目のピクセルは C   i 1  2 j   ただし 割り算は切り捨て と等しい画像を出力してください 

制約
1 H  W 100
C  i j    または   である 


入力入力は以下の形式で標準入力から与えられる 
H W
C  1 1    C  1 W 
 
C  H 1    C  H W 


出力与えられた画像を 2 倍縦長にした画像を出力せよ 

入力例 12 2
  
  


出力例 1  
  
  
  


入力例 21 4
    


出力例 2    
    


入力例 39 20
                    
                    
                    
                    
                    
                    
                    
                    
                    


出力例 3                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    

Problem StatementThere is an image with a height of H pixels and a width of W pixels  Each of the pixels is represented by either   or    The character representing the pixel at the i th row from the top and the j th column from the left  is denoted by C  i j  
Extend this image vertically so that its height is doubled  That is  print a image with a height of 2H pixels and a width of W pixels where the pixel at the i th row and j th column is equal to C   i 1  2 j   the result of division is rounded down  

Constraints
1 H  W 100
C  i j  is either   or   


InputThe input is given from Standard Input in the following format 
H W
C  1 1    C  1 W 
 
C  H 1    C  H W 


OutputPrint the extended image 

Sample Input 12 2
  
  


Sample Output 1  
  
  
  


Sample Input 21 4
    


Sample Output 2    
    


Sample Input 39 20
                    
                    
                    
                    
                    
                    
                    
                    
                    


Sample Output 3"
Addition and Subtraction Easy,https://atcoder.jp/contests/abc050/tasks/abc050_a,"問題文joisinoお姉ちゃんは A op B という式の値を計算したいと思っています 
ここで A B は整数で op は   または   の記号です 
あなたの仕事は joisinoお姉ちゃんの代わりにこれを求めるプログラムを作ることです 

制約
1 A B 10 9
op は   または   の記号である 


入力入力は以下の形式で標準入力から与えられる 
A op B


出力式の値を出力せよ 

入力例 11   2


出力例 13

1   2   3 なので 3 を出力します 

入力例 25   7


出力例 2 2

Problem StatementJoisino wants to evaluate the formula  A op B  
Here  A and B are integers  and the binary operator op is either   or   
Your task is to evaluate the formula instead of her 

Constraints
1 A B 10 9
op is either   or   


InputThe input is given from Standard Input in the following format 
A op B


OutputEvaluate the formula and print the result 

Sample Input 11   2


Sample Output 13

Since 1   2   3  the output should be 3 

Sample Input 25   7


Sample Output 2 2"
Contest with Drinks Easy,https://atcoder.jp/contests/abc050/tasks/abc050_b,"問題文joisinoお姉ちゃんは あるプログラミングコンテストの決勝を控えています 
このコンテストでは N 問の問題が用意されており それらには 1 N の番号がついています 
joisinoお姉ちゃんは 問題 i 1 i N  を解くのにかかる時間が T i 秒であることを知っています 
また このコンテストでは M 種類のドリンクが提供されており 1 M の番号がついています 
そして ドリンク i 1 i M  を飲むと 脳が刺激され 問題 P i を解くのにかかる時間が X i 秒になります 
他の問題を解くのにかかる時間に変化はありません 
コンテスタントは コンテスト開始前にいずれかのドリンクを 1 本だけ飲むことができます 
joisinoお姉ちゃんは それぞれのドリンクについて それを飲んだ際に 全ての問題を解くのに何秒必要なのかを知りたくなりました 
全ての問題を解くのに必要な時間とは それぞれの問題を解くのにかかる時間の合計です 
あなたの仕事は joisinoお姉ちゃんの代わりにこれを求めるプログラムを作成することです 

制約
入力は全て整数である
1 N 100
1 T i 10 5
1 M 100
1 P i N
1 X i 10 5


入力入力は以下の形式で標準入力から与えられる 
N
T 1 T 2     T N
M
P 1 X 1
P 2 X 2
 
P M X M


出力それぞれのドリンクについて それを飲んだ際に全ての問題を解くのに必要な時間を求め 順番に 1 行ずつ出力せよ 

入力例 13
2 1 4
2
1 1
2 3


出力例 16
9

一つ目のドリンクを飲んだ場合 それぞれの問題を解くのに要する時間は 1 秒 1 秒 4 秒になります 
なので それらを合計した 6 秒が答えになり 6 を出力します 
二つ目のドリンクを飲んだ場合 それぞれの問題を解くのに要する時間は 2 秒 3 秒 4 秒になります 
なので それらを合計した 9 秒が答えになり 9 を出力します 

入力例 25
7 2 3 8 5
3
4 2
1 7
4 13


出力例 219
25
30

Problem StatementJoisino is about to compete in the final round of a certain programming competition 
In this contest  there are N problems  numbered 1 through N 
Joisino knows that it takes her T i seconds to solve problem i 1 i N  
Also  there are M kinds of drinks offered to the contestants  numbered 1 through M 
If Joisino takes drink i 1 i M   her brain will be stimulated and the time it takes for her to solve problem P i will become X i seconds 
It does not affect the time to solve the other problems 
A contestant is allowed to take exactly one of the drinks before the start of the contest 
For each drink  Joisino wants to know how many seconds it takes her to solve all the problems if she takes that drink 
Here  assume that the time it takes her to solve all the problems is equal to the sum of the time it takes for her to solve individual problems 
Your task is to write a program to calculate it instead of her 

Constraints
All input values are integers 
1 N 100
1 T i 10 5
1 M 100
1 P i N
1 X i 10 5


InputThe input is given from Standard Input in the following format 
N
T 1 T 2     T N
M
P 1 X 1
P 2 X 2
 
P M X M


OutputFor each drink  calculate how many seconds it takes Joisino to solve all the problems if she takes that drink  and print the results  one per line 

Sample Input 13
2 1 4
2
1 1
2 3


Sample Output 16
9

If Joisino takes drink 1  the time it takes her to solve each problem will be 1  1 and 4 seconds  respectively  totaling 6 seconds 
If Joisino takes drink 2  the time it takes her to solve each problem will be 2  3 and 4 seconds  respectively  totaling 9 seconds 

Sample Input 25
7 2 3 8 5
3
4 2
1 7
4 13


Sample Output 219
25
30"
Haiku,https://atcoder.jp/contests/abc051/tasks/abc051_a,"問題文イルカは 新年に長さ 19 の文字列 s を受け取りました 
文字列 s の形式は  英小文字 5 文字   英小文字 7 文字   英小文字 5 文字  で表されます 
イルカは カンマで区切られた文字列 s を スペースで区切られた文字列に変換したいと思っています 
イルカの代わりに この処理を行うプログラムを作ってください   

制約
s の長さは 19 である 
s の 6 文字目と 14 文字目は   である   
それら以外の s の文字は英小文字である   


入力入力は以下の形式で標準入力から与えられる 
s


出力処理した後の文字列を出力せよ 

入力例 1happy newyear enjoy


出力例 1happy newyear enjoy

happy newyear enjoy に含まれるカンマをスペースで置き換えて happy newyear enjoy を出力します 

入力例 2haiku atcoder tasks


出力例 2haiku atcoder tasks


入力例 3abcde fghihgf edcba


出力例 3abcde fghihgf edcba

Problem StatementAs a New Year s gift  Dolphin received a string s of length 19 
The string s has the following format   five lowercase English letters   seven lowercase English letters   five lowercase English letters  
Dolphin wants to convert the comma separated string s into a space separated string 
Write a program to perform the conversion for him   

Constraints
The length of s is 19 
The sixth and fourteenth characters in s are   
The other characters in s are lowercase English letters 


InputThe input is given from Standard Input in the following format 
s


OutputPrint the string after the conversion 

Sample Input 1happy newyear enjoy


Sample Output 1happy newyear enjoy

Replace all the commas in happy newyear enjoy with spaces to obtain happy newyear enjoy 

Sample Input 2haiku atcoder tasks


Sample Output 2haiku atcoder tasks


Sample Input 3abcde fghihgf edcba


Sample Output 3abcde fghihgf edcba"
Sum of Three Integers,https://atcoder.jp/contests/abc051/tasks/abc051_b,"Problem StatementYou are given two integers K and S 
Three variable X  Y and Z takes integer values satisfying 0 X Y Z K 
How many different assignments of values to X  Y and Z are there such that X   Y   Z   S   

Constraints
2 K 2500 
0 S 3K 
K and S are integers   


InputThe input is given from Standard Input in the following format 
K S


OutputPrint the number of the triples of X  Y and Z that satisfy the condition 

Sample Input 12 2


Sample Output 16

There are six triples of X  Y and Z that satisfy the condition 

X   0  Y   0  Z   2 
X   0  Y   2  Z   0 
X   2  Y   0  Z   0 
X   0  Y   1  Z   1 
X   1  Y   0  Z   1 
X   1  Y   1  Z   0


Sample Input 25 15


Sample Output 21

The maximum value of X   Y   Z is 15  achieved by one triple of X  Y and Z 
問題文2 つの整数 K S が与えられます 
3 つの変数 X Y Z があり 0 X Y Z K を満たす整数の値を取ります 
X   Y   Z   S を満たす X Y Z への値の割り当ては何通りありますか   

制約
2 K 2500 
0 S 3K 
K S は整数である   


入力入力は以下の形式で標準入力から与えられる   
K S


出力問題文の条件を満たす X Y Z の組が何通りあるか出力せよ 

入力例 12 2


出力例 16

問題文の条件を満たす X Y Z の組は以下の 6 通りです   

X   0  Y   0  Z   2 
X   0  Y   2  Z   0 
X   2  Y   0  Z   0 
X   0  Y   1  Z   1 
X   1  Y   0  Z   1 
X   1  Y   1  Z   0 


入力例 25 15


出力例 21

X   Y   Z の最大値は 15 であり それを満たす組は 1 通りです"
Back and Forth,https://atcoder.jp/contests/abc051/tasks/abc051_c,"問題文イルカは x 軸正方向を右 y 軸正方向を上とする 2 次元座標平面にいます 
イルカは現在点  sx sy  にいて 1 秒あたり上下左右に距離 1 だけ進むことができます 
このとき 移動前と移動後の x 座標 y 座標はともに整数でなければなりません 
イルカはここから sx   tx と sy   ty を満たす点  tx ty  に行き その後点  sx sy  に戻り また点  tx ty  に行き その後点  sx sy  に戻ります 
このとき イルカは点  sx sy  と点  tx ty  を除いて 途中で同じ座標を複数回通らないように移動しなければなりません 
このような条件を満たすイルカの最短経路を 1 つ求めてください   

制約
 1000  sx   tx  1000 
 1000  sy   ty  1000 
sx sy tx ty は整数である 


入力入力は以下の形式で標準入力から与えられる 
sx sy tx ty


出力イルカの最短経路を表す文字列 S を出力せよ 
S の i 番目の文字はイルカの i 番目の移動を表す 
イルカの各方向への移動を表す文字の対応関係は以下のとおりである     

U  上方向  
D  下方向  
L  左方向  
R  右方向  

条件を満たすような最短経路が複数ある場合 そのうちどれか 1 つを出力せよ 

入力例 10 0 1 2


出力例 1UURDDLLUUURRDRDDDLLU

以下に示す移動経路が最短経路の 1 つです   

1 回目の  sx sy  から  tx ty  への移動   0 0     0 1     0 2     1 2  
1 回目の  tx ty  から  sx sy  への移動   1 2     1 1     1 0     0 0  
2 回目の  sx sy  から  tx ty  への移動   0 0      1 0      1 1      1 2      1 3     0 3     1 3     1 2  
2 回目の  tx ty  から  sx sy  への移動   1 2     2 2     2 1     2 0     2  1     1  1     0  1     0 0  


入力例 2 2  2 1 1


出力例 2UURRURRDDDLLDLLULUUURRURRDDDLLDL

Problem StatementDolphin resides in two dimensional Cartesian plane  with the positive x axis pointing right and the positive y axis pointing up 
Currently  he is located at the point  sx sy   In each second  he can move up  down  left or right by a distance of 1 
Here  both the x  and y coordinates before and after each movement must be integers 
He will first visit the point  tx ty  where sx   tx and sy   ty  then go back to the point  sx sy   then visit the point  tx ty  again  and lastly go back to the point  sx sy  
Here  during the whole travel  he is not allowed to pass through the same point more than once  except the points  sx sy  and  tx ty  
Under this condition  find a shortest path for him   

Constraints
 1000   sx   tx   1000 
 1000   sy   ty   1000 
sx sy tx and ty are integers 


InputThe input is given from Standard Input in the following format 
sx sy tx ty


OutputPrint a string S that represents a shortest path for Dolphin 
The i th character in S should correspond to his i th movement 
The directions of the movements should be indicated by the following characters   

U  Up
D  Down
L  Left
R  Right

If there exist multiple shortest paths under the condition  print any of them 

Sample Input 10 0 1 2


Sample Output 1UURDDLLUUURRDRDDDLLU

One possible shortest path is 

Going from  sx sy  to  tx ty  for the first time   0 0     0 1     0 2     1 2 
Going from  tx ty  to  sx sy  for the first time   1 2     1 1     1 0     0 0 
Going from  sx sy  to  tx ty  for the second time   0 0      1 0      1 1      1 2      1 3     0 3     1 3     1 2 
Going from  tx ty  to  sx sy  for the second time   1 2     2 2     2 1     2 0     2  1     1  1     0  1     0 0 


Sample Input 2 2  2 1 1


Sample Output 2UURRURRDDDLLDLLULUUURRURRDDDLLDL"
Candidates of No Shortest Paths,https://atcoder.jp/contests/abc051/tasks/abc051_d,"問題文自己ループと二重辺を含まない N 頂点 M 辺の重み付き無向連結グラフが与えられます 
i  1 i M  番目の辺は頂点 a i と頂点 b i を距離 c i で結びます  
ここで 自己ループは a i   b i  1 i M  となる辺のことを表します  
また 二重辺は  a i b i   a j b j  または  a i b i   b j a j   1 i j M  となる辺のことを表します  
連結グラフは どの異なる 2 頂点間にも経路が存在するグラフのことを表します    
どの異なる 2 頂点間の どの最短経路にも含まれない辺の数を求めてください   

制約
2 N 100 
N 1 M min N N 1  2 1000  
1 a i b i N 
1 c i 1000
c i は整数である 
与えられるグラフは自己ループと二重辺を含まない 
与えられるグラフは連結である   


入力入力は以下の形式で標準入力から与えられる 
N M  
a 1 b 1 c 1  
a 2 b 2 c 2
   
a M b M c M  


出力グラフ上の どの異なる 2 頂点間の どの最短経路にも含まれない辺の数を出力せよ 

入力例 13 3
1 2 1
1 3 1
2 3 3


出力例 11

この入力例で与えられるグラフにおける 全ての異なる 2 頂点間の最短経路は以下の通りです   

頂点 1 から頂点 2 への最短経路は 頂点 1   頂点 2 で経路長は 1 
頂点 1 から頂点 3 への最短経路は 頂点 1   頂点 3 で経路長は 1 
頂点 2 から頂点 1 への最短経路は 頂点 2   頂点 1 で経路長は 1 
頂点 2 から頂点 3 への最短経路は 頂点 2   頂点 1   頂点 3 で経路長は 2 
頂点 3 から頂点 1 への最短経路は 頂点 3   頂点 1 で経路長は 1 
頂点 3 から頂点 2 への最短経路は 頂点 3   頂点 1   頂点 2 で経路長は 2 

したがって 一度も最短経路として使用されていない辺は 頂点 2 と頂点 3 を結ぶ長さ 3 の辺のみであるため 1 を出力します   

入力例 23 2
1 2 1
2 3 1


出力例 20

全ての辺が異なる 2 頂点間のある最短経路で使用されます 
Problem StatementYou are given an undirected connected weighted graph with N vertices and M edges that contains neither self loops nor double edges 
The i th  1 i M  edge connects vertex a i and vertex b i with a distance of c i 
Here  a self loop is an edge where a i   b i  1 i M   and double edges are two edges where  a i b i   a j b j  or  a i b i   b j a j   1 i j M  
A connected graph is a graph where there is a path between every pair of different vertices 
Find the number of the edges that are not contained in any shortest path between any pair of different vertices   

Constraints
2 N 100 
N 1 M min N N 1  2 1000  
1 a i b i N 
1 c i 1000
c i is an integer 
The given graph contains neither self loops nor double edges 
The given graph is connected 


InputThe input is given from Standard Input in the following format 
N M  
a 1 b 1 c 1  
a 2 b 2 c 2
   
a M b M c M  


OutputPrint the number of the edges in the graph that are not contained in any shortest path between any pair of different vertices 

Sample Input 13 3
1 2 1
1 3 1
2 3 3


Sample Output 11

In the given graph  the shortest paths between all pairs of different vertices are as follows 

The shortest path from vertex 1 to vertex 2 is  vertex 1   vertex 2  with the length of 1 
The shortest path from vertex 1 to vertex 3 is  vertex 1   vertex 3  with the length of 1 
The shortest path from vertex 2 to vertex 1 is  vertex 2   vertex 1  with the length of 1 
The shortest path from vertex 2 to vertex 3 is  vertex 2   vertex 1   vertex 3  with the length of 2 
The shortest path from vertex 3 to vertex 1 is  vertex 3   vertex 1  with the length of 1 
The shortest path from vertex 3 to vertex 2 is  vertex 3   vertex 1   vertex 2  with the length of 2 

Thus  the only edge that is not contained in any shortest path  is the edge of length 3 connecting vertex 2 and vertex 3  hence the output should be 1 

Sample Input 23 2
1 2 1
2 3 1


Sample Output 20

Every edge is contained in some shortest path between some pair of different vertices"
Two Rectangles,https://atcoder.jp/contests/abc052/tasks/abc052_a,"問題文二つの長方形があります 
一つ目の長方形は 縦の辺の長さが A 横の辺の長さが B です 
二つ目の長方形は 縦の辺の長さが C 横の辺の長さが D です 
この二つの長方形のうち 面積の大きい方の面積を出力してください 
なお 二つの長方形の面積が等しい時は その面積を出力してください 

制約
入力は全て整数である
1 A 10 4
1 B 10 4
1 C 10 4
1 D 10 4


入力入力は以下の形式で標準入力から与えられる 
A B C D


出力大きい方の長方形の面積を出力せよ 
二つの長方形の面積が等しいなら その面積を出力せよ 

入力例 13 5 2 7


出力例 115

一つ目の長方形の面積は 3 5 15 で 二つ目の長方形の面積は 2 7 14 です 
よって 大きい方の面積である 15 を出力します 

入力例 2100 600 200 300


出力例 260000

どちらの長方形の面積も 60000 なので 60000 を出力します 
Problem StatementThere are two rectangles 
The lengths of the vertical sides of the first rectangle are A  and the lengths of the horizontal sides of the first rectangle are B 
The lengths of the vertical sides of the second rectangle are C  and the lengths of the horizontal sides of the second rectangle are D 
Print the area of the rectangle with the larger area 
If the two rectangles have equal areas  print that area 

Constraints
All input values are integers 
1 A 10 4
1 B 10 4
1 C 10 4
1 D 10 4


InputThe input is given from Standard Input in the following format 
A B C D


OutputPrint the area of the rectangle with the larger area 
If the two rectangles have equal areas  print that area 

Sample Input 13 5 2 7


Sample Output 115

The first rectangle has an area of 3 5 15  and the second rectangle has an area of 2 7 14 
Thus  the output should be 15  the larger area 

Sample Input 2100 600 200 300


Sample Output 260000"
Increment Decrement,https://atcoder.jp/contests/abc052/tasks/abc052_b,"問題文あなたは整数 x を持っています 
最初 x 0 です 
あなたは 長さ N の文字列 S をもらったので これを使って N 回の操作を行いました 
i 回目の操作では S i I ならば x の値を 1 増やし S i D ならば x の値を 1 減らしました 
操作の途中  1 回目の操作の前 N 回目の操作の後も含む で x がとる値の最大値を答えてください 

制約
1 N 100
 S  N
S には I D 以外の文字は含まれない


入力入力は以下の形式で標準入力から与えられる 
N
S


出力操作の途中での整数 x がとる値の最大値を出力せよ 

入力例 15
IIDID


出力例 12

それぞれの操作後の x の値は 1 2 1 2 1 となるので 最大値である 2 を出力します 

入力例 27
DDIDDII


出力例 20

最初の x 0 の状態で x が最大になるので 0 を出力します 
Problem StatementYou have an integer variable x 
Initially  x 0 
Some person gave you a string S of length N  and using the string you performed the following operation N times 
In the i th operation  you incremented the value of x by 1 if S i I  and decremented the value of x by 1 if S i D 
Find the maximum value taken by x during the operations  including before the first operation  and after the last operation  

Constraints
1 N 100
 S  N
No characters except I and D occur in S 


InputThe input is given from Standard Input in the following format 
N
S


OutputPrint the maximum value taken by x during the operations 

Sample Input 15
IIDID


Sample Output 12

After each operation  the value of x becomes 1  2  1  2 and 1  respectively  Thus  the output should be 2  the maximum value 

Sample Input 27
DDIDDII


Sample Output 20

The initial value x 0 is the maximum value taken by x  thus the output should be 0"
ABC/ARC,https://atcoder.jp/contests/abc053/tasks/abc053_a,"問題文すめけくんは現在のレートが 1200 未満ならば AtCoder Beginner Contest  ABC  に そうでなければ AtCoder Regular Contest  ARC  に参加することにしました 
すめけくんの現在のレート x が与えられます すめけくんが参加するコンテストが ABC ならば ABC と そうでなければ ARC と出力してください 

制約
1   x   3   000
x は整数


入力入力は以下の形式で標準入力から与えられる 
x


出力答えを出力せよ 

入力例 11000


出力例 1ABC

すめけくんの現在のレートは 1200 未満なので ABC と出力してください 

入力例 22000


出力例 2ARC

すめけくんの現在のレートは 1200 以上なので ARC と出力してください 
Problem StatementSmeke has decided to participate in AtCoder Beginner Contest  ABC  if his current rating is less than 1200  and participate in AtCoder Regular Contest  ARC  otherwise 
You are given Smeke s current rating  x  Print ABC if Smeke will participate in ABC  and print ARC otherwise 

Constraints
1   x   3   000
x is an integer 


InputThe input is given from Standard Input in the following format 
x


OutputPrint the answer 

Sample Input 11000


Sample Output 1ABC

Smeke s current rating is less than 1200  thus the output should be ABC 

Sample Input 22000


Sample Output 2ARC

Smeke s current rating is not less than 1200  thus the output should be ARC"
A to Z String,https://atcoder.jp/contests/abc053/tasks/abc053_b,"問題文すぬけくんは文字列 s の連続した一部分 部分文字列という を取り出して先頭が A であり末尾が Z であるような文字列を作ることにしました 
すぬけくんが作ることのできる文字列の最大の長さを求めてください 
なお s には先頭が A であり末尾が Z であるような部分文字列が必ず存在することが保証されます 

制約
1    s    200   000
s は英大文字のみからなる
s には先頭が A であり末尾が Z であるような部分文字列が必ず存在する


入力入力は以下の形式で標準入力から与えられる 
s


出力答えを出力せよ 

入力例 1QWERTYASDFZXCV


出力例 15

7 文字目から 11 文字目までを取り出して ASDFZ を作ると 先頭が A 末尾が Z であるような文字列を得ることが可能です 

入力例 2ZABCZ


出力例 24


入力例 3HASFJGHOGAKZZFEGA


出力例 312

Problem StatementSnuke has decided to construct a string that starts with A and ends with Z  by taking out a substring of a string s  that is  a consecutive part of s  
Find the greatest length of the string Snuke can construct  Here  the test set guarantees that there always exists a substring of s that starts with A and ends with Z 

Constraints
1    s    200   000
s consists of uppercase English letters 
There exists a substring of s that starts with A and ends with Z 


InputThe input is given from Standard Input in the following format 
s


OutputPrint the answer 

Sample Input 1QWERTYASDFZXCV


Sample Output 15

By taking out the seventh through eleventh characters  it is possible to construct ASDFZ  which starts with A and ends with Z 

Sample Input 2ZABCZ


Sample Output 24


Sample Input 3HASFJGHOGAKZZFEGA


Sample Output 312"
One Card Poker,https://atcoder.jp/contests/abc054/tasks/abc054_a,"問題文AliceとBobは 2人で1枚ポーカーを行います 
1枚ポーカーは トランプを用いて行う2人ゲームです   
今回使用するトランプでは 各カードに 1 から 13 までの数が書かれています  
カードの強さは カードに書かれている数で決まり 強さの基準は以下の通りです 
弱 2   3   4   5   6   7   8   9   10   11   12   13   1 強    
1枚ポーカーは以下の手順で行います   

各プレイヤーは トランプからカードを1枚選んで 自分の手札とします   
両プレイヤーは 手札を見せ合います 強いカードを持っているプレイヤーが勝ちです 
   なお 両プレイヤーの持っているカードの強さが同じ場合は引き分けです   

2人の対戦を眺めていたあなたは AliceとBobの手札を知ることができます 
Aliceが持っているカードに書かれている数は A  Bobが持っているカードカードに書かれている数は B です 
2人の代わりに 勝敗を判定するプログラムを作ってください    

制約
1 A 13 
1 B 13 
A B は整数である   


入力入力は以下の形式で標準入力から与えられる 
A B


出力Aliceが勝つならAliceを Bobが勝つならBobを 引き分けならDrawを出力せよ 

入力例 18 6


出力例 1Alice

Aliceが持っているカードに書かれている数は 8 Bobが持っているカードに書かれている数は 6 です 
したがって 強いカードを持っているのはAliceなので Alice を出力します 

入力例 21 1


出力例 2Draw

2人とも同じ数が書かれているカードを持っているので 引き分けです 

入力例 313 1


出力例 3Bob

Problem StatementAlice and Bob are playing One Card Poker 
One Card Poker is a two player game using playing cards   
Each card in this game shows an integer between 1 and 13  inclusive 
The strength of a card is determined by the number written on it  as follows   
Weak 2   3   4   5   6   7   8   9   10   11   12   13   1 Strong  
One Card Poker is played as follows   

Each player picks one card from the deck  The chosen card becomes the player s hand 
The players reveal their hands to each other  The player with the stronger card wins the game 
If their cards are equally strong  the game is drawn   

You are watching Alice and Bob playing the game  and can see their hands 
The number written on Alice s card is A  and the number written on Bob s card is B 
Write a program to determine the outcome of the game   

Constraints
1 A 13 
1 B 13 
A and B are integers 


InputThe input is given from Standard Input in the following format 
A B


OutputPrint Alice if Alice will win  Print Bob if Bob will win  Print Draw if the game will be drawn 

Sample Input 18 6


Sample Output 1Alice

8 is written on Alice s card  and 6 is written on Bob s card 
Alice has the stronger card  and thus the output should be Alice 

Sample Input 21 1


Sample Output 2Draw

Since their cards have the same number  the game will be drawn 

Sample Input 313 1


Sample Output 3Bob"
Template Matching,https://atcoder.jp/contests/abc054/tasks/abc054_b,"問題文縦 N 行 横 N 列に画素が並んだ画像Aと 縦 M 行 横 M 列に画素が並んだテンプレート画像Bが与えられます  
画素は画像を構成する最小単位であり ここでは 1 1 の正方形とします   
また 与えられる画像は全て2値画像であり 各画素の色は白と黒の2種類で表されます    
入力において 全ての画素は文字で表されており  は白色の画素    は黒色の画素に対応します  
画像Aは N 個の文字列 A 1     A N で表されます  
文字列 A i の j 文字目は 画像Aの上から i 番目 左から j 番目の画素に対応します  1 i j N  
同様に テンプレート画像Bは M 個の文字列 B 1     B M で表されます  
文字列 B i の j 文字目は テンプレート画像Bの上から i 番目 左から j 番目の画素に対応します  1 i j M  
画像の平行移動のみ許されるとき テンプレート画像Bが画像Aの中に含まれているかを判定してください   

制約
1 M N 50 
A i は   と   からなる長さ N の文字列  
B i は   と   からなる長さ M の文字列  


入力入力は以下の形式で標準入力から与えられる   
N M
A 1
A 2
   
A N
B 1
B 2
   
B M


出力画像Aの中にテンプレート画像Bを含む場合は Yes 含まない場合は No を出力せよ 

入力例 13 2
   
   
   
  
  


出力例 1Yes

テンプレート画像Bが 画像A中の左上の 2   2 の部分画像と右下の 2   2 の部分画像に一致するため Yes と出力します 

入力例 24 1
    
    
    
    
 


出力例 2No

画像Aは白色の画素 テンプレート画像Bは黒色の画素で構成されるため 含まれることはありません 
Problem StatementYou are given an image A composed of N rows and N columns of pixels  and a template image B composed of M rows and M columns of pixels 
A pixel is the smallest element of an image  and in this problem it is a square of size 1 1 
Also  the given images are binary images  and the color of each pixel is either white or black   
In the input  every pixel is represented by a character    corresponds to a white pixel  and   corresponds to a black pixel 
The image A is given as N strings A 1     A N 
The j th character in the string A i corresponds to the pixel at the i th row and j th column of the image A  1 i j N  
Similarly  the template image B is given as M strings B 1     B M 
The j th character in the string B i corresponds to the pixel at the i th row and j th column of the template image B  1 i j M    
Determine whether the template image B is contained in the image A when only parallel shifts can be applied to the images   

Constraints
1 M N 50 
A i is a string of length N consisting of   and   
B i is a string of length M consisting of   and   


InputThe input is given from Standard Input in the following format 
N M
A 1
A 2
   
A N
B 1
B 2
   
B M


OutputPrint Yes if the template image B is contained in the image A  Print No otherwise 

Sample Input 13 2
   
   
   
  
  


Sample Output 1Yes

The template image B is identical to the upper left 2   2 subimage and the lower right 2   2 subimage of A  Thus  the output should be Yes 

Sample Input 24 1
    
    
    
    
 


Sample Output 2No

The template image B  composed of a black pixel  is not contained in the image A composed of white pixels"
One stroke Path,https://atcoder.jp/contests/abc054/tasks/abc054_c,"問題文自己ループと二重辺を含まない N 頂点 M 辺の重み無し無向グラフが与えられます 
i  1 i M  番目の辺は頂点 a i と頂点 b i を結びます  
ここで 自己ループは a i   b i  1 i M  となる辺のことを表します  
また 二重辺は a i a j かつ b i b j  1 i j M  となる辺のことを表します  
頂点 1 を始点として 全ての頂点を1度だけ訪れるパスは何通りありますか  
ただし パスの始点と終点の頂点も訪れたものとみなします    
例として 図1のような無向グラフが与えられたとします 


図1 無向グラフの例

このとき 図2で表されるパスは条件を満たします  


図2 条件を満たすパスの例

しかし 図3で表されるパスは条件を満たしません 全ての頂点を訪れていないからです  


図3 条件を満たさないパスの例1

また 図4で表されるパスも条件を満たしません 始点が頂点 1 ではないからです  


図4 条件を満たさないパスの例2


制約
2 N 8 
0 M N N 1  2 
1 a i b i N 
与えられるグラフは自己ループと二重辺を含まない 


入力入力は以下の形式で標準入力から与えられる 
N M  
a 1 b 1  
a 2 b 2
   
a M b M  


出力問題文の条件を満たすパスが何通りあるか出力せよ 

入力例 13 3
1 2
1 3
2 3


出力例 12

与えられるグラフは以下の図で表されます 



条件を満たすパスは以下の 2 通りです 




入力例 27 7
1 3
2 7
3 4
4 5
4 6
5 6
6 7


出力例 21

このテストケースは問題文の例と同じです 
Problem StatementYou are given an undirected unweighted graph with N vertices and M edges that contains neither self loops nor double edges 
Here  a self loop is an edge where a i   b i  1 i M   and double edges are two edges where  a i b i   a j b j  or  a i b i   b j a j   1 i j M  
How many different paths start from vertex 1 and visit all the vertices exactly once 
Here  the endpoints of a path are considered visited   
For example  let us assume that the following undirected graph shown in Figure 1 is given 


Figure 1  an example of an undirected graph

The following path shown in Figure 2 satisfies the condition 


Figure 2  an example of a path that satisfies the condition

However  the following path shown in Figure 3 does not satisfy the condition  because it does not visit all the vertices 


Figure 3  an example of a path that does not satisfy the condition

Neither the following path shown in Figure 4  because it does not start from vertex 1 


Figure 4  another example of a path that does not satisfy the condition


Constraints
2 N 8 
0 M N N 1  2 
1 a i b i N 
The given graph contains neither self loops nor double edges 


InputThe input is given from Standard Input in the following format 
N M  
a 1 b 1  
a 2 b 2
   
a M b M  


OutputPrint the number of the different paths that start from vertex 1 and visit all the vertices exactly once 

Sample Input 13 3
1 2
1 3
2 3


Sample Output 12

The given graph is shown in the following figure 



The following two paths satisfy the condition 




Sample Input 27 7
1 3
2 7
3 4
4 5
4 6
5 6
6 7


Sample Output 21

This test case is the same as the one described in the problem statement"
Mixing Experiment,https://atcoder.jp/contests/abc054/tasks/abc054_d,"問題文イルカは 微量の物質Cを生成したいと考えています 
物質Cを生成するためには タイプAの物質とタイプBの物質の混合比が M a M b となる溶液を用意する必要があります 
しかし イルカは薬品を1つも持っていないため 薬局へ薬品を買いに行くことにしました 
薬局では N 種類の薬品を取り扱っており 各薬品 i の在庫はちょうど1つです 
各薬品 i は タイプAの物質 a i グラム タイプBの物質 b i グラム含んでおり 価格 c i 円で売られています  
イルカは いくつかの薬品を薬局で買います 買った薬品は全て使わなければなりません 
物質Cを生成するために 必要な最小予算を求めてください  
薬局で売られている薬品の組み合わせで 物質Cを生成できない場合はそれを報告してください     

制約
1 N 40 
1 a i b i 10 
1 c i 100 
1 M a M b 10 
gcd M a M b  1
a i b i c i M a M bは整数である 


入力入力は以下の形式で標準入力から与えられる 
N M a M b  
a 1 b 1 c 1  
a 2 b 2 c 2
   
a N b N c N  


出力物質Cを生成するために必要な最小予算を出力せよ 物質Cを生成できない場合には  1 を出力せよ 

入力例 13 1 1
1 2 1
2 1 2
3 3 10


出力例 13

最小予算となる組み合わせは 薬品 1 と薬品 2 を混合する場合です  
この場合 混合した溶液中に物質Aは 3 グラム 物質Bは 3 グラム含まれており 混合比は 3 3 1 1 となって条件を満たします  
このときの合計価格は 3 円となります 

入力例 21 1 10
10 10 10


出力例 2 1

物質Aと物質Bの混合比が 1 10 となる薬品の組み合わせはないので  1を出力します 　　　
Problem StatementDolphin is planning to generate a small amount of a certain chemical substance C 
In order to generate the substance C  he must prepare a solution which is a mixture of two substances A and B in the ratio of M a M b 
He does not have any stock of chemicals  however  so he will purchase some chemicals at a local pharmacy 
The pharmacy sells N kinds of chemicals  For each kind of chemical  there is exactly one package of that chemical in stock 
The package of chemical i contains a i grams of the substance A and b i grams of the substance B  and is sold for c i yen  the currency of Japan  
Dolphin will purchase some of these packages  For some reason  he must use all contents of the purchased packages to generate the substance C 
Find the minimum amount of money required to generate the substance C 
If it is not possible to generate the substance C by purchasing any combination of packages at the pharmacy  report that fact   

Constraints
1 N 40 
1 a i b i 10 
1 c i 100 
1 M a M b 10 
gcd M a M b  1
a i  b i  c i  M a and M b are integers 


InputThe input is given from Standard Input in the following format 
N M a M b  
a 1 b 1 c 1  
a 2 b 2 c 2
   
a N b N c N  


OutputPrint the minimum amount of money required to generate the substance C  If it is not possible to generate the substance C  print  1 instead 

Sample Input 13 1 1
1 2 1
2 1 2
3 3 10


Sample Output 13

The amount of money spent will be minimized by purchasing the packages of chemicals 1 and 2 
In this case  the mixture of the purchased chemicals will contain 3 grams of the substance A and 3 grams of the substance B  which are in the desired ratio  3 3 1 1 
The total price of these packages is 3 yen   

Sample Input 21 1 10
10 10 10


Sample Output 2 1

The ratio 1 10 of the two substances A and B cannot be satisfied by purchasing any combination of the packages  Thus  the output should be  1"
Restaurant,https://atcoder.jp/contests/abc055/tasks/abc055_a,"問題文すぬけくんはレストランに通うのが好きです 
すぬけくん行きつけのレストランは何を食べても 1 食 800 円で 15 食食べる毎にその場で 200 円もらえます 
すぬけくんは今までで合計 N 食食べました 
今までに払った金額を x 円 レストランからもらった金額を y 円として x y を求めなさい 

制約
1   N   100


入力入力は以下の形式で標準入力から与えられる 
N


出力答えを出力せよ 

入力例 120


出力例 115800

すぬけくんは今までに 16000 円払っており 200 円もらっているので 答えは 15800 となります 

入力例 260


出力例 247200

すぬけくんは 60 食食べたので 48000 円払って 800 円もらいました 
Problem StatementSnuke has a favorite restaurant 
The price of any meal served at the restaurant is 800 yen  the currency of Japan   and each time a customer orders 15 meals  the restaurant pays 200 yen back to the customer 
So far  Snuke has ordered N meals at the restaurant 
Let the amount of money Snuke has paid to the restaurant be x yen  and let the amount of money the restaurant has paid back to Snuke be y yen 
Find x y 

Constraints
1   N   100


InputThe input is given from Standard Input in the following format 
N


OutputPrint the answer 

Sample Input 120


Sample Output 115800

So far  Snuke has paid 16000 yen  and the restaurant has paid back 200 yen  Thus  the answer is 15800 

Sample Input 260


Sample Output 247200

Snuke has paid 48000 yen for 60 meals  and the restaurant has paid back 800 yen"
Training Camp,https://atcoder.jp/contests/abc055/tasks/abc055_b,"問題文すぬけくんはトレーニングが好きなので N 回だけトレーニングすることにしました 
すぬけくんのトレーニング開始前のパワーは 1 です すぬけくんが i 回目のトレーニングを終えるとパワーが i 倍されます 
すぬけくんが N 回トレーニングをしたあとのパワーを求めなさい ただし 答えの値は非常に大きな値になることがあるので 10  9  7 で割ったあまりを出力してください 

制約
1   N   10  5 


入力入力は以下の形式で標準入力から与えられる 
N


出力答えを 10  9  7 で割ったあまりを出力せよ 

入力例 13


出力例 16


1 回目のトレーニングを終えると パワーは 1 倍され 1 になります
2 回目のトレーニングを終えると パワーは 2 倍され 2 になります
3 回目のトレーニングを終えると パワーは 3 倍され 6 になります


入力例 210


出力例 23628800


入力例 3100000


出力例 3457992974

答えを 10  9  7 で割ったあまりを出力してください 
Problem StatementSnuke loves working out  He is now exercising N times 
Before he starts exercising  his power is 1  After he exercises for the i th time  his power gets multiplied by i 
Find Snuke s power after he exercises N times  Since the answer can be extremely large  print the answer modulo 10  9  7 

Constraints
1   N   10  5 


InputThe input is given from Standard Input in the following format 
N


OutputPrint the answer modulo 10  9  7 

Sample Input 13


Sample Output 16


After Snuke exercises for the first time  his power gets multiplied by 1 and becomes 1 
After Snuke exercises for the second time  his power gets multiplied by 2 and becomes 2 
After Snuke exercises for the third time  his power gets multiplied by 3 and becomes 6 


Sample Input 210


Sample Output 23628800


Sample Input 3100000


Sample Output 3457992974

Print the answer modulo 10  9  7"
HonestOrDishonest,https://atcoder.jp/contests/abc056/tasks/abc056_a,"問題文シカのAtCoDeerくんとTopCoDeerくんが 正直者か嘘つきか ゲームをしています 
このゲームでは 正直者は常にほんとうのことを言い 嘘つきは常に嘘を言います 
文字 a と b が入力として与えられます これらはそれぞれ H か D のどちらかです 
a H のとき AtCoDeerくんは正直者です 
a D のとき AtCoDeerくんは嘘つきです 
b H のとき AtCoDeerくんは TopCoDeerくんは正直者だ と発言しています 
b D のとき AtCoDeerくんは TopCoDeerくんは嘘つきだ と発言しています 
これらから判断して TopCoDeerくんが正直者かどうか判定してください 

制約
a H または D
b H または D


入力入力は以下の形式で標準入力から与えられる 
a b


出力TopCoDeerくんが正直者なら H を 嘘つきなら D を出力せよ 

入力例 1H H


出力例 1H

AtCoDeerくんは正直者なので AtCoDeerくんの言っているとおりTopCoDeerくんは正直者です 

入力例 2D H


出力例 2D

今度はAtCoDeerくんは嘘つきなので AtCoDeerくんの言っていることとは異なりTopCoDeerくんは嘘つきです 

入力例 3D D


出力例 3H

Problem StatementTwo deer  AtCoDeer and TopCoDeer  are playing a game called Honest or Dishonest 
In this game  an honest player always tells the truth  and an dishonest player always tell lies 
You are given two characters a and b as the input  Each of them is either H or D  and carries the following information 
If a H  AtCoDeer is honest  if a D  AtCoDeer is dishonest 
If b H  AtCoDeer is saying that TopCoDeer is honest  if b D  AtCoDeer is saying that TopCoDeer is dishonest 
Given this information  determine whether TopCoDeer is honest 

Constraints
a H or a D 
b H or b D 


InputThe input is given from Standard Input in the following format 
a b


OutputIf TopCoDeer is honest  print H  If he is dishonest  print D 

Sample Input 1H H


Sample Output 1H

In this input  AtCoDeer is honest  Hence  as he says  TopCoDeer is honest 

Sample Input 2D H


Sample Output 2D

In this input  AtCoDeer is dishonest  Hence  contrary to what he says  TopCoDeer is dishonest 

Sample Input 3D D


Sample Output 3H"
NarrowRectanglesEasy,https://atcoder.jp/contests/abc056/tasks/abc056_b,"問題文シカのAtCoDeerくんは縦の長さ 1 横の長さ W の形をした長方形が二つ机に置いてあるのを見つけました 
机を二次元平面とみなすと 以下の図のように 一つ目の長方形は 縦は  0 1  の範囲を 横は  a a W  の範囲を占めており 二つ目の長方形は縦は  1 2  の範囲を 横は  b b W  の範囲を占めています 

AtCoDeerくんは二つ目の長方形を横に動かすことで 一つ目の長方形と連結にしようと考えました 
長方形を横に動かさないといけない距離の最小値を求めてください 

制約
入力は全て整数である 
1 W 10 5
1 a b 10 5


入力入力は以下の形式で標準入力から与えられる 
W a b


出力横に動かす必要のある距離の最小値を出力せよ 

入力例 13 2 6


出力例 11

問題文中の図のようになっています この場合左に 1 動かすのが最小です 

入力例 23 1 3


出力例 20

はじめから連結になっているため 動かす必要はありません 

入力例 35 10 1


出力例 34

Problem StatementAtCoDeer the deer found two rectangles lying on the table  each with height 1 and width W 
If we consider the surface of the desk as a two dimensional plane  the first rectangle covers the vertical range of  0 1  and the horizontal range of  a a W   and the second rectangle covers the vertical range of  1 2  and the horizontal range of  b b W   as shown in the following figure 

AtCoDeer will move the second rectangle horizontally so that it connects with the first rectangle 
Find the minimum distance it needs to be moved 

Constraints
All input values are integers 
1 W 10 5
1 a b 10 5


InputThe input is given from Standard Input in the following format 
W a b


OutputPrint the minimum distance the second rectangle needs to be moved 

Sample Input 13 2 6


Sample Output 11

This input corresponds to the figure in the statement  In this case  the second rectangle should be moved to the left by a distance of 1 

Sample Input 23 1 3


Sample Output 20

The rectangles are already connected  and thus no move is needed 

Sample Input 35 10 1


Sample Output 34"
Remaining Time,https://atcoder.jp/contests/abc057/tasks/abc057_a,"問題文イルカはプログラミングコンテスト好きで 今日はAtCoderのコンテストに参加します 
現在時刻は 24 時間表記  0 00 23 59  で A 時ちょうどであり コンテストがちょうど B 時間後に始まります  
コンテストの開始時刻は 24 時間表記で何時ちょうどでしょうか   

制約
0 A B 23
A B は整数である 


入力入力は以下の形式で標準入力から与えられる 
A B


出力コンテストの開始時刻を 24 時間表記で出力せよ  

入力例 19 12


出力例 121

現在時刻は 9 時ちょうどであり その 12 時間後の時刻は 21 時ちょうどなので 21 と出力します   

入力例 219 0


出力例 219

今 コンテストが始まりました 

入力例 323 2


出力例 31

開始時刻は翌日の 1 時です 
Problem StatementDolphin loves programming contests  Today  he will take part in a contest in AtCoder 
In this country  24 hour clock is used  For example  9 00 p m  is referred to as  21 o clock  
The current time is A o clock  and a contest will begin in exactly B hours 
When will the contest begin  Answer in 24 hour time 

Constraints
0  leq A B  leq 23
A and B are integers 


InputThe input is given from Standard Input in the following format 
A B


OutputPrint the hour of the starting time of the contest in 24 hour time 

Sample Input 19 12


Sample Output 121

In this input  the current time is 9 o clock  and 12 hours later it will be 21 o clock in 24 hour time 

Sample Input 219 0


Sample Output 219

The contest has just started 

Sample Input 323 2


Sample Output 31

The contest will begin at 1 o clock the next day"
Checkpoints,https://atcoder.jp/contests/abc057/tasks/abc057_b,"問題文xy 平面があり その上に N 人の学生がいて M 個のチェックポイントがあります 
i 番目の学生がいる座標は  a i b i   1 i N  であり 番号 j のチェックポイントの座標は  c j d j   1 j M  です      
これから合図があり 各学生はマンハッタン距離で一番近いチェックポイントに集合しなければなりません  
2つの地点  x 1 y 1  と  x 2 y 2  間のマンハッタン距離は  x 1 x 2   y 1 y 2  で表されます 
ここで  x  は x の絶対値を表します 
ただし 一番近いチェックポイントが複数ある場合には 番号が最も小さいチェックポイントに移動することとします 
合図の後に 各学生がどのチェックポイントに移動するかを求めてください   

制約
1 N M 50
 10 8 a i b i c j d j 10 8 
入力は全て整数である  


入力入力は以下の形式で標準入力から与えられる 
N M
a 1 b 1
   
a N b N
c 1 d 1
   
c M d M


出力解答を N 行に出力せよ 
i  1  i N  番目の行には i 番目の学生が訪れるチェックポイントの番号を出力せよ   

入力例 12 2
2 0
0 0
 1 0
1 0


出力例 12
1

1 番目の学生と各チェックポイント間のマンハッタン距離は以下の通りです   

番号 1 のチェックポイントへのマンハッタン距離は  2   1    0 0  3 
番号 2 のチェックポイントへのマンハッタン距離は  2 1   0 0  1 

したがって 最も近いチェックポイントの番号は 2 であるため 1 行目には 2 と出力します   
2 番目の学生と各チェックポイント間のマンハッタン距離は以下の通りです   

番号 1 のチェックポイントへのマンハッタン距離は  0   1    0 0  1 
番号 2 のチェックポイントへのマンハッタン距離は  0 1   0 0  1 

最も近いチェックポイントが複数ある場合は 番号が最も小さいチェックポイントに移動するため 2 行目には 1 と出力します  

入力例 23 4
10 10
 10  10
3 3
1 2
2 3
3 5
3 5


出力例 23
1
2

同じ座標に複数のチェックポイントが存在する場合もあります   

入力例 35 5
 100000000  100000000
 100000000 100000000
100000000  100000000
100000000 100000000
0 0
0 0
100000000 100000000
100000000  100000000
 100000000 100000000
 100000000  100000000


出力例 35
4
3
2
1

Problem StatementThere are N students and M checkpoints on the xy plane 
The coordinates of the i th student  1  leq i  leq N  is  a i b i   and the coordinates of the checkpoint numbered j  1  leq j  leq M  is  c j d j  
When the teacher gives a signal  each student has to go to the nearest checkpoint measured in Manhattan distance  
The Manhattan distance between two points  x 1 y 1  and  x 2 y 2  is  x 1 x 2   y 1 y 2  
Here   x  denotes the absolute value of x 
If there are multiple nearest checkpoints for a student  he she will select the checkpoint with the smallest index 
Which checkpoint will each student go to 

Constraints
1  leq N M  leq 50
 10 8  leq a i b i c j d j  leq 10 8
All input values are integers 


InputThe input is given from Standard Input in the following format 
N M
a 1 b 1
   
a N b N
c 1 d 1
   
c M d M


OutputPrint N lines 
The i th line  1  leq i  leq N  should contain the index of the checkpoint for the i th student to go 

Sample Input 12 2
2 0
0 0
 1 0
1 0


Sample Output 12
1

The Manhattan distance between the first student and each checkpoint is 

For checkpoint 1   2   1    0 0  3
For checkpoint 2   2 1   0 0  1

The nearest checkpoint is checkpoint 2  Thus  the first line in the output should contain 2 
The Manhattan distance between the second student and each checkpoint is 

For checkpoint 1   0   1    0 0  1
For checkpoint 2   0 1   0 0  1

When there are multiple nearest checkpoints  the student will go to the checkpoint with the smallest index  Thus  the second line in the output should contain 1 

Sample Input 23 4
10 10
 10  10
3 3
1 2
2 3
3 5
3 5


Sample Output 23
1
2

There can be multiple checkpoints at the same coordinates 

Sample Input 35 5
 100000000  100000000
 100000000 100000000
100000000  100000000
100000000 100000000
0 0
0 0
100000000 100000000
100000000  100000000
 100000000 100000000
 100000000  100000000


Sample Output 35
4
3
2
1"
Digits in Multiplication,https://atcoder.jp/contests/abc057/tasks/abc057_c,"問題文整数 N が与えられます   
ここで 2 つの正の整数 A B に対して F A B  を 10 進表記における A の桁数と B の桁数のうち大きい方 と定義します  
例えば F 3 11  の値は 3 は 1 桁 11 は 2 桁であるため F 3 11  2 となります  
2 つの正の整数の組  A B  が N A B を満たすように動くとき F A B  の最小値を求めてください    

制約
1 N 10  10 
N は整数である 


入力入力は以下の形式で標準入力から与えられる 
N


出力2 つの正の整数の組  A B  が N A B を満たすように動くときの F A B  の最小値を出力せよ 

入力例 110000


出力例 13

 A B   100 100  のときに F A B  は最小値をとるため F 100 100  3 を出力します 

入力例 21000003


出力例 27

条件を満たす  A B  の組は  1 1000003  と  1000003 1  の 2 通りで F 1 1000003  F 1000003 1  7 です 

入力例 39876543210


出力例 36

Problem StatementYou are given an integer N 
For two positive integers A and B  we will define F A B  as the larger of the following  the number of digits in the decimal notation of A  and the number of digits in the decimal notation of B 
For example  F 3 11    2 since 3 has one digit and 11 has two digits 
Find the minimum value of F A B  as  A B  ranges over all pairs of positive integers such that N   A  times B 

Constraints
1  leq N  leq 10  10 
N is an integer 


InputThe input is given from Standard Input in the following format 
N


OutputPrint the minimum value of F A B  as  A B  ranges over all pairs of positive integers such that N   A  times B 

Sample Input 110000


Sample Output 13

F A B  has a minimum value of 3 at  A B   100 100  

Sample Input 21000003


Sample Output 27

There are two pairs  A B  that satisfy the condition   1 1000003  and  1000003 1   For these pairs  F 1 1000003  F 1000003 1  7 

Sample Input 39876543210


Sample Output 36"
Maximum Average Sets,https://atcoder.jp/contests/abc057/tasks/abc057_d,"問題文N 個の品物が与えられます 
i 番目の品物の価値は v i  1 i N  です 
これらの品物から A 個以上 B 個以下を選ばなければなりません 
この制約下において 選んだ品物の価値の平均の最大値を求めてください 
また 選んだ品物の平均が最大となるような品物の選び方が何通りあるかを求めてください   

制約
1 N 50
1 A B N
1 v i 10  15 
v i は全て整数である 


入力入力は以下の形式で標準入力から与えられる 
N A B
v 1 v 2     v N  


出力解答を 2 行に出力せよ 
1 行目には 選んだ品物の価値の平均の最大値を出力せよ 絶対誤差または相対誤差が 10   6  以下ならば正解となる 
2 行目には 選んだ品物の平均が最大となるような品物の選び方の数を出力せよ   

入力例 15 2 2
1 2 3 4 5


出力例 14 500000
1

4 番目の品物と 5 番目の品物を選ぶと価値の平均が最大となるため 出力の 1 行目は 4 5 です  
また それ以外の品物の選び方で価値の平均が 4 5 になるものはないため 出力の 2 行目は 1 です   

入力例 24 2 3
10 20 10 10


出力例 215 000000
3

価値の平均が最大となる品物の選び方は複数存在することがあります   

入力例 35 1 5
1000000000000000 999999999999999 999999999999998 999999999999997 999999999999996


出力例 31000000000000000 000000
1


入力例 450 1 50
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1


出力例 41 000000
1125899906842623

Problem StatementYou are given N items 
The value of the i th item  1  leq i  leq N  is v i 
Your have to select at least A and at most B of these items 
Under this condition  find the maximum possible arithmetic mean of the values of selected items 
Additionally  find the number of ways to select items so that the mean of the values of selected items is maximized   

Constraints
1  leq N  leq 50
1  leq A B  leq N
1  leq v i  leq 10  15 
Each v i is an integer 


InputThe input is given from Standard Input in the following format 
N A B
v 1
v 2
   
v N


OutputPrint two lines 
The first line should contain the maximum possible arithmetic mean of the values of selected items  The output should be considered correct if the absolute or relative error is at most 10   6  
The second line should contain the number of ways to select items so that the mean of the values of selected items is maximized 

Sample Input 15 2 2
1 2 3 4 5


Sample Output 14 500000
1

The mean of the values of selected items will be maximized when selecting the fourth and fifth items  Hence  the first line of the output should contain 4 5 
There is no other way to select items so that the mean of the values will be 4 5  and thus the second line of the output should contain 1 

Sample Input 24 2 3
10 20 10 10


Sample Output 215 000000
3

There can be multiple ways to select items so that the mean of the values will be maximized 

Sample Input 35 1 5
1000000000000000 999999999999999 999999999999998 999999999999997 999999999999996


Sample Output 31000000000000000 000000
1"
ι⊥l,https://atcoder.jp/contests/abc058/tasks/abc058_a,"問題文3 本の柱が等間隔に並んでいます 柱の高さは左から順に a メートル  b メートル  c メートル です 
柱の先端が同一直線上に並んでいる時 つまり b a   c b を満たしているとき 
この柱の並び方を美しいと呼びます 
柱の並び方が美しいかどうかを判定してください 

制約
1  leq a b c  leq 100
a b c は整数である 


入力入力は以下の形式で標準入力から与えられる 
a b c


出力柱の並び方が美しい場合 YES を そうでない場合 NO を 1 行に出力せよ 

入力例 12 4 6


出力例 1YES

4 2   6 4 であるため この柱の並び方は美しいです 

入力例 22 5 6


出力例 2NO

5 2  neq 6 5 であるため この柱の並び方は美しくありません 

入力例 33 2 1


出力例 3YES

1 2   2 3 であるため この柱の並び方は美しいです 
Problem StatementThree poles stand evenly spaced along a line  Their heights are a  b and c meters  from left to right 
We will call the arrangement of the poles beautiful if the tops of the poles lie on the same line  that is  b a   c b 
Determine whether the arrangement of the poles is beautiful 

Constraints
1  leq a b c  leq 100
a  b and c are integers 


InputInput is given from Standard Input in the following format 
a b c


OutputPrint YES if the arrangement of the poles is beautiful  print NO otherwise 

Sample Input 12 4 6


Sample Output 1YES

Since 4 2   6 4  this arrangement of poles is beautiful 

Sample Input 22 5 6


Sample Output 2NO

Since 5 2  neq 6 5  this arrangement of poles is not beautiful 

Sample Input 33 2 1


Sample Output 3YES

Since 1 2   2 3  this arrangement of poles is beautiful"
∵∴∵,https://atcoder.jp/contests/abc058/tasks/abc058_b,"問題文すぬけ君は新しくできたプログラミングコンテストに会員登録しました 
登録に使ったパスワードを覚えておく自信が無かったすぬけ君は 
手元の紙にパスワードをメモしておくことにしました 
ただし そのままメモをすると誰かにパスワードを盗まれてしまうかもしれないので 
文字列の偶数番目の文字と奇数番目の文字をそれぞれ別々の紙にメモしておくことにしました 
パスワードの奇数番目の文字だけを順番を変えずに取り出した文字列 O と 
偶数番目の文字だけを順番を変えずに取り出した文字列 E が与えられます 
すぬけ君のかわりにパスワードを復元してください 

制約
O  E は小文字のアルファベット  a   z  からなる文字列
1  leq  O   E   leq 50
 O     E  は 0 または 1 である 


入力入力は以下の形式で標準入力から与えられる 
O
E


出力パスワードを1行に出力せよ 

入力例 1xyz
abc


出力例 1xaybzc

xaybzc の奇数番目の文字のみを取り出すと  xyz になり 
偶数番目の文字のみを取り出すと abc になります 

入力例 2atcoderbeginnercontest
atcoderregularcontest


出力例 2aattccooddeerrbreeggiunlnaerrccoonntteesstt

Problem StatementSnuke signed up for a new website which holds programming competitions 
He worried that he might forget his password  and he took notes of it 
Since directly recording his password would cause him trouble if stolen 
he took two notes  one contains the characters at the odd numbered positions  and the other contains the characters at the even numbered positions 
You are given two strings O and E  O contains the characters at the odd numbered positions retaining their relative order  and E contains the characters at the even numbered positions retaining their relative order 
Restore the original password 

Constraints
O and E consists of lowercase English letters  a   z  
1  leq  O   E   leq 50
 O     E  is either 0 or 1 


InputInput is given from Standard Input in the following format 
O
E


OutputPrint the original password 

Sample Input 1xyz
abc


Sample Output 1xaybzc

The original password is xaybzc  Extracting the characters at the odd numbered positions results in xyz  and extracting the characters at the even numbered positions results in abc 

Sample Input 2atcoderbeginnercontest
atcoderregularcontest


Sample Output 2aattccooddeerrbreeggiunlnaerrccoonntteesstt"
Three letter acronym,https://atcoder.jp/contests/abc059/tasks/abc059_a,"問題文英小文字からなる 3 つの単語 s 1  s 2  s 3 が空白区切りで与えられるので 単語の先頭の文字をつなげ 大文字にした略語を出力してください 

制約
s 1  s 2  s 3 は英小文字からなる 
1   s i   10  1 i 3 


入力入力は以下の形式で標準入力から与えられる 
s 1 s 2 s 3


出力答えを出力せよ 

入力例 1atcoder beginner contest


出力例 1ABC

atcoder beginner contest の先頭の文字はそれぞれa b cなので ABCが答えになります 

入力例 2resident register number


出力例 2RRN


入力例 3k nearest neighbor


出力例 3KNN


入力例 4async layered coding


出力例 4ALC

Problem StatementYou are given three words s 1  s 2 and s 3  each composed of lowercase English letters  with spaces in between 
Print the acronym formed from the uppercased initial letters of the words 

Constraints
s 1  s 2 and s 3 are composed of lowercase English letters 
1    s i    10  1 i 3 


InputInput is given from Standard Input in the following format 
s 1 s 2 s 3


OutputPrint the answer 

Sample Input 1atcoder beginner contest


Sample Output 1ABC

The initial letters of atcoder  beginner and contest are a  b and c  Uppercase and concatenate them to obtain ABC 

Sample Input 2resident register number


Sample Output 2RRN


Sample Input 3k nearest neighbor


Sample Output 3KNN


Sample Input 4async layered coding


Sample Output 4ALC"
Comparison,https://atcoder.jp/contests/abc059/tasks/abc059_b,"問題文2 つの正整数 A  B が与えられるので その大小を比較してください 

制約
1 A  B   10  100 
入力の A  B の先頭は0でない 


入力入力は以下の形式で標準入力から与えられる 
A
B


出力A B のときGREATER A B のときLESS A B のときEQUALと出力せよ 

入力例 136
24


出力例 1GREATER

36 24 なので 答えはGREATERです 

入力例 2850
3777


出力例 2LESS


入力例 39720246
22516266


出力例 3LESS


入力例 4123456789012345678901234567890
234567890123456789012345678901


出力例 4LESS

Problem StatementYou are given two positive integers A and B  Compare the magnitudes of these numbers 

Constraints
1   A  B   10  100 
Neither A nor B begins with a 0 


InputInput is given from Standard Input in the following format 
A
B


OutputPrint GREATER if A B  LESS if A B and EQUAL if A B 

Sample Input 136
24


Sample Output 1GREATER

Since 36 24  print GREATER 

Sample Input 2850
3777


Sample Output 2LESS


Sample Input 39720246
22516266


Sample Output 3LESS


Sample Input 4123456789012345678901234567890
234567890123456789012345678901


Sample Output 4LESS"
Shiritori,https://atcoder.jp/contests/abc060/tasks/abc060_a,"問題文文字列 A  B  C が与えられます これがしりとりになっているか判定してください 
つまり 

A の最後の文字と B の最初の文字が同じ
B の最後の文字と C の最初の文字が同じ

この 2 つが正しいか判定してください 
両方とも正しいならば YES そうでないならば NO を出力してください 

制約
A  B  C は全て英小文字 a   z からなる 
1    A    B    C    10
なお  A    B    C  は文字列 A  B  C の長さを表します 


入力入力は以下の形式で標準入力から与えられる 
A B C


出力YES か NO を出力する 

入力例 1rng gorilla apple


出力例 1YES

これはしりとりになっています 

入力例 2yakiniku unagi sushi


出力例 2NO

A と B はしりとりになっていますが B と C がしりとりになっていません 

入力例 3a a a


出力例 3YES


入力例 4aaaaaaaaab aaaaaaaaaa aaaaaaaaab


出力例 4NO

Problem StatementYou are given three strings A  B and C  Check whether they form a word chain 
More formally  determine whether both of the following are true 

The last character in A and the initial character in B are the same 
The last character in B and the initial character in C are the same 

If both are true  print YES  Otherwise  print NO 

Constraints
A  B and C are all composed of lowercase English letters  a   z  
1    A    B    C    10  where  A    B  and  C  are the lengths of A  B and C  respectively 


InputInput is given from Standard Input in the following format 
A B C


OutputPrint YES or NO 

Sample Input 1rng gorilla apple


Sample Output 1YES

They form a word chain 

Sample Input 2yakiniku unagi sushi


Sample Output 2NO

A and B form a word chain  but B and C do not 

Sample Input 3a a a


Sample Output 3YES


Sample Input 4aaaaaaaaab aaaaaaaaaa aaaaaaaaab


Sample Output 4NO"
Choose Integers,https://atcoder.jp/contests/abc060/tasks/abc060_b,"問題文あなたは 正の整数をいくつか選び それらの総和を求めます 
選ぶ数の上限や 選ぶ整数の個数に制限はありません 
どんなに大きな整数を選んでもよいですし 整数を 5000 兆個選んでもよいです 
ただし 選ぶ数はすべて A の倍数でなくてはいけません 
また 少なくとも 1 つは整数を選ばなくてはいけません 
そして総和を B で割ったあまりが C となるようにしたいです 
こうなるように整数を選ぶことが出来るか判定してください 
出来るならば YES そうでないならば NO を出力してください 

制約
1   A   100
1   B   100
0   C   B


入力入力は以下の形式で標準入力から与えられる 
A B C


出力YES か NO を出力する 

入力例 17 5 1


出力例 1YES

たとえば 7  14 を選ぶと総和は 21 となり これを 5 で割ったあまりは 1 となります 

入力例 22 2 1


出力例 2NO

偶数をいくつ足したとしても けっして奇数になることはありません 

入力例 31 100 97


出力例 3YES

1 の倍数 つまりすべての整数が選べるので 97 を選べば良いです 

入力例 440 98 58


出力例 4YES


入力例 577 42 36


出力例 5NO

Problem StatementWe ask you to select some number of positive integers  and calculate the sum of them 
It is allowed to select as many integers as you like  and as large integers as you wish 
You have to follow these  however  each selected integer needs to be a multiple of A  and you need to select at least one integer 
Your objective is to make the sum congruent to C modulo B 
Determine whether this is possible 
If the objective is achievable  print YES  Otherwise  print NO 

Constraints
1   A   100
1   B   100
0   C   B


InputInput is given from Standard Input in the following format 
A B C


OutputPrint YES or NO 

Sample Input 17 5 1


Sample Output 1YES

For example  if you select 7 and 14  the sum 21 is congruent to 1 modulo 5 

Sample Input 22 2 1


Sample Output 2NO

The sum of even numbers  no matter how many  is never odd 

Sample Input 31 100 97


Sample Output 3YES

You can select 97  since you may select multiples of 1  that is  all integers 

Sample Input 440 98 58


Sample Output 4YES


Sample Input 577 42 36


Sample Output 5NO"
Between Two Integers,https://atcoder.jp/contests/abc061/tasks/abc061_a,"問題文3 つの整数 A B C が与えられます 
整数 C が A 以上 かつ B 以下であるかを判定してください   

制約
 100 A B C 100 
A B C は全て整数


入力入力は以下の形式で標準入力から与えられる   
A B C


出力条件を満たす場合はYes そうでない場合はNoを出力せよ 

入力例 11 3 2


出力例 1Yes

整数 C 2 は A 1 以上 かつ B 3 以下 であるためYesと出力します 

入力例 26 5 4


出力例 2No

整数 C 4 は A 6 以上ではないためNoと出力します 

入力例 32 2 2


出力例 3Yes

Problem StatementYou are given three integers A  B and C 
Determine whether C is not less than A and not greater than B 

Constraints
 100 A B C 100 
A  B and C are all integers 


InputInput is given from Standard Input in the following format   
A B C


OutputIf the condition is satisfied  print Yes  otherwise  print No 

Sample Input 11 3 2


Sample Output 1Yes

C 2 is not less than A 1 and not greater than B 3  and thus the output should be Yes 

Sample Input 26 5 4


Sample Output 2No

C 4 is less than A 6  and thus the output should be No 

Sample Input 32 2 2


Sample Output 3Yes"
Counting Roads,https://atcoder.jp/contests/abc061/tasks/abc061_b,"問題文N 個の都市があり M 本の道路があります 
i 1 i M  番目の道路は 都市 a i と 都市 b i  1 a i b i N  を双方向に結んでいます  
同じ 2 つの都市を結ぶ道路は 1 本とは限りません  
各都市から他の都市に向けて 何本の道路が伸びているか求めてください    

制約
2 N M 50
1 a i b i N 
a i   b i 
入力は全て整数である  


入力入力は以下の形式で標準入力から与えられる   
N M
a 1 b 1
   
a M b M


出力答えを N 行に出力せよ  
i 1 i N  行目には 都市 i から他の都市に向けて 何本の道路が伸びているかを出力せよ    

入力例 14 3
1 2
2 3
1 4


出力例 12
2
1
1


都市 1 からは 1 番目と 3 番目の道路が伸びています   
都市 2 からは 1 番目と 2 番目の道路が伸びています   
都市 3 からは 2 番目の道路が伸びています   
都市 4 からは 3 番目の道路が伸びています   


入力例 22 5
1 2
2 1
1 2
2 1
1 2


出力例 25
5


入力例 38 8
1 2
3 4
1 5
2 8
3 7
5 2
4 1
6 8


出力例 33
3
2
2
2
1
1
2

Problem StatementThere are N cities and M roads 
The i th road  1 i M  connects two cities a i and b i  1 a i b i N  bidirectionally 
There may be more than one road that connects the same pair of two cities 
For each city  how many roads are connected to the city 

Constraints
2 N M 50
1 a i b i N
a i   b i
All input values are integers 


InputInput is given from Standard Input in the following format   
N M
a 1 b 1
   
a M b M


OutputPrint the answer in N lines 
In the i th line  1 i N   print the number of roads connected to city i 

Sample Input 14 3
1 2
2 3
1 4


Sample Output 12
2
1
1


City 1 is connected to the 1 st and 3 rd roads 
City 2 is connected to the 1 st and 2 nd roads 
City 3 is connected to the 2 nd road 
City 4 is connected to the 3 rd road 


Sample Input 22 5
1 2
2 1
1 2
2 1
1 2


Sample Output 25
5


Sample Input 38 8
1 2
3 4
1 5
2 8
3 7
5 2
4 1
6 8


Sample Output 33
3
2
2
2
1
1
2"
Big Array,https://atcoder.jp/contests/abc061/tasks/abc061_c,"問題文空の配列が 1 つあります  
この配列に 整数を配列に挿入する操作を N 回行います  
i 1 i N  回目の操作では 配列に整数 a i を b i 個挿入します  
N 回の挿入操作後の配列の中で K 番目に小さい数を求めてください   
例えば 配列が   1 2 2 3 3 3   の時 4 番目に小さい数は 3 となります    

制約
1 N 10 5 
1 a i b i 10 5 
1 K b 1   b n
入力は全て整数である   


入力入力は以下の形式で標準入力から与えられる   
N K
a 1 b 1
   
a N b N


出力N 回の挿入操作後の配列の中で K 番目に小さい数を出力せよ    

入力例 13 4
1 1
2 2
3 3


出力例 13

操作後の配列は 問題文に書かれている例と同じです 

入力例 210 500000
1 100000
1 100000
1 100000
1 100000
1 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000


出力例 21

Problem StatementThere is an empty array 
The following N operations will be performed to insert integers into the array 
In the i th operation  1 i N   b i copies of an integer a i are inserted into the array 
Find the K th smallest integer in the array after the N operations 
For example  the 4 th smallest integer in the array   1 2 2 3 3 3   is 3 

Constraints
1 N 10 5 
1 a i b i 10 5 
1 K b 1   b n
All input values are integers 


InputInput is given from Standard Input in the following format   
N K
a 1 b 1
   
a N b N


OutputPrint the K th smallest integer in the array after the N operations   

Sample Input 13 4
1 1
2 2
3 3


Sample Output 13

The resulting array is the same as the one in the problem statement 

Sample Input 210 500000
1 100000
1 100000
1 100000
1 100000
1 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000


Sample Output 21"
Score Attack,https://atcoder.jp/contests/abc061/tasks/abc061_d,"問題文N 頂点 M 辺の重み付き有向グラフがあります  
i 1 i M  番目の辺は 頂点 a i から 頂点 b i を重み c i で結びます  
このグラフと駒を利用して 次の1人ゲームを行います    
最初 駒を頂点 1 に置いて プレイヤーのスコアを 0 とします  
プレイヤーは 次の条件で駒を繰り返し移動させることができます    

頂点 a i に駒があるとき i 番目の辺を利用して頂点 b i に移動する 移動後にプレイヤーのスコアが c i 加算される    

頂点 N に駒があるときのみ ゲームを終了できます   
なお 与えられる有向グラフの上で頂点 1 から頂点 N に移動できることは保障されています     
プレイヤーがゲーム終了時のスコアを出来るだけ大きくするような行動を取ったとき ゲーム終了時のスコアはいくつになるでしょうか  
ゲーム終了時のスコアをいくらでも大きくできる場合は inf と出力してください 

制約
2 N 1000 
1 M min N N 1  2000  
1 a i b i N  1 i M  
a i b i  1 i M  
a i a j または b i b j  1 i j M  
 10 9 c i 10 9  1 i M 
c i は整数である 
与えられるグラフには 頂点 1 から頂点 N への経路が存在する 


入力入力は以下の形式で標準入力から与えられる   
N M  
a 1 b 1 c 1  
a 2 b 2 c 2
   
a M b M c M  


出力もし ゲーム終了時のスコアをいくらでも大きくできる場合は inf そうでない場合はゲーム終了時のスコアの最大値を出力せよ    

入力例 13 3
1 2 4
2 3 3
1 3 5


出力例 17

駒を頂点 N 3 に移動できる経路は以下の 2 通りです    

頂点 1   頂点 2   頂点 3   スコア  4 3 7 
頂点 1   頂点 3   スコア  5 

したがって ゲーム終了時のスコアの最大値は 7 となります    

入力例 22 2
1 2 1
2 1 1


出力例 2inf

頂点 1   頂点 2   頂点 1   頂点 2   と移動することで ゲーム終了時のスコアをいくらでも増やせます    

入力例 36 5
1 2  1000000000
2 3  1000000000
3 4  1000000000
4 5  1000000000
5 6  1000000000


出力例 3 5000000000

Problem StatementThere is a directed graph with N vertices and M edges 
The i th edge  1 i M  points from vertex a i to vertex b i  and has a weight c i 
We will play the following single player game using this graph and a piece 
Initially  the piece is placed at vertex 1  and the score of the player is set to 0 
The player can move the piece as follows 

When the piece is placed at vertex a i  move the piece along the i th edge to vertex b i  After this move  the score of the player is increased by c i 

The player can end the game only when the piece is placed at vertex N 
The given graph guarantees that it is possible to traverse from vertex 1 to vertex N 
When the player acts optimally to maximize the score at the end of the game  what will the score be 
If it is possible to increase the score indefinitely  print inf 

Constraints
2 N 1000 
1 M min N N 1  2000  
1 a i b i N  1 i M  
a i b i  1 i M  
a i a j or b i b j  1 i j M  
 10 9 c i 10 9  1 i M 
c i is an integer 
In the given graph  there exists a path from vertex 1 to vertex N 


InputInput is given from Standard Input in the following format   
N M  
a 1 b 1 c 1  
a 2 b 2 c 2
   
a M b M c M  


OutputPrint the maximum possible score at the end of the game  if it is finite  If it is possible to increase the score indefinitely  print inf   

Sample Input 13 3
1 2 4
2 3 3
1 3 5


Sample Output 17

There are two ways to move the piece to vertex N 3 

vertex 1   vertex 2   vertex 3   score 4 3 7
vertex 1   vertex 3   score 5

Thus  the maximum possible score at the end of the game is 7 

Sample Input 22 2
1 2 1
2 1 1


Sample Output 2inf

It is possible to increase the score indefinitely by alternating between vertex 1 and 2 

Sample Input 36 5
1 2  1000000000
2 3  1000000000
3 4  1000000000
4 5  1000000000
5 6  1000000000


Sample Output 3 5000000000"
Grouping,https://atcoder.jp/contests/abc062/tasks/abc062_a,"問題文すぬけ君は 1 から 12 までの整数を下図のようにグループ分けしました 
整数 x  y  1   x   y   12  が与えられるので x  y が同一のグループに属しているか判定してください 




制約
x  y は整数である 
1   x   y   12


入力入力は以下の形式で標準入力から与えられる 
x y


出力x  y が同一のグループに属しているならば Yes を そうでなければ No を出力せよ 

入力例 11 3


出力例 1Yes


入力例 22 4


出力例 2No

Problem StatementBased on some criterion  Snuke divided the integers from 1 through 12 into three groups as shown in the figure below 
Given two integers x and y  1   x   y   12   determine whether they belong to the same group 




Constraints
x and y are integers 
1   x   y   12


InputInput is given from Standard Input in the following format 
x y


OutputIf x and y belong to the same group  print Yes  otherwise  print No 

Sample Input 11 3


Sample Output 1Yes


Sample Input 22 4


Sample Output 2No"
Picture Frame,https://atcoder.jp/contests/abc062/tasks/abc062_b,"問題文縦 H ピクセル 横 W ピクセルの画像があります 
各ピクセルは英小文字で表されます 
上から i 番目 左から j 番目のピクセルは a  ij  です 
この画像の周囲 1 ピクセルを   で囲んだものを出力してください 

制約
1   H  W   100
a  ij  は英小文字である 


入力入力は以下の形式で標準入力から与えられる 
H W
a  11      a  1W 
 
a  H1      a  HW 


出力画像の周囲 1 ピクセルを   で囲んだものを出力せよ 

入力例 12 3
abc
arc


出力例 1     
 abc 
 arc 
     


入力例 21 1
z


出力例 2   
 z 
   

Problem StatementYou are given a image with a height of H pixels and a width of W pixels 
Each pixel is represented by a lowercase English letter 
The pixel at the i th row from the top and j th column from the left is a  ij  
Put a box around this image and output the result  The box should consist of   and have a thickness of 1 

Constraints
1   H  W   100
a  ij  is a lowercase English letter 


InputInput is given from Standard Input in the following format 
H W
a  11      a  1W 
 
a  H1      a  HW 


OutputPrint the image surrounded by a box that consists of   and has a thickness of 1 

Sample Input 12 3
abc
arc


Sample Output 1     
 abc 
 arc 
     


Sample Input 21 1
z


Sample Output 2   
 z"
Restricted,https://atcoder.jp/contests/abc063/tasks/abc063_a,"問題文二つの整数 A  B が入力されます A   B の値を出力してください 
ただし A   B が 10 以上の場合は 代わりに error と出力してください 

制約
A  B は整数である 
1   A  B   9


入力入力は以下の形式で標準入力から与えられる 
A B


出力A   B が 10 以上の場合は 文字列 error を英小文字で出力せよ そうでない場合は A   B の値を出力せよ 

入力例 16 3


出力例 19


入力例 26 4


出力例 2error

Problem StatementYou are given two integers A and B as the input  Output the value of A   B 
However  if A   B is 10 or greater  output error instead 

Constraints
A and B are integers 
1   A  B   9


InputInput is given from Standard Input in the following format 
A B


OutputIf A   B is 10 or greater  print the string error  case sensitive   otherwise  print the value of A   B 

Sample Input 16 3


Sample Output 19


Sample Input 26 4


Sample Output 2error"
Varied,https://atcoder.jp/contests/abc063/tasks/abc063_b,"問題文英小文字からなる文字列 S が与えられます S に含まれる文字がすべて異なるか判定してください 

制約
2    S    26  ここで  S  は S の長さを表す 
S は英小文字のみからなる 


入力入力は以下の形式で標準入力から与えられる 
S


出力S に含まれる文字がすべて異なる場合は yes 英小文字  そうでない場合は no と出力せよ 

入力例 1uncopyrightable


出力例 1yes


入力例 2different


出力例 2no


入力例 3no


出力例 3yes

Problem StatementYou are given a string S consisting of lowercase English letters  Determine whether all the characters in S are different 

Constraints
2    S    26  where  S  denotes the length of S 
S consists of lowercase English letters 


InputInput is given from Standard Input in the following format 
S


OutputIf all the characters in S are different  print yes  case sensitive   otherwise  print no 

Sample Input 1uncopyrightable


Sample Output 1yes


Sample Input 2different


Sample Output 2no


Sample Input 3no


Sample Output 3yes"
RGB Cards,https://atcoder.jp/contests/abc064/tasks/abc064_a,"問題文
AtCoDeer君は 赤 緑 青色のカードを持っています 
それぞれのカードには 1 以上 9 以下の整数が書かれており 赤色のカードには r 緑色のカードには g 青色のカードには b が書かれています 
3 つのカードを左から順に赤 緑 青色の順に並べ 左から整数を読んだときにこれが 4 の倍数であるか判定しなさい 

制約

1   r  g  b   9


入力
入力は以下の形式で標準入力から与えられる   
r g b


出力
AtCoDeer君が作った 3 桁の整数が 4 の倍数ならば YES そうでないならば NO を出力しなさい 

入力例 14 3 2


出力例 1YES

AtCoDeer君は 432 を作り これは 4 の倍数です よって YES を出力します 

入力例 22 3 4


出力例 2NO

AtCoDeer君は 234 を作りますが これは 4 の倍数ではありません よって NO を出力します 
Problem StatementAtCoDeer has three cards  one red  one green and one blue 
An integer between 1 and 9  inclusive  is written on each card  r on the red card  g on the green card and b on the blue card 
We will arrange the cards in the order red  green and blue from left to right  and read them as a three digit integer 
Is this integer a multiple of 4   

Constraints
1   r  g  b   9


InputInput is given from Standard Input in the following format 
r g b


OutputIf the three digit integer is a multiple of 4  print YES  case sensitive   otherwise  print NO 

Sample Input 14 3 2


Sample Output 1YES

432 is a multiple of 4  and thus YES should be printed 

Sample Input 22 3 4


Sample Output 2NO

234 is not a multiple of 4  and thus NO should be printed"
Traveling AtCoDeer Problem,https://atcoder.jp/contests/abc064/tasks/abc064_b,"問題文
クリスマスもあと半年となり トナカイのAtCoDeer君はプレゼントを配る計画を立てることにしました 
TopCoDeer通りには N 個の家が並んでいます i 個目の家は座標 a i にあります 彼はこのすべての家にプレゼントを配ることにしました 
好きな場所から開始し好きな場所で終了することができる時 最小の移動距離を求めなさい 

制約

1   N   100
0   a i   1000
a i は整数である 


入力
入力は以下の形式で標準入力から与えられる   
N
a 1 a 2     a N


出力
AtCoDeer君が動く距離の最小値を出力しなさい 

入力例 14
2 3 7 9


出力例 17

AtCoDeer君が座標 9 からスタートし 座標 2 までそのまま一直線にすすむと移動距離 7 が達成できます 
また 移動距離が 7 未満の方法は存在しないので 最小の移動距離は 7 です 

入力例 28
3 1 4 1 5 9 2 6


出力例 28

同じ場所に複数の家がある可能性もあります 
Problem StatementIt is only six months until Christmas  and AtCoDeer the reindeer is now planning his travel to deliver gifts 
There are N houses along TopCoDeer street  The i th house is located at coordinate a i  He has decided to deliver gifts to all these houses 
Find the minimum distance to be traveled when AtCoDeer can start and end his travel at any positions   

Constraints
1   N   100
0   a i   1000
a i is an integer 


InputInput is given from Standard Input in the following format 
N
a 1 a 2     a N


OutputPrint the minimum distance to be traveled   

Sample Input 14
2 3 7 9


Sample Output 17

The travel distance of 7 can be achieved by starting at coordinate 9 and traveling straight to coordinate 2 
It is not possible to do with a travel distance of less than 7  and thus 7 is the minimum distance to be traveled   

Sample Input 28
3 1 4 1 5 9 2 6


Sample Output 28

There may be more than one house at a position"
Colorful Leaderboard,https://atcoder.jp/contests/abc064/tasks/abc064_c,"問題文
AtCoderでは コンテストに参加すると 色 が付き これはレートによって次のように変化します   

レート 1 399 灰色
レート 400 799 茶色
レート 800 1199 緑色
レート 1200 1599 水色
レート 1600 1999 青色
レート 2000 2399 黄色
レート 2400 2799 橙色
レート 2800 3199 赤色

また レートが 3200 以上になると色を自由に変えることができます 
現在 N 人の人がAtCoderのコンテストに参加したことがあり i 人目の人のレートは a i です 
そのとき 色の種類数の最小値と最大値を求めなさい 

制約

1   N   100
1   a i   4800
a i は整数である 


入力
入力は以下の形式で標準入力から与えられる   
N
a 1 a 2     a N


出力
色の種類数の最小値 最大値をこの順で空白区切りで出力しなさい 

入力例 14
2100 2500 2700 2700


出力例 12 2

レート 2100 の人は 黄色 であり それ以外の人は 橙色 なので 色の種類数は 2 となる 

入力例 25
1100 1900 2800 3200 3200


出力例 23 5

レート 1100 の人は 緑色  レート 1900 の人は 青色  レート 2800 の人は 赤色 である 
4 人目が 赤色 を選び 5 人目が 青色 を選んだ時 色の種類数は 3 であり これは最小値を取る一つの例である 
4 人目が 紫色 を選び 5 人目が 黒色 を選んだ時 色の種類数は 5 であり これは最大値を取る一つの例である 

入力例 320
800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990


出力例 31 1

この場合全員が 緑色 である よって色の種類数は 1 となる 
Problem StatementIn AtCoder  a person who has participated in a contest receives a color  which corresponds to the person s rating as follows   

Rating 1 399   gray
Rating 400 799   brown
Rating 800 1199   green
Rating 1200 1599   cyan
Rating 1600 1999   blue
Rating 2000 2399   yellow
Rating 2400 2799   orange
Rating 2800 3199   red

Other than the above  a person whose rating is 3200 or higher can freely pick his her color  which can be one of the eight colors above or not 
Currently  there are N users who have participated in a contest in AtCoder  and the i th user has a rating of a i 
Find the minimum and maximum possible numbers of different colors of the users   

Constraints
1   N   100
1   a i   4800
a i is an integer 


InputInput is given from Standard Input in the following format 
N
a 1 a 2     a N


OutputPrint the minimum possible number of different colors of the users  and the maximum possible number of different colors  with a space in between   

Sample Input 14
2100 2500 2700 2700


Sample Output 12 2

The user with rating 2100 is  yellow   and the others are  orange   There are two different colors   

Sample Input 25
1100 1900 2800 3200 3200


Sample Output 23 5

The user with rating 1100 is  green   the user with rating 1900 is blue and the user with rating 2800 is  red  
If the fourth user picks  red   and the fifth user picks  blue   there are three different colors  This is one possible scenario for the minimum number of colors 
If the fourth user picks  purple   and the fifth user picks  black   there are five different colors  This is one possible scenario for the maximum number of colors   

Sample Input 320
800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990


Sample Output 31 1

All the users are  green   and thus there is one color"
Insertion,https://atcoder.jp/contests/abc064/tasks/abc064_d,"問題文
  と   で構成される N 文字の文字列 S が与えられる S にいくつかの   または   を挿入することで正しい括弧列を作りたい 
ただし 正しい括弧列は次のように定義されている 

   は正しい括弧列である 
X が正しい括弧列であるとき   X   をこの順につなげたものは正しい括弧列である 
X Y が正しい括弧列であるとき X と Y をこの順につなげたものは正しい括弧列である 
それ以外の括弧列は正しくない 

そのとき 作れる最も文字数が少ない正しい括弧列を求めなさい このようなものが複数ある場合は 辞書順最小のものを求めなさい 

制約

S の長さは N である 
1   N   100
S は   と   のみで構成されている 


入力
入力は以下の形式で標準入力から与えられる   
N
S


出力
S から     を挿入していったときに作れる最小の長さの正しい括弧列のなかで辞書順最小の文字列を出力しなさい 

入力例 13
   


出力例 1    


入力例 26
      


出力例 2          


入力例 38
        


出力例 3                

Problem StatementYou are given a string S of length N consisting of   and    Your task is to insert some number of   and   into S to obtain a correct bracket sequence 
Here  a correct bracket sequence is defined as follows   

   is a correct bracket sequence 
If X is a correct bracket sequence  the concatenation of    X and   in this order is also a correct bracket sequence 
If X and Y are correct bracket sequences  the concatenation of X and Y in this order is also a correct bracket sequence 
Every correct bracket sequence can be derived from the rules above 

Find the shortest correct bracket sequence that can be obtained  If there is more than one such sequence  find the lexicographically smallest one 

Constraints
The length of S is N 
1   N   100
S consists of   and   


InputInput is given from Standard Input in the following format 
N
S


OutputPrint the lexicographically smallest string among the shortest correct bracket sequences that can be obtained by inserting some number of   and   into S 

Sample Input 13
   


Sample Output 1    


Sample Input 26
      


Sample Output 2          


Sample Input 38
        


Sample Output 3"
Expired?,https://atcoder.jp/contests/abc065/tasks/abc065_a,"問題文高橋君は胃が強いので 賞味期限を X 日まで過ぎた食品を食べてもお腹を壊しません 
賞味期限を X 1 日以上過ぎた食品を食べると お腹を壊します 
また 賞味期限を過ぎずに食べると おいしく感じます そうでない場合 おいしく感じません 
高橋君は 賞味期限の A 日前に食品を買ってきて 買ってから B 日後に食べました 
高橋君が食品をおいしく感じた場合 delicious を おいしくは感じなかったがお腹は壊さなかった場合 safe を お腹を壊した場合 dangerous を出力するプログラムを作成してください 

制約
1   X A B   10 9


入力入力は以下の形式で標準入力から与えられる 
X A B


出力高橋君が食品をおいしく感じた場合 delicious を おいしくは感じなかったがお腹は壊さなかった場合 safe を お腹を壊した場合 dangerous を出力せよ 

入力例 14 3 6


出力例 1safe

賞味期限を 3 日過ぎて食べるので おいしくは感じませんが お腹も壊しません 

入力例 26 5 1


出力例 2delicious

賞味期限を過ぎていないので おいしく感じます 

入力例 33 7 12


出力例 3dangerous

賞味期限を 5 日過ぎて食べるので お腹を壊します 
Problem StatementTakahashi has a strong stomach  He never gets a stomachache from eating something whose  best by  date is at most X days earlier 
He gets a stomachache if the  best by  date of the food is X 1 or more days earlier  though 
Other than that  he finds the food delicious if he eats it not later than the  best by  date  Otherwise  he does not find it delicious 
Takahashi bought some food A days before the  best by  date  and ate it B days after he bought it 
Write a program that outputs delicious if he found it delicious  safe if he did not found it delicious but did not get a stomachache either  and dangerous if he got a stomachache 

Constraints
1   X A B   10 9


InputInput is given from Standard Input in the following format 
X A B


OutputPrint delicious if Takahashi found the food delicious  print safe if he neither found it delicious nor got a stomachache  print dangerous if he got a stomachache 

Sample Input 14 3 6


Sample Output 1safe

He ate the food three days after the  best by  date  It was not delicious or harmful for him 

Sample Input 26 5 1


Sample Output 2delicious

He ate the food by the  best by  date  It was delicious for him 

Sample Input 33 7 12


Sample Output 3dangerous

He ate the food five days after the  best by  date  It was harmful for him"
Trained?,https://atcoder.jp/contests/abc065/tasks/abc065_b,"問題文筋力をつけたい高橋君は AtCoder 社のトレーニング設備で トレーニングをすることにしました 
AtCoder 社のトレーニング設備には N 個のボタンがついており ちょうど 1 個のボタンが光っています 
ボタンには 1 から N までの番号がついています 
ボタン i が光っているときにそのボタンを押すと ボタン i の明かりが消え その後ボタン a i が光ります i a i であることもあります 
光っていないボタンを押しても 何も起こりません 
最初 ボタン 1 が光っています 高橋君は ボタン 2 が光っている状態で トレーニングをやめたいと思っています 
そのようなことは可能かどうか判定し もし可能なら最低で何回ボタンを押す必要があるかを求めてください 

制約
2   N   10 5
1   a i   N


入力入力は以下の形式で標準入力から与えられる 
N
a 1
a 2
 
a N


出力ボタン 2 を光らせることが不可能な場合  1 を出力せよ 
そうでない場合 ボタン 2 を光らせるために必要なボタンを押す回数の最小値を出力せよ 

入力例 13
3
1
2


出力例 12

ボタン 1 3 の順に押せばよいです 

入力例 24
3
4
1
2


出力例 2 1

ボタン 1 を押すとボタン 3  ボタン 3 を押すとボタン 1 が光るので ボタン 2 が光ることはありません 

入力例 35
3
3
4
2
4


出力例 33

Problem StatementTakahashi wants to gain muscle  and decides to work out at AtCoder Gym 
The exercise machine at the gym has N buttons  and exactly one of the buttons is lighten up 
These buttons are numbered 1 through N 
When Button i is lighten up and you press it  the light is turned off  and then Button a i will be lighten up  It is possible that i a i 
When Button i is not lighten up  nothing will happen by pressing it 
Initially  Button 1 is lighten up  Takahashi wants to quit pressing buttons when Button 2 is lighten up 
Determine whether this is possible  If the answer is positive  find the minimum number of times he needs to press buttons 

Constraints
2   N   10 5
1   a i   N


InputInput is given from Standard Input in the following format 
N
a 1
a 2
 
a N


OutputPrint  1 if it is impossible to lighten up Button 2 
Otherwise  print the minimum number of times we need to press buttons in order to lighten up Button 2 

Sample Input 13
3
1
2


Sample Output 12

Press Button 1  then Button 3 

Sample Input 24
3
4
1
2


Sample Output 2 1

Pressing Button 1 lightens up Button 3  and vice versa  so Button 2 will never be lighten up 

Sample Input 35
3
3
4
2
4


Sample Output 33"
ringring,https://atcoder.jp/contests/abc066/tasks/abc066_a,"問題文snuke 君は自転車を買いに来ました 
 snuke 君はすでに買う自転車を決めたのですが その自転車にはベルが付いていないため 
 自転車とは別にベルも買う必要があります 
snuke 君は安全意識が高いので ベルをどちらの手でも鳴らせるよう 両方のハンドルに 1 つずつ
付けることにしました 
お店にあるベルは 3 種類で それぞれ a円  b円  c円です 
この 3 つのうち 異なる 2 つのベルを選んで買うときの 値段の合計の最小値を求めて下さい 

制約
1  leq a b c  leq 10000
a b c は整数


入力入力は以下の形式で標準入力から与えられる 
a b c


出力2 つのベルを買うときの最安値を出力せよ 

入力例 1700 600 780


出力例 11300

700 円のベルと 600 円のベルを買うと  1300 円かかります 
700 円のベルと 780 円のベルを買うと  1480 円かかります 
600 円のベルと 780 円のベルを買うと  1380 円かかります 
よって 一番安いのは 1300 円です 

入力例 210000 10000 10000


出力例 220000

どの 2 つを選んでも 20000 円かかってしまいます 
Problem StatementSnuke is buying a bicycle 
The bicycle of his choice does not come with a bell  so he has to buy one separately 
He has very high awareness of safety  and decides to buy two bells  one for each hand 
The store sells three kinds of bells for the price of a  b and c yen  the currency of Japan   respectively 
Find the minimum total price of two different bells 

Constraints
1  leq a b c  leq 10000
a  b and c are integers 


InputInput is given from Standard Input in the following format 
a b c


OutputPrint the minimum total price of two different bells 

Sample Input 1700 600 780


Sample Output 11300


Buying a 700 yen bell and a 600 yen bell costs 1300 yen 
Buying a 700 yen bell and a 780 yen bell costs 1480 yen 
Buying a 600 yen bell and a 780 yen bell costs 1380 yen 

The minimum among these is 1300 yen 

Sample Input 210000 10000 10000


Sample Output 220000

Buying any two bells costs 20000 yen"
ss,https://atcoder.jp/contests/abc066/tasks/abc066_b,"問題文同じ文字列を 2 つ並べてできる文字列のことを偶文字列と呼ぶことにします 
例えば  xyzxyz や aaaaaa は偶文字列ですが ababab や xyzxy は偶文字列ではありません 
アルファベットの小文字からなる偶文字列 S が与えられます 
 S の末尾の文字を 1 文字以上消して作れる偶文字列のうち 最も長い偶文字列の長さを求めて下さい 
与えられる入力では 条件を満たす 1 文字以上の文字列が存在することが保証されています 

制約
2  leq  S   leq 200
S は小文字のアルファベットのみからなる偶文字列である 
S に対して 条件を満たす 1 文字以上の文字列が存在する 


入力入力は以下の形式で標準入力から与えられる 
S


出力答えとなる文字列の長さを出力せよ 

入力例 1abaababaab


出力例 16

abaababaab は偶文字列ですが  1 文字も消していないので条件を満たしません 
abaababaa は偶文字列ではありません 
abaababa は偶文字列ではありません 
abaabab は偶文字列ではありません 
abaaba は偶文字列です よって 答えは abaaba の長さである 6 です 

入力例 2xxxx


出力例 22

xxx は偶文字列ではありません 
xx は偶文字列です 

入力例 3abcabcabcabc


出力例 36

条件を満たす文字列は abcabc なので 答えは 6 です 

入力例 4akasakaakasakasakaakas


出力例 414

条件を満たす文字列は akasakaakasaka なので 答えは 14 です 
Problem StatementWe will call a string that can be obtained by concatenating two equal strings an even string 
For example  xyzxyz and aaaaaa are even  while ababab and xyzxy are not 
You are given an even string S consisting of lowercase English letters 
Find the length of the longest even string that can be obtained by deleting one or more characters from the end of S 
It is guaranteed that such a non empty string exists for a given input 

Constraints
2  leq  S   leq 200
S is an even string consisting of lowercase English letters 
There exists a non empty even string that can be obtained by deleting one or more characters from the end of S 


InputInput is given from Standard Input in the following format 
S


OutputPrint the length of the longest even string that can be obtained 

Sample Input 1abaababaab


Sample Output 16


abaababaab itself is even  but we need to delete at least one character 
abaababaa is not even 
abaababa is not even 
abaabab is not even 
abaaba is even  Thus  we should print its length  6 


Sample Input 2xxxx


Sample Output 22


xxx is not even 
xx is even 


Sample Input 3abcabcabcabc


Sample Output 36

The longest even string that can be obtained is abcabc  whose length is 6 

Sample Input 4akasakaakasakasakaakas


Sample Output 414

The longest even string that can be obtained is akasakaakasaka  whose length is 14"
Sharing Cookies,https://atcoder.jp/contests/abc067/tasks/abc067_a,"問題文すぬけくんは 3 匹のヤギにクッキーを渡したいです 
すぬけくんは A 枚のクッキーが入った缶と B 枚のクッキーが入った缶を持っています 
すぬけくんは A  B  A B のいずれかの枚数のクッキーをヤギたちに渡すことができます 
3 匹のヤギが同じ枚数ずつ食べられるようにクッキーを渡すことが可能かどうか判定してください 

制約
1  leq A B  leq 100
A B はいずれも整数


入力入力は以下の形式で標準入力から与えられる 
A B


出力3 匹のヤギが同じ枚数ずつ食べられるようにクッキーを渡すことが可能ならば Possible と そうでなければ Impossible と出力せよ 

入力例 14 5


出力例 1Possible

9 枚のクッキーを渡すことで 3 匹のヤギは 3 枚ずつ食べることが可能です 

入力例 21 1


出力例 2Impossible

クッキーは 2 枚しかないので どのように渡しても 3 匹のヤギが同じ枚数食べることはできません 
Problem StatementSnuke is giving cookies to his three goats 
He has two cookie tins  One contains A cookies  and the other contains B cookies  He can thus give A cookies  B cookies or A B cookies to his goats  he cannot open the tins  
Your task is to determine whether Snuke can give cookies to his three goats so that each of them can have the same number of cookies 

Constraints
1  leq A B  leq 100
Both A and B are integers 


InputInput is given from Standard Input in the following format 
A B


OutputIf it is possible to give cookies so that each of the three goats can have the same number of cookies  print Possible  otherwise  print Impossible 

Sample Input 14 5


Sample Output 1Possible

If Snuke gives nine cookies  each of the three goats can have three cookies 

Sample Input 21 1


Sample Output 2Impossible

Since there are only two cookies  the three goats cannot have the same number of cookies no matter what Snuke gives to them"
Snake Toy,https://atcoder.jp/contests/abc067/tasks/abc067_b,"問題文すぬけくんは N 本の棒を持っています 
i 番目の棒の長さは l i です 
すぬけくんは K 本の棒を選んでつなげて ヘビのおもちゃを作りたいです 
ヘビのおもちゃの長さは選んだ棒たちの長さの総和で表されます 
ヘビのおもちゃの長さとしてありうる長さのうち 最大値を求めなさい 

制約
1  leq K  leq N  leq 50
1  leq l i  leq 50
l i は整数


入力入力は以下の形式で標準入力から与えられる 
N K
l 1 l 2 l 3     l  N 


出力答えを出力せよ 

入力例 15 3
1 2 3 4 5


出力例 112

長さ 3 4 5 の棒を選んでつなげると 長さ 12 のヘビのおもちゃを作ることが可能で これがありうる長さのうち最大の値です 

入力例 215 14
50 26 27 21 41 7 42 35 7 5 5 36 39 1 45


出力例 2386

Problem StatementSnuke has N sticks 
The length of the i th stick is l i 
Snuke is making a snake toy by joining K of the sticks together 
The length of the toy is represented by the sum of the individual sticks that compose it 
Find the maximum possible length of the toy 

Constraints
1  leq K  leq N  leq 50
1  leq l i  leq 50
l i is an integer 


InputInput is given from Standard Input in the following format 
N K
l 1 l 2 l 3     l  N 


OutputPrint the answer 

Sample Input 15 3
1 2 3 4 5


Sample Output 112

You can make a toy of length 12 by joining the sticks of lengths 3  4 and 5  which is the maximum possible length 

Sample Input 215 14
50 26 27 21 41 7 42 35 7 5 5 36 39 1 45


Sample Output 2386"
ABCxxx,https://atcoder.jp/contests/abc068/tasks/abc068_a,"問題文このコンテスト つまり AtCoder Beginner Contest の略称は アルファベット 3 文字で ABC となっております 
そして ABC のうち特定の回を指すときは 何回目の ABC かを 3 桁の数字で表して後ろに付け ABC680 のように呼びます 例えば ABC680 は 680 回目の ABC のことを指します 
では N 回目の ABC はどのように表すでしょうか これを出力するプログラムを作成してください 

制約
100   N   999


入力入力は以下の形式で標準入力から与えられる 
N


出力N 回目の ABC の略称を出力する 

入力例 1100


出力例 1ABC100

100 回目の ABC は ABC100 です 

入力例 2425


出力例 2ABC425


入力例 3999


出力例 3ABC999

Problem StatementThis contest  AtCoder Beginner Contest  is abbreviated as ABC 
When we refer to a specific round of ABC  a three digit number is appended after ABC  For example  ABC680 is the 680th round of ABC 
What is the abbreviation for the N th round of ABC  Write a program to output the answer 

Constraints
100   N   999


InputInput is given from Standard Input in the following format 
N


OutputPrint the abbreviation for the N th round of ABC 

Sample Input 1100


Sample Output 1ABC100

The 100th round of ABC is ABC100 

Sample Input 2425


Sample Output 2ABC425


Sample Input 3999


Sample Output 3ABC999"
Break Number,https://atcoder.jp/contests/abc068/tasks/abc068_b,"問題文高橋君は 2 で割れる数が好きです 
正整数 N が与えられるので 1 以上 N 以下の整数のうち 最も 2 で割れる回数が多いものを求めてください 答えは必ず 1 つに定まります 
なお 2 で割っていき 何回あまりが出ずに割れるかを 2 で割れる回数と呼ぶことにします 
例えば

6 ならば 6    3で 1 回 2 で割れます 
8 ならば 8    4    2    1で 3 回 2 で割れます 
3 ならば 0 回 2 で割れます 


制約
1   N   100


入力入力は以下の形式で標準入力から与えられる 
N


出力問題の答えを出力する 

入力例 17


出力例 14

4 は 2 回 2 で割ることができ これは 1  2       7 の中で最も多いです 

入力例 232


出力例 232


入力例 31


出力例 31


入力例 4100


出力例 464

Problem StatementTakahashi loves numbers divisible by 2 
You are given a positive integer N  Among the integers between 1 and N  inclusive   find the one that can be divisible by 2 for the most number of times  The solution is always unique 
Here  the number of times an integer can be divisible by 2  is how many times the integer can be divided by 2 without remainder 
For example 

6 can be divided by 2 once  6    3 
8 can be divided by 2 three times  8    4    2    1 
3 can be divided by 2 zero times 


Constraints
1   N   100


InputInput is given from Standard Input in the following format 
N


OutputPrint the answer 

Sample Input 17


Sample Output 14

4 can be divided by 2 twice  which is the most number of times among 1  2       7 

Sample Input 232


Sample Output 232


Sample Input 31


Sample Output 31


Sample Input 4100


Sample Output 464"
K City,https://atcoder.jp/contests/abc069/tasks/abc069_a,"問題文K 市には 東西方向に n 本の通りがあり 南北方向に m 本の通りがあります 
東西方向のそれぞれの通りは 南北方向のそれぞれの通りと交わっています 
東西南北を通りに囲まれた最小の領域を 街区 と呼びます 
K 市にある街区の個数を求めてください 

制約
2   n  m   100


入力入力は以下の形式で標準入力から与えられる 
n m


出力K 市にある街区の個数を出力せよ 

入力例 13 4


出力例 16

次図の 6 個です 




入力例 22 2


出力例 21

次図の 1 個です 



Problem StatementIn K city  there are n streets running east west  and m streets running north south  Each street running east west and each street running north south cross each other  We will call the smallest area that is surrounded by four streets a block  How many blocks there are in K city 

Constraints
2   n  m   100


InputInput is given from Standard Input in the following format 
n m


OutputPrint the number of blocks in K city 

Sample Input 13 4


Sample Output 16

There are six blocks  as shown below 




Sample Input 22 2


Sample Output 21

There are one block  as shown below"
i18n,https://atcoder.jp/contests/abc069/tasks/abc069_b,"問題文internationalization という英単語は i18n と略されることがあります 
これは 先頭文字 i と末尾文字 n の間に 18 文字が挟まっていることに由来します 
長さ 3 以上の英小文字のみからなる文字列 s が与えられます 
同様の規則によって s を略してください 

制約
3    s    100  ただし  s  は s の長さを表す  
s は英小文字のみからなる 


入力入力は以下の形式で標準入力から与えられる 
s


出力s を略したものを出力せよ 

入力例 1internationalization


出力例 1i18n


入力例 2smiles


出力例 2s4s


入力例 3xyz


出力例 3x1z

Problem StatementThe word internationalization is sometimes abbreviated to i18n 
This comes from the fact that there are 18 letters between the first i and the last n 
You are given a string s of length at least 3 consisting of lowercase English letters 
Abbreviate s in the same way 

Constraints
3    s    100   s  denotes the length of s  
s consists of lowercase English letters 


InputInput is given from Standard Input in the following format 
s


OutputPrint the abbreviation of s 

Sample Input 1internationalization


Sample Output 1i18n


Sample Input 2smiles


Sample Output 2s4s


Sample Input 3xyz


Sample Output 3x1z"
Palindromic Number,https://atcoder.jp/contests/abc070/tasks/abc070_a,"問題文3 桁の正の整数 N が与えられます 
N が 回文数であるかを判定してください   
回文数とは 10 進法において数字を逆から並べても元の数と同じになる数のことを表します    

制約
100 N 999 
N は整数


入力入力は以下の形式で標準入力から与えられる   
N


出力N が回文数である場合は Yes そうでない場合は No を出力せよ 

入力例 1575


出力例 1Yes

N 575 は逆から数字を並べても 575 となるため回文数です したがって Yes と出力します 

入力例 2123


出力例 2No

N 123 は逆から数字を並べると 321 となり 回文数ではないため No と出力します 

入力例 3812


出力例 3No

Problem StatementYou are given a three digit positive integer N 
Determine whether N is a palindromic number 
Here  a palindromic number is an integer that reads the same backward as forward in decimal notation 

Constraints
100 N 999
N is an integer 


InputInput is given from Standard Input in the following format   
N


OutputIf N is a palindromic number  print Yes  otherwise  print No 

Sample Input 1575


Sample Output 1Yes

N 575 is also 575 when read backward  so it is a palindromic number  You should print Yes 

Sample Input 2123


Sample Output 2No

N 123 becomes 321 when read backward  so it is not a palindromic number  You should print No 

Sample Input 3812


Sample Output 3No"
Two Switches,https://atcoder.jp/contests/abc070/tasks/abc070_b,"問題文Alice と Bob は ロボットを制御するためのスイッチを1つずつ持っており ロボットを動かしています   
Alice はロボットを動かし始めて A 秒後にスイッチを押し始め ロボットを動かし始めて B 秒後にスイッチを離しました   
Bob はロボットを動かし始めて C 秒後にスイッチを押し始め ロボットを動かし始めて D 秒後にスイッチを離しました   
Alice と Bob が 二人ともスイッチを押していた秒数を求めてください    

制約
0 A B 100
0 C D 100
入力は全て整数である 


入力入力は以下の形式で標準入力から与えられる   
A B C D


出力Alice と Bob が二人ともスイッチを押していた秒数を出力せよ    

入力例 10 75 25 100


出力例 150

ロボットを動し始めて 0 秒後から 75 秒後までの間 Alice はスイッチを押していました 
一方 ロボットを動し始めて 25 秒後から 100 秒後までの間 Bob はスイッチを押していました 
したがって 二人が同時にスイッチを押していた時間は ロボットを動し始めて 25 秒後から 75 秒後までの 50 秒です 

入力例 20 33 66 99


出力例 20

Alice と Bob が同時にスイッチを押していないので 答えは 0 秒です 

入力例 310 90 20 80


出力例 360

Problem StatementAlice and Bob are controlling a robot  They each have one switch that controls the robot 
Alice started holding down her button A second after the start up of the robot  and released her button B second after the start up 
Bob started holding down his button C second after the start up  and released his button D second after the start up 
For how many seconds both Alice and Bob were holding down their buttons 

Constraints
0 A B 100
0 C D 100
All input values are integers 


InputInput is given from Standard Input in the following format   
A B C D


OutputPrint the length of the duration  in seconds  in which both Alice and Bob were holding down their buttons 

Sample Input 10 75 25 100


Sample Output 150

Alice started holding down her button 0 second after the start up of the robot  and released her button 75 second after the start up 
Bob started holding down his button 25 second after the start up  and released his button 100 second after the start up 
Therefore  the time when both of them were holding down their buttons  is the 50 seconds from 25 seconds after the start up to 75 seconds after the start up 

Sample Input 20 33 66 99


Sample Output 20

Alice and Bob were not holding their buttons at the same time  so the answer is zero seconds 

Sample Input 310 90 20 80


Sample Output 360"
Multiple Clocks,https://atcoder.jp/contests/abc070/tasks/abc070_c,"問題文N 台の時計があり i 1 i N  番目の時計の針はちょうど T i 秒で時計盤を 1 周します  
最初 全ての時計の針は真っ直ぐ上に向いており 止まっています   
イルカは 全ての時計の針を同時に動かし始めました   
再び 全ての時計の針が真っ直ぐ上に向くのは何秒後でしょうか     

制約
1 N 100 
1 T i 10  18  
入力は全て整数である   
答えは 10  18  秒以内である 


入力入力は以下の形式で標準入力から与えられる   
N
T 1
   
T N


出力時計の針を動かし始めてから 再び全ての時計の針が真っ直ぐ上に向くまでの秒数を出力せよ 

入力例 12
2
3


出力例 16

2 つの時計があり 各時計の針が真っ直ぐ上に向くのは以下の時刻です 

1 番目の時計の針   時計の針を動かし始めてから 2 秒後 4 秒後 6 秒後    
2 番目の時計の針   時計の針を動かし始めてから 3 秒後 6 秒後 9 秒後    

したがって 2 つの時計の針が真っ直ぐ上に向くのにかかる秒数は 6 秒となります 

入力例 25
2
5
10
1000000000000000000
1000000000000000000


出力例 21000000000000000000

Problem StatementWe have N clocks  The hand of the i th clock  1 i N  rotates through 360  in exactly T i seconds 
Initially  the hand of every clock stands still  pointing directly upward 
Now  Dolphin starts all the clocks simultaneously 
In how many seconds will the hand of every clock point directly upward again 

Constraints
1 N 100 
1 T i 10  18  
All input values are integers   
The correct answer is at most 10  18  seconds 


InputInput is given from Standard Input in the following format   
N
T 1
   
T N


OutputPrint the number of seconds after which the hand of every clock point directly upward again 

Sample Input 12
2
3


Sample Output 16

We have two clocks  The time when the hand of each clock points upward is as follows 

Clock 1  2  4  6      seconds after the beginning
Clock 2  3  6  9      seconds after the beginning

Therefore  it takes 6 seconds until the hands of both clocks point directly upward 

Sample Input 25
2
5
10
1000000000000000000
1000000000000000000


Sample Output 21000000000000000000"
Transit Tree Path,https://atcoder.jp/contests/abc070/tasks/abc070_d,"問題文N 頂点の木が与えられます  
木とはグラフの一種であり 頂点の数を N とすると 辺の数が N 1 本である閉路のない連結グラフです  
i 1 i N 1  番目の辺は 頂点 a i と 頂点 b i を距離 c i で結びます    
また Q 個の質問クエリと整数 K が与えられます       

j 1 j Q  番目の質問クエリでは 頂点 x j から 頂点 K を経由しつつ 頂点 y j まで移動する場合の最短経路の距離を求めてください     


制約
3 N 10 5 
1 a i b i N  1 i N 1  
1 c i 10 9  1 i N 1  
与えられるグラフは木である 
1 Q 10 5 
1 K N 
1 x j y j N  1 j Q  
x j y j  1 j Q  
x j K y j K  1 j Q  


入力入力は以下の形式で標準入力から与えられる   
N  
a 1 b 1 c 1  
   
a  N 1  b  N 1  c  N 1 
Q K
x 1 y 1
   
x  Q  y  Q 


出力質問クエリの解答を Q 行出力せよ  
j 1 j Q  行目には j 番目のクエリの答えを出力せよ    

入力例 15
1 2 1
1 3 1
2 4 1
3 5 1
3 1
2 4
2 3
4 5


出力例 13
2
4

与えられた 3 つの質問クエリに対する最短経路は以下の通りです 

1 つ目の質問クエリ  頂点 2   頂点 1   頂点 2   頂点 4   距離  1 1 1 3 
2 つ目の質問クエリ  頂点 2   頂点 1   頂点 3   距離  1 1 2 
3 つ目の質問クエリ  頂点 4   頂点 2   頂点 1   頂点 3   頂点 5    距離  1 1 1 1 4 


入力例 27
1 2 1
1 3 3
1 4 5
1 5 7
1 6 9
1 7 11
3 2
1 3
4 5
6 7


出力例 25
14
22

質問クエリに対する最短経路は 必ず頂点 K 2 を通過する必要があります 

入力例 310
1 2 1000000000
2 3 1000000000
3 4 1000000000
4 5 1000000000
5 6 1000000000
6 7 1000000000
7 8 1000000000
8 9 1000000000
9 10 1000000000
1 1
9 10


出力例 317000000000

Problem StatementYou are given a tree with N vertices 
Here  a tree is a kind of graph  and more specifically  a connected undirected graph with N 1 edges  where N is the number of its vertices 
The i th edge  1 i N 1  connects Vertices a i and b i  and has a length of c i 
You are also given Q queries and an integer K  In the j th query  1 j Q  

find the length of the shortest path from Vertex x j and Vertex y j via Vertex K 


Constraints
3 N 10 5 
1 a i b i N  1 i N 1  
1 c i 10 9  1 i N 1  
The given graph is a tree 
1 Q 10 5 
1 K N 
1 x j y j N  1 j Q  
x j y j  1 j Q  
x j K y j K  1 j Q  


InputInput is given from Standard Input in the following format   
N  
a 1 b 1 c 1  
   
a  N 1  b  N 1  c  N 1 
Q K
x 1 y 1
   
x  Q  y  Q 


OutputPrint the responses to the queries in Q lines 
In the j th line j 1 j Q   print the response to the j th query 

Sample Input 15
1 2 1
1 3 1
2 4 1
3 5 1
3 1
2 4
2 3
4 5


Sample Output 13
2
4

The shortest paths for the three queries are as follows 

Query 1  Vertex 2   Vertex 1   Vertex 2   Vertex 4   Length 1 1 1 3 
Query 2  Vertex 2   Vertex 1   Vertex 3   Length 1 1 2 
Query 3  Vertex 4   Vertex 2   Vertex 1   Vertex 3   Vertex 5   Length 1 1 1 1 4 


Sample Input 27
1 2 1
1 3 3
1 4 5
1 5 7
1 6 9
1 7 11
3 2
1 3
4 5
6 7


Sample Output 25
14
22

The path for each query must pass Vertex K 2 

Sample Input 310
1 2 1000000000
2 3 1000000000
3 4 1000000000
4 5 1000000000
5 6 1000000000
6 7 1000000000
7 8 1000000000
8 9 1000000000
9 10 1000000000
1 1
9 10


Sample Output 317000000000"
Meal Delivery,https://atcoder.jp/contests/abc071/tasks/abc071_a,"問題文すぬけ君は 数直線上の位置 x に住んでいます 
また 位置 a  b にはそれぞれ出前を行っている店 A  B が存在します 
すぬけ君は 店 A  B のうち より近いほうから出前をとることにしました 
どちらの店がすぬけ君の住んでいる位置により近いかを求めてください 
ただし 数直線上の 2 点 s  t の間の距離は  s t  で表されます 

制約
1  leq x  leq 1000
1  leq a  leq 1000
1  leq b  leq 1000
x  a  b は互いに異なる
すぬけ君の位置から店 A  B までの距離は異なる


入力入力は以下の形式で標準入力から与えられる 
x a b


出力店 A のほうが近いなら A を 店 B のほうが近いなら B を出力せよ 

入力例 15 2 7


出力例 1B

すぬけ君の位置から店 A  B までの距離はそれぞれ 3  2 です 
店 B のほうが近いため B を出力します 

入力例 21 999 1000


出力例 2A

Problem StatementSnuke lives at position x on a number line 
On this line  there are two stores A and B  respectively at position a and b  that offer food for delivery 
Snuke decided to get food delivery from the closer of stores A and B 
Find out which store is closer to Snuke s residence 
Here  the distance between two points s and t on a number line is represented by  s t  

Constraints
1  leq x  leq 1000
1  leq a  leq 1000
1  leq b  leq 1000
x  a and b are pairwise distinct 
The distances between Snuke s residence and stores A and B are different 


InputInput is given from Standard Input in the following format 
x a b


OutputIf store A is closer  print A  if store B is closer  print B 

Sample Input 15 2 7


Sample Output 1B

The distances between Snuke s residence and stores A and B are 3 and 2  respectively 
Since store B is closer  print B 

Sample Input 21 999 1000


Sample Output 2A"
Not Found,https://atcoder.jp/contests/abc071/tasks/abc071_b,"問題文英小文字からなる文字列 S が与えられます 
S に現れない英小文字であって 最も辞書順 アルファベット順 で小さいものを求めてください 
ただし S にすべての英小文字が現れる場合は 代わりに None を出力してください 

制約
1  leq  S   leq 10 5   S  は文字列 S の長さ 
S は英小文字のみからなる 


入力入力は以下の形式で標準入力から与えられる 
S


出力S に現れない英小文字であって 最も辞書順で小さいものを出力せよ 
ただし S にすべての英小文字が現れる場合は 代わりに None を出力せよ 

入力例 1atcoderregularcontest


出力例 1b

atcoderregularcontest という文字列には a は現れますが b は現れません 

入力例 2abcdefghijklmnopqrstuvwxyz


出力例 2None

この文字列には すべての英小文字が現れます 

入力例 3fajsonlslfepbjtsaayxbymeskptcumtwrmkkinjxnnucagfrg


出力例 3d

Problem StatementYou are given a string S consisting of lowercase English letters 
Find the lexicographically  alphabetically  smallest lowercase English letter that does not occur in S 
If every lowercase English letter occurs in S  print None instead 

Constraints
1  leq  S   leq 10 5   S  is the length of string S  
S consists of lowercase English letters 


InputInput is given from Standard Input in the following format 
S


OutputPrint the lexicographically smallest lowercase English letter that does not occur in S 
If every lowercase English letter occurs in S  print None instead 

Sample Input 1atcoderregularcontest


Sample Output 1b

The string atcoderregularcontest contains a  but does not contain b 

Sample Input 2abcdefghijklmnopqrstuvwxyz


Sample Output 2None

This string contains every lowercase English letter 

Sample Input 3fajsonlslfepbjtsaayxbymeskptcumtwrmkkinjxnnucagfrg


Sample Output 3d"
Sandglass2,https://atcoder.jp/contests/abc072/tasks/abc072_a,"問題文X 秒を測れる砂時計があります はじめ上のパーツに砂が X  g  あり 1 秒間に 1  g  砂が落ちます なお 上のパーツにもう砂が残っていない場合は砂は落ちません 
t 秒後に上のパーツに残っている砂は何gでしょう 

制約
1 X 10 9
1 t 10 9
X t は整数


入力入力は以下の形式で標準入力から与えられる 
X t


出力t 秒後に上のパーツに残っている砂は何gかを出力せよ 

入力例 1100 17


出力例 183

100  g  の砂のうち 17  g  が落ちるので 83  g  になります 

入力例 248 58


出力例 20

48  g  の砂は全て落ちきるので 0  g  になります 

入力例 31000000000 1000000000


出力例 30

Problem StatementWe have a sandglass that runs for X seconds  The sand drops from the upper bulb at a rate of 1 gram per second  That is  the upper bulb initially contains X grams of sand 
How many grams of sand will the upper bulb contains after t seconds 

Constraints
1 X 10 9
1 t 10 9
X and t are integers 


InputThe input is given from Standard Input in the following format 
X t


OutputPrint the number of sand in the upper bulb after t second 

Sample Input 1100 17


Sample Output 183

17 out of the initial 100 grams of sand will be consumed  resulting in 83 grams 

Sample Input 248 58


Sample Output 20

All 48 grams of sand will be gone  resulting in 0 grams 

Sample Input 31000000000 1000000000


Sample Output 30"
OddString,https://atcoder.jp/contests/abc072/tasks/abc072_b,"問題文英小文字からなる文字列 s が与えられます 前から数えて奇数文字目だけ抜き出して作った文字列を出力してください 
ただし 文字列の先頭の文字を1文字目とします 

制約
s の各文字は英小文字
1  s  10 5


入力入力は以下の形式で標準入力から与えられる 
s


出力前から数えて奇数文字目だけ抜き出して作った文字列を出力せよ 

入力例 1atcoder


出力例 1acdr

1 文字目の a  3 文字目の c  5 文字目の d  7 文字目の r を取り出して acdr となります 

入力例 2aaaa


出力例 2aa


入力例 3z


出力例 3z


入力例 4fukuokayamaguchi


出力例 4fkoaaauh

Problem StatementYou are given a string s consisting of lowercase English letters  Extract all the characters in the odd indexed positions and print the string obtained by concatenating them  Here  the leftmost character is assigned the index 1 

Constraints
Each character in s is a lowercase English letter 
1  s  10 5


InputThe input is given from Standard Input in the following format 
s


OutputPrint the string obtained by concatenating all the characters in the odd numbered positions 

Sample Input 1atcoder


Sample Output 1acdr

Extract the first character a  the third character c  the fifth character d and the seventh character r to obtain acdr 

Sample Input 2aaaa


Sample Output 2aa


Sample Input 3z


Sample Output 3z


Sample Input 4fukuokayamaguchi


Sample Output 4fkoaaauh"
September 9,https://atcoder.jp/contests/abc073/tasks/abc073_a,"問題文今 日本は 9 月 9 日です 
二桁の整数 N が与えられるので 十進法で N に 9 が含まれるか答えてください 

制約
10 N 99 


入力入力は以下の形式で標準入力から与えられる 
N


出力9 が含まれるとき Yes  含まれないとき No を出力せよ 

入力例 129


出力例 1Yes

29 の一の位は 9 です 

入力例 272


出力例 2No

72 に 9 は含まれません 

入力例 391


出力例 3Yes

Problem StatementIt is September 9 in Japan now 
You are given a two digit integer N  Answer the question  Is 9 contained in the decimal notation of N 

Constraints
10 N 99


InputInput is given from Standard Input in the following format 
N


OutputIf 9 is contained in the decimal notation of N  print Yes  if not  print No 

Sample Input 129


Sample Output 1Yes

The one s digit of 29 is 9 

Sample Input 272


Sample Output 2No

72 does not contain 9 

Sample Input 391


Sample Output 3Yes"
Theater,https://atcoder.jp/contests/abc073/tasks/abc073_b,"問題文joisinoお姉ちゃんは 劇場の受付を担当しています 
この劇場には 席 1 から席 100000 までの 100000 個の席があります 
彼女のメモ書きによると 今までの間に N 組の団体が来て i 組目の団体は席 l i から席 r i までの連続した席に座っています 
今 劇場の席には何人座っているか求めてください 

制約
1 N 1000
1 l i r i 100000
同じ席に複数の人が座ることはない 
入力は全て整数である 


入力入力は以下の形式で標準入力から与えられる 
N
l 1 r 1
 
l N r N


出力劇場の席に座っている人数を出力せよ 

入力例 11
24 30


出力例 17

24 25 26 27 28 29 30 番の席に人が座っており  7 人です 

入力例 22
6 8
3 3


出力例 24

Problem StatementJoisino is working as a receptionist at a theater 
The theater has 100000 seats  numbered from 1 to 100000 
According to her memo  N groups of audiences have come so far  and the i th group occupies the consecutive seats from Seat l i to Seat r i  inclusive  
How many people are sitting at the theater now 

Constraints
1 N 1000
1 l i r i 100000
No seat is occupied by more than one person 
All input values are integers 


InputInput is given from Standard Input in the following format 
N
l 1 r 1
 
l N r N


OutputPrint the number of people sitting at the theater 

Sample Input 11
24 30


Sample Output 17

There are 7 people  sitting at Seat 24 25 26 27 28 29 and 30 

Sample Input 22
6 8
3 3


Sample Output 24"
Write and Erase,https://atcoder.jp/contests/abc073/tasks/abc073_c,"問題文あなたは joisinoお姉ちゃんと以下のようなゲームをしています 

最初 何も書いていない紙がある 
joisinoお姉ちゃんが一つの数字を言うので その数字が紙に書いてあれば紙からその数字を消し 書いていなければその数字を紙に書く これを N 回繰り返す 
その後 紙に書かれている数字がいくつあるかを答える 

joisinoお姉ちゃんが言った数字が 言った順番に A 1       A N として与えられるので ゲーム終了後に紙に書かれている数字がいくつあるか答えてください 

制約
1 N 100000
1 A i 1000000000  10 9 
入力は全て整数である 


入力入力は以下の形式で標準入力から与えられる 
N
A 1
 
A N


出力ゲーム終了後に紙に書かれている数字の個数を出力せよ 

入力例 13
6
2
6


出力例 11

以下の操作を行うこととなります 


紙に 6 は書かれていないので 6 を書く 


紙に 2 は書かれていないので 2 を書く 


紙に 6 は書かれているので 6 を消す 


よって 最後に書いてあるのは 2 だけなので 答えは 1 です 

入力例 24
2
5
5
2


出力例 20

最後に紙に数字が一つも書かれていない場合もあります 

入力例 36
12
22
16
22
18
12


出力例 32

Problem StatementYou are playing the following game with Joisino 

Initially  you have a blank sheet of paper 
Joisino announces a number  If that number is written on the sheet  erase the number from the sheet  if not  write the number on the sheet  This process is repeated N times 
Then  you are asked a question  How many numbers are written on the sheet now 

The numbers announced by Joisino are given as A 1       A N in the order she announces them  How many numbers will be written on the sheet at the end of the game 

Constraints
1 N 100000
1 A i 1000000000  10 9 
All input values are integers 


InputInput is given from Standard Input in the following format 
N
A 1
 
A N


OutputPrint how many numbers will be written on the sheet at the end of the game 

Sample Input 13
6
2
6


Sample Output 11

The game proceeds as follows 


6 is not written on the sheet  so write 6 


2 is not written on the sheet  so write 2 


6 is written on the sheet  so erase 6 


Thus  the sheet contains only 2 in the end  The answer is 1 

Sample Input 24
2
5
5
2


Sample Output 20

It is possible that no number is written on the sheet in the end 

Sample Input 36
12
22
16
22
18
12


Sample Output 32"
joisino's travel,https://atcoder.jp/contests/abc073/tasks/abc073_d,"問題文Atcoder国には N 個の町があり M 本の双方向に移動可能な道で結ばれています 
また  i 本目の道は町 A i と町 B i の間を距離 C i で結んでいます 
joisinoお姉ちゃんは この国の R 個の町 r 1 r 2  r R を訪れることとなりました 
最初に訪れる町までの移動と 最後に訪れる町からの移動は空路で行うが それ以外は道を使わなければなりません 
町を訪れる順番を 道での移動距離が最小となるように決めた時の移動距離を答えてください 

制約
2 N 200
1 M N  N 1  2
2 R min 8 N     min 8 N  は 8 と N のうち小さい方 
r i r j  i j 
1 A i B i N   A i B i
 A i B i   A j B j   A i B i   B j A j   i j 
1 C i 100000
すべての町の間は道のみで移動することができる 
入力は全て整数である 


入力入力は以下の形式で標準入力から与えられる 
N M R
r 1     r R
A 1 B 1 C 1
 
A M B M C M


出力町を訪れる順番を 道での移動距離が最小となるように決めた時の移動距離を出力せよ 

入力例 13 3 3
1 2 3
1 2 1
2 3 1
3 1 4


出力例 12

例えば 町 1  町 2  町 3 の順番で訪れると 移動距離が 2 となり 最小となります 

入力例 23 3 2
1 3
2 3 2
1 3 6
1 2 2


出力例 24

町 1 を訪れたあとに町 3 を訪れても 町 3 を訪れたあとに町 1 を訪れても 町 1 と町 3 の間の最短距離は 4 であるため どの順番を選んだとしても答えは 4 となります 

入力例 34 6 3
2 3 4
1 2 4
2 3 3
4 3 1
1 4 1
4 2 2
3 1 6


出力例 33

Problem StatementThere are N towns in the State of Atcoder  connected by M bidirectional roads 
The i th road connects Town A i and B i and has a length of C i 
Joisino is visiting R towns in the state  r 1 r 2    r R  not necessarily in this order  
She will fly to the first town she visits  and fly back from the last town she visits  but for the rest of the trip she will have to travel by road 
If she visits the towns in the order that minimizes the distance traveled by road  what will that distance be 

Constraints
2 N 200
1 M N  N 1  2
2 R min 8 N   min 8 N  is the smaller of 8 and N  
r i r j  i j 
1 A i B i N  A i B i
 A i B i   A j B j   A i B i   B j A j   i j 
1 C i 100000
Every town can be reached from every town by road 
All input values are integers 


InputInput is given from Standard Input in the following format 
N M R
r 1     r R
A 1 B 1 C 1
 
A M B M C M


OutputPrint the distance traveled by road if Joisino visits the towns in the order that minimizes it 

Sample Input 13 3 3
1 2 3
1 2 1
2 3 1
3 1 4


Sample Output 12

For example  if she visits the towns in the order of 1  2  3  the distance traveled will be 2  which is the minimum possible 

Sample Input 23 3 2
1 3
2 3 2
1 3 6
1 2 2


Sample Output 24

The shortest distance between Towns 1 and 3 is 4  Thus  whether she visits Town 1 or 3 first  the distance traveled will be 4 

Sample Input 34 6 3
2 3 4
1 2 4
2 3 3
4 3 1
1 4 1
4 2 2
3 1 6


Sample Output 33"
Bichrome Cells,https://atcoder.jp/contests/abc074/tasks/abc074_a,"問題文N  times N のマス目があります 
このマス目の各マスを白色または黒色に塗ることにしました  すべてのマスをどちらか片方の色に塗ります  
ちょうど A マスを白色に塗るとき 黒色に塗ることになるマスはいくつあるでしょうか 

制約
1 N 100
0   A   N 2


入力入力は以下の形式で標準入力から与えられる 
N
A


出力黒色に塗ることになるマスの個数を出力せよ 

入力例 13
4


出力例 15

3  times 3 のマス目にはマスが 9 個あります 
そのうち 4 個を白く塗るので 残った 5 マスは黒く塗ることになります 

入力例 219
100


出力例 2261


入力例 310
0


出力例 3100

白く塗るマスの個数が 0 なので すべてのマスが黒く塗られます 
Problem StatementWe have an N  times N square grid 
We will paint each square in the grid either black or white 
If we paint exactly A squares white  how many squares will be painted black 

Constraints
1  leq N  leq 100
0  leq A  leq N 2


InputsInput is given from Standard Input in the following format 
N
A


OutputsPrint the number of squares that will be painted black 

Sample Input 13
4


Sample Output 15

There are nine squares in a 3  times 3 square grid 
Four of them will be painted white  so the remaining five squares will be painted black 

Sample Input 219
100


Sample Output 2261


Sample Input 310
0


Sample Output 3100

As zero squares will be painted white  all the squares will be painted black"
Collecting Balls (Easy Version),https://atcoder.jp/contests/abc074/tasks/abc074_b,"問題文xy 平面上に N 個のボールがあります このうち i 番目のボールの位置は  x i  i  です 
したがって N 本の直線 y   1  y   2       y   N の上にそれぞれ 1 個ずつボールがあることになります 
すぬけ君は これらのボールを回収するために タイプ A  B のロボットを N 台ずつ用意しました 
さらに タイプ A のロボットのうち i 台目のものを位置  0  i  に タイプ B のロボットのうち i 台目のものを位置  K  i  に設置しました 
したがって N 本の直線 y   1  y   2       y   N の上にそれぞれ 1 台のタイプ A のロボットと 1 台のタイプ B のロボットが設置されたことになります 
それぞれのタイプのロボットは起動されると以下のように動作します 

タイプ A のロボットは 位置  0  a  で起動されると 直線 y   a 上にあるボールの位置まで移動し ボールを回収してもとの位置  0  a  に戻って停止する そのようなボールが存在しない場合は何もせずに停止する 
タイプ B のロボットは 位置  K  b  で起動されると 直線 y   b 上にあるボールの位置まで移動し ボールを回収してもとの位置  K  b  に戻って停止する そのようなボールが存在しない場合は何もせずに停止する 

これら 2N 台のロボットのうちいくつかを起動してボールをすべて回収するとき ロボットの移動距離の総和として考えられる値のうち最小のものを求めてください 

制約
1 N 100
1 K 100
0   x i   K
入力値はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N
K
x 1 x 2     x N


出力ロボットの移動距離の総和として考えられる値のうち最小のものを出力せよ 

入力例 11
10
2


出力例 14

ボールが 1 個だけあり タイプ A および B のロボットが 1 つずつあります 
タイプ A のロボットを用いてボールを回収すると ボールの位置までの移動距離は 2 であり もとの位置に戻るための移動距離も 2 であるので 合計の移動距離は 4 となります 
同様にタイプ B のロボットを用いてボールを回収したときの移動距離の合計を計算すると 16 となります 
よって タイプ A のロボットを用いて回収すると合計の移動距離が最小となり そのときの移動距離である 4 を出力します 

入力例 22
9
3 6


出力例 212

1 つめのボールはタイプ A のロボットで 2 つめのボールはタイプ B のロボットで回収すると移動距離が最小となります 

入力例 35
20
11 12 9 17 12


出力例 374

Problem StatementThere are N balls in the xy plane  The coordinates of the i th of them is  x i  i  
Thus  we have one ball on each of the N lines y   1  y   2       y   N 
In order to collect these balls  Snuke prepared 2N robots  N of type A and N of type B 
Then  he placed the i th type A robot at coordinates  0  i   and the i th type B robot at coordinates  K  i  
Thus  now we have one type A robot and one type B robot on each of the N lines y   1  y   2       y   N 
When activated  each type of robot will operate as follows 


When a type A robot is activated at coordinates  0  a   it will move to the position of the ball on the line y   a  collect the ball  move back to its original position  0  a  and deactivate itself  If there is no such ball  it will just deactivate itself without doing anything 


When a type B robot is activated at coordinates  K  b   it will move to the position of the ball on the line y   b  collect the ball  move back to its original position  K  b  and deactivate itself  If there is no such ball  it will just deactivate itself without doing anything 


Snuke will activate some of the 2N robots to collect all of the balls  Find the minimum possible total distance covered by robots 

Constraints
1  leq N  leq 100
1  leq K  leq 100
0   x i   K
All input values are integers 


InputsInput is given from Standard Input in the following format 
N
K
x 1 x 2     x N


OutputsPrint the minimum possible total distance covered by robots 

Sample Input 11
10
2


Sample Output 14

There are just one ball  one type A robot and one type B robot 
If the type A robot is used to collect the ball  the distance from the robot to the ball is 2  and the distance from the ball to the original position of the robot is also 2  for a total distance of 4 
Similarly  if the type B robot is used  the total distance covered will be 16 
Thus  the total distance covered will be minimized when the type A robot is used  The output should be 4 

Sample Input 22
9
3 6


Sample Output 212

The total distance covered will be minimized when the first ball is collected by the type A robot  and the second ball by the type B robot 

Sample Input 35
20
11 12 9 17 12


Sample Output 374"
One out of Three,https://atcoder.jp/contests/abc075/tasks/abc075_a,"問題文3 つの整数 A B C が与えられます  
A B C のうち 2 つは 同じ整数であり 残りの 1 つだけ異なる整数です  
例えば A 5 B 7 C 5 の場合 A C の 2 つは同じ整数であり B は 1 つだけ異なる整数です  
3 つの整数のうち 1 つだけ異なる整数を求めてください    

制約
 100 A B C 100 
A B C は整数
入力は問題文の条件を満たす


入力入力は以下の形式で標準入力から与えられる   
A B C


出力A B C のうち 1 つだけ異なる整数を出力せよ 

入力例 15 7 5


出力例 17

問題文の例と同じです 

入力例 21 1 7


出力例 27

この場合は C が求める整数です 

入力例 3 100 100 100


出力例 3 100

Problem StatementYou are given three integers  A  B and C 
Among them  two are the same  but the remaining one is different from the rest 
For example  when A 5 B 7 C 5  A and C are the same  but B is different 
Find the one that is different from the rest among the given three integers   

Constraints
 100  leq A B C  leq 100 
A  B and C are integers 
The input satisfies the condition in the statement 


InputInput is given from Standard Input in the following format   
A B C


OutputAmong A  B and C  print the integer that is different from the rest 

Sample Input 15 7 5


Sample Output 17

This is the same case as the one in the statement 

Sample Input 21 1 7


Sample Output 27

In this case  C is the one we seek 

Sample Input 3 100 100 100


Sample Output 3 100"
Minesweeper,https://atcoder.jp/contests/abc075/tasks/abc075_b,"問題文H   W のマス目が与えられます  
入力において 全てのマスは文字で表されており  は空きマス    は爆弾マスに対応します  
マス目は H 個の文字列 S 1     S H で表されます  
文字列 S i の j 文字目は マス目の上から i 番目 左から j 番目のマスに対応します  1 i H 1 j W  
イルカは各空きマスの上下左右および斜めの 8 方向で隣接しているマスに爆弾マスが何個あるか気になっています    
そこで 各空きマスに対応する   を その空きマスの周囲8方向に隣接するマスにおける爆弾マスの個数を表す数字で置き換えることにしました      
以上の規則で置き換えられた後のマス目を出力してください 

制約
1 H W 50
S i は   と   からなる長さ W の文字列


入力入力は以下の形式で標準入力から与えられる   
H W 
S 1
 
S H


出力置き換えられた後のマス目を H 行の文字列で出力せよ  
i 行目 に出力する文字列 T i の長さは W であり  T i の j 文字目は 置き換えられた後のマス目の上から i 番目 左から j 番目のマスに対応させよ  1 i H 1 j W 

入力例 13 5
     
     
     


出力例 111211
1 2 1
11211

例として 上から 1 番目 左から 1 番目の空きマスに注目します  
この空きマスの周囲の 8 マスに含まれる爆弾マスは 上から 2 番目 左から 2 番目のマスのみです 
したがって 上から 1 番目 左から 1 番目の空きマスは 1 に置き換えられています 

入力例 23 5
     
     
     


出力例 2     
     
     

空きマスが存在しない場合があります 

入力例 36 6
      
      
      
      
      
      


出力例 3     3
 8 7  
    5 
4 65 2
 5  21
 4 310

Problem StatementYou are given an H   W grid 
The squares in the grid are described by H strings  S 1     S H 
The j th character in the string S i corresponds to the square at the i th row from the top and j th column from the left  1  leq i  leq H 1  leq j  leq W  
  stands for an empty square  and   stands for a square containing a bomb   
Dolphin is interested in how many bomb squares are horizontally  vertically or diagonally adjacent to each empty square 
 Below  we will simply say  adjacent  for this meaning  For each square  there are at most eight adjacent squares  
He decides to replace each   in our H strings with a digit that represents the number of bomb squares adjacent to the corresponding empty square   
Print the strings after the process   

Constraints
1  leq H W  leq 50
S i is a string of length W consisting of   and   


InputInput is given from Standard Input in the following format   
H W
S 1
 
S H


OutputPrint the H strings after the process 
The i th line should contain a string T i of length W  where the j th character in T i corresponds to the square at the i th row from the top and j th row from the left in the grid  1  leq i  leq H  1  leq j  leq W    

Sample Input 13 5
     
     
     


Sample Output 111211
1 2 1
11211

For example  let us observe the empty square at the first row from the top and first column from the left 
There is one bomb square adjacent to this empty square  the square at the second row and second column 
Thus  the   corresponding to this empty square is replaced with 1   

Sample Input 23 5
     
     
     


Sample Output 2     
     
     

It is possible that there is no empty square   

Sample Input 36 6
      
      
      
      
      
      


Sample Output 3     3
 8 7  
    5 
4 65 2
 5  21
 4 310"
Bridge,https://atcoder.jp/contests/abc075/tasks/abc075_c,"問題文自己ループと二重辺を含まない N 頂点 M 辺の無向連結グラフが与えられます 
i 1 i M  番目の辺は頂点 a i と頂点 b i を結びます    
グラフから辺を取り除いたとき グラフ全体が非連結になるような辺のことを橋と呼びます 
与えられた M 本のうち橋である辺の本数を求めてください 

ノート
自己ループ とは a i b i 1 i M  であるような辺 i のことをいいます    
二重辺 とは a i a j かつ b i b j 1 i j M  であるような辺の組 i j のことをいいます    
無向グラフが 連結 であるとは グラフの任意の二頂点間に経路が存在することをいいます    


制約
2 N 50
N 1 M min N N 1  2 50 
1 a i b i N
与えられるグラフは自己ループと二重辺を含まない 
与えられるグラフは連結である 


入力入力は以下の形式で標準入力から与えられる   
N M  
a 1 b 1  
a 2 b 2
   
a M b M


出力M 本の辺のうち 橋である辺の本数を出力せよ 

入力例 17 7
1 3
2 7
3 4
4 5
4 6
5 6
6 7


出力例 14

与えられるグラフは以下の図で表されます    



図の赤い辺が橋であり その数は 4 本です   

入力例 23 3
1 2
1 3
2 3


出力例 20

橋である辺が存在しない場合もあります 

入力例 36 5
1 2
2 3
3 4
4 5
5 6


出力例 35

全ての辺が橋である場合もあります    
Problem StatementYou are given an undirected connected graph with N vertices and M edges that does not contain self loops and double edges 
The i th edge  1  leq i  leq M  connects Vertex a i and Vertex b i   
An edge whose removal disconnects the graph is called a bridge 
Find the number of the edges that are bridges among the M edges   

Notes
A self loop is an edge i such that a i b i  1  leq i  leq M  
Double edges are a pair of edges i j such that a i a j and b i b j  1  leq i j  leq M  
An undirected graph is said to be connected when there exists a path between every pair of vertices 


Constraints
2  leq N  leq 50
N 1  leq M  leq min N N 1  2 50 
1  leq a i b i  leq N
The given graph does not contain self loops and double edges 
The given graph is connected 


InputInput is given from Standard Input in the following format   
N M  
a 1 b 1  
a 2 b 2
   
a M b M


OutputPrint the number of the edges that are bridges among the M edges 

Sample Input 17 7
1 3
2 7
3 4
4 5
4 6
5 6
6 7


Sample Output 14

The figure below shows the given graph 



The edges shown in red are bridges  There are four of them 

Sample Input 23 3
1 2
1 3
2 3


Sample Output 20

It is possible that there is no bridge 

Sample Input 36 5
1 2
2 3
3 4
4 5
5 6


Sample Output 35

It is possible that every edge is a bridge"
Axis Parallel Rectangle,https://atcoder.jp/contests/abc075/tasks/abc075_d,"問題文2次元座標上に N 個の点があります  
i 1 i N  番目の点の座標は  x i y i  です  
長方形の内部に N 点のうち K 個以上の点を含みつつ それぞれの辺がX軸かY軸に平行な長方形を考えます 
このとき 長方形の辺上の点は長方形の内部に含みます  
それらの長方形の中で 最小の面積となるような長方形の面積を求めてください    

制約
2 K N 50 
 10 9 x i y i 10 9  1 i N  
x i x j  1 i j N  
y i y j  1 i j N  
入力値はすべて整数である  21 50 追記 


入力入力は以下の形式で標準入力から与えられる   
N K  
x 1 y 1
   
x  N  y  N 


出力条件を満たす長方形の中で最小面積となるような長方形の面積を出力せよ    

入力例 14 4
1 4
3 3
6 2
8 1


出力例 121

条件を満たす最小面積となる長方形の 1 つは　 1 1   8 1   1 4   8 4  の 4 つの頂点で構成されます 
その面積は  8 1     4 1    21 であるため 21 と出力します 

入力例 24 2
0 0
1 1
2 2
3 3


出力例 21


入力例 34 3
 1000000000  1000000000
1000000000 1000000000
 999999999 999999999
999999999  999999999


出力例 33999999996000000001

オーバーフローに注意してください 
Problem StatementWe have N points in a two dimensional plane 
The coordinates of the i th point  1  leq i  leq N  are  x i y i  
Let us consider a rectangle whose sides are parallel to the coordinate axes that contains K or more of the N points in its interior 
Here  points on the sides of the rectangle are considered to be in the interior 
Find the minimum possible area of such a rectangle   

Constraints
2  leq K  leq N  leq 50 
 10 9  leq x i y i  leq 10 9  1  leq i  leq N  
x i x j  1  leq i j  leq N  
y i y j  1  leq i j  leq N  
All input values are integers   Added at 21 50 JST   


InputInput is given from Standard Input in the following format   
N K  
x 1 y 1
   
x  N  y  N 


OutputPrint the minimum possible area of a rectangle that satisfies the condition   

Sample Input 14 4
1 4
3 3
6 2
8 1


Sample Output 121

One rectangle that satisfies the condition with the minimum possible area has the following vertices   1 1    8 1    1 4  and  8 4  
Its area is  8 1     4 1    21   

Sample Input 24 2
0 0
1 1
2 2
3 3


Sample Output 21


Sample Input 34 3
 1000000000  1000000000
1000000000 1000000000
 999999999 999999999
999999999  999999999


Sample Output 33999999996000000001

Watch out for integer overflows"
Rating Goal,https://atcoder.jp/contests/abc076/tasks/abc076_a,"問題文
高橋君はあるプログラミングコンテストが行われているサイトに参加しています  
ここでは  コンテストに出場した時にこの順位に応じて パフォーマンス というものがつき それによってレーティング  整数とは限らない  が次のように変化します 

現在のレーティングを a とする   
次のコンテストで  パフォーマンス b を取ったとする   
そのとき  レーティングは a と b の平均まで変化する   

例えば  レーティングが 1 の人が次のコンテストでパフォーマンス 1000 を取ったら  レーティングは 1 と 1000 の平均である 500 5 になります   
高橋君は  現在のレーティングが R で  次のコンテストでレーティングをちょうど G にしたいと思っています 
そのとき  高橋君が取るべきパフォーマンスを求めなさい   

制約

0  leq R  G  leq 4500
入力はすべて整数


入力
入力は以下の形式で標準入力から与えられる   
R
G


出力
高橋君が取るべきパフォーマンスを出力しなさい   

入力例 12002
2017


出力例 12032

高橋君の今のレーティングは 2002 です 
次のコンテストでパフォーマンス 2032 を取ると レーティングは 2002 と 2032 の平均である 2017 となり 目標を達成することができます   

入力例 24500
0


出力例 2 4500

現在のレーティングと目標のレーティングは 0 以上 4500 以下ですが 0 未満のパフォーマンスも取ることができます   
Problem StatementTakahashi is a user of a site that hosts programming contests 
When a user competes in a contest  the rating of the user  not necessarily an integer  changes according to the performance of the user  as follows   

Let the current rating of the user be a 
Suppose that the performance of the user in the contest is b 
Then  the new rating of the user will be the avarage of a and b 

For example  if a user with rating 1 competes in a contest and gives performance 1000  his her new rating will be 500 5  the average of 1 and 1000 
Takahashi s current rating is R  and he wants his rating to be exactly G after the next contest 
Find the performance required to achieve it   

Constraints
0  leq R  G  leq 4500
All input values are integers 


InputInput is given from Standard Input in the following format 
R
G


OutputPrint the performance required to achieve the objective 

Sample Input 12002
2017


Sample Output 12032

Takahashi s current rating is 2002 
If his performance in the contest is 2032  his rating will be the average of 2002 and 2032  which is equal to the desired rating  2017 

Sample Input 24500
0


Sample Output 2 4500

Although the current and desired ratings are between 0 and 4500  the performance of a user can be below 0"
Addition and Multiplication,https://atcoder.jp/contests/abc076/tasks/abc076_b,"問題文
square1001 は 電光掲示板に整数 1 が表示されているのを見ました 
彼は 電光掲示板に対して 以下の操作 A  操作 B をすることができます 

操作 A  電光掲示板に表示する整数を 今の電光掲示板の整数を 2 倍にしたもの に変える 
操作 B  電光掲示板に表示する整数を 今の電光掲示板の整数に K を足したもの に変える 

square1001 は 操作 A  操作 B 合計で N 回 行わなければなりません 
そのとき N 回の操作後の 電光掲示板に書かれている整数として考えられる最小の値を求めなさい 

制約

1  leq N  K  leq 10
入力はすべて整数である


入力
入力は以下の形式で標準入力から与えられる  
N
K


出力
square1001 が N 回操作を行った後の 電光掲示板に書かれている整数として考えられる最小値を出力しなさい 

入力例 14
3


出力例 110

高橋君は 操作 A  A  B  B の順でやると 整数を最小化できます 
この時 電光掲示板に書かれている整数は 1   2   4   7   10 と変わり 最終的に 10 となります 

入力例 210
10


出力例 276

高橋君は 操作 A  A  A  A  B  B  B  B  B  B の順にやると 整数を最小化できます 
この時 電光掲示板に書かれている整数は 1   2   4   8   16   26   36   46   56   66   76 と変わり 最終的に 76 となります 
なお 今日のコンテストは AtCoder Beginner Contest 076 です 
Problem StatementSquare1001 has seen an electric bulletin board displaying the integer 1 
He can perform the following operations A and B to change this value 

Operation A  The displayed value is doubled 
Operation B  The displayed value increases by K 

Square1001 needs to perform these operations N times in total 
Find the minimum possible value displayed in the board after N operations 

Constraints
1  leq N  K  leq 10
All input values are integers 


InputInput is given from Standard Input in the following format 
N
K


OutputPrint the minimum possible value displayed in the board after N operations 

Sample Input 14
3


Sample Output 110

The value will be minimized when the operations are performed in the following order  A  A  B  B 
In this case  the value will change as follows  1   2   4   7   10   

Sample Input 210
10


Sample Output 276

The value will be minimized when the operations are performed in the following order  A  A  A  A  B  B  B  B  B  B 
In this case  the value will change as follows  1   2   4   8   16   26   36   46   56   66   76   
By the way  this contest is AtCoder Beginner Contest 076"
Dubious Document 2,https://atcoder.jp/contests/abc076/tasks/abc076_c,"問題文
E869120 は 宝物が入ってそうな箱を見つけました 
しかし これには鍵がかかっており 鍵を開けるためには英小文字からなる文字列 S が必要です 
彼は文字列 S  を見つけ これは文字列 S の 0 個以上  S  個以内の文字が   に置き換わった文字列であることも分かりました 
ただし 文字列 A に対して  A  を 文字列 A の長さ とします   
そこで E869120 はヒントとなる紙を見つけました   

条件1 文字列 S の中に連続する部分文字列として英小文字から成る文字列 T が含まれている   
条件2 S は 条件1を満たす文字列の中で辞書順最小の文字列である 

そのとき 鍵となる文字列 S を出力しなさい 
ただし そのような文字列 S が存在しない場合は代わりに UNRESTORABLE と出力しなさい 

制約

1  leq  S     T   leq 50
S  は英小文字と   から成る
T は英小文字から成る


入力
入力は以下の形式で標準入力から与えられる 
S 
T


出力
鍵となる文字列 S を出力しなさい 
ただし そのような文字列 S が存在しない場合は 代わりに UNRESTORABLE と出力しなさい 

入力例 1 tc    
coder


出力例 1atcoder

条件1 を満たす文字列は atcoder  btcoder  ctcoder      ztcoder の 26 個がありますが その中で最も辞書順で小さいものは atcoder なので S   atcoder と特定できます 

入力例 2  p  d  
abc


出力例 2UNRESTORABLE

条件1を満たすような文字列 S が存在しないので 鍵となる文字列 S は存在しません 
Problem StatementE869120 found a chest which is likely to contain treasure 
However  the chest is locked  In order to open it  he needs to enter a string S consisting of lowercase English letters 
He also found a string S   which turns out to be the string S with some of its letters  possibly all or none  replaced with     
One more thing he found is a sheet of paper with the following facts written on it   

Condition 1  The string S contains a string T as a contiguous substring 
Condition 2  S is the lexicographically smallest string among the ones that satisfy Condition 1 

Print the string S 
If such a string does not exist  print UNRESTORABLE   

Constraints
1  leq  S     T   leq 50
S  consists of lowercase English letters and   
T consists of lowercase English letters 


InputInput is given from Standard Input in the following format 
S
T 


OutputPrint the string S 
If such a string does not exist  print UNRESTORABLE instead   

Sample Input 1 tc    
coder


Sample Output 1atcoder

There are 26 strings that satisfy Condition 1  atcoder  btcoder  ctcoder      ztcoder 
Among them  the lexicographically smallest is atcoder  so we can say S   atcoder 

Sample Input 2  p  d  
abc


Sample Output 2UNRESTORABLE

There is no string that satisfies Condition 1  so the string S does not exist"
AtCoder Express,https://atcoder.jp/contests/abc076/tasks/abc076_d,"問題文
2168年 AtCoder 社は成長し ついに  AtCoder特急  という鉄道を建設することを決めた 
さて 社長の高橋君は  AtCoder特急  の列車を以下のように運行することを計画した 

列車の走行時間は  t 1   t 2   t 3         t N  秒である 
最初の t 1 秒間は 列車は速度 v 1 m s 以内で走っていなければならない また 次の t 2 秒間は 列車は速度 v 2 m s 以内で走っていなければならない  次の t 3 秒間 またそれ以降についても同様である 
最後の t N 秒間は 列車は速度 v N m s 以内で走っていなければならない 

ただし 列車の性能上 加速度は  1m s 2 以内でなければならない また 走行開始時と走行終了時には列車は止まっていなければならない 
列車が発車してから停車するまでに走れる最大の距離を求めなさい 

制約

1  leq N  leq 100 
1  leq t i  leq 200
1  leq v i  leq 100
入力はすべて整数である


入力
入力は以下の形式で標準入力から与えられる   
N
t 1 t 2 t 3   t N
v 1 v 2 v 3   v N


出力
列車が発車してから停車するまでに走ることのできる最大の距離を出力しなさい 
ただし 絶対誤差が 10   3  以内であれば 正解となります 

入力例 11
100
30


出力例 12100 000000000000000



最初の 30 秒は 加速度を 1m s 2 にし 加速します その間に列車は 450m 走ります 
次の 40 秒は 速度 30m s を保ちます その間に列車は 1200m 走ります 
最後の 30 秒は 加速度を  1m s 2 にし 減速します その間に列車は 450m 走ります 

合計で 450   1200   450   2100m 走ることができます 

入力例 22
60 50
34 38


出力例 22632 000000000000000



最初の 34 秒は 加速度を 1m s 2 にし 加速します その間に列車は 578m 走ります 
次の 26 秒は 速度 34m s を保ちます その間に列車は 884m 走ります 
次の 4 秒は 加速度を 1m s 2 にし 加速します その間に列車は 144m 走ります 
次の 8 秒は 速度 38m s を保ちます その間は列車は 304m 走ります 
最後の 38 秒は 加速度を  1m s 2 にし 減速します その間に列車は 722m 走ります 

合計で 578   884   144   304   722   2632m 走ることができます 

入力例 33
12 14 2
6 2 7


出力例 376 000000000000000



最初の 6 秒は 加速度を 1m s 2 にし 加速します その間に列車は 18m 走ります 
次の 2 秒は 速度 6m s を保ちます その間に列車は 12m 走ります 
次の 4 秒は 加速度を  1m s 2 にし 減速します その間に列車は 16m 走ります 
次の 14 秒は 速度 2m s を保ちます その間は列車は 28m 走ります 
最後の 2 秒は 加速度を  1m s 2 にし 減速します その間に列車は 2m 走ります 

合計で 18   12   16   28   2   76m 走ることができます 

入力例 41
9
10


出力例 420 250000000000000000



最初の 4 5 秒は 加速度を 1m s 2 にし 加速します その間に列車は 10 125m 走ります 
最後の 4 5 秒は 加速度を  1m s 2 にし 減速します その間に列車は 10 125m 走ります 

合計で 10 125   10 125   20 25m 走ることができます 

入力例 510
64 55 27 35 76 119 7 18 49 100
29 19 31 39 27 48 41 87 55 70


出力例 520291 000000000000

Problem StatementIn the year 2168  AtCoder Inc   which is much larger than now  is starting a limited express train service called AtCoder Express 
In the plan developed by the president Takahashi  the trains will run as follows 

A train will run for  t 1   t 2   t 3         t N  seconds 
In the first t 1 seconds  a train must run at a speed of at most v 1 m s  meters per second   Similarly  in the subsequent t 2 seconds  a train must run at a speed of at most v 2 m s  and so on 

According to the specifications of the trains  the acceleration of a train must be always within  1m s 2  Additionally  a train must stop at the beginning and the end of the run 
Find the maximum possible distance that a train can cover in the run 

Constraints
1  leq N  leq 100
1  leq t i  leq 200
1  leq v i  leq 100
All input values are integers 


InputInput is given from Standard Input in the following format 
N
t 1 t 2 t 3   t N
v 1 v 2 v 3   v N


OutputPrint the maximum possible that a train can cover in the run 
Output is considered correct if its absolute difference from the judge s output is at most 10   3  

Sample Input 11
100
30


Sample Output 12100 000000000000000


The maximum distance is achieved when a train runs as follows 

In the first 30 seconds  it accelerates at a rate of 1m s 2  covering 450 meters 
In the subsequent 40 seconds  it maintains the velocity of 30m s  covering 1200 meters 
In the last 30 seconds  it decelerates at the acceleration of  1m s 2  covering 450 meters 

The total distance covered is 450   1200   450   2100 meters 

Sample Input 22
60 50
34 38


Sample Output 22632 000000000000000


The maximum distance is achieved when a train runs as follows 

In the first 34 seconds  it accelerates at a rate of 1m s 2  covering 578 meters 
In the subsequent 26 seconds  it maintains the velocity of 34m s  covering 884 meters 
In the subsequent 4 seconds  it accelerates at a rate of 1m s 2  covering 144 meters 
In the subsequent 8 seconds  it maintains the velocity of 38m s  covering 304 meters 
In the last 38 seconds  it decelerates at the acceleration of  1m s 2  covering 722 meters 

The total distance covered is 578   884   144   304   722   2632 meters 

Sample Input 33
12 14 2
6 2 7


Sample Output 376 000000000000000


The maximum distance is achieved when a train runs as follows 

In the first 6 seconds  it accelerates at a rate of 1m s 2  covering 18 meters 
In the subsequent 2 seconds  it maintains the velocity of 6m s  covering 12 meters 
In the subsequent 4 seconds  it decelerates at the acceleration of  1m s 2  covering 16 meters 
In the subsequent 14 seconds  it maintains the velocity of 2m s  covering 28 meters 
In the last 2 seconds  it decelerates at the acceleration of  1m s 2  covering 2 meters 

The total distance covered is 18   12   16   28   2   76 meters 

Sample Input 41
9
10


Sample Output 420 250000000000000000


The maximum distance is achieved when a train runs as follows 

In the first 4 5 seconds  it accelerates at a rate of 1m s 2  covering 10 125 meters 
In the last 4 5 seconds  it decelerates at the acceleration of  1m s 2  covering 10 125 meters 

The total distance covered is 10 125   10 125   20 25 meters 

Sample Input 510
64 55 27 35 76 119 7 18 49 100
29 19 31 39 27 48 41 87 55 70


Sample Output 520291 000000000000"
Rotation,https://atcoder.jp/contests/abc077/tasks/abc077_a,"問題文縦 2 マス 横 3 マスのマス目が与えられます 上から i 行目 左から j 行目のマスの色は C  ij  で表されます 
このマス目を 180 度回転させたとき 元のマス目と一致するなら YES を そうでないなら NO を出力するプログラムを作成してください 

制約
C  ij  1  leq i  leq 2  1  leq j  leq 3  は英小文字である 


入力入力は以下の形式で標準入力から与えられる 
C  11 C  12 C  13 
C  21 C  22 C  23 


出力マス目を 180 度回転させたとき 元のマス目と一致するなら YES を そうでないなら NO を出力せよ 

入力例 1pot
top


出力例 1YES

マス目を 180 度回転させると 元のマス目と一致します 

入力例 2tab
bet


出力例 2NO

マス目を 180 度回転させても 元のマス目と一致しません 

入力例 3eye
eel


出力例 3NO

Problem StatementYou are given a grid with 2 rows and 3 columns of squares 
The color of the square at the i th row and j th column is represented by the character C  ij  
Write a program that prints YES if this grid remains the same when rotated 180 degrees  and prints NO otherwise 

Constraints
C  i j  1  leq i  leq 2  1  leq j  leq 3  is a lowercase English letter 


InputInput is given from Standard Input in the following format 
C  11 C  12 C  13 
C  21 C  22 C  23 


OutputPrint YES if this grid remains the same when rotated 180 degrees  print NO otherwise 

Sample Input 1pot
top


Sample Output 1YES

This grid remains the same when rotated 180 degrees 

Sample Input 2tab
bet


Sample Output 2NO

This grid does not remain the same when rotated 180 degrees 

Sample Input 3eye
eel


Sample Output 3NO"
Around Square,https://atcoder.jp/contests/abc077/tasks/abc077_b,"問題文N 以下の平方数のうち 最大のものを求めてください 
ただし 平方数とは ある整数の 2 乗として表せる整数のことを指します 

制約
1  leq N  leq 10 9
N は整数である


入力入力は以下の形式で標準入力から与えられる 
N


出力N 以下の平方数のうち 最大のものを出力せよ 

入力例 110


出力例 19

10 は平方数ではなく 9   3   3 は平方数なので 9 を出力します 

入力例 281


出力例 281


入力例 3271828182


出力例 3271821169

Problem StatementFind the largest square number not exceeding N  Here  a square number is an integer that can be represented as the square of an integer 

Constraints
1  leq N  leq 10 9
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputPrint the largest square number not exceeding N 

Sample Input 110


Sample Output 19

10 is not square  but 9   3   3 is  Thus  we print 9 

Sample Input 281


Sample Output 281


Sample Input 3271828182


Sample Output 3271821169"
HEX,https://atcoder.jp/contests/abc078/tasks/abc078_a,"問題文プログラミングでは 16 進数がよく使われます 
16 進数では 0  1       9 の数字の他に A  B  C  D  E  F の 6 つのアルファベットを使い それぞれ 10  11  12  13  14  15 を表します 
この問題では 2 つのアルファベット X  Y が与えられます 
X と Y はどちらも A  B  C  D  E  F のうちどれかです 
X と Y を 16 進数として見たとき どちらのほうが大きいかを判定してください 

制約
X  Y は A  B  C  D  E  F のうちどれかである 


入力入力は以下の形式で標準入力から与えられる 
X Y


出力X のほうが小さいならば   Y のほうが小さいならば   等しいならば   と出力してください 

入力例 1A B


出力例 1 

10   11 です 

入力例 2E C


出力例 2 

14   12 です 

入力例 3F F


出力例 3 

15   15 です 
Problem StatementIn programming  hexadecimal notation is often used 
In hexadecimal notation  besides the ten digits 0  1       9  the six letters A  B  C  D  E and F are used to represent the values 10  11  12  13  14 and 15  respectively 
In this problem  you are given two letters X and Y  Each X and Y is A  B  C  D  E or F 
When X and Y are seen as hexadecimal numbers  which is larger 

Constraints
Each X and Y is A  B  C  D  E or F 


InputInput is given from Standard Input in the following format 
X Y


OutputIf X is smaller  print    if Y is smaller  print    if they are equal  print   

Sample Input 1A B


Sample Output 1 

10   11 

Sample Input 2E C


Sample Output 2 

14   12 

Sample Input 3F F


Sample Output 3 

15   15"
ISU,https://atcoder.jp/contests/abc078/tasks/abc078_b,"問題文幅 X センチメートルの椅子があります 
この椅子に座りたい人がたくさんおり 人は椅子に座ると必ず Y センチメートルの幅を使って座ります 
出来る限りたくさんの人を椅子に座らせたいですが 
人はみなシャイなので 人と人の間 また椅子の端と人の間には 
少なくとも Z センチメートル間を開ける必要があります 
最大で何人座ることができますか 

制約
入力は全て整数
1  leq X  Y  Z  leq 10 5
Y 2Z  leq X


入力入力は以下の形式で標準入力から与えられる 
X Y Z


出力求めた答えを出力してください 

入力例 113 3 1


出力例 13

下図のように座れば ぴったし 3 人座ることが出来ます 


図


入力例 212 3 1


出力例 22


入力例 3100000 1 1


出力例 349999


入力例 464146 123 456


出力例 4110


入力例 564145 123 456


出力例 5109

Problem StatementWe have a long seat of width X centimeters 
There are many people who wants to sit here  A person sitting on the seat will always occupy an interval of length Y centimeters 
We would like to seat as many people as possible  but they are all very shy  and there must be a gap of length at least Z centimeters between two people  and between the end of the seat and a person 
At most how many people can sit on the seat 

Constraints
All input values are integers 
1  leq X  Y  Z  leq 10 5
Y 2Z  leq X


InputInput is given from Standard Input in the following format 
X Y Z


OutputPrint the answer 

Sample Input 113 3 1


Sample Output 13

There is just enough room for three  as shown below 


Figure


Sample Input 212 3 1


Sample Output 22


Sample Input 3100000 1 1


Sample Output 349999


Sample Input 464146 123 456


Sample Output 4110


Sample Input 564145 123 456


Sample Output 5109"
Good Integer,https://atcoder.jp/contests/abc079/tasks/abc079_a,"問題文1118 のような 3 つ以上の同じ数字が連続して並んだ 4 桁の整数を 良い整数 とします 
4 桁の整数 N が与えられるので N が 良い整数 かどうかを答えてください 

制約
1000 N 9999
入力は整数からなる


入力入力は以下の形式で標準入力から与えられる 
N


出力N が 良い整数 ならば Yes を そうでなければ No を出力せよ 

入力例 11118


出力例 1Yes

1 が 3 つ連続して並んでいるので 良い整数 です 

入力例 27777


出力例 2Yes

全ての数字が同じ場合も 良い整数 になります 

入力例 31234


出力例 3No

Problem StatementWe call a 4 digit integer with three or more consecutive same digits  such as 1118  good 
You are given a 4 digit integer N  Answer the question  Is N good 

Constraints
1000   N   9999
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputIf N is good  print Yes  otherwise  print No 

Sample Input 11118


Sample Output 1Yes

N is good  since it contains three consecutive 1 

Sample Input 27777


Sample Output 2Yes

An integer is also good when all the digits are the same 

Sample Input 31234


Sample Output 3No"
Lucas Number,https://atcoder.jp/contests/abc079/tasks/abc079_b,"問題文今 日本は 11 月 18 日ですが 11 と 18 は隣り合うリュカ数です 
整数 N が与えられるので N 番目のリュカ数を求めてください 
ただし リュカ数は i 番目のリュカ数を L i とすると 

L 0 2
L 1 1
L i L  i 1  L  i 2   i 2 

と定義される数とします 

制約
1 N 86
答えは 10  18  より小さいことが保証される
入力は整数からなる


入力入力は以下の形式で標準入力から与えられる 
N


出力N 番目のリュカ数を出力せよ 

入力例 15


出力例 111


L 0 2
L 1 1
L 2 L 0 L 1 3
L 3 L 1 L 2 4
L 4 L 2 L 3 7
L 5 L 3 L 4 11

より 5 番目のリュカ数は 11 です 

入力例 286


出力例 2939587134549734843

Problem StatementIt is November 18 now in Japan  By the way  11 and 18 are adjacent Lucas numbers 
You are given an integer N  Find the N th Lucas number 
Here  the i th Lucas number L i is defined as follows 

L 0 2
L 1 1
L i L  i 1  L  i 2   i 2 


Constraints
1 N 86
It is guaranteed that the answer is less than 10  18  
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputPrint the N th Lucas number 

Sample Input 15


Sample Output 111


L 0 2
L 1 1
L 2 L 0 L 1 3
L 3 L 1 L 2 4
L 4 L 2 L 3 7
L 5 L 3 L 4 11

Thus  the 5 th Lucas number is 11 

Sample Input 286


Sample Output 2939587134549734843"
Train Ticket,https://atcoder.jp/contests/abc079/tasks/abc079_c,"問題文駅の待合室に座っているjoisinoお姉ちゃんは 切符を眺めています 
切符には 4 つの 0 以上 9 以下の整数 A B C D が整理番号としてこの順に書かれています 
A op1 B op2 C op3 D   7 となるように op1 op2 op3 に   か   を入れて式を作って下さい 
なお 答えが存在しない入力は与えられず また答えが複数存在する場合はどれを出力してもよいものとします 

制約
0 A B C D 9
入力は整数からなる
答えが存在しない入力は与えられない


入力入力は以下の形式で標準入力から与えられる 
ABCD


出力作った式を  7 の部分を含めて出力せよ 
ただし 記号は半角で出力せよ 
また 数字と記号の間に空白を入れてはならない 

入力例 11222


出力例 11 2 2 2 7

1   2   2   2   7 が条件を満たします 

入力例 20290


出力例 20 2 9 0 7

この他に 0   2   9   0   7 が条件を満たします 

入力例 33242


出力例 33 2 4 2 7

Problem StatementSitting in a station waiting room  Joisino is gazing at her train ticket 
The ticket is numbered with four digits A  B  C and D in this order  each between 0 and 9  inclusive  
In the formula A op1 B op2 C op3 D   7  replace each of the symbols op1  op2 and op3 with   or   so that the formula holds 
The given input guarantees that there is a solution  If there are multiple solutions  any of them will be accepted 

Constraints
0 A B C D 9
All input values are integers 
It is guaranteed that there is a solution 


InputInput is given from Standard Input in the following format 
ABCD


OutputPrint the formula you made  including the part  7 
Use the signs   and   
Do not print a space between a digit and a sign 

Sample Input 11222


Sample Output 11 2 2 2 7

This is the only valid solution 

Sample Input 20290


Sample Output 20 2 9 0 7

0   2   9   0   7 is also a valid solution 

Sample Input 33242


Sample Output 33 2 4 2 7"
Wall,https://atcoder.jp/contests/abc079/tasks/abc079_d,"問題文魔法少女のjoisinoお姉ちゃんは この世にあるすべての数字を 1 に変えてやろうと思い立ちました 
1 つの数字を i から j 0 i j 9  に書き変えるには魔力 c  i j  が必要です 
今 目の前にある壁は縦方向に H 横方向に W のマス目になっていて 1 つ以上のマス目に 0 以上 9 以下の整数が 1 つずつ書かれています 
上から i 1 i H  番目 左から j 1 j W  番目のマスの情報として A  i j  が与えられ 

A  i j   1 の場合はマスに A  i j  が書かれている
A  i j   1 の場合はマスに数字が書かれていない

ことを意味します 
この壁に書かれている数字を最終的に全て 1 に変えるのに必要な魔力の最小量を求めてください 

制約
1 H W 200
1 c  i j  10 3  i j 
c  i j  0  i j 
 1 A  i j  9
入力は整数からなる
壁には一つ以上の整数が書かれている


入力入力は以下の形式で標準入力から与えられる 
H W
c  0 0      c  0 9 
 
c  9 0      c  9 9 
A  1 1      A  1 W 
 
A  H 1      A  H W 


出力壁に書かれている数字を最終的に全て 1 に変えるのに必要な魔力の最小量を出力せよ 

入力例 12 4
0 9 9 9 9 9 9 9 9 9
9 0 9 9 9 9 9 9 9 9
9 9 0 9 9 9 9 9 9 9
9 9 9 0 9 9 9 9 9 9
9 9 9 9 0 9 9 9 9 2
9 9 9 9 9 0 9 9 9 9
9 9 9 9 9 9 0 9 9 9
9 9 9 9 9 9 9 0 9 9
9 9 9 9 2 9 9 9 0 9
9 2 9 9 9 9 9 9 9 0
 1  1  1  1
8 1 1 8


出力例 112

8 を 1 に変えるとき  8 を 4 に変え その後 4 を 9 に 9 を 1 に変えると必要な魔力が最小となります 
壁には 8 が 2 つ書かれているので 必要な魔力の最小量は 6 2 12です 

入力例 25 5
0 999 999 999 999 999 999 999 999 999
999 0 999 999 999 999 999 999 999 999
999 999 0 999 999 999 999 999 999 999
999 999 999 0 999 999 999 999 999 999
999 999 999 999 0 999 999 999 999 999
999 999 999 999 999 0 999 999 999 999
999 999 999 999 999 999 0 999 999 999
999 999 999 999 999 999 999 0 999 999
999 999 999 999 999 999 999 999 0 999
999 999 999 999 999 999 999 999 999 0
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1


出力例 20

壁に書かれている数字を全く変える必要がない場合に注意してください 

入力例 33 5
0 4 3 6 2 7 2 5 3 3
4 0 5 3 7 5 3 7 2 7
5 7 0 7 2 9 3 2 9 1
3 6 2 0 2 4 6 4 2 3
3 5 7 4 0 6 9 7 6 7
9 8 5 2 2 0 4 7 6 5
5 4 6 3 2 3 0 5 4 3
3 6 2 3 4 2 4 0 8 9
4 6 5 4 3 5 3 2 0 8
2 1 3 4 5 7 8 6 4 0
3 5 2 6 1
2 5 3 2 1
6 9 2 5 6


出力例 347

Problem StatementJoisino the magical girl has decided to turn every single digit that exists on this world into 1 
Rewriting a digit i with j  0 i j 9  costs c  i j  MP  Magic Points  
She is now standing before a wall  The wall is divided into HW squares in H rows and W columns  and at least one square contains a digit between 0 and 9  inclusive  
You are given A  i j  that describes the square at the i th row from the top and j th column from the left  as follows 

If A  i j   1  the square contains a digit A  i j  
If A  i j   1  the square does not contain a digit 

Find the minimum total amount of MP required to turn every digit on this wall into 1 in the end 

Constraints
1 H W 200
1 c  i j  10 3  i j 
c  i j  0  i j 
 1 A  i j  9
All input values are integers 
There is at least one digit on the wall 


InputInput is given from Standard Input in the following format 
H W
c  0 0      c  0 9 
 
c  9 0      c  9 9 
A  1 1      A  1 W 
 
A  H 1      A  H W 


OutputPrint the minimum total amount of MP required to turn every digit on the wall into 1 in the end 

Sample Input 12 4
0 9 9 9 9 9 9 9 9 9
9 0 9 9 9 9 9 9 9 9
9 9 0 9 9 9 9 9 9 9
9 9 9 0 9 9 9 9 9 9
9 9 9 9 0 9 9 9 9 2
9 9 9 9 9 0 9 9 9 9
9 9 9 9 9 9 0 9 9 9
9 9 9 9 9 9 9 0 9 9
9 9 9 9 2 9 9 9 0 9
9 2 9 9 9 9 9 9 9 0
 1  1  1  1
8 1 1 8


Sample Output 112

To turn a single 8 into 1  it is optimal to first turn 8 into 4  then turn 4 into 9  and finally turn 9 into 1  costing 6 MP 
The wall contains two 8s  so the minimum total MP required is 6 2 12 

Sample Input 25 5
0 999 999 999 999 999 999 999 999 999
999 0 999 999 999 999 999 999 999 999
999 999 0 999 999 999 999 999 999 999
999 999 999 0 999 999 999 999 999 999
999 999 999 999 0 999 999 999 999 999
999 999 999 999 999 0 999 999 999 999
999 999 999 999 999 999 0 999 999 999
999 999 999 999 999 999 999 0 999 999
999 999 999 999 999 999 999 999 0 999
999 999 999 999 999 999 999 999 999 0
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1


Sample Output 20

Note that she may not need to change any digit 

Sample Input 33 5
0 4 3 6 2 7 2 5 3 3
4 0 5 3 7 5 3 7 2 7
5 7 0 7 2 9 3 2 9 1
3 6 2 0 2 4 6 4 2 3
3 5 7 4 0 6 9 7 6 7
9 8 5 2 2 0 4 7 6 5
5 4 6 3 2 3 0 5 4 3
3 6 2 3 4 2 4 0 8 9
4 6 5 4 3 5 3 2 0 8
2 1 3 4 5 7 8 6 4 0
3 5 2 6 1
2 5 3 2 1
6 9 2 5 6


Sample Output 347"
Parking,https://atcoder.jp/contests/abc080/tasks/abc080_a,"問題文駐車場があり 以下の二種類のプランのどちらかを選んで駐車できます 

プラン 1   T 時間駐車した場合 A T 円が駐車料金となる 
プラン 2   駐車した時間に関わらず B 円が駐車料金となる 

N 時間駐車するとき 駐車料金は最小でいくらになるか求めてください 

制約
1 N 20
1 A 100
1 B 2000
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N A B


出力駐車料金が最小で x 円のとき x を出力せよ 

入力例 17 17 120


出力例 1119


プラン 1 を選んだ場合 駐車料金は 7 17 119 円になります 
プラン 2 を選んだ場合 駐車料金は 120 円になります 

よって 駐車料金は最小で 119 円です 

入力例 25 20 100


出力例 2100

どちらのプランを選んでも駐車料金が変わらない場合もあります 

入力例 36 18 100


出力例 3100

Problem StatementYou are parking at a parking lot  You can choose from the following two fee plans 

Plan 1  The fee will be A T yen  the currency of Japan  when you park for T hours 
Plan 2  The fee will be B yen  regardless of the duration 

Find the minimum fee when you park for N hours 

Constraints
1 N 20
1 A 100
1 B 2000
All input values are integers 


InputInput is given from Standard Input in the following format 
N A B


OutputWhen the minimum fee is x yen  print the value of x 

Sample Input 17 17 120


Sample Output 1119


If you choose Plan 1  the fee will be 7 17 119 yen 
If you choose Plan 2  the fee will be 120 yen 

Thus  the minimum fee is 119 yen 

Sample Input 25 20 100


Sample Output 2100

The fee might be the same in the two plans 

Sample Input 36 18 100


Sample Output 3100"
Harshad Number,https://atcoder.jp/contests/abc080/tasks/abc080_b,"問題文整数 X を十進法で表したときの各桁の数字の和を f X  としたとき X が f X  で割り切れる場合 X はハーシャッド数です 
整数 N が与えられるので ハーシャッド数かどうか判定してください 

制約
1 N 10 8
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N


出力N がハージャッド数ならば Yes を そうでなければ No を出力せよ 

入力例 112


出力例 1Yes

f 12  1 2 3 より 12 は 3 で割り切れるので 12 はハーシャッド数です 

入力例 257


出力例 2No

f 57  5 7 12 より 57 は 12 で割り切れないので 57 はハーシャッド数ではありません 

入力例 3148


出力例 3No

Problem StatementAn integer X is called a Harshad number if X is divisible by f X   where f X  is the sum of the digits in X when written in base 10 
Given an integer N  determine whether it is a Harshad number 

Constraints
1 N 10 8
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputPrint Yes if N is a Harshad number  print No otherwise 

Sample Input 112


Sample Output 1Yes

f 12  1 2 3  Since 12 is divisible by 3  12 is a Harshad number 

Sample Input 257


Sample Output 2No

f 57  5 7 12  Since 57 is not divisible by 12  12 is not a Harshad number 

Sample Input 3148


Sample Output 3No"
Shopping Street,https://atcoder.jp/contests/abc080/tasks/abc080_c,nan
Recording,https://atcoder.jp/contests/abc080/tasks/abc080_d,"問題文joisinoお姉ちゃんは 録画機を用いて N 個のテレビ番組を録画しようとしています 
テレビが受信できるチャンネルは C 個あり 1 から C までの番号がついています 
joisinoお姉ちゃんの録画したいテレビ番組のうち i 個目のテレビ番組は 時刻 s i から時刻 t i まで チャンネル c i で放送されます  ただし時刻 s i を含み 時刻 t i を除く 
ただし 同じチャンネルで複数のテレビ番組が同時に放送されることはありません 
また 録画機は あるチャンネルの時刻 S から時刻 T までを録画するとき 時刻 S 0 5 から時刻 T までの間 他のチャンネルの録画に使うことができません  ただし時刻 S 0 5を含み 時刻 T を除く 
N 個のテレビ番組の全ての放送内容が含まれるように録画するとき 必要な録画機の最小個数を求めてください 

制約
1 N 10 5
1 C 30
1 s i t i 10 5
1 c i C
c i c j かつ i j ならば t i s j か s i t j が成り立つ
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N C
s 1 t 1 c 1
 
s N t N c N


出力必要な録画機の最小個数が x 個のとき  x を出力せよ 

入力例 13 2
1 7 2
7 8 1
8 12 1


出力例 12

例えば 録画機 2 個を用いて 以下のように録画することができます 

1 個目の録画機を用いて 時刻 1 から時刻 7 までチャンネル 2 を録画します このとき 1 個目のテレビ番組が録画されます また 時刻 0 5 から時刻 7 まではこの録画機を他のチャンネルの録画に使えないことに注意してください 
2 個目の録画機を用いて 時刻 7 から時刻 12 までチャンネル 1 を録画します このとき  2 個目と 3 個目のテレビ番組が録画されます また 時刻 6 5 から時刻 12 まではこの録画機を他のチャンネルの録画に使えないことに注意してください 


入力例 23 4
1 3 2
3 4 4
1 4 3


出力例 23

録画するテレビ番組がないチャンネルがある場合もあります 

入力例 39 4
56 60 4
33 37 2
89 90 3
32 43 1
67 68 3
49 51 3
31 32 3
70 71 1
11 12 3


出力例 32

Problem StatementJoisino is planning to record N TV programs with recorders 
The TV can receive C channels numbered 1 through C 
The i th program that she wants to record will be broadcast from time s i to time t i  including time s i but not t i  on Channel c i 
Here  there will never be more than one program that are broadcast on the same channel at the same time 
When the recorder is recording a channel from time S to time T  including time S but not T   it cannot record other channels from time S 0 5 to time T  including time S 0 5 but not T  
Find the minimum number of recorders required to record the channels so that all the N programs are completely recorded 

Constraints
1 N 10 5
1 C 30
1 s i t i 10 5
1 c i C
If c i c j and i j  either t i s j or s i t j 
All input values are integers 


InputInput is given from Standard Input in the following format 
N C
s 1 t 1 c 1
 
s N t N c N


OutputWhen the minimum required number of recorders is x  print the value of x 

Sample Input 13 2
1 7 2
7 8 1
8 12 1


Sample Output 12

Two recorders can record all the programs  for example  as follows 

With the first recorder  record Channel 2 from time 1 to time 7  The first program will be recorded  Note that this recorder will be unable to record other channels from time 0 5 to time 7 
With the second recorder  record Channel 1 from time 7 to time 12  The second and third programs will be recorded  Note that this recorder will be unable to record other channels from time 6 5 to time 12 


Sample Input 23 4
1 3 2
3 4 4
1 4 3


Sample Output 23

There may be a channel where there is no program to record 

Sample Input 39 4
56 60 4
33 37 2
89 90 3
32 43 1
67 68 3
49 51 3
31 32 3
70 71 1
11 12 3


Sample Output 32"
Placing Marbles,https://atcoder.jp/contests/abc081/tasks/abc081_a,"問題文すぬけ君は 1 2 3 の番号がついた 3 つのマスからなるマス目を持っています 
各マスには 0 か 1 が書かれており マス i には s i が書かれています 
すぬけ君は 1 が書かれたマスにビー玉を置きます 
ビー玉が置かれるマスがいくつあるか求めてください 

制約
s 1  s 2  s 3 は 1 あるいは 0


入力入力は以下の形式で標準入力から与えられる 
s  1 s  2 s  3 


出力答えを出力せよ 

入力例 1101


出力例 12


マス 1 3 にビー玉が置かれます


入力例 2000


出力例 20


ビー玉はどのマスにも置かれません

Problem StatementSnuke has a grid consisting of three squares numbered 1  2 and 3 
In each square  either 0 or 1 is written  The number written in Square i is s i 
Snuke will place a marble on each square that says 1 
Find the number of squares on which Snuke will place a marble 

Constraints
Each of s 1  s 2 and s 3 is either 1 or 0 


InputInput is given from Standard Input in the following format 
s  1 s  2 s  3 


OutputPrint the answer 

Sample Input 1101


Sample Output 12


A marble will be placed on Square 1 and 3 


Sample Input 2000


Sample Output 20


No marble will be placed on any square"
Shift only,https://atcoder.jp/contests/abc081/tasks/abc081_b,"問題文黒板に N 個の正の整数 A 1       A N が書かれています 
すぬけ君は 黒板に書かれている整数がすべて偶数であるとき 次の操作を行うことができます 

黒板に書かれている整数すべてを 2 で割ったものに置き換える 

すぬけ君は最大で何回操作を行うことができるかを求めてください 

制約
1  leq N  leq 200
1  leq A i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N
A 1 A 2     A N


出力すぬけ君は最大で何回操作を行うことができるかを出力せよ 

入力例 13
8 12 40


出力例 12

最初 黒板には  8  12  40  が書かれています 
このとき 書かれている整数はすべて偶数なので 操作を行うことができます 
1 回操作を行った後 黒板には  4  6  20  が書かれています 
再び 書かれている整数はすべて偶数なので 操作を行うことができます 
2 回操作を行った後 黒板には  2  3  10  が書かれています 
この時 奇数 3 が書かれているため これ以上操作を行うことはできません 
よって すぬけ君は最大で 2 回操作を行うことができます 

入力例 24
5 6 8 10


出力例 20

最初から奇数 5 が書かれているため すぬけ君は一回も操作を行うことができません 

入力例 36
382253568 723152896 37802240 379425024 404894720 471526144


出力例 38

Problem StatementThere are N positive integers written on a blackboard  A 1       A N 
Snuke can perform the following operation when all integers on the blackboard are even 

Replace each integer X on the blackboard by X divided by 2 

Find the maximum possible number of operations that Snuke can perform 

Constraints
1  leq N  leq 200
1  leq A i  leq 10 9


InputInput is given from Standard Input in the following format 
N
A 1 A 2     A N


OutputPrint the maximum possible number of operations that Snuke can perform 

Sample Input 13
8 12 40


Sample Output 12

Initially   8  12  40  are written on the blackboard 
Since all those integers are even  Snuke can perform the operation 
After the operation is performed once   4  6  20  are written on the blackboard 
Since all those integers are again even  he can perform the operation 
After the operation is performed twice   2  3  10  are written on the blackboard 
Now  there is an odd number 3 on the blackboard  so he cannot perform the operation any more 
Thus  Snuke can perform the operation at most twice 

Sample Input 24
5 6 8 10


Sample Output 20

Since there is an odd number 5 on the blackboard already in the beginning  Snuke cannot perform the operation at all 

Sample Input 36
382253568 723152896 37802240 379425024 404894720 471526144


Sample Output 38"
Round Up the Mean,https://atcoder.jp/contests/abc082/tasks/abc082_a,"問題文2 つの正整数 a  b が与えられます 
a  b の平均値を x とします 
x の小数点以下を切り上げて得られる整数を出力してください 

制約
a  b は整数である 
1  leq a  b  leq 100


入力入力は以下の形式で標準入力から与えられる 
a b


出力x の小数点以下を切り上げて得られる整数を出力せよ 

入力例 11 3


出力例 12

1  3 の平均値は 2 0 であり 小数点以下を切り上げて得られる整数は 2 です 

入力例 27 4


出力例 26

7  4 の平均値は 5 5 であり 小数点以下を切り上げて得られる整数は 6 です 

入力例 35 5


出力例 35

Problem StatementYou are given two positive integers a and b 
Let x be the average of a and b 
Print x rounded up to the nearest integer 

Constraints
a and b are integers 
1  leq a  b  leq 100


InputInput is given from Standard Input in the following format 
a b


OutputPrint x rounded up to the nearest integer 

Sample Input 11 3


Sample Output 12

The average of 1 and 3 is 2 0  and it will be rounded up to the nearest integer  2 

Sample Input 27 4


Sample Output 26

The average of 7 and 4 is 5 5  and it will be rounded up to the nearest integer  6 

Sample Input 35 5


Sample Output 35"
Two Anagrams,https://atcoder.jp/contests/abc082/tasks/abc082_b,"問題文英小文字のみからなる文字列 s  t が与えられます 
あなたは s の文字を好きな順に並べ替え 文字列 s  を作ります 
また t の文字を好きな順に並べ替え 文字列 t  を作ります 
このとき 辞書順で s    t  となるようにできるか判定してください 

注釈長さ N の文字列 a   a 1 a 2     a N および長さ M の文字列 b   b 1 b 2     b M について 辞書順で a   b であるとは 次の 2 つの条件のいずれかが成り立つことをいう 

N   M かつ a 1   b 1  a 2   b 2       a N   b N である 
ある i  1  leq i  leq N  M  が存在して a 1   b 1  a 2   b 2       a  i   1    b  i   1  かつ a i   b i である  ただし 文字どうしはアルファベット順で比較される 

例えば xy   xya であり atcoder   atlas である 

制約
s  t の長さは 1 以上 100 以下である 
s  t は英小文字のみからなる 


入力入力は以下の形式で標準入力から与えられる 
s
t


出力辞書順で s    t  となるようにできるならば Yes を できないならば No を出力せよ 

入力例 1yx
axy


出力例 1Yes

例えば yx を xy と並べ替え axy を yxa と並べ替えれば xy   yxa となります 

入力例 2ratcode
atlas


出力例 2Yes

例えば ratcode を acdeort と並べ替え atlas を tslaa と並べ替えれば acdeort   tslaa となります 

入力例 3cd
abc


出力例 3No

cd  abc をそれぞれどのように並べ替えても 目標を達成できません 

入力例 4w
ww


出力例 4Yes


入力例 5zzz
zzz


出力例 5No

Problem StatementYou are given strings s and t  consisting of lowercase English letters 
You will create a string s  by freely rearranging the characters in s 
You will also create a string t  by freely rearranging the characters in t 
Determine whether it is possible to satisfy s    t  for the lexicographic order 

NotesFor a string a   a 1 a 2     a N of length N and a string b   b 1 b 2     b M of length M  we say a   b for the lexicographic order if either one of the following two conditions holds true 

N   M and a 1   b 1  a 2   b 2       a N   b N 
There exists i  1  leq i  leq N  M  such that a 1   b 1  a 2   b 2       a  i   1    b  i   1  and a i   b i  Here  letters are compared using alphabetical order 

For example  xy   xya and atcoder   atlas 

Constraints
The lengths of s and t are between 1 and 100  inclusive  
s and t consists of lowercase English letters 


InputInput is given from Standard Input in the following format 
s
t


OutputIf it is possible to satisfy s    t   print Yes  if it is not  print No 

Sample Input 1yx
axy


Sample Output 1Yes

We can  for example  rearrange yx into xy and axy into yxa  Then  xy   yxa 

Sample Input 2ratcode
atlas


Sample Output 2Yes

We can  for example  rearrange ratcode into acdeort and atlas into tslaa  Then  acdeort   tslaa 

Sample Input 3cd
abc


Sample Output 3No

No matter how we rearrange cd and abc  we cannot achieve our objective 

Sample Input 4w
ww


Sample Output 4Yes


Sample Input 5zzz
zzz


Sample Output 5No"
Libra,https://atcoder.jp/contests/abc083/tasks/abc083_a,"問題文上皿天秤は 左の皿に乗っているおもりの重さの合計を L とし 右の皿に乗っているおもりの重さの合計を R としたとき 
L R なら左に傾き L R なら釣り合い L R なら右に傾きます 
高橋君は 上皿天秤の左の皿に重さ A のおもりと重さ B のおもりを 右の皿に重さ C のおもりと重さ D のおもりを置きました 
上皿天秤が左に傾くなら Left を 釣り合うなら Balanced を 右に傾くなら Right を出力してください 

制約
1 leq A B C D  leq 10
入力はすべて整数である


入力入力は以下の形式で標準入力から与えられる 
A B C D


出力上皿天秤が左に傾くなら Left を 釣り合うなら Balanced を 右に傾くなら Right を出力せよ 

入力例 13 8 7 1


出力例 1Left

左の皿の上のおもりの重さの合計は 11  右の皿の上のおもりの重さの合計は 8 です 11 8 なので Left を出力します 

入力例 23 4 5 2


出力例 2Balanced

左の皿の上のおもりの重さの合計は 7  右の皿の上のおもりの重さの合計は 7 です 7 7 なので Balanced を出力します 

入力例 31 7 6 4


出力例 3Right

左の皿の上のおもりの重さの合計は 8  右の皿の上のおもりの重さの合計は 10 です 8 10 なので Right を出力します 
Problem StatementA balance scale tips to the left if L R  where L is the total weight of the masses on the left pan and R is the total weight of the masses on the right pan  Similarly  it balances if L R  and tips to the right if L R 
Takahashi placed a mass of weight A and a mass of weight B on the left pan of a balance scale  and placed a mass of weight C and a mass of weight D on the right pan 
Print Left if the balance scale tips to the left  print Balanced if it balances  print Right if it tips to the right 

Constraints
1 leq A B C D  leq 10
All input values are integers 


InputInput is given from Standard Input in the following format 
A B C D


OutputPrint Left if the balance scale tips to the left  print Balanced if it balances  print Right if it tips to the right 

Sample Input 13 8 7 1


Sample Output 1Left

The total weight of the masses on the left pan is 11  and the total weight of the masses on the right pan is 8  Since 11 8  we should print Left 

Sample Input 23 4 5 2


Sample Output 2Balanced

The total weight of the masses on the left pan is 7  and the total weight of the masses on the right pan is 7  Since 7 7  we should print Balanced 

Sample Input 31 7 6 4


Sample Output 3Right

The total weight of the masses on the left pan is 8  and the total weight of the masses on the right pan is 10  Since 8 10  we should print Right"
Some Sums,https://atcoder.jp/contests/abc083/tasks/abc083_b,"問題文1 以上 N 以下の整数のうち 10 進法での各桁の和が A 以上 B 以下であるものの総和を求めてください 

制約
1  leq N  leq 10 4
1  leq A  leq B  leq 36
入力はすべて整数である


入力入力は以下の形式で標準入力から与えられる 
N A B


出力1 以上 N 以下の整数のうち 10 進法での各桁の和が A 以上 B 以下であるものの総和を出力せよ 

入力例 120 2 5


出力例 184

20 以下の整数のうち 各桁の和が 2 以上 5 以下なのは 2 3 4 5 11 12 13 14 20 です これらの合計である 84 を出力します 

入力例 210 1 2


出力例 213


入力例 3100 4 16


出力例 34554

Problem StatementFind the sum of the integers between 1 and N  inclusive   whose sum of digits written in base 10 is between A and B  inclusive  

Constraints
1  leq N  leq 10 4
1  leq A  leq B  leq 36
All input values are integers 


InputInput is given from Standard Input in the following format 
N A B


OutputPrint the sum of the integers between 1 and N  inclusive   whose sum of digits written in base 10 is between A and B  inclusive  

Sample Input 120 2 5


Sample Output 184

Among the integers not greater than 20  the ones whose sums of digits are between 2 and 5  are  2 3 4 5 11 12 13 14 and 20  We should print the sum of these  84 

Sample Input 210 1 2


Sample Output 213


Sample Input 3100 4 16


Sample Output 34554"
New Year,https://atcoder.jp/contests/abc084/tasks/abc084_a,"問題文12 月 30 日の M 時から次の年になるまでは何時間か 求めてください 

制約
1 M 23
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
M


出力12 月 30 日の M 時から次の年になるまでが x 時間のとき x を出力せよ 

入力例 121


出力例 127

12 月 30 日の 21 時から次の年になるまでは 27 時間です 

入力例 212


出力例 236

Problem StatementHow many hours do we have until New Year at M o clock  24 hour notation  on 30th  December 

Constraints
1 M 23
M is an integer 


InputInput is given from Standard Input in the following format 
M


OutputIf we have x hours until New Year at M o clock on 30th  December  print x 

Sample Input 121


Sample Output 127

We have 27 hours until New Year at 21 o clock on 30th  December 

Sample Input 212


Sample Output 236"
Postal Code,https://atcoder.jp/contests/abc084/tasks/abc084_b,"問題文Atcoder国では 郵便番号は A B 1 文字からなり A 1 文字目はハイフン   それ以外の全ての文字は 0 以上 9 以下の数字です 
文字列 S が与えられるので Atcoder国の郵便番号の形式を満たすかどうか判定してください 

制約
1 A B 5
 S  A B 1
S は 0 以上 9 以下の数字 およびハイフン   からなる


入力入力は以下の形式で標準入力から与えられる 
A B
S


出力S がAtcoder国の郵便番号の形式を満たすならば Yes  そうでなければ No を出力せよ 

入力例 13 4
269 6650


出力例 1Yes

S の A 1 文字目がハイフンで それ以外の全ての文字が 0 以上 9 以下の数字なので Atcoder国の郵便番号の形式を満たしています 

入力例 21 1
   


出力例 2No

S の A 1 文字目以外もハイフンとなっており Atcoder国の郵便番号の形式を満たしていません 

入力例 31 2
7444


出力例 3No

Problem StatementThe postal code in Atcoder Kingdom is A B 1 characters long  its  A 1  th character is a hyphen    and the other characters are digits from 0 through 9 
You are given a string S  Determine whether it follows the postal code format in Atcoder Kingdom 

Constraints
1 A B 5
 S  A B 1
S consists of   and digits from 0 through 9 


InputInput is given from Standard Input in the following format 
A B
S


OutputPrint Yes if S follows the postal code format in AtCoder Kingdom  print No otherwise 

Sample Input 13 4
269 6650


Sample Output 1Yes

The  A 1  th character of S is    and the other characters are digits from 0 through 9  so it follows the format 

Sample Input 21 1
   


Sample Output 2No

S contains unnecessary  s other than the  A 1  th character  so it does not follow the format 

Sample Input 31 2
7444


Sample Output 3No"
Special Trains,https://atcoder.jp/contests/abc084/tasks/abc084_c,"問題文Atcoder国に  1 本の東西方向に走る鉄道が完成しました 
この鉄道には N 個の駅があり 西から順に 1 2     N の番号がついています 
明日 鉄道の開通式が開かれます 
この鉄道では 1 i N 1 を満たす全ての整数 i に対して 駅 i から駅 i 1 に C i 秒で向かう列車が運行されます ただし これら以外の列車は運行されません 
駅 i から駅 i 1 に移動する列車のうち最初の列車は 開通式開始 S i 秒後に駅 i を発車し その後は F i 秒おきに駅 i を発車する列車があります 
また S i は F i で割り切れることが保証されます 
つまり A B で A を B で割った余りを表すとき S i t t F i 0 を満たす全ての t に対してのみ 開通式開始 t 秒後に駅 i を出発し 開通式開始 t C i 秒後に駅 i 1 に到着する列車があります 
列車の乗り降りにかかる時間を考えないとき 全ての駅 i に対して 開通式開始時に駅 i にいる場合 駅 N に到着できるのは最も早くて開通式開始何秒後か 答えてください 

制約
1 N 500
1 C i 100
1 S i 10 5
1 F i 100
S i F i 0
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N
C 1 S 1 F 1
 
C  N 1  S  N 1  F  N 1 


出力i 行目  1 i N  に 開通式開始時に駅 i にいる場合 駅 N に到着できるのが最も早くて開通式開始 x 秒後のとき x を出力せよ 

入力例 13
6 5 1
1 10 1


出力例 112
11
0

駅 1 からは 以下のように移動します 

開通式開始 5 秒後に 駅 2 に向かう列車に乗る 
開通式開始 11 秒後に 駅 2 に到着する 
開通式開始 11 秒後に 駅 3 に向かう列車に乗る 
開通式開始 12 秒後に 駅 3 に到着する 

駅 2 からは 以下のように移動します 

開通式開始 10 秒後に 駅 3 に向かう列車に乗る 
開通式開始 11 秒後に 駅 3 に到着する 

駅 3 に対しても 0 を出力しなければならないことに注意してください 

入力例 24
12 24 6
52 16 4
99 2 2


出力例 2187
167
101
0


入力例 34
12 13 1
44 17 17
66 4096 64


出力例 34162
4162
4162
0

Problem StatementA railroad running from west to east in Atcoder Kingdom is now complete 
There are N stations on the railroad  numbered 1 through N from west to east 
Tomorrow  the opening ceremony of the railroad will take place 
On this railroad  for each integer i such that 1 i N 1  there will be trains that run from Station i to Station i 1 in C i seconds  No other trains will be operated 
The first train from Station i to Station i 1 will depart Station i S i seconds after the ceremony begins  Thereafter  there will be a train that departs Station i every F i seconds 
Here  it is guaranteed that F i divides S i 
That is  for each Time t satisfying S i t and t F i 0  there will be a train that departs Station i t seconds after the ceremony begins and arrives at Station i 1 t C i seconds after the ceremony begins  where A B denotes A modulo B  and there will be no other trains 
For each i  find the earliest possible time we can reach Station N if we are at Station i when the ceremony begins  ignoring the time needed to change trains 

Constraints
1 N 500
1 C i 100
1 S i 10 5
1 F i 10
S i F i 0
All input values are integers 


InputInput is given from Standard Input in the following format 
N
C 1 S 1 F 1
 
C  N 1  S  N 1  F  N 1 


OutputPrint N lines  Assuming that we are at Station i  1 i N  when the ceremony begins  if the earliest possible time we can reach Station N is x seconds after the ceremony begins  the i th line should contain x 

Sample Input 13
6 5 1
1 10 1


Sample Output 112
11
0

We will travel from Station 1 as follows 

5 seconds after the beginning  take the train to Station 2 
11 seconds  arrive at Station 2 
11 seconds  take the train to Station 3 
12 seconds  arrive at Station 3 

We will travel from Station 2 as follows 

10 seconds  take the train to Station 3 
11 seconds  arrive at Station 3 

Note that we should print 0 for Station 3 

Sample Input 24
12 24 6
52 16 4
99 2 2


Sample Output 2187
167
101
0


Sample Input 34
12 13 1
44 17 17
66 4096 64


Sample Output 34162
4162
4162
0"
2017 like Number,https://atcoder.jp/contests/abc084/tasks/abc084_d,"問題文 N も  N 1  2 も素数 を満たす奇数 N を 2017に似た数 とします 
Q 個のクエリが与えられます 
クエリ i 1 i Q  では奇数 l i r i が与えられるので l i x r i かつ 2017に似た数 となる奇数 x の個数を求めてください 

制約
1 Q 10 5
1 l i r i 10 5
l i r i は奇数
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
Q
l 1 r 1
 
l Q r Q


出力i 行目  1 i Q  に クエリ i の答えが x 個のとき x を出力せよ 

入力例 11
3 7


出力例 12



3 も  3 1  2 2 も素数であるため 3 は 2017に似た数 です 


5 も  5 1  2 3 も素数であるため 5 は 2017に似た数 です 


7 は素数ですが   7 1  2 4 は素数ではないため 7 は 2017に似た数 ではありません 


よって クエリ 1 の答えは 2 個です 

入力例 24
13 13
7 11
7 11
2017 2017


出力例 21
0
0
1

2017 も 2017に似た数 であることに注意してください 

入力例 36
1 53
13 91
37 55
19 51
73 91
13 49


出力例 34
4
1
1
1
2

Problem StatementWe say that a odd number N is similar to 2017 when both N and  N 1  2 are prime 
You are given Q queries 
In the i th query  given two odd numbers l i and r i  find the number of odd numbers x similar to 2017 such that l i   x   r i 

Constraints
1 Q 10 5
1 l i r i 10 5
l i and r i are odd 
All input values are integers 


InputInput is given from Standard Input in the following format 
Q
l 1 r 1
 
l Q r Q


OutputPrint Q lines  The i th line  1 i Q  should contain the response to the i th query 

Sample Input 11
3 7


Sample Output 12


3 is similar to 2017  since both 3 and  3 1  2 2 are prime 
5 is similar to 2017  since both 5 and  5 1  2 3 are prime 
7 is not similar to 2017  since  7 1  2 4 is not prime  although 7 is prime 

Thus  the response to the first query should be 2 

Sample Input 24
13 13
7 11
7 11
2017 2017


Sample Output 21
0
0
1

Note that 2017 is also similar to 2017 

Sample Input 36
1 53
13 91
37 55
19 51
73 91
13 49


Sample Output 34
4
1
1
1
2"
Already 2018,https://atcoder.jp/contests/abc085/tasks/abc085_a,"問題文2018 年 1 月某日 高木さんは書類を書いています 書類には その日の日付を yyyy mm dd という形式で書き込む欄があります 例えば 2018 年 1 月 23 日は 2018 01 23 となります 
書類を書き終えたあと 高木さんは日付欄の先頭に誤って 2017 と書いてしまっていたことに気がつきました 高木さんが日付欄に書いた文字列 S を入力すると S の先頭の 4 文字を 2018 に修正して出力するプログラムを書いてください 

制約
S は長さ 10 の文字列である 
S の先頭の 8 文字は 2017 01  である 
S の末尾の 2 文字は数字であり 1 以上 31 以下の整数を表す 


入力入力は以下の形式で標準入力から与えられる 
S


出力S の先頭の 4 文字を 2018 に置き換えて出力せよ 

入力例 12017 01 07


出力例 12018 01 07


入力例 22017 01 31


出力例 22018 01 31

Problem StatementOn some day in January 2018  Takaki is writing a document  The document has a column where the current date is written in yyyy mm dd format  For example  January 23  2018 should be written as 2018 01 23 
After finishing the document  she noticed that she had mistakenly wrote 2017 at the beginning of the date column  Write a program that  when the string that Takaki wrote in the date column  S  is given as input  modifies the first four characters in S to 2018 and prints it 

Constraints
S is a string of length 10 
The first eight characters in S are 2017 01  
The last two characters in S are digits and represent an integer between 1 and 31  inclusive  


InputInput is given from Standard Input in the following format 
S


OutputReplace the first four characters in S with 2018 and print it 

Sample Input 12017 01 07


Sample Output 12018 01 07


Sample Input 22017 01 31


Sample Output 22018 01 31"
Kagami Mochi,https://atcoder.jp/contests/abc085/tasks/abc085_b,"問題文X 段重ねの鏡餅  X   1  とは X 枚の円形の餅を縦に積み重ねたものであって どの餅もその真下の餅より直径が小さい 一番下の餅を除く もののことです 例えば 直径 10 8 6 センチメートルの餅をこの順に下から積み重ねると 3 段重ねの鏡餅になり 餅を一枚だけ置くと 1 段重ねの鏡餅になります 
ダックスフンドのルンルンは N 枚の円形の餅を持っていて そのうち i 枚目の餅の直径は d i センチメートルです これらの餅のうち一部または全部を使って鏡餅を作るとき 最大で何段重ねの鏡餅を作ることができるでしょうか 

制約
1   N   100
1   d i   100
入力値はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N
d 1
 
d N


出力作ることのできる鏡餅の最大の段数を出力せよ 

入力例 14
10
8
8
6


出力例 13

直径 10 8 6 センチメートルの餅をこの順に下から積み重ねると 3 段重ねの鏡餅になり これが最大です 

入力例 23
15
15
15


出力例 21

すべての餅の直径が同じときは 1 段重ねの鏡餅しか作れません 

入力例 37
50
30
50
100
50
80
30


出力例 34

Problem StatementAn X layered kagami mochi  X   1  is a pile of X round mochi  rice cake  stacked vertically where each mochi  except the bottom one  has a smaller diameter than that of the mochi directly below it  For example  if you stack three mochi with diameters of 10  8 and 6 centimeters from bottom to top in this order  you have a 3 layered kagami mochi  if you put just one mochi  you have a 1 layered kagami mochi 
Lunlun the dachshund has N round mochi  and the diameter of the i th mochi is d i centimeters  When we make a kagami mochi using some or all of them  at most how many layers can our kagami mochi have 

Constraints
1   N   100
1   d i   100
All input values are integers 


InputInput is given from Standard Input in the following format 
N
d 1
 
d N


OutputPrint the maximum number of layers in a kagami mochi that can be made 

Sample Input 14
10
8
8
6


Sample Output 13

If we stack the mochi with diameters of 10  8 and 6 centimeters from bottom to top in this order  we have a 3 layered kagami mochi  which is the maximum number of layers 

Sample Input 23
15
15
15


Sample Output 21

When all the mochi have the same diameter  we can only have a 1 layered kagami mochi 

Sample Input 37
50
30
50
100
50
80
30


Sample Output 34"
Otoshidama,https://atcoder.jp/contests/abc085/tasks/abc085_c,"問題文日本でよく使われる紙幣は 10000 円札 5000 円札 1000 円札です 以下  お札 とはこれらのみを指します 
青橋くんが言うには 彼が祖父から受け取ったお年玉袋にはお札が N 枚入っていて 合計で Y 円だったそうですが 嘘かもしれません このような状況がありうるか判定し ありうる場合はお年玉袋の中身の候補を一つ見つけてください なお 彼の祖父は十分裕福であり お年玉袋は十分大きかったものとします 

制約
1   N   2000
1000   Y   2   10 7
N は整数である 
Y は 1000 の倍数である 


入力入力は以下の形式で標準入力から与えられる 
N Y


出力N 枚のお札の合計金額が Y 円となることがありえない場合は  1  1  1 と出力せよ 
N 枚のお札の合計金額が Y 円となることがありうる場合は そのような N 枚のお札の組み合わせの一例を 10000 円札 x 枚 5000 円札 y 枚 1000 円札 z 枚 として x y z を空白で区切って出力せよ 複数の可能性が考えられるときは そのうちどれを出力してもよい 

入力例 19 45000


出力例 14 0 5

お年玉袋に 10000 円札 4 枚と 1000 円札 5 枚が入っていれば 合計枚数が 9 枚 合計金額が 45000 円になります 5000 円札 9 枚という可能性も考えられるため 0 9 0 も正しい出力です 

入力例 220 196000


出力例 2 1  1  1

合計枚数が 20 枚の場合 すべてが 10000 円札であれば合計金額は 200000 円になり そうでなければ 195000 円以下になるため 196000 円という合計金額はありえません 

入力例 31000 1234000


出力例 314 27 959

この他にも多くの候補があります 

入力例 42000 20000000


出力例 42000 0 0

Problem StatementThe commonly used bills in Japan are 10000 yen  5000 yen and 1000 yen bills  Below  the word  bill  refers to only these 
According to Aohashi  he received an otoshidama  New Year money gift  envelope from his grandfather that contained N bills for a total of Y yen  but he may be lying  Determine whether such a situation is possible  and if it is  find a possible set of bills contained in the envelope  Assume that his grandfather is rich enough  and the envelope was large enough 

Constraints
1   N   2000
1000   Y   2   10 7
N is an integer 
Y is a multiple of 1000 


InputInput is given from Standard Input in the following format 
N Y


OutputIf the total value of N bills cannot be Y yen  print  1  1  1 
If the total value of N bills can be Y yen  let one such set of bills be  x 10000 yen bills  y 5000 yen bills and z 1000 yen bills   and print x  y  z with spaces in between  If there are multiple possibilities  any of them may be printed 

Sample Input 19 45000


Sample Output 14 0 5

If the envelope contained 4 10000 yen bills and 5 1000 yen bills  he had 9 bills and 45000 yen in total  It is also possible that the envelope contained 9 5000 yen bills  so the output 0 9 0 is also correct 

Sample Input 220 196000


Sample Output 2 1  1  1

When the envelope contained 20 bills in total  the total value would be 200000 yen if all the bills were 10000 yen bills  and would be at most 195000 yen otherwise  so it would never be 196000 yen 

Sample Input 31000 1234000


Sample Output 314 27 959

There are also many other possibilities 

Sample Input 42000 20000000


Sample Output 42000 0 0"
Katana Thrower,https://atcoder.jp/contests/abc085/tasks/abc085_d,"問題文あなたが散歩していると 突然一体の魔物が出現しました 幸い あなたは N 本の刀 刀 1 刀 2   刀 N を持っていて 次の二種類の攻撃を自由な順番で行うことができます 

持っている刀のうち一本を振る 刀 i  1   i   N  を振ると 魔物は a i ポイントのダメージを受ける 同じ刀を何度振ることもできる 
持っている刀のうち一本を投げつける 刀 i  1   i   N  を投げつけると 魔物は b i ポイントのダメージを受け あなたはその刀を失う すなわち あなたは以後その刀を振ることも投げつけることもできなくなる 

魔物は 受けたダメージの合計が H ポイント以上になると消滅します 魔物を消滅させるには 最小で合計何回の攻撃が必要でしょうか 

制約
1   N   10 5
1   H   10 9
1   a i   b i   10 9
入力値はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N H
a 1 b 1
 
a N b N


出力魔物を消滅させるために必要な最小の合計攻撃回数を出力せよ 

入力例 11 10
3 5


出力例 13

あなたは 1 本の刀を持っていて 振ると 3 ポイントのダメージ 投げつけると 5 ポイントのダメージを与えられます 刀を 2 回振ってから投げつけると 3   3   5   11 ポイントのダメージを与え 合計 3 回の攻撃で魔物が消滅します 

入力例 22 10
3 5
2 6


出力例 22

先ほどの刀に加えてもう 1 本別の刀もあり こちらは振ると 2 ポイントのダメージ 投げつけると 6 ポイントのダメージを与えられます 両方の刀を投げつけると 5   6   11 ポイントのダメージを与え 2 回の攻撃で魔物が消滅します 

入力例 34 1000000000
1 1
1 10000000
1 30000000
1 99999999


出力例 3860000004


入力例 45 500
35 44
28 83
46 62
31 79
40 43


出力例 49

Problem StatementYou are going out for a walk  when you suddenly encounter a monster  Fortunately  you have N katana  swords   Katana 1  Katana 2     Katana N  and can perform the following two kinds of attacks in any order 

Wield one of the katana you have  When you wield Katana i  1   i   N   the monster receives a i points of damage  The same katana can be wielded any number of times 
Throw one of the katana you have  When you throw Katana i  1   i   N  at the monster  it receives b i points of damage  and you lose the katana  That is  you can no longer wield or throw that katana 

The monster will vanish when the total damage it has received is H points or more  At least how many attacks do you need in order to vanish it in total 

Constraints
1   N   10 5
1   H   10 9
1   a i   b i   10 9
All input values are integers 


InputInput is given from Standard Input in the following format 
N H
a 1 b 1
 
a N b N


OutputPrint the minimum total number of attacks required to vanish the monster 

Sample Input 11 10
3 5


Sample Output 13

You have one katana  Wielding it deals 3 points of damage  and throwing it deals 5 points of damage  By wielding it twice and then throwing it  you will deal 3   3   5   11 points of damage in a total of three attacks  vanishing the monster 

Sample Input 22 10
3 5
2 6


Sample Output 22

In addition to the katana above  you also have another katana  Wielding it deals 2 points of damage  and throwing it deals 6 points of damage  By throwing both katana  you will deal 5   6   11 points of damage in two attacks  vanishing the monster 

Sample Input 34 1000000000
1 1
1 10000000
1 30000000
1 99999999


Sample Output 3860000004


Sample Input 45 500
35 44
28 83
46 62
31 79
40 43


Sample Output 49"
Product,https://atcoder.jp/contests/abc086/tasks/abc086_a,"問題文シカのAtCoDeerくんは二つの正整数 a b を見つけました 
a と b の積が偶数か奇数か判定してください 

制約
1   a b   10000
a b は整数


入力入力は以下の形式で標準入力から与えられる 
a b


出力積が奇数なら Odd と  偶数なら Even と出力せよ 

入力例 13 4


出力例 1Even

3   4   12 は偶数なので Even を出力してください 

入力例 21 21


出力例 2Odd

1   21   21 は奇数なので Odd を出力してください 
Problem StatementAtCoDeer the deer found two positive integers  a and b 
Determine whether the product of a and b is even or odd 

Constraints
1   a b   10000
a and b are integers 


InputInput is given from Standard Input in the following format 
a b


OutputIf the product is odd  print Odd  if it is even  print Even 

Sample Input 13 4


Sample Output 1Even

As 3   4   12 is even  print Even 

Sample Input 21 21


Sample Output 2Odd

As 1   21   21 is odd  print Odd"
1 21,https://atcoder.jp/contests/abc086/tasks/abc086_b,"問題文シカのAtCoDeerくんは二つの正整数 a b を見つけました 
a と b をこの順につなげて読んだものが平方数かどうか判定してください 

制約
1   a b   100
a b は整数


入力入力は以下の形式で標準入力から与えられる 
a b


出力a と b をこの順につなげて読んだものが平方数なら Yes を  そうでないなら No を出力せよ 

入力例 11 21


出力例 1Yes

121   11   11 なので 平方数です 

入力例 2100 100


出力例 2No

100100 は平方数ではありません 

入力例 312 10


出力例 3No

Problem StatementAtCoDeer the deer has found two positive integers  a and b 
Determine whether the concatenation of a and b in this order is a square number 

Constraints
1   a b   100
a and b are integers 


InputInput is given from Standard Input in the following format 
a b


OutputIf the concatenation of a and b in this order is a square number  print Yes  otherwise  print No 

Sample Input 11 21


Sample Output 1Yes

As 121   11   11  it is a square number 

Sample Input 2100 100


Sample Output 2No

100100 is not a square number 

Sample Input 312 10


Sample Output 3No"
Buying Sweets,https://atcoder.jp/contests/abc087/tasks/abc087_a,"問題文あなたは X 円を持ってケーキとドーナツを買いに出かけました 
あなたはまずケーキ屋で 1 個 A 円のケーキを 1 個買いました 
次に ドーナツ屋で 1 個 B 円のドーナツをできるだけたくさん買いました 
これらの買い物のあと手元に残っている金額は何円ですか 

制約
1  leq A  B  leq 1 000
A   B  leq X  leq 10 000
X  A  B は整数である


入力入力は以下の形式で標準入力から与えられる 
X
A
B


出力買い物のあとに残った金額を出力せよ 

入力例 11234
150
100


出力例 184

ケーキを買ったあとに手元に残っている金額は 1234   150   1084 円です 
この金額でドーナツは 10 個買うことができ ドーナツの購入後に残る金額は 84 円です 

入力例 21000
108
108


出力例 228


入力例 3579
123
456


出力例 30


入力例 47477
549
593


出力例 4405

Problem StatementYou went shopping to buy cakes and donuts with X yen  the currency of Japan  
First  you bought one cake for A yen at a cake shop 
Then  you bought as many donuts as possible for B yen each  at a donut shop 
How much do you have left after shopping 

Constraints
1  leq A  B  leq 1 000
A   B  leq X  leq 10 000
X  A and B are integers 


InputInput is given from Standard Input in the following format 
X
A
B


OutputPrint the amount you have left after shopping 

Sample Input 11234
150
100


Sample Output 184

You have 1234   150   1084 yen left after buying a cake 
With this amount  you can buy 10 donuts  after which you have 84 yen left 

Sample Input 21000
108
108


Sample Output 228


Sample Input 3579
123
456


Sample Output 30


Sample Input 47477
549
593


Sample Output 4405"
Coins,https://atcoder.jp/contests/abc087/tasks/abc087_b,"問題文あなたは 500 円玉を A 枚 100 円玉を B 枚 50 円玉を C 枚持っています 
これらの硬貨の中から何枚かを選び 合計金額をちょうど X 円にする方法は何通りありますか 
同じ種類の硬貨どうしは区別できません 2 通りの硬貨の選び方は ある種類の硬貨についてその硬貨を選ぶ枚数が異なるとき区別されます 

制約
0  leq A  B  C  leq 50
A   B   C  geq 1
50  leq X  leq 20 000
A  B  C は整数である
X は 50 の倍数である


入力入力は以下の形式で標準入力から与えられる 
A
B
C
X


出力硬貨を選ぶ方法の個数を出力せよ 

入力例 12
2
2
100


出力例 12

条件を満たす選び方は以下の 2 通りです 

500 円玉を 0 枚 100 円玉を 1 枚 50 円玉を 0 枚選ぶ 
500 円玉を 0 枚 100 円玉を 0 枚 50 円玉を 2 枚選ぶ 


入力例 25
1
0
150


出力例 20

合計金額をちょうど X 円にする必要があることに注意してください 

入力例 330
40
50
6000


出力例 3213

Problem StatementYou have A 500 yen coins  B 100 yen coins and C 50 yen coins  yen is the currency of Japan  
In how many ways can we select some of these coins so that they are X yen in total 
Coins of the same kind cannot be distinguished  Two ways to select coins are distinguished when  for some kind of coin  the numbers of that coin are different 

Constraints
0  leq A  B  C  leq 50
A   B   C  geq 1
50  leq X  leq 20 000
A  B and C are integers 
X is a multiple of 50 


InputInput is given from Standard Input in the following format 
A
B
C
X


OutputPrint the number of ways to select coins 

Sample Input 12
2
2
100


Sample Output 12

There are two ways to satisfy the condition 

Select zero 500 yen coins  one 100 yen coin and zero 50 yen coins 
Select zero 500 yen coins  zero 100 yen coins and two 50 yen coins 


Sample Input 25
1
0
150


Sample Output 20

Note that the total must be exactly X yen 

Sample Input 330
40
50
6000


Sample Output 3213"
Infinite Coins,https://atcoder.jp/contests/abc088/tasks/abc088_a,"問題文
E869120 は 1 円硬貨を A 枚と 500 円硬貨を無限枚持っています 
これらの硬貨だけを使うことによって  ちょうど N 円を支払うことができるかを判定しなさい   

制約

N は 1 以上 10000 以下の整数
A は 0 以上 1000 以下の整数


入力
入力は以下の形式で標準入力から与えられる   
N
A


出力
E869120 の持っている 1 円硬貨と 500 円硬貨だけで  ちょうど N 円を支払うことができるならば Yes  そうでないならば No を出力しなさい   

入力例 12018
218


出力例 1Yes

500 円硬貨 4 枚と 1 円硬貨 18 枚で  2018 円を支払うことができるので  答えは Yes です   

入力例 22763
0


出力例 2No

1 円硬貨を 1 枚も持っていないとき  500 円硬貨だけを使うことになるので  500 の倍数の金額を支払うことしかできません  2763 は 500 の倍数ではないので  この金額を支払うことはできません   

入力例 337
514


出力例 3Yes

Problem Statement
E869120 has A 1 yen coins and infinitely many 500 yen coins 
Determine if he can pay exactly N yen using only these coins 

Constraints

N is an integer between 1 and 10000  inclusive  
A is an integer between 0 and 1000  inclusive  


Input
Input is given from Standard Input in the following format 
N
A


Output
If E869120 can pay exactly N yen using only his 1 yen and 500 yen coins  print Yes  otherwise  print No 

Sample Input 12018
218


Sample Output 1Yes

We can pay 2018 yen with four 500 yen coins and 18 1 yen coins  so the answer is Yes 

Sample Input 22763
0


Sample Output 2No

When we have no 1 yen coins  we can only pay a multiple of 500 yen using only 500 yen coins  Since 2763 is not a multiple of 500  we cannot pay this amount 

Sample Input 337
514


Sample Output 3Yes"
Card Game for Two,https://atcoder.jp/contests/abc088/tasks/abc088_b,"問題文
N 枚のカードがあります  i 枚目のカードには  a i という数が書かれています 
Alice と Bob は  これらのカードを使ってゲームを行います  ゲームでは  Alice と Bob が交互に 1 枚ずつカードを取っていきます  Alice が先にカードを取ります 
2 人がすべてのカードを取ったときゲームは終了し  取ったカードの数の合計がその人の得点になります  2 人とも自分の得点を最大化するように最適な戦略を取った時  Alice は Bob より何点多く取るか求めてください   

制約

N は 1 以上 100 以下の整数
a i    1  leq i  leq N  は 1 以上 100 以下の整数


入力
入力は以下の形式で標準入力から与えられる   
N
a 1 a 2 a 3     a N


出力
両者が最適な戦略を取った時  Alice は Bob より何点多く取るかを出力してください 

入力例 12
3 1


出力例 12

最初  Alice は 3 が書かれたカードを取ります  次に  Bob は 1 が書かれたカードを取ります  得点差は 3   1   2 となります   

入力例 23
2 7 4


出力例 25

最初  Alice は 7 が書かれたカードを取ります  次に  Bob は 4 が書かれたカードを取ります  最後に  Alice は 2 が書かれたカードを取ります  得点差は  7   4   2   5 点となります 

入力例 34
20 18 2 18


出力例 318

Problem Statement
We have N cards  A number a i is written on the i th card 
Alice and Bob will play a game using these cards  In this game  Alice and Bob alternately take one card  Alice goes first 
The game ends when all the cards are taken by the two players  and the score of each player is the sum of the numbers written on the cards he she has taken  When both players take the optimal strategy to maximize their scores  find Alice s score minus Bob s score 

Constraints

N is an integer between 1 and 100  inclusive  
a i    1  leq i  leq N  is an integer between 1 and 100  inclusive  


Input
Input is given from Standard Input in the following format   
N
a 1 a 2 a 3     a N


Output
Print Alice s score minus Bob s score when both players take the optimal strategy to maximize their scores 

Sample Input 12
3 1


Sample Output 12

First  Alice will take the card with 3  Then  Bob will take the card with 1 
The difference of their scores will be 3   1   2 

Sample Input 23
2 7 4


Sample Output 25

First  Alice will take the card with 7  Then  Bob will take the card with 4  Lastly  Alice will take the card with 2  The difference of their scores will be 7   4   2   5  The difference of their scores will be 3   1   2 

Sample Input 34
20 18 2 18


Sample Output 318"
Takahashi's Information,https://atcoder.jp/contests/abc088/tasks/abc088_c,"問題文
3  times 3 のグリッドがあります  上から i 番目で左から j 番目のマスを  i  j  で表すとき  マス  i  j  には数 c  i  j  が書かれています 
高橋君によると  整数 a 1  a 2  a 3  b 1  b 2  b 3 の値が決まっており  マス  i  j  には数 a i   b j が書かれているらしいです 
高橋君の情報が正しいか判定しなさい   

制約

c  i  j     1  leq i  leq 3  1  leq j  leq 3  は 0 以上 100 以下の整数


入力
入力は以下の形式で標準入力から与えられる 
c  1 1  c  1 2  c  1 3 
c  2 1  c  2 2  c  2 3 
c  3 1  c  3 2  c  3 3 


出力
高橋君の情報が正しい場合 Yes  そうでない場合 No と出力してください 

入力例 11 0 1
2 1 2
1 0 1


出力例 1Yes

a 1 0 a 2 1 a 3 0 b 1 1 b 2 0 b 3 1 などの組み合わせがありうるので  高橋君の情報は正しいです   

入力例 22 2 2
2 1 2
2 2 2


出力例 2No

このグリッドの場合 高橋君の情報は間違っています   

入力例 30 8 8
0 8 8
0 8 8


出力例 3Yes


入力例 41 8 6
2 9 7
0 7 7


出力例 4No

Problem Statement
We have a 3  times 3 grid  A number c  i  j  is written in the square  i  j   where  i  j  denotes the square at the i th row from the top and the j th column from the left 
According to Takahashi  there are six integers a 1  a 2  a 3  b 1  b 2  b 3 whose values are fixed  and the number written in the square  i  j  is equal to a i   b j 
Determine if he is correct   

Constraints

c  i  j     1  leq i  leq 3  1  leq j  leq 3  is an integer between 0 and 100  inclusive  


Input
Input is given from Standard Input in the following format 
c  1 1  c  1 2  c  1 3 
c  2 1  c  2 2  c  2 3 
c  3 1  c  3 2  c  3 3 


Output
If Takahashi s statement is correct  print Yes  otherwise  print No 

Sample Input 11 0 1
2 1 2
1 0 1


Sample Output 1Yes

Takahashi is correct  since there are possible sets of integers such as  a 1 0 a 2 1 a 3 0 b 1 1 b 2 0 b 3 1 

Sample Input 22 2 2
2 1 2
2 2 2


Sample Output 2No

Takahashi is incorrect in this case 

Sample Input 30 8 8
0 8 8
0 8 8


Sample Output 3Yes


Sample Input 41 8 6
2 9 7
0 7 7


Sample Output 4No"
Grid Repainting,https://atcoder.jp/contests/abc088/tasks/abc088_d,"問題文
縦 H マス  横 W マスに広がるマス目があり  各マスは白または黒で塗られている  上から i 番目で左から j 番目のマスを  i  j  で表す 
すぬけ君は  このマス目を使って次のようなゲームをしたい  ゲームの開始時点ではマス  1  1  にゲームキャラクター けぬす君 がいる  プレイヤーはけぬす君を上下左右の 4 方向のいずれかに 1 マスだけ動かすことを繰り返す  けぬす君が白いマスだけを通って  H  W  にたどり着けばゲームクリアとなる 
ゲームを開始する前に  すぬけ君はいくつかの白いマス目の色を黒に変えることができる  ただし  マス  1  1  と  H  W  の色を変えることはできず  ゲームを開始するまでにすべての色の変更を行わなければならない 
ゲームをクリアしたとき  ゲームの開始前にマスの色を変えた回数がすぬけ君のスコアとなる  そのとき  すぬけ君が取る可能性のある最大のスコアを求めなさい ただし  すぬけ君がどのようにマス目の色を変えてもけぬす君が  H  W  にたどり着くことが出来ない場合  1 と出力しなさい 
ただし  各マスの色の情報は文字 s  i  j  として与えられる  マス  i  j  が最初白で塗られている場合 s  i  j  は   であり  マス  i  j  が最初黒で塗られている場合 s  i  j  は   である   

制約

H は 2 以上 50 以下の整数
W は 2 以上 50 以下の整数
s  i  j  は   または    1  leq i  leq H  1  leq j  leq W 
s  1  1   s  H  W  は   である


入力
入力は以下の形式で標準入力から与えられる 
H W
s  1  1 s  1  2 s  1  3      s  1  W 
s  2  1 s  2  2 s  2  3      s  2  W 
      
s  H  1 s  H  2 s  H  3      s  H  W 


出力
すぬけ君が取る可能性のある最大のスコアを出力しなさい 
ただし  すぬけ君がどのようにマス目の色を変えてもけぬす君が  H  W  にたどり着くことが出来ない場合  1 と出力しなさい 

入力例 13 3
   
   
   


出力例 12

下の図のようにマス目の色を変えれば  スコア 2 を達成できます 


入力例 210 37
                                     
                                     
                                     
                                     
                                     
                                     
                                     
                                     
                                     
                                     


出力例 2209

Problem statement
We have an H  times W grid whose squares are painted black or white  The square at the i th row from the top and the j th column from the left is denoted as  i  j  
Snuke would like to play the following game on this grid  At the beginning of the game  there is a character called Kenus at square  1  1   The player repeatedly moves Kenus up  down  left or right by one square  The game is completed when Kenus reaches square  H  W  passing only white squares 
Before Snuke starts the game  he can change the color of some of the white squares to black  However  he cannot change the color of square  1  1  and  H  W   Also  changes of color must all be carried out before the beginning of the game 
When the game is completed  Snuke s score will be the number of times he changed the color of a square before the beginning of the game  Find the maximum possible score that Snuke can achieve  or print  1 if the game cannot be completed  that is  Kenus can never reach square  H  W  regardless of how Snuke changes the color of the squares   
The color of the squares are given to you as characters s  i  j   If square  i  j  is initially painted by white  s  i  j  is    if square  i  j  is initially painted by black  s  i  j  is   

Constraints

H is an integer between 2 and 50  inclusive  
W is an integer between 2 and 50  inclusive  
s  i  j  is   or    1  leq i  leq H  1  leq j  leq W  
s  1  1  and s  H  W  are   


Input
Input is given from Standard Input in the following format 
H W
s  1  1 s  1  2 s  1  3      s  1  W 
s  2  1 s  2  2 s  2  3      s  2  W 
      
s  H  1 s  H  2 s  H  3      s  H  W 


Output
Print the maximum possible score that Snuke can achieve  or print  1 if the game cannot be completed 

Sample Input 13 3
   
   
   


Sample Output 12

The score 2 can be achieved by changing the color of squares as follows 


Sample Input 210 37
                                     
                                     
                                     
                                     
                                     
                                     
                                     
                                     
                                     
                                     


Sample Output 2209"
Grouping 2,https://atcoder.jp/contests/abc089/tasks/abc089_a,"問題文ある学校には N 人の生徒がいます 
生徒たちをいくつかのグループに分け グループごとにあるテーマについて話し合ってもらうこととなりました 
あなたは 2 人以下のグループだと効果的な話し合いが出来ないと考えており なるだけ多くのグループを 3 人以上にしたいです 
生徒たちを上手く分けて 3 人以上のグループの数を最大化してください 

制約
1  leq N  leq 1000
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N


出力3 人以上のグループを最大で x 個作れるとき x を出力せよ 

入力例 18


出力例 12

例えば 3 人のグループと 5 人のグループに分けるとよいです 

入力例 22


出力例 20

どのように生徒たちを分けても 3 人以上のグループを作れない場合もあります 

入力例 39


出力例 33

Problem StatementThere are N students in a school 
We will divide these students into some groups  and in each group they will discuss some themes 
You think that groups consisting of two or less students cannot have an effective discussion  so you want to have as many groups consisting of three or more students as possible 
Divide the students so that the number of groups consisting of three or more students is maximized 

Constraints
1  leq N  leq 1000
All input values are integers 


InputInput is given from Standard Input in the following format 
N


OutputIf you can form at most x groups consisting of three or more students  print x 

Sample Input 18


Sample Output 12

For example  you can form a group of three students and another of five students 

Sample Input 22


Sample Output 20

Sometimes you cannot form any group consisting of three or more students  regardless of how you divide the students 

Sample Input 39


Sample Output 33"
Hina Arare,https://atcoder.jp/contests/abc089/tasks/abc089_b,"問題文日本では 3 月 3 日にひなあられという 色のついたお菓子をお供えする習慣があります 
1 つの袋があり ひなあられが N 個入っています 
この袋には 桃色 白色 緑色の 3 種類か 桃色 白色 緑色 黄色の 4 種類のひなあられが入っていることが分かっています 
桃色を P 白色を W 緑色を G 黄色を Y と表したとき 袋からひなあられを 1 粒ずつ取り出していったところ i 番目に取り出したひなあられの色は S i でした 
この袋に 3 種類のひなあられが入っていた場合は Three 4 種類のひなあられが入っていた場合は Four と出力してください 

制約
1  leq N  leq 100
S i は P か W か G か Y
S i P S j W S k G を満たす i j k が必ず存在する


入力入力は以下の形式で標準入力から与えられる 
N
S 1 S 2     S N


出力袋に 3 種類のひなあられが入っていた場合は Three 4 種類のひなあられが入っていた場合は Four と出力せよ 

入力例 16
G W Y P Y W


出力例 1Four

袋に 4 種類のひなあられが入っていたので Four と出力するとよいです 

入力例 29
G W W G P W P G G


出力例 2Three

袋に 3 種類のひなあられが入っていたので Three と出力するとよいです 

入力例 38
P Y W G Y W Y Y


出力例 3Four

Problem StatementIn Japan  people make offerings called hina arare  colorful crackers  on March 3 
We have a bag that contains N hina arare   From here  we call them arare  
It is known that the bag either contains arare in three colors  pink  white and green  or contains arare in four colors  pink  white  green and yellow 
We have taken out the arare in the bag one by one  and the color of the i th arare was S i  where colors are represented as follows   pink  P  white  W  green  G  yellow  Y 
If the number of colors of the arare in the bag was three  print Three  if the number of colors was four  print Four 

Constraints
1  leq N  leq 100
S i is P  W  G or Y 
There always exist i  j and k such that S i P  S j W and S k G 


InputInput is given from Standard Input in the following format 
N
S 1 S 2     S N


OutputIf the number of colors of the arare in the bag was three  print Three  if the number of colors was four  print Four 

Sample Input 16
G W Y P Y W


Sample Output 1Four

The bag contained arare in four colors  so you should print Four 

Sample Input 29
G W W G P W P G G


Sample Output 2Three

The bag contained arare in three colors  so you should print Three 

Sample Input 38
P Y W G Y W Y Y


Sample Output 3Four"
March,https://atcoder.jp/contests/abc089/tasks/abc089_c,"問題文N 人の人がいて i 番目の人の名前は S i です 
この中から 以下の条件を満たすように 3 人を選びたいです 

全ての人の名前が M A R C H のどれかから始まっている
同じ文字から始まる名前を持つ人が複数いない

これらの条件を満たすように 3 人を選ぶ方法が何通りあるか 求めてください ただし 選ぶ順番は考えません 
答えが 32 bit整数型に収まらない場合に注意してください 

制約
1  leq N  leq 10 5
S i は英大文字からなる
1  leq  S i   leq 10
S i  neq S j  i  neq j 


入力入力は以下の形式で標準入力から与えられる 
N
S 1
 
S N


出力与えられた条件を満たすように 3 人を選ぶ方法が x 通りのとき x を出力せよ 

入力例 15
MASHIKE
RUMOI
OBIRA
HABORO
HOROKANAI


出力例 12

次のような名前の 3 人を選ぶと良いです 


MASHIKE RUMOI HABORO


MASHIKE RUMOI HOROKANAI


よって 2 通りとなります 

入力例 24
ZZ
ZZZ
Z
ZZZZZZZZZZ


出力例 20

与えられた条件を満たすように 3 人を選ぶ方法が存在しない場合に注意してください 

入力例 35
CHOKUDAI
RNG
MAKOTO
AOKI
RINGO


出力例 37

Problem StatementThere are N people  The name of the i th person is S i 
We would like to choose three people so that the following conditions are met 

The name of every chosen person begins with M  A  R  C or H 
There are no multiple people whose names begin with the same letter 

How many such ways are there to choose three people  disregarding order 
Note that the answer may not fit into a 32 bit integer type 

Constraints
1  leq N  leq 10 5
S i consists of uppercase English letters 
1  leq  S i   leq 10
S i  neq S j  i  neq j 


InputInput is given from Standard Input in the following format 
N
S 1
 
S N


OutputIf there are x ways to choose three people so that the given conditions are met  print x 

Sample Input 15
MASHIKE
RUMOI
OBIRA
HABORO
HOROKANAI


Sample Output 12

We can choose three people with the following names 


MASHIKE  RUMOI  HABORO


MASHIKE  RUMOI  HOROKANAI


Thus  we have two ways 

Sample Input 24
ZZ
ZZZ
Z
ZZZZZZZZZZ


Sample Output 20

Note that there may be no ways to choose three people so that the given conditions are met 

Sample Input 35
CHOKUDAI
RNG
MAKOTO
AOKI
RINGO


Sample Output 37"
Practical Skill Test,https://atcoder.jp/contests/abc089/tasks/abc089_d,"問題文H 行 W 列のマス目があり i 行目の j 列目のマスをマス  i j  と呼びます 
このマス目には 1 から H W までの整数が重複なく書かれており マス  i j  に書かれている整数は A  i j  です 
魔法少女であるあなたは 魔力  x i   y j  を消費することでマス  i j  に置かれた駒をマス  x y  に瞬間移動させることができます 
あなたは 魔法少女としての能力を計るために Q 回の実技試験を受けなければなりません 
i 回目の実技試験は 以下の手順で行われます 


初めに 駒が整数 L i の書かれているマスに置かれている 


駒の置かれているマスに書かれている整数を x とする x が R i でない限り 駒を x D の書かれているマスに移動することを繰り返す x R i となったら終了する 


ただし R i L i が D の倍数であることは保証される 


それぞれの実技試験に対し あなたの消費する魔力の総和を求めてください 

制約
1  leq H W  leq 300
1  leq D  leq H W
1  leq A  i j   leq H W
A  i j   neq A  x y    i j   neq  x y  
1  leq Q  leq 10 5
1  leq L i  leq R i  leq H W
 R i L i  は D の倍数


入力入力は以下の形式で標準入力から与えられる 
H W D
A  1 1  A  1 2      A  1 W 
 
A  H 1  A  H 2      A  H W 
Q
L 1 R 1
 
L Q R Q


出力それぞれの実技試験に対し あなたの消費する魔力の総和を出力せよ 
ただし 出力する順番は実技試験の行われる順とすること 

入力例 13 3 2
1 4 3
2 5 7
8 9 6
1
4 8


出力例 15



4 が書かれたマスは マス  1 2  です 


6 が書かれたマスは マス  3 3  です 


8 が書かれたマスは マス  3 1  です 


よって 1 回目の実技試験であなたの消費する魔力の総和は   3 1   3 2     3 3   1 3   5 です 

入力例 24 2 3
3 7
1 4
5 2
6 8
2
2 2
2 2


出力例 20
0

駒を全く移動しない実技試験が存在する場合や 複数の実技試験の内容が同じ場合に注意してください 

入力例 35 5 4
13 25 7 15 17
16 22 20 2 9
14 11 12 1 19
10 6 23 8 18
3 21 5 24 4
3
13 13
2 10
13 13


出力例 30
5
0

Problem StatementWe have a grid with H rows and W columns  The square at the i th row and the j th column will be called Square  i j  
The integers from 1 through H W are written throughout the grid  and the integer written in Square  i j  is A  i j  
You  a magical girl  can teleport a piece placed on Square  i j  to Square  x y  by consuming  x i   y j  magic points 
You now have to take Q practical tests of your ability as a magical girl 
The i th test will be conducted as follows 


Initially  a piece is placed on the square where the integer L i is written 


Let x be the integer written in the square occupied by the piece  Repeatedly move the piece to the square where the integer x D is written  as long as x is not R i  The test ends when x R i 


Here  it is guaranteed that R i L i is a multiple of D 


For each test  find the sum of magic points consumed during that test 

Constraints
1  leq H W  leq 300
1  leq D  leq H W
1  leq A  i j   leq H W
A  i j   neq A  x y    i j   neq  x y  
1  leq Q  leq 10 5
1  leq L i  leq R i  leq H W
 R i L i  is a multiple of D 


InputInput is given from Standard Input in the following format 
H W D
A  1 1  A  1 2      A  1 W 
 
A  H 1  A  H 2      A  H W 
Q
L 1 R 1
 
L Q R Q


OutputFor each test  print the sum of magic points consumed during that test 
Output should be in the order the tests are conducted 

Sample Input 13 3 2
1 4 3
2 5 7
8 9 6
1
4 8


Sample Output 15



4 is written in Square  1 2  


6 is written in Square  3 3  


8 is written in Square  3 1  


Thus  the sum of magic points consumed during the first test is   3 1   3 2     3 3   1 3   5 

Sample Input 24 2 3
3 7
1 4
5 2
6 8
2
2 2
2 2


Sample Output 20
0

Note that there may be a test where the piece is not moved at all  and there may be multiple identical tests 

Sample Input 35 5 4
13 25 7 15 17
16 22 20 2 9
14 11 12 1 19
10 6 23 8 18
3 21 5 24 4
3
13 13
2 10
13 13


Sample Output 30
5
0"
Diagonal String,https://atcoder.jp/contests/abc090/tasks/abc090_a,"問題文3 行 3 列の正方形状のマス目があり 各マスには英小文字が書かれています 
上から i 行目 左から j 列目のマスに書かれた文字は c  ij  です 
マス目の左上と右下を結ぶような対角線上のマス目に書かれた文字を 左上から順に読んでできる 3 文字の文字列を出力してください 

制約
入力は英小文字からなる


入力入力は以下の形式で標準入力から与えられる 
c  11 c  12 c  13 
c  21 c  22 c  23 
c  31 c  32 c  33 


出力マス目の左上と右下を結ぶような対角線上のマス目に書かれた文字を 左上から順に読んでできる 3 文字の文字列を出力せよ 

入力例 1ant
obe
rec


出力例 1abc

対角線上のマス目に書かれた文字は 左上から順に a b c です これらを順に読んでできる abc を出力します 

入力例 2edu
cat
ion


出力例 2ean

Problem StatementWe have a 3 3 square grid  where each square contains a lowercase English letters 
The letter in the square at the i th row from the top and j th column from the left is c  ij  
Print the string of length 3 that can be obtained by concatenating the letters in the squares on the diagonal connecting the top left and bottom right corner of the grid  from the top left to bottom right 

Constraints
Input consists of lowercase English letters 


InputInput is given from Standard Input in the following format 
c  11 c  12 c  13 
c  21 c  22 c  23 
c  31 c  32 c  33 


OutputPrint the string of length 3 that can be obtained by concatenating the letters on the diagonal connecting the top left and bottom right corner of the grid  from the top left to bottom right 

Sample Input 1ant
obe
rec


Sample Output 1abc

The letters in the squares on the diagonal connecting the top left and bottom right corner of the grid are a  b and c from top right to bottom left  Concatenate these letters and print abc 

Sample Input 2edu
cat
ion


Sample Output 2ean"
Palindromic Numbers,https://atcoder.jp/contests/abc090/tasks/abc090_b,"問題文A 以上 B 以下の整数のうち 回文数となるものの個数を求めてください 
ただし 回文数とは 先頭に 0 をつけない 10 進表記を文字列として見たとき 前から読んでも後ろから読んでも同じ文字列となるような正の整数のことを指します 

制約
10000  leq A  leq B  leq 99999
入力はすべて整数である


入力入力は以下の形式で標準入力から与えられる 
A B


出力A 以上 B 以下の整数のうち 回文数となるものの個数を出力せよ 

入力例 111009 11332


出力例 14

11011 11111 11211 11311 の 4 つが条件を満たします 

入力例 231415 92653


出力例 2612

Problem StatementFind the number of palindromic numbers among the integers between A and B  inclusive  
Here  a palindromic number is a positive integer whose string representation in base 10  without leading zeros  reads the same forward and backward 

Constraints
10000  leq A  leq B  leq 99999
All input values are integers 


InputInput is given from Standard Input in the following format 
A B


OutputPrint the number of palindromic numbers among the integers between A and B  inclusive  

Sample Input 111009 11332


Sample Output 14

There are four integers that satisfy the conditions  11011  11111  11211 and 11311 

Sample Input 231415 92653


Sample Output 2612"
Two Coins,https://atcoder.jp/contests/abc091/tasks/abc091_a,"問題文小学生の高橋君は雑貨店にやってきました 
高橋君は A 円硬貨と B 円硬貨の 2 枚を持っており C 円のオモチャを買いたいと思っています 高橋君はオモチャを買うことができるでしょうか 
なお 高橋君は高橋王国に住んでいるため 日本円ではありえないような硬貨を持っていることもあります 

制約
入力は全て整数である
1  leq A  B  leq 500
1  leq C  leq 1000


入力入力は以下の形式で標準入力から与えられる 
A B C


出力オモチャを買えるならば Yes 買えないならば No を出力せよ 

入力例 150 100 120


出力例 1Yes

高橋君は50   100   150円持っているため 120円のおもちゃが買えます 

入力例 2500 100 1000


出力例 2No

高橋君は500   100   600円持っていますが 1000円のおもちゃは買えません 

入力例 319 123 143


出力例 3No

高橋王国には19円硬貨や123円硬貨も存在します 使いにくいですね 

入力例 419 123 142


出力例 4Yes

Problem StatementAn elementary school student Takahashi has come to a variety store 
He has two coins  A yen and B yen coins  yen is the currency of Japan   and wants to buy a toy that costs C yen  Can he buy it 
Note that he lives in Takahashi Kingdom  and may have coins that do not exist in Japan 

Constraints
All input values are integers 
1  leq A  B  leq 500
1  leq C  leq 1000


InputInput is given from Standard Input in the following format 
A B C


OutputIf Takahashi can buy the toy  print Yes  if he cannot  print No 

Sample Input 150 100 120


Sample Output 1Yes

He has 50   100   150 yen  so he can buy the 120 yen toy 

Sample Input 2500 100 1000


Sample Output 2No

He has 500   100   600 yen  but he cannot buy the 1000 yen toy 

Sample Input 319 123 143


Sample Output 3No

There are 19 yen and 123 yen coins in Takahashi Kingdom  which are rather hard to use 

Sample Input 419 123 142


Sample Output 4Yes"
Two Colors Card Game,https://atcoder.jp/contests/abc091/tasks/abc091_b,"問題文高橋君は青いカードを N 枚 赤いカードを M 枚持っています 
カードにはそれぞれ文字列が書かれており 
i 枚目の青いカードに書かれている文字列は s i 
i 枚目の赤いカードに書かれている文字列は t i です 
高橋君は 文字列を 1 つ言います 
そして 全てのカードを確認し 
その文字列が書かれた青いカードを 1 枚見つけるごとに 1 円貰えます 
また その文字列が書かれた赤いカードを 1 枚見つけるごとに 1 円失います 
なお 高橋君の言った文字列と カードに書かれた文字列が完全に一致していた場合のみを考えます 
例えば 高橋君が atcoder と言った場合 atcoderr atcode btcoder などと書かれた青いカードがあってもお金は貰えません 逆に このような文字列が書かれた赤いカードがあってもお金を失うことはありません  
高橋君は 最大で差し引き何円貰うことができるでしょうか 
ただし 違うカードに同じ文字列が書かれていることもあることに注意してください 

制約
N  M は整数
1  leq N  M  leq 100
s 1  s 2       s N  t 1  t 2       t M は全て長さ 1 以上 10 以下の文字列で 英小文字のみからなる


入力入力は以下の形式で標準入力から与えられる 
N
s 1
s 2
 
s N
M
t 1
t 2
 
t M


出力高橋君が最大で差し引き X 円貰える時 X を出力せよ 

入力例 13
apple
orange
apple
1
grape


出力例 12

apple と言えば 2 円貰うことができます 

入力例 23
apple
orange
apple
5
apple
apple
apple
apple
apple


出力例 21

apple と言うと 3 円失ってしまいます orange と言えば 1 円貰うことができます 

入力例 31
voldemort
10
voldemort
voldemort
voldemort
voldemort
voldemort
voldemort
voldemort
voldemort
voldemort
voldemort


出力例 30

voldemort と言うと 9 円失ってしまいます 例えば orange と言えば 1 円も失わずにすみます 

入力例 46
red
red
blue
yellow
yellow
red
5
red
red
yellow
green
blue


出力例 41

Problem StatementTakahashi has N blue cards and M red cards 
A string is written on each card  The string written on the i th blue card is s i  and the string written on the i th red card is t i 
Takahashi will now announce a string  and then check every card  Each time he finds a blue card with the string announced by him  he will earn 1 yen  the currency of Japan   each time he finds a red card with that string  he will lose 1 yen 
Here  we only consider the case where the string announced by Takahashi and the string on the card are exactly the same  For example  if he announces atcoder  he will not earn money even if there are blue cards with atcoderr  atcode  btcoder  and so on   On the other hand  he will not lose money even if there are red cards with such strings  either  
At most how much can he earn on balance 
Note that the same string may be written on multiple cards 

Constraints
N and M are integers 
1  leq N  M  leq 100
s 1  s 2       s N  t 1  t 2       t M are all strings of lengths between 1 and 10  inclusive  consisting of lowercase English letters 


InputInput is given from Standard Input in the following format 
N
s 1
s 2
 
s N
M
t 1
t 2
 
t M


OutputIf Takahashi can earn at most X yen on balance  print X 

Sample Input 13
apple
orange
apple
1
grape


Sample Output 12

He can earn 2 yen by announcing apple 

Sample Input 23
apple
orange
apple
5
apple
apple
apple
apple
apple


Sample Output 21

If he announces apple  he will lose 3 yen  If he announces orange  he can earn 1 yen 

Sample Input 31
voldemort
10
voldemort
voldemort
voldemort
voldemort
voldemort
voldemort
voldemort
voldemort
voldemort
voldemort


Sample Output 30

If he announces voldemort  he will lose 9 yen  If he announces orange  for example  he can avoid losing a yen 

Sample Input 46
red
red
blue
yellow
yellow
red
5
red
red
yellow
green
blue


Sample Output 41"
Traveling Budget,https://atcoder.jp/contests/abc092/tasks/abc092_a,"問題文あなたは 電車とバスを乗り継いで旅行をする計画を立てました 
電車は旅程に沿って通常のきっぷを買うと A 円かかり 乗り放題きっぷを買うと B 円かかります 
バスは旅程に沿って通常のきっぷを買うと C 円かかり 乗り放題きっぷを買うと D 円かかります 
電車およびバスについて通常の切符を買うか乗り放題きっぷを買うかをうまく選んだときの 運賃の合計の最小値を求めてください 

制約
1  leq A  leq 1 000
1  leq B  leq 1 000
1  leq C  leq 1 000
1  leq D  leq 1 000
入力値はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
A
B
C
D


出力運賃の合計の最小値を出力せよ 

入力例 1600
300
220
420


出力例 1520

電車の通常のきっぷを買うと 600 円かかり 乗り放題きっぷを買うと 300 円かかります 
よって 電車については乗り放題きっぷを 300 円で買うほうが運賃が少なくなります 
一方 バスについては通常の切符を 220 円で買うほうが運賃が少なくなります 
したがって 運賃の合計の最小値は 300   220   520 円となります 

入力例 2555
555
400
200


出力例 2755


入力例 3549
817
715
603


出力例 31152

Problem StatementYou planned a trip using trains and buses 
The train fare will be A yen  the currency of Japan  if you buy ordinary tickets along the way  and B yen if you buy an unlimited ticket 
Similarly  the bus fare will be C yen if you buy ordinary tickets along the way  and D yen if you buy an unlimited ticket 
Find the minimum total fare when the optimal choices are made for trains and buses 

Constraints
1  leq A  leq 1 000
1  leq B  leq 1 000
1  leq C  leq 1 000
1  leq D  leq 1 000
All input values are integers 


InputInput is given from Standard Input in the following format 
A
B
C
D


OutputPrint the minimum total fare 

Sample Input 1600
300
220
420


Sample Output 1520

The train fare will be 600 yen if you buy ordinary tickets  and 300 yen if you buy an unlimited ticket 
Thus  the optimal choice for trains is to buy an unlimited ticket for 300 yen 
On the other hand  the optimal choice for buses is to buy ordinary tickets for 220 yen 
Therefore  the minimum total fare is 300   220   520 yen 

Sample Input 2555
555
400
200


Sample Output 2755


Sample Input 3549
817
715
603


Sample Output 31152"
Chocolate,https://atcoder.jp/contests/abc092/tasks/abc092_b,"問題文ある合宿におやつとしてチョコレートが何個か準備されました 
合宿は N 人が参加して D 日間行われました 
i 人目の参加者  1  leq i  leq N  は合宿の 1  A i   1  2A i   1      日目にチョコレートを 1 個ずつ食べました 
その結果 合宿終了後に残っていたチョコレートは X 個となりました また 合宿の参加者以外がチョコレートを食べることはありませんでした 
合宿開始前に準備されていたチョコレートの個数を求めてください 

制約
1  leq N  leq 100
1  leq D  leq 100
1  leq X  leq 100
1  leq A i  leq 100  1  leq i  leq N 


入力入力は以下の形式で標準入力から与えられる 
N
D X
A 1
A 2
 
A N


出力合宿開始前に準備されていたチョコレートの個数を出力せよ 

入力例 13
7 1
2
5
10


出力例 18

3 人が 7 日間の合宿に参加します 
それぞれの参加者は以下のようにチョコレートを食べます 

1 人目の参加者は 1  3  5  7 日目にチョコレートを 1 個ずつ 合計 4 個食べます 
2 人目の参加者は 1 日目および 6 日目にチョコレートを 1 個ずつ 合計 2 個食べます 
3 人目の参加者は 1 日目だけにチョコレートを食べます 食べるチョコレートは合計 1 個です 

合宿終了後に残っていたチョコレートは 1 個であるので 合宿開始前に準備されていたチョコレートは 1   4   2   1   8 個あったことになります 

入力例 22
8 20
1
10


出力例 229


入力例 35
30 44
26
18
81
18
6


出力例 356

Problem StatementSome number of chocolate pieces were prepared for a training camp 
The camp had N participants and lasted for D days 
The i th participant  1  leq i  leq N  ate one chocolate piece on each of the following days in the camp  the 1 st day  the  A i   1  th day  the  2A i   1  th day  and so on 
As a result  there were X chocolate pieces remaining at the end of the camp  During the camp  nobody except the participants ate chocolate pieces 
Find the number of chocolate pieces prepared at the beginning of the camp 

Constraints
1  leq N  leq 100
1  leq D  leq 100
1  leq X  leq 100
1  leq A i  leq 100  1  leq i  leq N 
All input values are integers 


InputInput is given from Standard Input in the following format 
N
D X
A 1
A 2
 
A N


OutputFind the number of chocolate pieces prepared at the beginning of the camp 

Sample Input 13
7 1
2
5
10


Sample Output 18

The camp has 3 participants and lasts for 7 days 
Each participant eats chocolate pieces as follows 

The first participant eats one chocolate piece on Day 1  3  5 and 7  for a total of four 
The second participant eats one chocolate piece on Day 1 and 6  for a total of two 
The third participant eats one chocolate piece only on Day 1  for a total of one 

Since the number of pieces remaining at the end of the camp is one  the number of pieces prepared at the beginning of the camp is 1   4   2   1   8 

Sample Input 22
8 20
1
10


Sample Output 229


Sample Input 35
30 44
26
18
81
18
6


Sample Output 356"
abc of ABC,https://atcoder.jp/contests/abc093/tasks/abc093_a,"問題文a b c からなる長さ 3 の文字列 S が与えられます S を abc を並び替えて作ることができるかどうか判定してください 

制約
 S  3
S は a b c からなる


入力入力は以下の形式で標準入力から与えられる 
S


出力S を abc を並び替えて作ることができるなら Yes を そうでないなら No を出力せよ 

入力例 1bac


出力例 1Yes

bac の 1 文字目と 2 文字目を入れ替えると abc になります 

入力例 2bab


出力例 2No


入力例 3abc


出力例 3Yes


入力例 4aaa


出力例 4No

Problem StatementYou are given a string S of length 3 consisting of a  b and c  Determine if S can be obtained by permuting abc 

Constraints
 S  3
S consists of a  b and c 


InputInput is given from Standard Input in the following format 
S


OutputIf S can be obtained by permuting abc  print Yes  otherwise  print No 

Sample Input 1bac


Sample Output 1Yes

Swapping the first and second characters in bac results in abc 

Sample Input 2bab


Sample Output 2No


Sample Input 3abc


Sample Output 3Yes


Sample Input 4aaa


Sample Output 4No"
Small and Large Integers,https://atcoder.jp/contests/abc093/tasks/abc093_b,"問題文以下を満たす整数をすべて昇順に出力してください 

A 以上 B 以下の整数の中で 小さい方から K 番目以内であるか 大きい方から K 番目以内である


制約
1  leq A  leq B  leq 10 9
1  leq K  leq 100
入力はすべて整数である


入力入力は以下の形式で標準入力から与えられる 
A B K


出力上の条件を満たす整数をすべて昇順に出力せよ 

入力例 13 8 2


出力例 13
4
7
8


3 は 3 以上 8 以下の整数の中で小さい方から 1 番目です 
4 は 3 以上 8 以下の整数の中で小さい方から 2 番目です 
7 は 3 以上 8 以下の整数の中で大さい方から 2 番目です 
8 は 3 以上 8 以下の整数の中で大さい方から 1 番目です 


入力例 24 8 3


出力例 24
5
6
7
8


入力例 32 9 100


出力例 32
3
4
5
6
7
8
9

Problem StatementPrint all the integers that satisfies the following in ascending order 

Among the integers between A and B  inclusive   it is either within the K smallest integers or within the K largest integers 


Constraints
1  leq A  leq B  leq 10 9
1  leq K  leq 100
All values in input are integers 


InputInput is given from Standard Input in the following format 
A B K


OutputPrint all the integers that satisfies the condition above in ascending order 

Sample Input 13 8 2


Sample Output 13
4
7
8


3 is the first smallest integer among the integers between 3 and 8 
4 is the second smallest integer among the integers between 3 and 8 
7 is the second largest integer among the integers between 3 and 8 
8 is the first largest integer among the integers between 3 and 8 


Sample Input 24 8 3


Sample Output 24
5
6
7
8


Sample Input 32 9 100


Sample Output 32
3
4
5
6
7
8
9"
Cats and Dogs,https://atcoder.jp/contests/abc094/tasks/abc094_a,"問題文猫と犬が合わせて A   B 匹います 
このうち A 匹は猫であることがわかっていますが 残りの B 匹は猫と犬のどちらであるかわかっていません 
この A   B 匹の中に 猫がちょうど X 匹いるということはありうるかどうか判定してください 

制約
1  leq A  leq 100
1  leq B  leq 100
1  leq X  leq 200
入力はすべて整数


入力入力は以下の形式で標準入力から与えられる 
A B X


出力猫がちょうど X 匹いるということがありうるならば YES を ありえないならば NO を出力せよ 

入力例 13 5 4


出力例 1YES

B   5 匹のうち 猫が 1 匹 犬が 4 匹であれば 猫の数は合計で X   4 匹になります 

入力例 22 2 6


出力例 2NO

B   2 匹すべてが猫であっても 猫の数の合計は X   6 匹に足りません 

入力例 35 3 2


出力例 3NO

B   3 匹すべてが犬であっても 猫の数の合計は X   2 匹より多くなってしまいます 
Problem StatementThere are a total of A   B cats and dogs 
Among them  A are known to be cats  but the remaining B are not known to be either cats or dogs 
Determine if it is possible that there are exactly X cats among these A   B animals 

Constraints
1  leq A  leq 100
1  leq B  leq 100
1  leq X  leq 200
All values in input are integers 


InputInput is given from Standard Input in the following format 
A B X


OutputIf it is possible that there are exactly X cats  print YES  if it is impossible  print NO 

Sample Input 13 5 4


Sample Output 1YES

If there are one cat and four dogs among the B   5 animals  there are X   4 cats in total 

Sample Input 22 2 6


Sample Output 2NO

Even if all of the B   2 animals are cats  there are less than X   6 cats in total 

Sample Input 35 3 2


Sample Output 3NO

Even if all of the B   3 animals are dogs  there are more than X   2 cats in total"
Toll Gates,https://atcoder.jp/contests/abc094/tasks/abc094_b,"問題文N   1 個のマスが左右に一列に並んでいます 
これらのマスには 左のマスから順に 0  1       N の番号が付けられています 
あなたは 最初マス X にいます 
隣り合うマスの間は自由に移動することができ マス 0 またはマス N にたどり着くとゴールすることができます 
ただし i   1  2       M について マス A i には料金所があり そのためマス A i に移動してくる際には 1 のコストがかかります 
なお マス 0 マス X マス N には料金所がないことが保証されます 
ゴールするまでにかかるコストの最小値を求めてください 

制約
1  leq N  leq 100
1  leq M  leq 100
1  leq X  leq N   1
1  leq A 1   A 2         A M  leq N   1
A i  neq X
入力はすべて整数


入力入力は以下の形式で標準入力から与えられる 
N M X
A 1 A 2     A M


出力ゴールするまでにかかるコストの最小値を出力せよ 

入力例 15 3 3
1 2 4


出力例 11

次のようにするのが最適です 

まず マス 3 から マス 4 へ移動する このとき マス 4 には料金所があるので コスト 1 がかかる 
次に マス 4 から マス 5 へ移動する このときはコストはかからない 
マス 5 に到着したので ゴールする 

このようにすると コストは合計で 1 になります 

入力例 27 3 2
4 5 6


出力例 20

まったくコストがかからないこともあります 

入力例 310 7 5
1 2 3 4 6 8 9


出力例 33

Problem StatementThere are N   1 squares arranged in a row  numbered 0  1       N from left to right 
Initially  you are in Square X 
You can freely travel between adjacent squares  Your goal is to reach Square 0 or Square N 
However  for each i   1  2       M  there is a toll gate in Square A i  and traveling to Square A i incurs a cost of 1 
It is guaranteed that there is no toll gate in Square 0  Square X and Square N 
Find the minimum cost incurred before reaching the goal 

Constraints
1  leq N  leq 100
1  leq M  leq 100
1  leq X  leq N   1
1  leq A 1   A 2         A M  leq N
A i  neq X
All values in input are integers 


InputInput is given from Standard Input in the following format 
N M X
A 1 A 2     A M


OutputPrint the minimum cost incurred before reaching the goal 

Sample Input 15 3 3
1 2 4


Sample Output 11

The optimal solution is as follows 

First  travel from Square 3 to Square 4  Here  there is a toll gate in Square 4  so the cost of 1 is incurred 
Then  travel from Square 4 to Square 5  This time  no cost is incurred 
Now  we are in Square 5 and we have reached the goal 

In this case  the total cost incurred is 1 

Sample Input 27 3 2
4 5 6


Sample Output 20

We may be able to reach the goal at no cost 

Sample Input 310 7 5
1 2 3 4 6 8 9


Sample Output 33"
Something on It,https://atcoder.jp/contests/abc095/tasks/abc095_a,"問題文ラーメン店 高橋屋 のラーメンの値段は 1 杯 700 円ですが トッピング 味玉 チャーシュー ねぎ を乗せた場合は 1 種類につき 100 円が加算されます 
ある客がラーメンを一杯注文し 店員にトッピングの希望を伝えました 店員は注文の内容をメモ帳に文字列 S として記録しました S の長さは 3 文字で S の 1 文字目が o のとき客のラーメンに味玉を乗せることを x のとき味玉を乗せないことを表します 同様に S の 2 文字目 3 文字目はそれぞれチャーシュー ねぎの有無を表します 
S が入力されると 対応するラーメンの値段を出力するプログラムを書いてください 

制約
S は長さ 3 の文字列である 
S の各文字は o または x である 


入力入力は以下の形式で標準入力から与えられる 
S


出力S に対応するラーメンの値段が y 円のとき y の値を出力せよ 

入力例 1oxo


出力例 1900

味玉とねぎの 2 種類のトッピングを乗せたラーメンの値段は 700   100  times 2   900 円です 

入力例 2ooo


出力例 21000

3 種類すべてのトッピングを乗せたラーメンの値段は 700   100  times 3   1000 円です 

入力例 3xxx


出力例 3700

トッピングなしのラーメンの値段は 700 円です 
Problem StatementIn  Takahashi ya   a ramen restaurant  a bowl of ramen costs 700 yen  the currency of Japan   plus 100 yen for each kind of topping  boiled egg  sliced pork  green onions  
A customer ordered a bowl of ramen and told which toppings to put on his ramen to a clerk  The clerk took a memo of the order as a string S  S is three characters long  and if the first character in S is o  it means the ramen should be topped with boiled egg  if that character is x  it means the ramen should not be topped with boiled egg  Similarly  the second and third characters in S mean the presence or absence of sliced pork and green onions on top of the ramen 
Write a program that  when S is given  prints the price of the corresponding bowl of ramen 

Constraints
S is a string of length 3 
Each character in S is o or x 


InputInput is given from Standard Input in the following format 
S


OutputPrint the price of the bowl of ramen corresponding to S 

Sample Input 1oxo


Sample Output 1900

The price of a ramen topped with two kinds of toppings  boiled egg and green onions  is 700   100  times 2   900 yen 

Sample Input 2ooo


Sample Output 21000

The price of a ramen topped with all three kinds of toppings is 700   100  times 3   1000 yen 

Sample Input 3xxx


Sample Output 3700

The price of a ramen without any toppings is 700 yen"
Bitter Alchemy,https://atcoder.jp/contests/abc095/tasks/abc095_b,"問題文パティシエの赤木さんは  お菓子の素 という粉のみを材料として N 種類のドーナツを作ることができます これらのドーナツはドーナツ 1 ドーナツ 2     ドーナツ N と呼ばれます ドーナツ i  1   i   N  を 1 個作るには お菓子の素 m i グラムを消費する必要があります なお 0 5 個など整数でない個数のドーナツを作ることはできません 
いま 赤木さんはお菓子の素を X グラム持っています これを使って 今夜のパーティーに向けて可能な限りたくさんのドーナツを作ることにしました ただし 来客の味の好みは様々なので 次の条件を守ることにしました 

N 種類のドーナツそれぞれを少なくとも 1 個は作る 

このとき 最大で何個のドーナツを作ることができるでしょうか お菓子の素を使い切る必要はありません また この問題の制約のもとでは 条件を守ることは必ず可能です 

制約
2   N   100
1   m i   1000
m 1   m 2         m N   X   10 5
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
N X
m 1
m 2
 
m N


出力条件を守って作ることのできるドーナツの最大の個数を出力せよ 

入力例 13 1000
120
100
140


出力例 19

1000 グラムのお菓子の素があり 赤木さんは 3 種類のドーナツを作ることができます 3 種類すべてのドーナツを 1 個ずつ作ると 120   100   140   360 グラムのお菓子の素を消費します このとき残る 640 グラムのお菓子の素から ドーナツ 2 をさらに 6 個作ることができます 以上で合計 9 個のドーナツを作ることができ これが最大です 

入力例 24 360
90
90
90
90


出力例 24

4 種類すべてのドーナツを 1 個ずつ作った時点でお菓子の素が尽きます 

入力例 35 3000
150
130
150
130
110


出力例 326

Problem StatementAkaki  a patissier  can make N kinds of doughnut using only a certain powder called  Okashi no Moto   literally  material of pastry   simply called Moto below  as ingredient  These doughnuts are called Doughnut 1  Doughnut 2       Doughnut N  In order to make one Doughnut i  1   i   N   she needs to consume m i grams of Moto  She cannot make a non integer number of doughnuts  such as 0 5 doughnuts 
Now  she has X grams of Moto  She decides to make as many doughnuts as possible for a party tonight  However  since the tastes of the guests differ  she will obey the following condition 

For each of the N kinds of doughnuts  make at least one doughnut of that kind 

At most how many doughnuts can be made here  She does not necessarily need to consume all of her Moto  Also  under the constraints of this problem  it is always possible to obey the condition 

Constraints
2   N   100
1   m i   1000
m 1   m 2         m N   X   10 5
All values in input are integers 


InputInput is given from Standard Input in the following format 
N X
m 1
m 2
 
m N


OutputPrint the maximum number of doughnuts that can be made under the condition 

Sample Input 13 1000
120
100
140


Sample Output 19

She has 1000 grams of Moto and can make three kinds of doughnuts  If she makes one doughnut for each of the three kinds  she consumes 120   100   140   360 grams of Moto  From the 640 grams of Moto that remains here  she can make additional six Doughnuts 2  This is how she can made a total of nine doughnuts  which is the maximum 

Sample Input 24 360
90
90
90
90


Sample Output 24

Making one doughnut for each of the four kinds consumes all of her Moto 

Sample Input 35 3000
150
130
150
130
110


Sample Output 326"
Day of Takahashi,https://atcoder.jp/contests/abc096/tasks/abc096_a,"問題文
AtCoder 王国では  5 月 5 日のような月の数と日の数が同じ日を 高橋 と言う 
2018 年 1 月 1 日から 2018 年 a 月 b 日までに   高橋 は何日あるか 
ただし  AtCoder 王国ではグレゴリオ暦を利用しているものとする   

制約

a は 1 以上 12 以下の整数
b は 1 以上 31 以下の整数
2018 年 a 月 b 日はグレゴリオ暦において正しい日付である 


入力
入力は以下の形式で標準入力から与えられる   
a b


出力
2018 年 1 月 1 日から 2018 年 a 月 b 日までに 高橋 は何日あるか 出力しなさい   

入力例 15 5


出力例 15

1 月 1 日  2 月 2 日  3 月 3 日  4 月 4 日  5 月 5 日  合計 5 日が 高橋 です   

入力例 22 1


出力例 21

1 月 1 日のみが 高橋 です   

入力例 311 30


出力例 311

1 1  2 2  3 3  4 4  5 5  6 6  7 7  8 8  9 9  10 10  11 11 の  合計 11 日です   
Problem Statement
In AtCoder Kingdom  Gregorian calendar is used  and dates are written in the  year month day  order  or the  month day  order without the year 
For example  May 3  2018 is written as 2018 5 3  or 5 3 without the year   
In this country  a date is called Takahashi when the month and the day are equal as numbers  For example  5 5 is Takahashi 
How many days from 2018 1 1 through 2018 a b are Takahashi 

Constraints

a is an integer between 1 and 12  inclusive  
b is an integer between 1 and 31  inclusive  
2018 a b is a valid date in Gregorian calendar 


Input
Input is given from Standard Input in the following format 
a b


Output
Print the number of days from 2018 1 1 through 2018 a b that are Takahashi 

Sample Input 15 5


Sample Output 15

There are five days that are Takahashi  1 1  2 2  3 3  4 4 and 5 5 

Sample Input 22 1


Sample Output 21

There is only one day that is Takahashi  1 1 

Sample Input 311 30


Sample Output 311

There are eleven days that are Takahashi  1 1  2 2  3 3  4 4  5 5  6 6  7 7  8 8  9 9  10 10 and 11 11"
Maximum Sum,https://atcoder.jp/contests/abc096/tasks/abc096_b,nan
Grid Repainting 2,https://atcoder.jp/contests/abc096/tasks/abc096_c,"問題文
H 行 W 列のマス目で表されるキャンバスがあります  上から i 番目  左から j 番目のマスを  i  j  と表します 
最初  すべてのマス目は白色です  square1001 君は  黒い絵の具を使って絵を描きたいと思いました  具体的には  square1001 君の目標は  s  i  j     のときマス  i  j  を黒色  s  i  j     のときマス  i  j  を白色にすることです 
しかし  彼は絵を描くことが得意ではないので  何回か  0 回でもよい  上下左右に隣接する 2 つのマスを選び  両方黒く塗る ことしかできません  ただし  すでに黒く塗られているマスを選ぶこともでき  この場合マスの色は黒のまま変わりません   
square1001 君が目標を達成することができるか判定してください   

制約

H は 1 以上 50 以下の整数
W は 1 以上 50 以下の整数
すべての  i  j     1  leq i  leq H  1  leq j  leq W  に対して  s  i  j  は   または  


入力
入力は以下の形式で標準入力から与えられる   
H W
s  1  1  s  1  2  s  1  3      s  1  W 
s  2  1  s  2  2  s  2  3      s  2  W 
       
s  H  1  s  H  2  s  H  3      s  H  W 


出力
square1001 君が目標を達成することができるならば Yes 達成できないならば No と出力しなさい   

入力例 13 3
   
   
   


出力例 1Yes

目標を達成する手順の一例として  下の図の方法が挙げられます  この図では   次に黒く塗るマス を   で表しています 


入力例 25 5
     
     
     
     
     


出力例 2No

square1001 君は目標を達成することができません   

入力例 311 11
           
           
           
           
           
           
           
           
           
           
           


出力例 3Yes

Problem Statement
We have a canvas divided into a grid with H rows and W columns  The square at the i th row from the top and the j th column from the left is represented as  i  j  
Initially  all the squares are white  square1001 wants to draw a picture with black paint  His specific objective is to make Square  i  j  black when s  i  j      and to make Square  i  j  white when s  i  j     
However  since he is not a good painter  he can only choose two squares that are horizontally or vertically adjacent and paint those squares black  for some number of times  possibly zero   He may choose squares that are already painted black  in which case the color of those squares remain black 
Determine if square1001 can achieve his objective   

Constraints

H is an integer between 1 and 50  inclusive  
W is an integer between 1 and 50  inclusive  
For every  i  j   1  leq i  leq H  1  leq j  leq W   s  i  j  is   or   


Input
Input is given from Standard Input in the following format 
H W
s  1  1  s  1  2  s  1  3      s  1  W 
s  2  1  s  2  2  s  2  3      s  2  W 
       
s  H  1  s  H  2  s  H  3      s  H  W 


Output
If square1001 can achieve his objective  print Yes  if he cannot  print No 

Sample Input 13 3
   
   
   


Sample Output 1Yes

One possible way to achieve the objective is shown in the figure below  Here  the squares being painted are marked by stars 


Sample Input 25 5
     
     
     
     
     


Sample Output 2No

square1001 cannot achieve his objective here 

Sample Input 311 11
           
           
           
           
           
           
           
           
           
           
           


Sample Output 3Yes"
"Five, Five Everywhere",https://atcoder.jp/contests/abc096/tasks/abc096_d,nan
Colorful Transceivers,https://atcoder.jp/contests/abc097/tasks/abc097_a,"問題文数直線上にいるAさんとBさんとCさんがトランシーバーで会話をしようとしています 
Aさんは a  m  地点 Bさんは b  m  地点 Cさんは c  m  地点にいます 
二人の人間は 距離が d  m  以内のとき直接会話が出来ます 
AさんとCさんが直接的 あるいは間接的に会話ができるか判定してください 
ただしAさんとCさんが間接的に会話ができるとは AさんとBさんが直接会話でき かつBさんとCさんが直接会話できることを指します 

制約
1   a b c   100
1   d   100
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
a b c d


出力会話できるなら Yes を  できないなら No を出力せよ 

入力例 14 7 9 3


出力例 1Yes

AさんとBさんは直接会話可能です また BさんとCさんも直接会話可能です 従って Yes を出力してください 

入力例 2100 10 1 2


出力例 2No

この場合は不可能です 

入力例 310 10 10 1


出力例 3Yes

複数人が同じ場所にいることもあります 

入力例 41 100 2 10


出力例 4Yes

Problem StatementThree people  A  B and C  are trying to communicate using transceivers 
They are standing along a number line  and the coordinates of A  B and C are a  b and c  in meters   respectively 
Two people can directly communicate when the distance between them is at most d meters 
Determine if A and C can communicate  either directly or indirectly 
Here  A and C can indirectly communicate when A and B can directly communicate and also B and C can directly communicate 

Constraints
1   a b c   100
1   d   100
All values in input are integers 


InputInput is given from Standard Input in the following format 
a b c d


OutputIf A and C can communicate  print Yes  if they cannot  print No 

Sample Input 14 7 9 3


Sample Output 1Yes

A and B can directly communicate  and also B and C can directly communicate  so we should print Yes 

Sample Input 2100 10 1 2


Sample Output 2No

They cannot communicate in this case 

Sample Input 310 10 10 1


Sample Output 3Yes

There can be multiple people at the same position 

Sample Input 41 100 2 10


Sample Output 4Yes"
Exponential,https://atcoder.jp/contests/abc097/tasks/abc097_b,"問題文正整数 X が与えられます 
X 以下の最大のべき乗数を求めてください 
ただし べき乗数とは ある 1 以上の整数 b と 2 以上の整数 p を使って b p とかける整数のことを指すこととします 

制約
1   X   1000
X は整数


入力入力は以下の形式で標準入力から与えられる 
X


出力X 以下の最大のべき乗数を出力せよ 

入力例 110


出力例 19

10 以下のべき乗数は 1 4 8 9 の 4 つです 
この内最も大きい 9 を出力してください 

入力例 21


出力例 21


入力例 3999


出力例 3961

Problem StatementYou are given a positive integer X 
Find the largest perfect power that is at most X 
Here  a perfect power is an integer that can be represented as b p  where b is an integer not less than 1 and p is an integer not less than 2 

Constraints
1   X   1000
X is an integer 


InputInput is given from Standard Input in the following format 
X


OutputPrint the largest perfect power that is at most X 

Sample Input 110


Sample Output 19

There are four perfect powers that are at most 10  1  4  8 and 9 
We should print the largest among them  9 

Sample Input 21


Sample Output 21


Sample Input 3999


Sample Output 3961"
Add Sub Mul,https://atcoder.jp/contests/abc098/tasks/abc098_a,"問題文2 つの整数 A  B が与えられます 
A B  A B  A  times B の中で最大の値を求めてください 

制約
 1000  leq A B  leq 1000
入力はすべて整数である


入力入力は以下の形式で標準入力から与えられる 
A B


出力A B  A B  A  times B の中で最大の値を出力せよ 

入力例 13 1


出力例 14

3 1 4  3 1 2  3  times 1 3 なので この中で最大の値である 4 が答えになります 

入力例 24  2


出力例 26

4     2    6 が最大の値になります 

入力例 30 0


出力例 30

Problem StatementYou are given two integers A and B 
Find the largest value among A B  A B and A  times B 

Constraints
 1000  leq A B  leq 1000
All values in input are integers 


InputInput is given from Standard Input in the following format 
A B


OutputPrint the largest value among A B  A B and A  times B 

Sample Input 13 1


Sample Output 14

3 1 4  3 1 2 and 3  times 1 3  The largest among them is 4 

Sample Input 24  2


Sample Output 26

The largest is 4     2    6 

Sample Input 30 0


Sample Output 30"
Cut and Count,https://atcoder.jp/contests/abc098/tasks/abc098_b,"問題文英小文字からなる長さ N の文字列 S が与えられます 
この文字列を一箇所で切断して 文字列 X と Y に分割します 
このとき  X と Y のどちらにも含まれている文字 の種類数を最大化したいです 
文字列を切断する位置を適切に決めた際の X と Y のどちらにも含まれている文字 の種類数の最大値を求めてください 

制約
2  leq N  leq 100
 S    N
S は英小文字からなる


入力入力は以下の形式で標準入力から与えられる 
N
S


出力 X と Y のどちらにも含まれている文字 の種類数の最大値を出力せよ 

入力例 16
aabbca


出力例 12

S を先頭から 3 文字目と 4 文字目の間で切って X   aab と Y   bca に分割すると  X と Y のどちらにも含まれている文字 は a と b です 
 X と Y のどちらにも含まれている文字 の種類数が 3 以上になることはないので 答えは 2 になります 

入力例 210
aaaaaaaaaa


出力例 21

どのように S を分割しても  X と Y のどちらにも含まれている文字 は a のみです 

入力例 345
tgxgdqkyjzhyputjjtllptdfxocrylqfqjynmfbfucbir


出力例 39

Problem StatementYou are given a string S of length N consisting of lowercase English letters 
We will cut this string at one position into two strings X and Y 
Here  we would like to maximize the number of different letters contained in both X and Y 
Find the largest possible number of different letters contained in both X and Y when we cut the string at the optimal position 

Constraints
2  leq N  leq 100
 S    N
S consists of lowercase English letters 


InputInput is given from Standard Input in the following format 
N
S


OutputPrint the largest possible number of different letters contained in both X and Y 

Sample Input 16
aabbca


Sample Output 12

If we cut the string between the third and fourth letters into X   aab and Y   bca  the letters contained in both X and Y are a and b 
There will never be three or more different letters contained in both X and Y  so the answer is 2 

Sample Input 210
aaaaaaaaaa


Sample Output 21

However we divide S  only a will be contained in both X and Y 

Sample Input 345
tgxgdqkyjzhyputjjtllptdfxocrylqfqjynmfbfucbir


Sample Output 39"
ABD,https://atcoder.jp/contests/abc099/tasks/abc099_a,"問題文AtCoder Beginner Contestが始まってから早数十年 
コンテストは 1 回目から順に ABC001 ABC002     と名付けられてきましたが  999 回目のコンテスト ABC999 を終え これからのコンテストの名前をどうするかという問題が生じました 
そこで 1000 回目から 1998 回目のコンテストを順に ABD001 ABD002     ABD999 と名付けることとなりました 
1 以上 1998 以下の整数 N が与えられるので N 回目のコンテストの名前の最初の 3 文字を出力してください 

制約
1  leq N  leq 1998
N は整数


入力入力は以下の形式で標準入力から与えられる 
N


出力N 回目のコンテストの名前の最初の 3 文字を出力せよ 

入力例 1999


出力例 1ABC

999 回目のコンテストの名前は ABC999 です 

入力例 21000


出力例 2ABD

1000 回目のコンテストの名前は ABD001 です 

入力例 31481


出力例 3ABD

1481 回目のコンテストの名前は ABD482 です 
Problem StatementDecades have passed since the beginning of AtCoder Beginner Contest 
The contests are labeled as ABC001  ABC002      from the first round  but after the 999 th round ABC999  a problem occurred  how the future rounds should be labeled 
In the end  the labels for the rounds from the 1000 th to the 1998 th are decided  ABD001  ABD002       ABD999 
You are given an integer N between 1 and 1998  inclusive   Print the first three characters of the label of the N th round of AtCoder Beginner Contest 

Constraints
1  leq N  leq 1998
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputPrint the first three characters of the label of the N th round of AtCoder Beginner Contest 

Sample Input 1999


Sample Output 1ABC

The 999 th round of AtCoder Beginner Contest is labeled as ABC999 

Sample Input 21000


Sample Output 2ABD

The 1000 th round of AtCoder Beginner Contest is labeled as ABD001 

Sample Input 31481


Sample Output 3ABD

The 1481 th round of AtCoder Beginner Contest is labeled as ABD482"
Stone Monument,https://atcoder.jp/contests/abc099/tasks/abc099_b,"問題文ある村には 高さ 1  1 2   1 2 3       1 2 3     999  メートルの 999 本の塔が 西から順に 1 メートル間隔で立っています 
長く降り続けた雪がようやく収まったので まだ雪に完全には埋もれていない 互いに 1 メートル離れたある 2 つの塔の 雪に埋もれていない部分の高さを測ったところ 西側の塔は a メートル 東側の塔は b メートルでした 
積雪量と標高が村内のどこでも等しいと仮定したとき 雪が何メートル積もっているか求めてください 
ただし 雪は必ず 1 メートル以上積もっているものとします 

制約
1  leq a   b   499500  1 2 3     999 
入力は全て整数
仮定が成り立たない入力は与えられない


入力入力は以下の形式で標準入力から与えられる 
a b


出力雪が x メートル積もっているとき x を整数で出力せよ 

入力例 18 13


出力例 12

2 本の塔の高さはそれぞれ 10 メートルと 15 メートルです 
よって 雪が 2 メートル積もっているとわかります 

入力例 254 65


出力例 21

Problem StatementIn some village  there are 999 towers that are 1  1 2   1 2 3       1 2 3     999  meters high from west to east  at intervals of 1 meter 
It had been snowing for a while before it finally stopped  For some two adjacent towers located 1 meter apart  we measured the lengths of the parts of those towers that are not covered with snow  and the results are a meters for the west tower  and b meters for the east tower 
Assuming that the depth of snow cover and the altitude are the same everywhere in the village  find the amount of the snow cover 
Assume also that the depth of the snow cover is always at least 1 meter 

Constraints
1  leq a   b   499500  1 2 3     999 
All values in input are integers 
There is no input that contradicts the assumption 


InputInput is given from Standard Input in the following format 
a b


OutputIf the depth of the snow cover is x meters  print x as an integer 

Sample Input 18 13


Sample Output 12

The heights of the two towers are 10 meters and 15 meters  respectively 
Thus  we can see that the depth of the snow cover is 2 meters 

Sample Input 254 65


Sample Output 21"
Strange Bank,https://atcoder.jp/contests/abc099/tasks/abc099_c,"問題文ある銀行では お金の引き出しを難しくするために 一回の操作で引き出せる金額が以下のいずれかとなっています 


1 円


6 円 6 2  36  円 6 3  216  円    


9 円 9 2  81  円 9 3  729  円    


この銀行からちょうど N 円を引き出すには少なくとも何回の操作が必要か求めてください 
ただし 一度引き出したお金を再び預け入れてはならないとします 

制約
1  leq N  leq 100000
N は整数


入力入力は以下の形式で標準入力から与えられる 
N


出力この銀行からちょうど N 円を引き出すのに少なくとも x 回の操作が必要な時 x を出力せよ 

入力例 1127


出力例 14

1 円 9 円 36  6 2  円 81  9 2  円を引き出す操作をそれぞれ 1 回ずつ行うことで 合計 4 回の操作で 127 円を引き出すことができます 

入力例 23


出力例 23

1 円を 引き出す操作を 3 回 行うことで 合計 3 回の操作で 3 円を引き出すことができます 

入力例 344852


出力例 316

Problem StatementTo make it difficult to withdraw money  a certain bank allows its customers to withdraw only one of the following amounts in one operation 


1 yen  the currency of Japan 


6 yen  6 2  36  yen  6 3  216  yen     


9 yen  9 2  81  yen  9 3  729  yen     


At least how many operations are required to withdraw exactly N yen in total 
It is not allowed to re deposit the money you withdrew 

Constraints
1  leq N  leq 100000
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputIf at least x operations are required to withdraw exactly N yen in total  print x 

Sample Input 1127


Sample Output 14

By withdrawing 1 yen  9 yen  36  6 2  yen and 81  9 2  yen  we can withdraw 127 yen in four operations 

Sample Input 23


Sample Output 23

By withdrawing 1 yen three times  we can withdraw 3 yen in three operations 

Sample Input 344852


Sample Output 316"
Good Grid,https://atcoder.jp/contests/abc099/tasks/abc099_d,"問題文N 行 N 列からなるグリッドがあり 上から i 行目の左から j 列目のマスを  i j  とします 
これらのマスは色 1 から 色 C までのいずれかの色で塗られていなければならず はじめに  i j  は色 c  i j  で塗られています 
グリッドが 1  leq i j x y  leq N を満たす任意の i j x y に対して以下の条件を満たす場合 良いグリッドであるとします 


 i j     3  x y     3 ならば  i j  の色と  x y  の色は同じ


 i j     3  neq  x y     3 ならば  i j  の色と  x y  の色は異なる


ただし X    Y は X を Y で割った余りを表すこととします 
グリッドが良いグリッドになるように 0 個以上のマスを塗り替えます 
あるマスにおいて 塗り替える前の色が X であり 塗り替えた後の色が Y である場合に感じる そのマスに対して感じる違和感は D  X Y  です 
すべてのマスに対して感じる違和感の和のとりうる最小値を求めてください 

制約
1  leq N  leq 500
3  leq C  leq 30
1  leq D  i j   leq 1000  i  neq j  D  i j  0  i j 
1  leq c  i j   leq C
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N C
D  1 1      D  1 C 
 
D  C 1      D  C C 
c  1 1      c  1 N 
 
c  N 1      c  N N 


出力すべてのマスに対して感じる違和感の和のとりうる最小値が x のとき x を出力せよ 

入力例 12 3
0 1 1
1 0 1
1 4 0
1 2
3 3


出力例 13



 1 1  を色 2 に塗り替えます  1 1  に対して感じる違和感は D  1 2  1 となります 


 1 2  を色 3 に塗り替えます  1 2  に対して感じる違和感は D  2 3  1 となります 


 2 2  を色 1 に塗り替えます  2 2  に対して感じる違和感は D  3 1  1 となります 


このとき すべてのマスに対して感じる違和感の和は 3 です 
なお D  i j   neq D  j i  である場合に注意してください 

入力例 24 3
0 12 71
81 0 53
14 92 0
1 1 2 1
2 1 1 2
2 2 1 3
1 1 2 2


出力例 2428

Problem StatementThere is a grid with N rows and N columns of squares  Let  i j  be the square at the i th row from the top and the j th column from the left 
These squares have to be painted in one of the C colors from Color 1 to Color C  Initially   i j  is painted in Color c  i j  
We say the grid is a good grid when the following condition is met for all i j x y satisfying 1  leq i j x y  leq N 

If  i j     3  x y     3  the color of  i j  and the color of  x y  are the same 
If  i j      3  neq  x y     3  the color of  i j  and the color of  x y  are different 

Here  X    Y represents X modulo Y 
We will repaint zero or more squares so that the grid will be a good grid 
For a square  the wrongness when the color of the square is X before repainting and Y after repainting  is D  X Y  
Find the minimum possible sum of the wrongness of all the squares 

Constraints
1  leq N  leq 500
3  leq C  leq 30
1  leq D  i j   leq 1000  i  neq j  D  i j  0  i j 
1  leq c  i j   leq C
All values in input are integers 


InputInput is given from Standard Input in the following format 
N C
D  1 1      D  1 C 
 
D  C 1      D  C C 
c  1 1      c  1 N 
 
c  N 1      c  N N 


OutputIf the minimum possible sum of the wrongness of all the squares is x  print x 

Sample Input 12 3
0 1 1
1 0 1
1 4 0
1 2
3 3


Sample Output 13


Repaint  1 1  to Color 2  The wrongness of  1 1  becomes D  1 2  1 
Repaint  1 2  to Color 3  The wrongness of  1 2  becomes D  2 3  1 
Repaint  2 2  to Color 1  The wrongness of  2 2  becomes D  3 1  1 

In this case  the sum of the wrongness of all the squares is 3 
Note that D  i j   neq D  j i  is possible 

Sample Input 24 3
0 12 71
81 0 53
14 92 0
1 1 2 1
2 1 1 2
2 2 1 3
1 1 2 2


Sample Output 2428"
Happy Birthday!,https://atcoder.jp/contests/abc100/tasks/abc100_a,"問題文
もうすぐ E869120 君と square1001 君の 16 才の誕生日が来る 
そこで  AtCoder 王国の高橋君は  円形のケーキ 1 個に放射状に切れ目を入れ 16 等分したものを  彼らにプレゼントした   
E869120 君はそのうち A 切れ square1001 君は B 切れを食べようとした 
しかし  ケーキと一緒についていた紙を見ると   同じ人が隣り合う 2 切れのケーキを両方取ってはならない と書かれていた   
さて 彼らは紙に書かれたことを守って 2 人とも食べたい数のケーキを取ることができるだろうか   

制約

A  B は 1 以上 16 以下の整数
A B は 16 以下である 


入力
入力は以下の形式で標準入力から与えられる   
A B


出力
紙に書かれたことを守って  E869120 君と square1001 君両方が  食べたい数のケーキを取ることができるならば Yay   そうでなければ    と出力しなさい 

入力例 15 4


出力例 1Yay 

下の図のようにケーキを取れば 2 人とも目標を達成することができる 


入力例 28 8


出力例 2Yay 

下の図のようにケーキを取れば 2 人とも目標を達成することができる 


入力例 311 4


出力例 3  

この場合  残念ながら目標を達成する方法は 1 つもない   
Problem Statement
E869120 s and square1001 s 16 th birthday is coming soon 
Takahashi from AtCoder Kingdom gave them a round cake cut into 16 equal fan shaped pieces 
E869120 and square1001 were just about to eat A and B of those pieces  respectively 
when they found a note attached to the cake saying that  the same person should not take two adjacent pieces of cake  
Can both of them obey the instruction in the note and take desired numbers of pieces of cake 

Constraints

A and B are integers between 1 and 16  inclusive  
A B is at most 16 


Input
Input is given from Standard Input in the following format 
A B


Output
If both E869120 and square1001 can obey the instruction in the note and take desired numbers of pieces of cake  print Yay   otherwise  print    

Sample Input 15 4


Sample Output 1Yay 

Both of them can take desired number of pieces as follows 


Sample Input 28 8


Sample Output 2Yay 

Both of them can take desired number of pieces as follows 


Sample Input 311 4


Sample Output 3  

In this case  there is no way for them to take desired number of pieces  unfortunately"
Ringo's Favorite Numbers,https://atcoder.jp/contests/abc100/tasks/abc100_b,"問題文
今日は  記念すべき AtCoder Beginner Contest 100 が開催される  そのため  高橋君はりんごさんに  ある整数をプレゼントしようと思った 
今日のコンテストは AtCoder Beginner Contest 100 なので  りんごさんは 100 で ちょうど D 回割りきれる正の整数をプレゼントされると喜ぶ   
さて  りんごさんがプレゼントされると喜ぶような整数のうち N 番目に小さいものを求めなさい   

制約

D は 0  1  2 のいずれかである
N は 1 以上 100 以下の整数


入力
入力は以下の形式で標準入力から与えられる   
D N


出力
100 でちょうど D 回割りきれる正の整数の中で N 番目に小さいものを出力しなさい   

入力例 10 5


出力例 15

100 でちょうど 0 回割り切れる すなわち  100 で割り切れない 整数は  1  2  3  4  5  6  7      と続く 
よって  5 番目に小さいりんごさんが喜ぶ整数は 5 である   

入力例 21 11


出力例 21100

100 でちょうど 1 回割り切れる整数は  100  200  300  400  500  600  700  800  900  1   000  1   100      と続く 
よって  求めたい整数は 1   100 である   

入力例 32 85


出力例 3850000

100 でちょうど 2 回割り切れる整数は  10   000  20   000  30   000      と続く 
よって  求めたい整数は 850   000 である   
Problem Statement
Today  the memorable AtCoder Beginner Contest 100 takes place  On this occasion  Takahashi would like to give an integer to Ringo 
As the name of the contest is AtCoder Beginner Contest 100  Ringo would be happy if he is given a positive integer that can be divided by 100 exactly D times 
Find the N th smallest integer that would make Ringo happy 

Constraints

D is 0  1 or 2 
N is an integer between 1 and 100  inclusive  


Input
Input is given from Standard Input in the following format 
D N


Output
Print the N th smallest integer that can be divided by 100 exactly D times 

Sample Input 10 5


Sample Output 15

The integers that can be divided by 100 exactly 0 times  that is  not divisible by 100  are as follows  1  2  3  4  5  6  7     
Thus  the 5 th smallest integer that would make Ringo happy is 5   

Sample Input 21 11


Sample Output 21100

The integers that can be divided by 100 exactly once are as follows  100  200  300  400  500  600  700  800  900  1   000  1   100     
Thus  the integer we are seeking is 1   100 

Sample Input 32 85


Sample Output 3850000

The integers that can be divided by 100 exactly twice are as follows  10   000  20   000  30   000     
Thus  the integer we are seeking is 850   000"
*3 or /2,https://atcoder.jp/contests/abc100/tasks/abc100_c,"問題文
AtCoder Beginner Contest 100 の開催にともなって  AtCoder 社では長さ N の数列 a    a 1  a 2  a 3       a N  が飾られることになった  
社員のすぬけ君は  この数列で遊んでみようと思った   
具体的には  以下の操作をできるだけ多くの回数繰り返そうと思った   
1  leq i  leq N を満たす全ての i に対して  それぞれ a i の値を 2 で割る  a i の値を 3 倍する のどちらかを行う   
ただし  全ての i に対して 3 倍することはできず  操作後の a i の値は整数でなければならない   

最大で何回の操作が可能か  求めなさい   

制約

N は 1 以上 10   000 以下の整数
a i は 1 以上 1   000   000   000 以下の整数


入力
入力は以下の形式で標準入力から与えられる   
N
a 1 a 2 a 3     a N


出力
すぬけ君が行える最大の操作回数を出力しなさい   

入力例 13
5 2 4


出力例 13

最初  数列は  5  2  4  であるが  以下のように操作すれば 3 回の操作を行うことができる   

最初に  a 1 を 3 倍し  a 2 を 3 倍し  a 3 を 2 で割る  すると数列は  15  6  2  となる 
次に  a 1 を 3 倍し  a 2 を 2 で割り  a 3 を 3 倍する  すると数列は  45  3  6  となる 
最後に  a 1 を 3 倍し  a 2 を 3 倍し  a 3 を 2 で割る  すると数列は  135  9  3  となる 


入力例 24
631 577 243 199


出力例 20

全ての要素が奇数なので  操作はできない  よって答えは 0 である   

入力例 310
2184 2126 1721 1800 1024 2528 3360 1945 1280 1776


出力例 339

Problem Statement
As AtCoder Beginner Contest 100 is taking place  the office of AtCoder  Inc  is decorated with a sequence of length N  a    a 1  a 2  a 3       a N  
Snuke  an employee  would like to play with this sequence 
Specifically  he would like to repeat the following operation as many times as possible 
For every i satisfying 1  leq i  leq N  perform one of the following   divide a i by 2  and  multiply a i by 3    
Here  choosing  multiply a i by 3  for every i is not allowed  and the value of a i after the operation must be an integer 

At most how many operations can be performed 

Constraints

N is an integer between 1 and 10   000  inclusive  
a i is an integer between 1 and 1   000   000   000  inclusive  


Input
Input is given from Standard Input in the following format 
N
a 1 a 2 a 3     a N


Output
Print the maximum number of operations that Snuke can perform 

Sample Input 13
5 2 4


Sample Output 13

The sequence is initially  5  2  4   Three operations can be performed as follows 

First  multiply a 1 by 3  multiply a 2 by 3 and divide a 3 by 2  The sequence is now  15  6  2  
Next  multiply a 1 by 3  divide a 2 by 2 and multiply a 3 by 3  The sequence is now  45  3  6  
Finally  multiply a 1 by 3  multiply a 2 by 3 and divide a 3 by 2  The sequence is now  135  9  3  


Sample Input 24
631 577 243 199


Sample Output 20

No operation can be performed since all the elements are odd  Thus  the answer is 0 

Sample Input 310
2184 2126 1721 1800 1024 2528 3360 1945 1280 1776


Sample Output 339"
Patisserie ABC,https://atcoder.jp/contests/abc100/tasks/abc100_d,"問題文
高橋君はプロのパティシエになり  AtCoder Beginner Contest 100 を記念して   ABC洋菓子店 というお店を開いた   
ABC洋菓子店では  N 種類のケーキを売っている 
各種類のケーキには 綺麗さ  おいしさ  人気度 の 3 つの値を持ち  i 種類目のケーキの綺麗さは x i  おいしさは y i  人気度は z i である 
これらの値は 0 以下である可能性もある   
りんごさんは  ABC洋菓子店で M 個のケーキを食べることにした  彼は次のように  食べるケーキの組み合わせを選ぶことにした   

同じ種類のケーキを 2 個以上食べない 
上の条件を満たしつつ   綺麗さの合計の絶対値     おいしさの合計の絶対値     人気度の合計の絶対値  が最大になるように選ぶ 

このとき  りんごさんが選ぶケーキの  綺麗さの合計の絶対値     おいしさの合計の絶対値     人気度の合計の絶対値  の最大値を求めなさい   

制約

N は 1 以上 1   000 以下の整数
M は 0 以上 N 以下の整数
x i  y i  z i    1  leq i  leq N  は  それぞれ  10   000   000   000 以上 10   000   000   000 以下の整数 


入力
入力は以下の形式で標準入力から与えられる   
N M
x 1 y 1 z 1
x 2 y 2 z 2
     
x N y N z N


出力
りんごさんが選ぶケーキの  綺麗さの合計の絶対値     おいしさの合計の絶対値     人気度の合計の絶対値  の最大値を出力しなさい   

入力例 15 3
3 1 4
1 5 9
2 6 5
3 5 8
9 7 9


出力例 156

2  4  5 種類目のケーキを食べることを考える  そのとき   綺麗さ  おいしさ  人気度 の合計はそれぞれ次のようになる   

綺麗さ 1   3   9   13
おいしさ 5   5   7   17
人気度 9   8   9   26

このときの  綺麗さの合計の絶対値     おいしさの合計の絶対値     人気度の合計の絶対値  は 13   17   26   56 となり  これが最大になる   

入力例 25 3
1  2 3
 4 5  6
7  8  9
 10 11  12
13  14 15


出力例 254

1  3  5 種類目のケーキを食べることを考える  そのとき   綺麗さ  おいしさ  人気度 の合計はそれぞれ次のようになる   

綺麗さ 1   7   13   21
おいしさ   2      8      14     24
人気度 3     9    15   9

このときの  綺麗さの合計の絶対値     おいしさの合計の絶対値     人気度の合計の絶対値  は 21   24   9   54 となり  これが最大になる   

入力例 310 5
10  80 21
23 8 38
 94 28 11
 26  2 18
 69 72 79
 26  86  54
 72  50 59
21 65  32
40  94 87
 62 18 82


出力例 3638

3  4  5  7  10 種類目のケーキを食べると  綺麗さの合計は  323  おいしさの合計は 66  人気度の合計は 249 となる 
このときの  綺麗さの合計の絶対値     おいしさの合計の絶対値     人気度の合計の絶対値  は 323   66   249   638 となり  これが最大になる   

入力例 43 2
2000000000  9000000000 4000000000
7000000000  5000000000 3000000000
6000000000  1000000000 8000000000


出力例 430000000000

ケーキの綺麗さ  おいしさ  人気度や出力すべき値が  32bit 整数に収まらない場合もある   
Problem Statement
Takahashi became a pastry chef and opened a shop La Confiserie d ABC to celebrate AtCoder Beginner Contest 100 
The shop sells N kinds of cakes 
Each kind of cake has three parameters  beauty    tastiness  and  popularity   The i th kind of cake has the beauty of x i  the tastiness of y i and the popularity of z i 
These values may be zero or negative 
Ringo has decided to have M pieces of cakes here  He will choose the set of cakes as follows 

Do not have two or more pieces of the same kind of cake 
Under the condition above  choose the set of cakes to maximize  the absolute value of the total beauty     the absolute value of the total tastiness      the absolute value of the total popularity  

Find the maximum possible value of  the absolute value of the total beauty     the absolute value of the total tastiness     the absolute value of the total popularity  for the set of cakes that Ringo chooses 

Constraints

N is an integer between 1 and 1   000  inclusive  
M is an integer between 0 and N  inclusive  
x i  y i  z i    1  leq i  leq N  are integers between  10   000   000   000 and 10   000   000   000  inclusive  


Input
Input is given from Standard Input in the following format 
N M
x 1 y 1 z 1
x 2 y 2 z 2
     
x N y N z N


Output
Print the maximum possible value of  the absolute value of the total beauty     the absolute value of the total tastiness     the absolute value of the total popularity  for the set of cakes that Ringo chooses 

Sample Input 15 3
3 1 4
1 5 9
2 6 5
3 5 8
9 7 9


Sample Output 156

Consider having the 2 nd  4 th and 5 th kinds of cakes  The total beauty  tastiness and popularity will be as follows 

Beauty  1   3   9   13
Tastiness  5   5   7   17
Popularity  9   8   9   26

The value  the absolute value of the total beauty     the absolute value of the total tastiness     the absolute value of the total popularity  here is 13   17   26   56  This is the maximum value 

Sample Input 25 3
1  2 3
 4 5  6
7  8  9
 10 11  12
13  14 15


Sample Output 254

Consider having the 1 st  3 rd and 5 th kinds of cakes  The total beauty  tastiness and popularity will be as follows 

Beauty  1   7   13   21
Tastiness    2      8      14     24
Popularity  3     9    15   9

The value  the absolute value of the total beauty     the absolute value of the total tastiness     the absolute value of the total popularity  here is 21   24   9   54  This is the maximum value 

Sample Input 310 5
10  80 21
23 8 38
 94 28 11
 26  2 18
 69 72 79
 26  86  54
 72  50 59
21 65  32
40  94 87
 62 18 82


Sample Output 3638

If we have the 3 rd  4 th  5 th  7 th and 10 th kinds of cakes  the total beauty  tastiness and popularity will be  323  66 and 249  respectively 
The value  the absolute value of the total beauty     the absolute value of the total tastiness     the absolute value of the total popularity  here is 323   66   249   638  This is the maximum value 

Sample Input 43 2
2000000000  9000000000 4000000000
7000000000  5000000000 3000000000
6000000000  1000000000 8000000000


Sample Output 430000000000

The values of the beauty  tastiness and popularity of the cakes and the value to be printed may not fit into 32 bit integers"
Eating Symbols Easy,https://atcoder.jp/contests/abc101/tasks/abc101_a,"問題文高橋君は いつも頭の中に整数を 1 つ思い浮かべています 
はじめ 高橋君が思い浮かべている整数は 0 です 
これから 高橋君は   または   の記号を あわせて 4 つ食べようとしています 
高橋君が   を食べると 思い浮かべている整数は 1 大きくなります 
一方 高橋君が   を食べると 思い浮かべている整数は 1 小さくなります 
高橋君が食べようとしている記号は 文字列 S で与えられます 
S の i 文字目は 高橋君が i 番目に食べる記号です 
すべての記号を食べ終わった後 高橋君が思い浮かべている整数を求めてください 

制約
S の長さは 4
S の各文字は   または  


入力入力は以下の形式で標準入力から与えられる 
S


出力すべての記号を食べ終わった後 高橋君が思い浮かべている整数を出力せよ 

入力例 1    


出力例 12


はじめ 高橋君が思い浮かべている整数は 0 です 
高橋君が食べる 1 番目の記号は   です これを食べた後 高橋君が思い浮かべている整数は 1 になります 
高橋君が食べる 2 番目の記号は   です これを食べた後 高橋君が思い浮かべている整数は 0 になります 
高橋君が食べる 3 番目の記号は   です これを食べた後 高橋君が思い浮かべている整数は 1 になります 
高橋君が食べる 4 番目の記号は   です これを食べた後 高橋君が思い浮かべている整数は 2 になります 

よって すべての記号を食べ終わった後 高橋君が思い浮かべている整数は 2 です 

入力例 2    


出力例 2 2


入力例 3    


出力例 3 4

Problem StatementThere is always an integer in Takahashi s mind 
Initially  the integer in Takahashi s mind is 0  Takahashi is now going to eat four symbols  each of which is   or    When he eats    the integer in his mind increases by 1  when he eats    the integer in his mind decreases by 1 
The symbols Takahashi is going to eat are given to you as a string S  The i th character in S is the i th symbol for him to eat 
Find the integer in Takahashi s mind after he eats all the symbols 

Constraints
The length of S is 4 
Each character in S is   or   


InputInput is given from Standard Input in the following format 
S


OutputPrint the integer in Takahashi s mind after he eats all the symbols 

Sample Input 1    


Sample Output 12


Initially  the integer in Takahashi s mind is 0 
The first integer for him to eat is    After eating it  the integer in his mind becomes 1 
The second integer to eat is    After eating it  the integer in his mind becomes 0 
The third integer to eat is    After eating it  the integer in his mind becomes 1 
The fourth integer to eat is    After eating it  the integer in his mind becomes 2 

Thus  the integer in Takahashi s mind after he eats all the symbols is 2 

Sample Input 2    


Sample Output 2 2


Sample Input 3    


Sample Output 3 4"
Digit Sums,https://atcoder.jp/contests/abc101/tasks/abc101_b,"問題文整数 n に対して n を十進法で表したときの各桁の和を S n  で表すことにします 
たとえば S 101    1   0   1   2 です 
整数 N が与えられたとき N が S N  で割り切れるかどうかを判定してください 

制約
1  leq N  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N


出力N が S N  で割り切れるなら Yes を 割り切れないなら No を出力せよ 

入力例 112


出力例 1Yes

この入力では N 12 です 
S 12    1   2   3 なので N は S N  で割り切れます 

入力例 2101


出力例 2No

S 101    1   0   1   2 なので N は S N  で割り切れません 

入力例 3999999999


出力例 3Yes

Problem StatementLet S n  denote the sum of the digits in the decimal notation of n 
For example  S 101    1   0   1   2 
Given an integer N  determine if S N  divides N 

Constraints
1  leq N  leq 10 9


InputInput is given from Standard Input in the following format 
N


OutputIf S N  divides N  print Yes  if it does not  print No 

Sample Input 112


Sample Output 1Yes

In this input  N 12 
As S 12    1   2   3  S N  divides N 

Sample Input 2101


Sample Output 2No

As S 101    1   0   1   2  S N  does not divide N 

Sample Input 3999999999


Sample Output 3Yes"
Multiple of 2 and N,https://atcoder.jp/contests/abc102/tasks/abc102_a,"問題文正整数 N が与えられます 
2 と N のどちらでも割り切れる最小の正整数を求めてください 

制約
1  leq N  leq 10 9
入力はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N


出力2 と N のどちらでも割り切れる最小の正整数を出力せよ 

入力例 13


出力例 16

6 は 2 と 3 のどちらでも割り切れる数です 
また 6 未満の正整数であって 2 と 3 のどちらでも割り切れるような数はありません 
よって 答えは 6 です 

入力例 210


出力例 210


入力例 3999999999


出力例 31999999998

Problem StatementYou are given a positive integer N 
Find the minimum positive integer divisible by both 2 and N 

Constraints
1  leq N  leq 10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
N


OutputPrint the minimum positive integer divisible by both 2 and N 

Sample Input 13


Sample Output 16

6 is divisible by both 2 and 3 
Also  there is no positive integer less than 6 that is divisible by both 2 and 3 
Thus  the answer is 6 

Sample Input 210


Sample Output 210


Sample Input 3999999999


Sample Output 31999999998"
Maximum Difference,https://atcoder.jp/contests/abc102/tasks/abc102_b,"問題文長さ N の整数列 A が与えられます 
A の 添字の 異なる 2 要素の差の絶対値の最大値を求めてください 

制約
2  leq N  leq 100
1  leq A i  leq 10 9
入力はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N
A 1 A 2     A N


出力A の 添字の 異なる 2 要素の差の絶対値の最大値を出力せよ 

入力例 14
1 4 6 3


出力例 15

A 3 A 1 6 1 5 が 異なる 2 要素の差の最大値です 

入力例 22
1000000000 1


出力例 2999999999


入力例 35
1 1 1 1 1


出力例 30

Problem StatementYou are given an integer sequence A of length N 
Find the maximum absolute difference of two elements  with different indices  in A 

Constraints
2  leq N  leq 100
1  leq A i  leq 10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
A 1 A 2     A N


OutputPrint the maximum absolute difference of two elements  with different indices  in A 

Sample Input 14
1 4 6 3


Sample Output 15

The maximum absolute difference of two elements is A 3 A 1 6 1 5 

Sample Input 22
1000000000 1


Sample Output 2999999999


Sample Input 35
1 1 1 1 1


Sample Output 30"
Task Scheduling Problem,https://atcoder.jp/contests/abc103/tasks/abc103_a,"問題文3 個のタスクがあり あなたは全てのタスクを完了させなければなりません 
はじめ 任意の 1 個のタスクをコスト 0 で完了できます 
また i 番目のタスクを完了した直後にコスト  A j   A i  で j 番目のタスクを完了できます 
ここで  x  は x の絶対値を表します 
全てのタスクを完了するのに要する合計コストの最小値を求めてください 

制約
入力は全て整数である
1  leq A 1  A 2  A 3  leq 100


入力入力は以下の形式で標準入力から与えられる 
A 1 A 2 A 3


出力全てのタスクを完了するのに要する合計コストの最小値を出力せよ 

入力例 11 6 3


出力例 15

以下の順番でタスクを完了させたとき 合計コストは 5 となり最小です 

1 番目のタスクをコスト 0 で完了させます
3 番目のタスクをコスト 2 で完了させます
2 番目のタスクをコスト 3 で完了させます


入力例 211 5 5


出力例 26


入力例 3100 100 100


出力例 30

Problem StatementYou have three tasks  all of which need to be completed 
First  you can complete any one task at cost 0 
Then  just after completing the i th task  you can complete the j th task at cost  A j   A i  
Here   x  denotes the absolute value of x 
Find the minimum total cost required to complete all the task 

Constraints
All values in input are integers 
1  leq A 1  A 2  A 3  leq 100


InputInput is given from Standard Input in the following format 
A 1 A 2 A 3


OutputPrint the minimum total cost required to complete all the task 

Sample Input 11 6 3


Sample Output 15

When the tasks are completed in the following order  the total cost will be 5  which is the minimum 

Complete the first task at cost 0 
Complete the third task at cost 2 
Complete the second task at cost 3 


Sample Input 211 5 5


Sample Output 26


Sample Input 3100 100 100


Sample Output 30"
String Rotation,https://atcoder.jp/contests/abc103/tasks/abc103_b,"問題文英小文字からなる文字列 S  T が与えられます 
S を回転させて T に一致させられるか判定してください 
すなわち 以下の操作を任意の回数繰り返して S を T に一致させられるか判定してください 
操作  S   S 1 S 2     S   S   のとき S を S   S   S 1 S 2     S   S  1  に変更する
ここで  X  は文字列 X の長さを表します 

制約
2  leq  S   leq 100
 S     T 
S  T は英小文字からなる


入力入力は以下の形式で標準入力から与えられる 
S
T


出力S を回転させて T に一致させられる場合は Yes 一致させられない場合は No を出力せよ 

入力例 1kyoto
tokyo


出力例 1Yes


1 回目の操作で kyoto が okyot になります
2 回目の操作で okyot が tokyo になります


入力例 2abc
arc


出力例 2No

何度操作を行っても abc と arc を一致させられません 

入力例 3aaaaaaaaaaaaaaab
aaaaaaaaaaaaaaab


出力例 3Yes

Problem StatementYou are given string S and T consisting of lowercase English letters 
Determine if S equals T after rotation 
That is  determine if S equals T after the following operation is performed some number of times 
Operation  Let S   S 1 S 2     S   S    Change S to S   S   S 1 S 2     S   S  1  
Here   X  denotes the length of the string X 

Constraints
2  leq  S   leq 100
 S     T 
S and T consist of lowercase English letters 


InputInput is given from Standard Input in the following format 
S
T


OutputIf S equals T after rotation  print Yes  if it does not  print No 

Sample Input 1kyoto
tokyo


Sample Output 1Yes


In the first operation  kyoto becomes okyot 
In the second operation  okyot becomes tokyo 


Sample Input 2abc
arc


Sample Output 2No

abc does not equal arc after any number of operations 

Sample Input 3aaaaaaaaaaaaaaab
aaaaaaaaaaaaaaab


Sample Output 3Yes"
Modulo Summation,https://atcoder.jp/contests/abc103/tasks/abc103_c,"問題文N 個の正整数 a 1  a 2       a N が与えられます 
非負整数 m に対して f m     m  mod  a 1     m  mod  a 2           m  mod  a N  とします 
ここで X  mod  Y は X を Y で割った余りを表します 
f の最大値を求めてください 

制約
入力は全て整数である
2  leq N  leq 3000
2  leq a i  leq 10 5


入力入力は以下の形式で標準入力から与えられる 
N
a 1 a 2     a N


出力f の最大値を出力せよ 

入力例 13
3 4 6


出力例 110

f 11     11  mod  3     11  mod  4     11  mod  6    10 が f の最大値です 

入力例 25
7 46 11 20 11


出力例 290


入力例 37
994 518 941 851 647 2 581


出力例 34527

Problem StatementYou are given N positive integers a 1  a 2       a N 
For a non negative integer m  let f m     m  mod  a 1     m  mod  a 2           m  mod  a N  
Here  X  mod  Y denotes the remainder of the division of X by Y 
Find the maximum value of f 

Constraints
All values in input are integers 
2  leq N  leq 3000
2  leq a i  leq 10 5


InputInput is given from Standard Input in the following format 
N
a 1 a 2     a N


OutputPrint the maximum value of f 

Sample Input 13
3 4 6


Sample Output 110

f 11     11  mod  3     11  mod  4     11  mod  6    10 is the maximum value of f 

Sample Input 25
7 46 11 20 11


Sample Output 290


Sample Input 37
994 518 941 851 647 2 581


Sample Output 34527"
Islands War,https://atcoder.jp/contests/abc103/tasks/abc103_d,"問題文東西一列に並んだ N 個の島と N 1 本の橋があります 
i 番目の橋は 西から i 番目の島と西から i 1 番目の島を接続しています 
ある日 いくつかの島同士で争いが起こり 島の住人たちから M 個の要望がありました 
要望 i  西から a i 番目の島と西から b i 番目の島の間で争いが起こったために これらの島をいくつかの橋を渡って行き来できないようにしてほしい
あなたは橋をいくつか取り除くことでこれら M 個の要望全てを叶えることにしました 
取り除く必要のある橋の本数の最小値を求めてください 

制約
入力は全て整数である
2  leq N  leq 10 5
1  leq M  leq 10 5
1  leq a i   b i  leq N
組  a i  b i  は全て異なる


入力入力は以下の形式で標準入力から与えられる 
N M
a 1 b 1
a 2 b 2
 
a M b M


出力取り除く必要のある橋の本数の最小値を出力せよ 

入力例 15 2
1 4
2 5


出力例 11

西から 2 番目の島と 3 番目の島を接続する橋を取り除くことで達成できます 

入力例 29 5
1 8
2 7
3 5
4 6
7 9


出力例 22


入力例 35 10
1 2
1 3
1 4
1 5
2 3
2 4
2 5
3 4
3 5
4 5


出力例 34

Problem StatementThere are N islands lining up from west to east  connected by N 1 bridges 
The i th bridge connects the i th island from the west and the  i 1  th island from the west 
One day  disputes took place between some islands  and there were M requests from the inhabitants of the islands 
Request i  A dispute took place between the a i th island from the west and the b i th island from the west  Please make traveling between these islands with bridges impossible 
You decided to remove some bridges to meet all these M requests 
Find the minimum number of bridges that must be removed 

Constraints
All values in input are integers 
2  leq N  leq 10 5
1  leq M  leq 10 5
1  leq a i   b i  leq N
All pairs  a i  b i  are distinct 


InputInput is given from Standard Input in the following format 
N M
a 1 b 1
a 2 b 2
 
a M b M


OutputPrint the minimum number of bridges that must be removed 

Sample Input 15 2
1 4
2 5


Sample Output 11

The requests can be met by removing the bridge connecting the second and third islands from the west 

Sample Input 29 5
1 8
2 7
3 5
4 6
7 9


Sample Output 22


Sample Input 35 10
1 2
1 3
1 4
1 5
2 3
2 4
2 5
3 4
3 5
4 5


Sample Output 34"
Rated for Me,https://atcoder.jp/contests/abc104/tasks/abc104_a,"問題文プログラミングコンペティションサイト AtCode は プログラミングコンテストを定期的に開催しています 
AtCode で次に開催されるコンテストは ABC と呼ばれ レーティングが 1200 未満の参加者のレーティングが変動します 
その次に開催されるコンテストは ARC と呼ばれ レーティングが 2800 未満の参加者のレーティングが変動します 
そのさらに次に開催されるコンテストは AGC と呼ばれ すべての参加者のレーティングが変動します 
高橋くんの AtCode でのレーティングは R です 彼のレーティングが変動する次のコンテストは何でしょうか 

制約
0   R   4208
R は整数である 


入力入力は以下の形式で標準入力から与えられる 
R


出力高橋くんのレーティングが変動する次のコンテストの名称 ABC  ARC  AGC のいずれか を出力せよ 

入力例 11199


出力例 1ABC

1199 は 1200 未満なので ABC でレーティングが変動します 

入力例 21200


出力例 2ARC

1200 は 1200 未満ではないので ABC ではレーティングが変動しませんが 2800 未満ではあるので ARC でレーティングが変動します 

入力例 34208


出力例 3AGC

Problem StatementA programming competition site AtCode regularly holds programming contests 
The next contest on AtCode is called ABC  which is rated for contestants with ratings less than 1200 
The contest after the ABC is called ARC  which is rated for contestants with ratings less than 2800 
The contest after the ARC is called AGC  which is rated for all contestants 
Takahashi s rating on AtCode is R  What is the next contest rated for him 

Constraints
0   R   4208
R is an integer 


InputInput is given from Standard Input in the following format 
R


OutputPrint the name of the next contest rated for Takahashi  ABC  ARC or AGC  

Sample Input 11199


Sample Output 1ABC

1199 is less than 1200  so ABC will be rated 

Sample Input 21200


Sample Output 2ARC

1200 is not less than 1200 and ABC will be unrated  but it is less than 2800 and ARC will be rated 

Sample Input 34208


Sample Output 3AGC"
AcCepted,https://atcoder.jp/contests/abc104/tasks/abc104_b,nan
All Green,https://atcoder.jp/contests/abc104/tasks/abc104_c,"問題文プログラミングコンペティションサイト AtCode は アルゴリズムの問題集を提供しています 
それぞれの問題には 難易度に応じて点数が付けられています 
現在 1 以上 D 以下のそれぞれの整数 i に対して 100i 点を付けられた問題が p i 問存在します 
これらの p 1       p D 問が AtCode に収録された問題のすべてです 
AtCode のユーザーは 総合スコア と呼ばれる値を持ちます 
ユーザーの総合スコアは 以下の 2 つの要素の和です 

基本スコア  ユーザーが解いた問題すべての配点の合計です 
コンプリートボーナス  100i 点を付けられた p i 問の問題すべてを解いたユーザーは 基本スコアと別にコンプリートボーナス c i 点を獲得します  1   i   D  

AtCode の新たなユーザーとなった高橋くんは まだ問題を 1 問も解いていません 
彼の目標は 総合スコアを G 点以上にすることです 
このためには 少なくとも何問の問題を解く必要があるでしょうか 

制約
1   D   10
1   p i   100
100   c i   10 6
100   G
入力中のすべての値は整数である 
c i  G はすべて 100 の倍数である 
総合スコアを G 点以上にすることは可能である 


入力入力は以下の形式で標準入力から与えられる 
D G
p 1 c 1
 
p D c D


出力総合スコアを G 点以上にするために解く必要のある最小の問題数を出力せよ なお この目標は必ず達成可能である 制約を参照のこと  

入力例 12 700
3 500
5 800


出力例 13

この場合 AtCode には 100 点を付けられた問題が 3 問 200 点を付けられた問題が 5 問あります 100 点の 3 問をすべて解いた際のコンプリートボーナスは 500 点 200 点の 5 問をすべて解いた際のコンプリートボーナスは 800 点です 高橋くんの目標は総合スコアを 700 点以上にすることです 
目標を達成する方法の一つは 200 点問題を 4 問解いて 800 点の基本スコアを得ることです しかし 100 点問題を 3 問すべて解くと 基本スコア 300 点に加えてコンプリートボーナスの 500 点が与えられて総合スコアが 800 点となり より少ない問題数で目標を達成することができます 

入力例 22 2000
3 500
5 800


出力例 27

入力例 1 と似たケースですが 今回の高橋くんの目標は 2000 点以上です この場合 200 点の 5 問は必ずすべて解かなければならず さらに 100 点問題を 2 問解くことで総合スコアが 2000 点となります 

入力例 32 400
3 500
5 800


出力例 32

ふたたび入力例 1 と似たケースですが 今回の高橋くんの目標は 400 点以上です この場合 200 点問題を 2 問解くだけで目標を達成できます 

入力例 45 25000
20 1000
40 1000
50 1000
30 1000
1 1000


出力例 466

500 点の問題が 1 問しか存在しませんが このような場合でもその問題を解くことでコンプリートボーナスが与えられます 
Problem StatementA programming competition site AtCode provides algorithmic problems 
Each problem is allocated a score based on its difficulty 
Currently  for each integer i between 1 and D  inclusive   there are p i problems with a score of 100i points 
These p 1       p D problems are all of the problems available on AtCode 
A user of AtCode has a value called total score 
The total score of a user is the sum of the following two elements 

Base score  the sum of the scores of all problems solved by the user 
Perfect bonuses  when a user solves all problems with a score of 100i points  he she earns the perfect bonus of c i points  aside from the base score  1   i   D  

Takahashi  who is the new user of AtCode  has not solved any problem 
His objective is to have a total score of G or more points 
At least how many problems does he need to solve for this objective 

Constraints
1   D   10
1   p i   100
100   c i   10 6
100   G
All values in input are integers 
c i and G are all multiples of 100 
It is possible to have a total score of G or more points 


InputInput is given from Standard Input in the following format 
D G
p 1 c 1
 
p D c D


OutputPrint the minimum number of problems that needs to be solved in order to have a total score of G or more points  Note that this objective is always achievable  see Constraints  

Sample Input 12 700
3 500
5 800


Sample Output 13

In this case  there are three problems each with 100 points and five problems each with 200 points  The perfect bonus for solving all the 100 point problems is 500 points  and the perfect bonus for solving all the 200 point problems is 800 points  Takahashi s objective is to have a total score of 700 points or more 
One way to achieve this objective is to solve four 200 point problems and earn a base score of 800 points  However  if we solve three 100 point problems  we can earn the perfect bonus of 500 points in addition to the base score of 300 points  for a total score of 800 points  and we can achieve the objective with fewer problems 

Sample Input 22 2000
3 500
5 800


Sample Output 27

This case is similar to Sample Input 1  but the Takahashi s objective this time is 2000 points or more  In this case  we inevitably need to solve all five 200 point problems  and by solving two 100 point problems additionally we have the total score of 2000 points 

Sample Input 32 400
3 500
5 800


Sample Output 32

This case is again similar to Sample Input 1  but the Takahashi s objective this time is 400 points or more  In this case  we only need to solve two 200 point problems to achieve the objective 

Sample Input 45 25000
20 1000
40 1000
50 1000
30 1000
1 1000


Sample Output 466

There is only one 500 point problem  but the perfect bonus can be earned even in such a case"
We Love ABC,https://atcoder.jp/contests/abc104/tasks/abc104_d,"問題文文字列 T の ABC 数 とは 以下の条件をすべて満たす整数の組  i  j  k  の個数です 

1   i   j   k    T   T  は T の長さ 
T i   A T i は T の先頭から i 番目の文字 
T j   B
T k   C

例えば T   ABCBC のとき 条件をすべて満たす組  i  j  k  は  1  2  3    1  2  5    1  4  5  の 3 個であるため T の ABC 数は 3 です 
文字列 S が与えられます S のそれぞれの文字は A  B  C    のいずれかです 
S に含まれる   の個数を Q とします S に含まれる   をそれぞれ A  B  C のいずれかに置き換えることで 3 Q 通りの文字列が作られます これらの文字列すべての ABC 数の和を求めてください 
ただし この和は非常に大きくなりうるため 和を 10 9   7 で割った余りを出力してください 

制約
3    S    10 5
S のそれぞれの文字は A  B  C    のいずれかである 


入力入力は以下の形式で標準入力から与えられる 
S


出力3 Q 通りの文字列すべての ABC 数の和を 10 9   7 で割った余りを出力せよ 

入力例 1A  C


出力例 18

この場合 Q   2 であり   をそれぞれ A  B  C のいずれかに置き換えることで 3 Q   9 通りの文字列が作られます これらの文字列それぞれの ABC 数を以下に示します 

AAAC  0
AABC  2
AACC  0
ABAC  1
ABBC  2
ABCC  2
ACAC  0
ACBC  1
ACCC  0

これらの和は 0   2   0   1   2   2   0   1   0   8 であり 8 を 10 9   7 で割った余りである 8 を出力します 

入力例 2ABCBC


出力例 23

Q   0 のときは S 自体の ABC 数を 10 9   7 で割った余りを出力します この文字列は問題文中で例として挙げたものと同じであり その ABC 数は 3 です 

入力例 3    C     B      A       


出力例 3979596887

この場合 3 Q 通りの文字列すべての ABC 数の和は 2291979612924 であり これを 10 9   7 で割った余りである 979596887 を出力します 
Problem StatementThe ABC number of a string T is the number of triples of integers  i  j  k  that satisfy all of the following conditions 

1   i   j   k    T    T  is the length of T  
T i   A  T i is the i th character of T from the beginning  
T j   B
T k   C

For example  when T   ABCBC  there are three triples of integers  i  j  k  that satisfy the conditions   1  2  3    1  2  5    1  4  5   Thus  the ABC number of T is 3 
You are given a string S  Each character of S is A  B  C or   
Let Q be the number of occurrences of   in S  We can make 3 Q strings by replacing each occurrence of   in S with A  B or C  Find the sum of the ABC numbers of all these strings 
This sum can be extremely large  so print the sum modulo 10 9   7 

Constraints
3    S    10 5
Each character of S is A  B  C or   


InputInput is given from Standard Input in the following format 
S


OutputPrint the sum of the ABC numbers of all the 3 Q strings  modulo 10 9   7 

Sample Input 1A  C


Sample Output 18

In this case  Q   2  and we can make 3 Q   9 strings by by replacing each occurrence of   with A  B or C  The ABC number of each of these strings is as follows 

AAAC  0
AABC  2
AACC  0
ABAC  1
ABBC  2
ABCC  2
ACAC  0
ACBC  1
ACCC  0

The sum of these is 0   2   0   1   2   2   0   1   0   8  so we print 8 modulo 10 9   7  that is  8 

Sample Input 2ABCBC


Sample Output 23

When Q   0  we print the ABC number of S itself  modulo 10 9   7  This string is the same as the one given as an example in the problem statement  and its ABC number is 3 

Sample Input 3    C     B      A       


Sample Output 3979596887

In this case  the sum of the ABC numbers of all the 3 Q strings is 2291979612924  and we should print this number modulo 10 9   7  that is  979596887"
AtCoder Crackers,https://atcoder.jp/contests/abc105/tasks/abc105_a,nan
Cakes and Donuts,https://atcoder.jp/contests/abc105/tasks/abc105_b,"問題文
ABC 洋菓子店では  1 個 4 ドルのケーキと 1 個 7 ドルのドーナツが売られている 
このとき  合計金額が N ドルとなる買い方はあるか  判定せよ  ただし  同じ商品を二個以上買っても良く  買わない商品があっても良いものとする   

制約

N は 1 以上 100 以下の整数


入力
入力は以下の形式で標準入力から与えられる   
N


出力
合計が N ドルとなる買い方がある場合 Yes  そうでない場合 No と出力せよ   

入力例 111


出力例 1Yes

ケーキを 1 個  ドーナツを 1 個買えば合計 4   7   11 ドルとなる   

入力例 240


出力例 2Yes

ケーキを 10 個買えば 4  times 10   40 ドルとなる   

入力例 33


出力例 3No

ケーキの値段は 4 ドル  ドーナツの値段は 7 ドルと  どちらも 3 ドルより高いためそのような買い方は存在しない   
Problem StatementLa Confiserie d ABC sells cakes at 4 dollars each and doughnuts at 7 dollars each 
Determine if there is a way to buy some of them for exactly N dollars  You can buy two or more doughnuts and two or more cakes  and you can also choose to buy zero doughnuts or zero cakes 

Constraints
N is an integer between 1 and 100  inclusive 


InputInput is given from Standard Input in the following format 
N


OutputIf there is a way to buy some cakes and some doughnuts for exactly N dollars  print Yes  otherwise  print No 

Sample Input 111


Sample Output 1Yes

If you buy one cake and one doughnut  the total will be 4   7   11 dollars 

Sample Input 240


Sample Output 2Yes

If you buy ten cakes  the total will be 4  times 10   40 dollars 

Sample Input 33


Sample Output 3No

The prices of cakes  4 dollars  and doughnuts  7 dollars  are both higher than 3 dollars  so there is no such way"
Base  2 Number,https://atcoder.jp/contests/abc105/tasks/abc105_c,"問題文整数 N が与えられるので N の  2 進数表現を求めてください 
ここで S が N の  2 進数表現であるとは 以下を全て満たすことです 

S は 0 および 1 のみからなる文字列である
S   0 でなければ S の先頭の文字は 1 である
S   S k S  k 1      S 0 とすると S 0  times   2  0   S 1  times   2  1         S k  times   2  k   N が成り立つ

なお 任意の整数 M に対して M の  2 進数表現が一意に定まることが証明できます 

制約
入力はすべて整数である
 10 9  leq N  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N


出力N の  2 進数表現を出力せよ 

入力例 1 9


出力例 11011

  2  0     2  1     2  3   1     2      8     9 なので 1011 は  9 の  2 進数表現です 

入力例 2123456789


出力例 211000101011001101110100010101


入力例 30


出力例 30

Problem StatementGiven an integer N  find the base  2 representation of N 
Here  S is the base  2 representation of N when the following are all satisfied 

S is a string consisting of 0 and 1 
Unless S   0  the initial character of S is 1 
Let S   S k S  k 1      S 0  then S 0  times   2  0   S 1  times   2  1         S k  times   2  k   N 

It can be proved that  for any integer M  the base  2 representation of M is uniquely determined 

Constraints
Every value in input is integer 
 10 9  leq N  leq 10 9


InputInput is given from Standard Input in the following format 
N


OutputPrint the base  2 representation of N 

Sample Input 1 9


Sample Output 11011

As   2  0     2  1     2  3   1     2      8     9  1011 is the base  2 representation of  9 

Sample Input 2123456789


Sample Output 211000101011001101110100010101


Sample Input 30


Sample Output 30"
Candy Distribution,https://atcoder.jp/contests/abc105/tasks/abc105_d,"問題文N 個の箱が左右一列に並んでおり 左から i 番目の箱には A i 個のお菓子が入っています 
あなたは 連続したいくつかの箱からお菓子を取り出して M 人の子供たちに均等に配りたいと考えています 
そこで 以下を満たす組  l  r  の総数を求めてください 

l  r はともに整数であり 1  leq l  leq r  leq N を満たす
A l   A  l 1          A r は M の倍数である


制約
入力は全て整数である
1  leq N  leq 10 5
2  leq M  leq 10 9
1  leq A i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N M
A 1 A 2     A N


出力条件を満たす組  l  r  の総数を出力せよ 
出力の際には 出力が 32 ビットの整数型に収まらない可能性があることに注意せよ 

入力例 13 2
4 1 5


出力例 13

各組  l  r  に対する和 A l   A  l 1          A r は次のとおりであり このうち 3 つが 2 の倍数です 

 1  1  に対する和  4
 1  2  に対する和  5
 1  3  に対する和  10
 2  2  に対する和  1
 2  3  に対する和  6
 3  3  に対する和  5


入力例 213 17
29 7 5 7 9 51 7 13 8 55 42 9 81


出力例 26


入力例 310 400000000
1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000


出力例 325

Problem StatementThere are N boxes arranged in a row from left to right  The i th box from the left contains A i candies 
You will take out the candies from some consecutive boxes and distribute them evenly to M children 
Such being the case  find the number of the pairs  l  r  that satisfy the following 

l and r are both integers and satisfy 1  leq l  leq r  leq N 
A l   A  l 1          A r is a multiple of M 


Constraints
All values in input are integers 
1  leq N  leq 10 5
2  leq M  leq 10 9
1  leq A i  leq 10 9


InputInput is given from Standard Input in the following format 
N M
A 1 A 2     A N


OutputPrint the number of the pairs  l  r  that satisfy the conditions 
Note that the number may not fit into a 32 bit integer type 

Sample Input 13 2
4 1 5


Sample Output 13

The sum A l   A  l 1          A r for each pair  l  r  is as follows 

Sum for  1  1   4
Sum for  1  2   5
Sum for  1  3   10
Sum for  2  2   1
Sum for  2  3   6
Sum for  3  3   5

Among these  three are multiples of 2 

Sample Input 213 17
29 7 5 7 9 51 7 13 8 55 42 9 81


Sample Output 26


Sample Input 310 400000000
1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000


Sample Output 325"
Garden,https://atcoder.jp/contests/abc106/tasks/abc106_a,"問題文
縦 A ヤード 横 B ヤードの畑がある  農夫ジョンは  畑の内部に  畑の上端と下端を結ぶ縦方向の幅 1 ヤードの道  畑の左端と畑の右端を結ぶ横方向の幅 1 ヤードの道を作った  畑は下図のようになっている   灰色の部分が道 

さて  道を除いた畑の面積は  何平方ヤードだろうか  求めなさい   

注意
道の位置が変わっても  道を除く畑の面積が変わらないことが証明できます   

制約

A は 2 以上 100 以下の整数
B は 2 以上 100 以下の整数


入力
入力は以下の形式で標準入力から与えられる   
A B


出力
道を除いた畑の面積  平方ヤード  を出力しなさい   

入力例 12 2


出力例 11

この場合  面積は 1 平方ヤードになる   

入力例 25 7


出力例 224

この場合  面積は 24 平方ヤードになる   
Problem Statement
There is a farm whose length and width are A yard and B yard  respectively  A farmer  John  made a vertical road and a horizontal road inside the farm from one border to another  as shown below   The gray part represents the roads  

What is the area of this yard excluding the roads  Find it 

Note
It can be proved that the positions of the roads do not affect the area 

Constraints

A is an integer between 2 and 100  inclusive  
B is an integer between 2 and 100  inclusive  


Input
Input is given from Standard Input in the following format 
A B


Output
Print the area of this yard excluding the roads  in square yards  

Sample Input 12 2


Sample Output 11

In this case  the area is 1 square yard 

Sample Input 25 7


Sample Output 224

In this case  the area is 24 square yards"
105,https://atcoder.jp/contests/abc106/tasks/abc106_b,"問題文
105 という数は  非常に特殊な性質を持つ   奇数なのに  約数が 8 個もある 
さて  1 以上 N 以下の奇数のうち  正の約数を ちょうど 8 個持つようなものの個数を求めよ   

制約

N は 1 以上 200 以下の整数


入力
入力は以下の形式で標準入力から与えられる   
N


出力
条件を満たす数の個数を出力しなさい   

入力例 1105


出力例 11

1 以上 105 以下の整数の中で  ただ一つの 奇数かつ約数が 8 個 を満たす数は 105 である   

入力例 27


出力例 20

1 は約数が 1 個  3  5  7 は全て素数なので約数が 2 個である  よって前述の条件を満たすような数は存在しない   
Problem Statement
The number 105 is quite special   it is odd but still it has eight divisors 
Now  your task is this  how many odd numbers with exactly eight positive divisors are there between 1 and N  inclusive  

Constraints

N is an integer between 1 and 200  inclusive  


Input
Input is given from Standard Input in the following format 
N


Output
Print the count 

Sample Input 1105


Sample Output 11

Among the numbers between 1 and 105  the only number that is odd and has exactly eight divisors is 105 

Sample Input 27


Sample Output 20

1 has one divisor  3  5 and 7 are all prime and have two divisors  Thus  there is no number that satisfies the condition"
To Infinity,https://atcoder.jp/contests/abc106/tasks/abc106_c,"問題文
Mr  Infinity は  1 から 9 までの数字からなる文字列 S を持っている  この文字列は  日付が変わるたびに次のように変化する 

文字列 S に含まれるそれぞれの 2 が 22  3 が 333  4 が 4444  5 が 55555  6 が 666666  7 が 7777777  8 が 88888888  9 が 999999999 に置き換わる  1 は 1 のまま残る 

例えば  S が 1324 の場合  翌日には 1333224444 になり  翌々日には 133333333322224444444444444444 になる 
あなたは 5000 兆日後に文字列がどのようになっているか知りたい  5000 兆日後の文字列の左から K 文字目は何か   

制約

S は 1 文字以上 100 文字以下の文字列 
K は 1 以上 10  18  以下の整数 
5000 兆日後の文字列の長さは K 文字以上である 


入力
入力は以下の形式で標準入力から与えられる   
S
K


出力
5000 兆日後に Mr  Infinity が持っている文字列の K 文字目の数字を出力しなさい   

入力例 11214
4


出力例 12

文字列 S は次のように変化していく   

現在  1214
1 日後  12214444
2 日後  1222214444444444444444
3 日後  12222222214444444444444444444444444444444444444444444444444444444444444444

5000 兆日後の文字列の最初 5 文字は 12222 となる  K 4 なので  4 文字目の 2 を出力すればよい   

入力例 23
157


出力例 23

文字列ははじめ 3 である  5000 兆日経ったとき  文字列は 3 だけで構成される   

入力例 3299792458
9460730472580800


出力例 32

Problem Statement
Mr  Infinity has a string S consisting of digits from 1 to 9  Each time the date changes  this string changes as follows 

Each occurrence of 2 in S is replaced with 22  Similarly  each 3 becomes 333  4 becomes 4444  5 becomes 55555  6 becomes 666666  7 becomes 7777777  8 becomes 88888888 and 9 becomes 999999999  1 remains as 1 

For example  if S is 1324  it becomes 1333224444 the next day  and it becomes 133333333322224444444444444444 the day after next 
You are interested in what the string looks like after 5  times 10  15  days  What is the K th character from the left in the string after 5  times 10  15  days 

Constraints

S is a string of length between 1 and 100  inclusive  
K is an integer between 1 and 10  18   inclusive  
The length of the string after 5  times 10  15  days is at least K 


Input
Input is given from Standard Input in the following format 
S
K


Output
Print the K th character from the left in Mr  Infinity s string after 5  times 10  15  days 

Sample Input 11214
4


Sample Output 12

The string S changes as follows   

Now  1214
After one day  12214444
After two days  1222214444444444444444
After three days  12222222214444444444444444444444444444444444444444444444444444444444444444

The first five characters in the string after 5  times 10  15  days is 12222  As K 4  we should print the fourth character  2 

Sample Input 23
157


Sample Output 23

The initial string is 3  The string after 5  times 10  15  days consists only of 3 

Sample Input 3299792458
9460730472580800


Sample Output 32"
AtCoder Express 2,https://atcoder.jp/contests/abc106/tasks/abc106_d,"問題文
高橋王国には  東西にのびる 1 本の線路がある  これに沿って N 個の都市があり  西から順に都市 1  2  3   cdots  N と番号づけられている 
AtCoder Express という会社は M 本の列車を保有しており  列車 i は都市 L i から都市 R i の区間  L i   R i の場合もある  を走っている   
この王国の国王である高橋君は  Q 個のことに興味を持った  具体的には  i 1  2  3   dots  Q のときの以下の質問の答えを求めたくなった   

都市 p i から都市 q i までの区間に  走る区間が 完全に含まれる 列車の本数  言い換えれば  p i  leq L j と R j  leq q i が両方成り立つような列車 j の本数   

高橋君は天才である  しかし流石の彼でも  膨大なデータを処理することはできない  高橋君のために  Q 個の質問それぞれに対して答えを求めよ   

制約

N は 1 以上 500 以下の整数
M は 1 以上 200   000 以下の整数
Q は 1 以上 100   000 以下の整数
1  leq L i  leq R i  leq N  1  leq i  leq M 
1  leq p i  leq q i  leq N  1  leq i  leq Q 


入力
入力は以下の形式で標準入力から与えられる   
N M Q
L 1 R 1
L 2 R 2
 
L M R M
p 1 q 1
p 2 q 2
 
p Q q Q


出力
Q 行出力せよ  i 行目には  都市 p i から都市 q i までの区間に  それぞれの走る区間が完全に含まれる列車の本数を出力せよ   

入力例 12 3 1
1 1
1 2
2 2
1 2


出力例 13

全ての列車の走る区間が  都市 1 から都市 2 までの区間に含まれているので  この質問の答えは 3 となる   

入力例 210 3 2
1 5
2 8
7 10
1 7
3 10


出力例 21
1

1 個目の質問は  都市 1 から 7 までの区間についてである  その区間に走る区間が完全に含まれている列車は  列車 1 のみである 
2 個目の質問は  都市 3 から 10 までの区間についてである  その区間に走る区間が完全に含まれている列車は  列車 3 のみである 

入力例 310 10 10
1 6
2 9
4 5
4 7
4 7
5 8
6 6
6 7
7 9
10 10
1 8
1 9
1 10
2 8
2 9
2 10
3 8
3 9
3 10
1 10


出力例 37
9
10
6
8
9
6
7
8
10

Problem Statement
In Takahashi Kingdom  there is a east west railroad and N cities along it  numbered 1  2  3       N from west to east 
A company called AtCoder Express possesses M trains  and the train i runs from City L i to City R i  it is possible that L i   R i  
Takahashi the king is interested in the following Q matters 

The number of the trains that runs strictly within the section from City p i to City q i  that is  the number of trains j such that p i  leq L j and R j  leq q i 

Although he is genius  this is too much data to process by himself  Find the answer for each of these Q queries to help him 

Constraints

N is an integer between 1 and 500  inclusive  
M is an integer between 1 and 200   000  inclusive  
Q is an integer between 1 and 100   000  inclusive  
1  leq L i  leq R i  leq N  1  leq i  leq M 
1  leq p i  leq q i  leq N  1  leq i  leq Q 


Input
Input is given from Standard Input in the following format 
N M Q
L 1 R 1
L 2 R 2
 
L M R M
p 1 q 1
p 2 q 2
 
p Q q Q


Output
Print Q lines  The i th line should contain the number of the trains that runs strictly within the section from City p i to City q i 

Sample Input 12 3 1
1 1
1 2
2 2
1 2


Sample Output 13

As all the trains runs within the section from City 1 to City 2  the answer to the only query is 3 

Sample Input 210 3 2
1 5
2 8
7 10
1 7
3 10


Sample Output 21
1

The first query is on the section from City 1 to 7  There is only one train that runs strictly within that section  Train 1 
The second query is on the section from City 3 to 10  There is only one train that runs strictly within that section  Train 3 

Sample Input 310 10 10
1 6
2 9
4 5
4 7
4 7
5 8
6 6
6 7
7 9
10 10
1 8
1 9
1 10
2 8
2 9
2 10
3 8
3 9
3 10
1 10


Sample Output 37
9
10
6
8
9
6
7
8
10"
Train,https://atcoder.jp/contests/abc107/tasks/abc107_a,"問題文N 両編成の列車があります 
この列車の前から i 両目は 後ろから何両目でしょうか 

制約
1  leq N  leq 100
1  leq i  leq N


入力入力は以下の形式で標準入力から与えられる 
N i


出力答えを出力せよ 

入力例 14 2


出力例 13

4 両編成の列車において 前から 2 両目の車両は 後ろから 3 両目です 

入力例 21 1


出力例 21


入力例 315 11


出力例 35

Problem StatementThere is an N car train 
You are given an integer i  Find the value of j such that the following statement is true   the i th car from the front of the train is the j th car from the back  

Constraints
1  leq N  leq 100
1  leq i  leq N


InputInput is given from Standard Input in the following format 
N i


OutputPrint the answer 

Sample Input 14 2


Sample Output 13

The second car from the front of a 4 car train is the third car from the back 

Sample Input 21 1


Sample Output 21


Sample Input 315 11


Sample Output 35"
Grid Compression,https://atcoder.jp/contests/abc107/tasks/abc107_b,"問題文縦 H 行 横 W 列のマス目があります 
上から i 行目 左から j 列目のマスを  i  j  と表します 
各マスは白または黒です 
マス目の配色は H 行 W 列の行列  a  i  j   によって与えられます 
a  i  j  が   ならばマス  i  j  は白であり a  i  j  が   ならばマス  i  j  は黒です 
すぬけ君はこのマス目を圧縮しようとしています 
そのために 白いマスのみからなる行または列が存在する間 次の操作を繰り返し行います 

操作  白いマスのみからなる行または列をひとつ任意に選び その行または列を取り除いて空白を詰める 

各操作でどの行または列を選ぶかによらず 最終的なマス目は一意に定まることが示せます 
最終的なマス目を求めてください 

制約
1  leq H  W  leq 100
a  i  j  は   または   である 
マス目全体で少なくともひとつは黒いマスが存在する 


入力入力は以下の形式で標準入力から与えられる 
H W
a  1  1    a  1  W 
 
a  H  1    a  H  W 


出力最終的なマス目を 入力と同様のフォーマットで出力せよ 
ただし 行数および列数は省くこと 
詳しくはサンプルを参照せよ 

入力例 14 4
    
    
    
    


出力例 1   
   
   

元のマス目における第 2 行および第 3 列がそれぞれ取り除かれます 

入力例 23 3
   
   
   


出力例 2   
   
   

白いマスのみからなる行または列が存在しないので 操作は行われません 

入力例 34 5
     
     
     
     


出力例 3 


入力例 47 6
      
      
      
      
      
      
      


出力例 4   
   
   
   
   

Problem StatementThere is a grid of squares with H horizontal rows and W vertical columns 
The square at the i th row from the top and the j th column from the left is represented as  i  j  
Each square is black or white 
The color of the square is given as an H by W matrix  a  i  j   
If a  i  j  is    the square  i  j  is white  if a  i  j  is    the square  i  j  is black 
Snuke is compressing this grid 
He will do so by repeatedly performing the following operation while there is a row or column that consists only of white squares 

Operation  choose any one row or column that consists only of white squares  remove it and delete the space between the rows or columns 

It can be shown that the final state of the grid is uniquely determined regardless of what row or column is chosen in each operation 
Find the final state of the grid 

Constraints
1  leq H  W  leq 100
a  i  j  is   or   
There is at least one black square in the whole grid 


InputInput is given from Standard Input in the following format 
H W
a  1  1    a  1  W 
 
a  H  1    a  H  W 


OutputPrint the final state of the grid in the same format as input  without the numbers of rows and columns   see the samples for clarity 

Sample Input 14 4
    
    
    
    


Sample Output 1   
   
   

The second row and the third column in the original grid will be removed 

Sample Input 23 3
   
   
   


Sample Output 2   
   
   

As there is no row or column that consists only of white squares  no operation will be performed 

Sample Input 34 5
     
     
     
     


Sample Output 3 


Sample Input 47 6
      
      
      
      
      
      
      


Sample Output 4"
Pair,https://atcoder.jp/contests/abc108/tasks/abc108_a,"問題文1 以上 K 以下の正の整数から 偶数と奇数ひとつずつの組を選ぶ方法の個数を求めてください なお 選ぶ順番は考慮しません 

制約
2 leq K leq 100
K は整数である


入力入力は以下の形式で標準入力から与えられる 
K


出力1 以上 K 以下の正の整数から 偶数と奇数ひとつずつの組を選ぶ方法の個数を出力せよ 

入力例 13


出力例 12

 2 1  と  2 3  が条件を満たします 

入力例 26


出力例 29


入力例 311


出力例 330


入力例 450


出力例 4625

Problem StatementFind the number of ways to choose a pair of an even number and an odd number from the positive integers between 1 and K  inclusive   The order does not matter 

Constraints
2 leq K leq 100
K is an integer 


InputInput is given from Standard Input in the following format 
K


OutputPrint the number of ways to choose a pair of an even number and an odd number from the positive integers between 1 and K  inclusive  

Sample Input 13


Sample Output 12

Two pairs can be chosen   2 1  and  2 3  

Sample Input 26


Sample Output 29


Sample Input 311


Sample Output 330


Sample Input 450


Sample Output 4625"
Ruined Square,https://atcoder.jp/contests/abc108/tasks/abc108_b,"問題文xy 平面上に正方形があり 4 つの頂点の座標は反時計回りに順番に  x 1 y 1   x 2 y 2   x 3 y 3   x 4 y 4  です 
なお x 軸は右向きに y 軸は上向きに取ることにします 
高橋君は これら 4 つの座標のうち  x 3 y 3   x 4 y 4  を忘れてしまいました 
x 1 x 2 y 1 y 2 が与えられるので x 3 y 3 x 4 y 4 を復元してください なお これらの条件から x 3 y 3 x 4 y 4 は一意に存在し 整数となることが証明できます 

制約
 x 1   y 1   x 2   y 2   leq 100
 x 1 y 1     x 2 y 2 
入力はすべて整数である


入力入力は以下の形式で標準入力から与えられる 
x 1 y 1 x 2 y 2


出力x 3 y 3 x 4 y 4 をこの順に整数で出力せよ 

入力例 10 0 0 1


出力例 1 1 1  1 0

4 点  0 0   0 1    1 1    1 0  は この順に正方形を反時計回りに見たときの 4 頂点をなします 
 x 3 y 3   1 1   x 4 y 4   1 0  は 頂点が時計回りに並んでいるので適さないことに注意してください 

入力例 22 3 6 6


出力例 23 10  1 7


入力例 331  41  59 26


出力例 3 126  64  36  131

Problem StatementThere is a square in the xy plane  The coordinates of its four vertices are  x 1 y 1   x 2 y 2   x 3 y 3  and  x 4 y 4  in counter clockwise order 
 Assume that the positive x axis points right  and the positive y axis points up  
Takahashi remembers  x 1 y 1  and  x 2 y 2   but he has forgot  x 3 y 3  and  x 4 y 4  
Given x 1 x 2 y 1 y 2  restore x 3 y 3 x 4 y 4  It can be shown that x 3 y 3 x 4 and y 4 uniquely exist and have integer values 

Constraints
 x 1   y 1   x 2   y 2   leq 100
 x 1 y 1     x 2 y 2 
All values in input are integers 


InputInput is given from Standard Input in the following format 
x 1 y 1 x 2 y 2


OutputPrint x 3 y 3 x 4 and y 4 as integers  in this order 

Sample Input 10 0 0 1


Sample Output 1 1 1  1 0

 0 0   0 1    1 1    1 0  is the four vertices of a square in counter clockwise order 
Note that  x 3 y 3   1 1   x 4 y 4   1 0  is not accepted  as the vertices are in clockwise order 

Sample Input 22 3 6 6


Sample Output 23 10  1 7


Sample Input 331  41  59 26


Sample Output 3 126  64  36  131"
ABC333,https://atcoder.jp/contests/abc109/tasks/abc109_a,"問題文1 以上 3 以下の整数 A  B が与えられます 
A  times B  times C が奇数となるような 1 以上 3 以下の整数 C が存在するか判定してください 

制約
入力はすべて整数である
1  leq A  B  leq 3


入力入力は以下の形式で標準入力から与えられる 
A B


出力条件を満たすような C が存在するなら Yes そうでないなら No を出力せよ 

入力例 13 1


出力例 1Yes

C   3 とすると A  times B  times C   3  times 1  times 3   9 となり 奇数となります 

入力例 21 2


出力例 2No


入力例 32 2


出力例 3No

Problem StatementYou are given integers A and B  each between 1 and 3  inclusive  
Determine if there is an integer C between 1 and 3  inclusive  such that A  times B  times C is an odd number 

Constraints
All values in input are integers 
1  leq A  B  leq 3


InputInput is given from Standard Input in the following format 
A B


OutputIf there is an integer C between 1 and 3 that satisfies the condition  print Yes  otherwise  print No 

Sample Input 13 1


Sample Output 1Yes

Let C   3  Then  A  times B  times C   3  times 1  times 3   9  which is an odd number 

Sample Input 21 2


Sample Output 2No


Sample Input 32 2


Sample Output 3No"
Shiritori,https://atcoder.jp/contests/abc109/tasks/abc109_b,"問題文高橋くんは今日も 1 人でしりとりの練習をしています 
しりとりとは以下のルールで遊ばれるゲームです 

はじめ 好きな単語を発言する
以降 次の条件を満たす単語を発言することを繰り返す
その単語はまだ発言していない単語である
その単語の先頭の文字は直前に発言した単語の末尾の文字と一致する



高橋くんは 10 秒間にできるだけ多くの単語を発言する練習をしています 
高橋くんが発言した単語の個数 N と i 番目に発言した単語 W i が与えられるので どの発言もしりとりのルールを守っていたかを判定してください 

制約
N は 2  leq N  leq 100 を満たす整数である
W i は英小文字からなる長さ 1 以上 10 以下の文字列である


入力入力は以下の形式で標準入力から与えられる 
N
W 1
W 2
 
W N


出力高橋くんのどの発言もしりとりのルールを守っていたなら Yes そうでなければ No を出力せよ 

入力例 14
hoge
english
hoge
enigma


出力例 1No

hoge が複数回発言されているのでしりとりのルールを守っていません 

入力例 29
basic
c
cpp
php
python
nadesico
ocaml
lua
assembly


出力例 2Yes


入力例 38
a
aa
aaa
aaaa
aaaaa
aaaaaa
aaa
aaaaaaa


出力例 3No


入力例 43
abc
arc
agc


出力例 4No

Problem StatementTakahashi is practicing shiritori alone again today 
Shiritori is a game as follows 

In the first turn  a player announces any one word 
In the subsequent turns  a player announces a word that satisfies the following conditions 
That word is not announced before 
The first character of that word is the same as the last character of the last word announced 



In this game  he is practicing to announce as many words as possible in ten seconds 
You are given the number of words Takahashi announced  N  and the i th word he announced  W i  for each i  Determine if the rules of shiritori was observed  that is  every word announced by him satisfied the conditions 

Constraints
N is an integer satisfying 2  leq N  leq 100 
W i is a string of length between 1 and 10  inclusive  consisting of lowercase English letters 


InputInput is given from Standard Input in the following format 
N
W 1
W 2
 
W N


OutputIf every word announced by Takahashi satisfied the conditions  print Yes  otherwise  print No 

Sample Input 14
hoge
english
hoge
enigma


Sample Output 1No

As hoge is announced multiple times  the rules of shiritori was not observed 

Sample Input 29
basic
c
cpp
php
python
nadesico
ocaml
lua
assembly


Sample Output 2Yes


Sample Input 38
a
aa
aaa
aaaa
aaaaa
aaaaaa
aaa
aaaaaaa


Sample Output 3No


Sample Input 43
abc
arc
agc


Sample Output 4No"
Skip,https://atcoder.jp/contests/abc109/tasks/abc109_c,"問題文数直線上に N 個の都市があり i 番目の都市は座標 x i にあります 
あなたの目的は これら全ての都市を 1 度以上訪れることです 
あなたは はじめに正整数 D を設定します 
その後 あなたは座標 X から出発し 以下の移動 1 移動 2 を好きなだけ行います 

移動 1  座標 y から座標 y   D に移動する
移動 2  座標 y から座標 y   D に移動する

全ての都市を 1 度以上訪れることのできる D の最大値を求めてください 
ここで 都市を訪れるとは その都市のある座標に移動することです 

制約
入力はすべて整数である
1  leq N  leq 10 5
1  leq X  leq 10 9
1  leq x i  leq 10 9
x i はすべて異なる
x 1  x 2       x N  neq X


入力入力は以下の形式で標準入力から与えられる 
N X
x 1 x 2     x N


出力全ての都市を 1 度以上訪れることのできる D の最大値を出力せよ 

入力例 13 3
1 7 11


出力例 12

D   2 と設定すれば次のように移動を行うことですべての都市を訪れることができ これが最大です 

移動 2 を行い 座標 1 に移動する
移動 1 を行い 座標 3 に移動する
移動 1 を行い 座標 5 に移動する
移動 1 を行い 座標 7 に移動する
移動 1 を行い 座標 9 に移動する
移動 1 を行い 座標 11 に移動する


入力例 23 81
33 105 57


出力例 224


入力例 31 1
1000000000


出力例 3999999999

Problem StatementThere are N cities on a number line  The i th city is located at coordinate x i 
Your objective is to visit all these cities at least once 
In order to do so  you will first set a positive integer D 
Then  you will depart from coordinate X and perform Move 1 and Move 2 below  as many times as you like 

Move 1  travel from coordinate y to coordinate y   D 
Move 2  travel from coordinate y to coordinate y   D 

Find the maximum value of D that enables you to visit all the cities 
Here  to visit a city is to travel to the coordinate where that city is located 

Constraints
All values in input are integers 
1  leq N  leq 10 5
1  leq X  leq 10 9
1  leq x i  leq 10 9
x i are all different 
x 1  x 2       x N  neq X


InputInput is given from Standard Input in the following format 
N X
x 1 x 2     x N


OutputPrint the maximum value of D that enables you to visit all the cities 

Sample Input 13 3
1 7 11


Sample Output 12

Setting D   2 enables you to visit all the cities as follows  and this is the maximum value of such D 

Perform Move 2 to travel to coordinate 1 
Perform Move 1 to travel to coordinate 3 
Perform Move 1 to travel to coordinate 5 
Perform Move 1 to travel to coordinate 7 
Perform Move 1 to travel to coordinate 9 
Perform Move 1 to travel to coordinate 11 


Sample Input 23 81
33 105 57


Sample Output 224


Sample Input 31 1
1000000000


Sample Output 3999999999"
Make Them Even,https://atcoder.jp/contests/abc109/tasks/abc109_d,"問題文縦 H 行横 W 列に区切られたマス目があり 上から i 番目 左から j 列目のマスをマス  i  j  と呼びます 
マス  i  j  には a  ij  枚のコインが置かれています 
あなたは以下の操作を何度でも行うことができます 
操作  まだ選んだことのないマスのうち 1 枚以上のコインが置かれているマスを 1 つ選び そのマスに置かれているコインのうち 1 枚を上下左右に隣接するいずれかのマスに移動する
偶数枚のコインが置かれたマスの数を最大化してください 

制約
入力はすべて整数である
1  leq H  W  leq 500
0  leq a  ij   leq 9


入力入力は以下の形式で標準入力から与えられる 
H W
a  11  a  12      a  1W 
a  21  a  22      a  2W 
 
a  H1  a  H2      a  HW 


出力偶数枚のコインが置かれたマスの数が最大となるような操作の列を次の形式で出力せよ 
N
y 1 x 1 y 1  x 1 
y 2 x 2 y 2  x 2 
 
y N x N y N  x N 

すなわち 1 行目には操作の回数を表す 0 以上 H  times W 以下の整数 N を出力せよ 
i 1  1  leq i  leq N  行目には i 回目の操作を表す整数 y i  x i  y i   x i   1  leq y i  y i   leq H かつ 1  leq x i  x i   leq W  を出力せよ 
ただし これはマス  y i  x i  にあるコインのうち 1 枚を上下左右に隣接するマス  y i   x i   に移動させる操作を表す 
問題文中の操作でないような操作が与えられた場合や 出力の形式が正しくない場合には Wrong Answer となるので注意せよ 

入力例 12 3
1 2 3
0 1 1


出力例 13
2 2 2 3
1 1 1 2
1 3 1 2

次のように操作を行えば 全てのマスに置かれたコインの数を偶数にできます 

マス  2  2  に置かれているコインのうち 1 枚をマス  2  3  に移動します
マス  1  1  に置かれているコインのうち 1 枚をマス  1  2  に移動します
マス  1  3  に置かれているコインのうち 1 枚をマス  1  2  に移動します


入力例 23 2
1 0
2 1
1 0


出力例 23
1 1 1 2
1 2 2 2
3 1 3 2


入力例 31 5
9 9 9 9 9


出力例 32
1 1 1 2
1 3 1 4

Problem StatementThere is a grid of square cells with H horizontal rows and W vertical columns  The cell at the i th row and the j th column will be denoted as Cell  i  j  
In Cell  i  j   a  ij  coins are placed 
You can perform the following operation any number of times 
Operation  Choose a cell that was not chosen before and contains one or more coins  then move one of those coins to a vertically or horizontally adjacent cell 
Maximize the number of cells containing an even number of coins 

Constraints
All values in input are integers 
1  leq H  W  leq 500
0  leq a  ij   leq 9


InputInput is given from Standard Input in the following format 
H W
a  11  a  12      a  1W 
a  21  a  22      a  2W 
 
a  H1  a  H2      a  HW 


OutputPrint a sequence of operations that maximizes the number of cells containing an even number of coins  in the following format 
N
y 1 x 1 y 1  x 1 
y 2 x 2 y 2  x 2 
 
y N x N y N  x N 

That is  in the first line  print an integer N between 0 and H  times W  inclusive   representing the number of operations 
In the  i 1  th line  1  leq i  leq N   print four integers y i  x i  y i  and x i   1  leq y i  y i   leq H and 1  leq x i  x i   leq W   representing the i th operation  These four integers represents the operation of moving one of the coins placed in Cell  y i  x i  to a vertically or horizontally adjacent cell   y i   x i   
Note that if the specified operation violates the specification in the problem statement or the output format is invalid  it will result in Wrong Answer 

Sample Input 12 3
1 2 3
0 1 1


Sample Output 13
2 2 2 3
1 1 1 2
1 3 1 2

Every cell contains an even number of coins after the following sequence of operations 

Move the coin in Cell  2  2  to Cell  2  3  
Move the coin in Cell  1  1  to Cell  1  2  
Move one of the coins in Cell  1  3  to Cell  1  2  


Sample Input 23 2
1 0
2 1
1 0


Sample Output 23
1 1 1 2
1 2 2 2
3 1 3 2


Sample Input 31 5
9 9 9 9 9


Sample Output 32
1 1 1 2
1 3 1 4"
Maximize the Formula,https://atcoder.jp/contests/abc110/tasks/abc110_a,"問題文あなたは子供にゲームをプレイさせ その結果に応じてお小遣いをあげることにしました 
そのゲームの内容は以下の通りです 

1 以上 9 以下の整数 1 つが書かれた整数パネル 3 枚と   が書かれた演算子パネル 1 枚がある
これら 4 枚のパネルを横一列に並べて X   Y の形の数式を作る  すなわち 演算子パネルを端に置くことはできない 
数式を計算した結果と同じ値のお小遣いをあげる

ゲームで使用する各整数パネルの値 A  B  C が与えられるので あげることになり得るお小遣いの最大値を求めてください 

制約
入力はすべて整数である
1  leq A  B  C  leq 9


入力入力は以下の形式で標準入力から与えられる 
A B C


出力あげることになり得るお小遣いの最大値を出力せよ 

入力例 11 5 2


出力例 153

52 1 と並べたときにあげることになるお小遣いは 53 となりこれが最大です 

入力例 29 9 9


出力例 2108


入力例 36 6 7


出力例 382

Problem StatementYou have decided to give an allowance to your child depending on the outcome of the game that he will play now 
The game is played as follows 

There are three  integer panels   each with a digit between 1 and 9  inclusive  printed on it  and one  operator panel  with a   printed on it 
The player should construct a formula of the form X   Y  by arranging the four panels from left to right   The operator panel should not be placed at either end of the formula  
Then  the amount of the allowance will be equal to the resulting value of the formula 

Given the values A  B and C printed on the integer panels used in the game  find the maximum possible amount of the allowance 

Constraints
All values in input are integers 
1  leq A  B  C  leq 9


InputInput is given from Standard Input in the following format 
A B C


OutputPrint the maximum possible amount of the allowance 

Sample Input 11 5 2


Sample Output 153

The amount of the allowance will be 53 when the panels are arranged as 52 1  and this is the maximum possible amount 

Sample Input 29 9 9


Sample Output 2108


Sample Input 36 6 7


Sample Output 382"
1 Dimensional World's Tale,https://atcoder.jp/contests/abc110/tasks/abc110_b,"問題文この世界は 1 次元世界であり 世界を治める 2 つの帝国はそれぞれ A 帝国 B 帝国と呼ばれています 
A 帝国の首都は座標 X B 帝国の首都は座標 Y に位置しています 
ある日 A 帝国は座標 x 1  x 2       x N B 帝国は座標 y 1  y 2       y M の都市を支配下に置きたくなりました 
このとき 以下の 3 つの条件をすべて満たす整数 Z が存在すれば 合意が成立して戦争は起きませんが 存在しない場合には戦争が起こります 

X   Z  leq Y
x 1  x 2       x N   Z
y 1  y 2       y M  geq Z

戦争が起こるかどうか判定してください 

制約
入力はすべて整数である
1  leq N  M  leq 100
 100  leq X   Y  leq 100
 100  leq x i  y i  leq 100
x 1  x 2       x N  neq X
x i はすべて異なる
y 1  y 2       y M  neq Y
y i はすべて異なる


入力入力は以下の形式で標準入力から与えられる 
N M X Y
x 1 x 2     x N
y 1 y 2     y M


出力戦争が起こるなら War そうでないなら No War を出力せよ 

入力例 13 2 10 20
8 15 13
16 22


出力例 1No War

Z   16 とすれば 次のように 3 つの条件をすべて満たすので合意が成立し 戦争は起きません 

X   10   16  leq 20   Y
8  15  13   16
16  22  geq 16


入力例 24 2  48  1
 20  35  91  23
 22 66


出力例 2War


入力例 35 3 6 8
 10 3 1 5  100
100 6 14


出力例 3War

Problem StatementOur world is one dimensional  and ruled by two empires called Empire A and Empire B 
The capital of Empire A is located at coordinate X  and that of Empire B is located at coordinate Y 
One day  Empire A becomes inclined to put the cities at coordinates x 1  x 2       x N under its control  and Empire B becomes inclined to put the cities at coordinates y 1  y 2       y M under its control 
If there exists an integer Z that satisfies all of the following three conditions  they will come to an agreement  but otherwise war will break out 

X   Z  leq Y
x 1  x 2       x N   Z
y 1  y 2       y M  geq Z

Determine if war will break out 

Constraints
All values in input are integers 
1  leq N  M  leq 100
 100  leq X   Y  leq 100
 100  leq x i  y i  leq 100
x 1  x 2       x N  neq X
x i are all different 
y 1  y 2       y M  neq Y
y i are all different 


InputInput is given from Standard Input in the following format 
N M X Y
x 1 x 2     x N
y 1 y 2     y M


OutputIf war will break out  print War  otherwise  print No War 

Sample Input 13 2 10 20
8 15 13
16 22


Sample Output 1No War

The choice Z   16 satisfies all of the three conditions as follows  thus they will come to an agreement 

X   10   16  leq 20   Y
8  15  13   16
16  22  geq 16


Sample Input 24 2  48  1
 20  35  91  23
 22 66


Sample Output 2War


Sample Input 35 3 6 8
 10 3 1 5  100
100 6 14


Sample Output 3War"
String Transformation,https://atcoder.jp/contests/abc110/tasks/abc110_c,"問題文英小文字のみからなる文字列 S  T が与えられます 
文字列 S に対して 次の操作を何度でも行うことができます 
操作  2つの異なる英小文字 c 1  c 2 を選び S に含まれる全ての c 1 を c 2 に c 2 を c 1 に置き換える
0 回以上操作を行って S を T に一致させられるか判定してください 

制約
1  leq  S   leq 2  times 10 5
 S     T 
S  T は英小文字のみからなる


入力入力は以下の形式で標準入力から与えられる 
S
T


出力S を T に一致させられる場合は Yes そうでない場合は No を出力せよ 

入力例 1azzel
apple


出力例 1Yes

次のように操作を行えば azzel を apple にできます 

c 1 として e を c 2 として l を選ぶと azzel が azzle になる
c 1 として z を c 2 として p を選ぶと azzle が apple になる


入力例 2chokudai
redcoder


出力例 2No

どのように操作を行っても chokudai を redcoder にできません 

入力例 3abcdefghijklmnopqrstuvwxyz
ibyhqfrekavclxjstdwgpzmonu


出力例 3Yes

Problem StatementYou are given strings S and T consisting of lowercase English letters 
You can perform the following operation on S any number of times 
Operation  Choose two distinct lowercase English letters c 1 and c 2  then replace every occurrence of c 1 with c 2  and every occurrence of c 2 with c 1 
Determine if S and T can be made equal by performing the operation zero or more times 

Constraints
1  leq  S   leq 2  times 10 5
 S     T 
S and T consists of lowercase English letters 


InputInput is given from Standard Input in the following format 
S
T


OutputIf S and T can be made equal  print Yes  otherwise  print No 

Sample Input 1azzel
apple


Sample Output 1Yes

azzel can be changed to apple  as follows 

Choose e as c 1 and l as c 2  azzel becomes azzle 
Choose z as c 1 and p as c 2  azzle becomes apple 


Sample Input 2chokudai
redcoder


Sample Output 2No

No sequences of operation can change chokudai to redcoder 

Sample Input 3abcdefghijklmnopqrstuvwxyz
ibyhqfrekavclxjstdwgpzmonu


Sample Output 3Yes"
Factorization,https://atcoder.jp/contests/abc110/tasks/abc110_d,"問題文正整数 N  M が与えられます 
a 1  times a 2  times      times a N   M となる正整数からなる長さ N の数列 a が何通りあるかを 10 9 7 で割った余りを求めてください 
ただし 数列 a  と a   が異なるとは ある i が存在して a i   neq a i   であることをいいます 

制約
入力はすべて整数である
1  leq N  leq 10 5
1  leq M  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N M


出力条件を満たす正整数からなる数列が何通りあるかを 10 9   7 で割った余りを出力せよ 

入力例 12 6


出力例 14

  a 1  a 2       1  6      2  3      3  2      6  1   の 4 通りの数列が条件を満たします 

入力例 23 12


出力例 218


入力例 3100000 1000000000


出力例 3957870001

Problem StatementYou are given positive integers N and M 
How many sequences a of length N consisting of positive integers satisfy a 1  times a 2  times      times a N   M  Find the count modulo 10 9 7 
Here  two sequences a  and a   are considered different when there exists some i such that a i   neq a i   

Constraints
All values in input are integers 
1  leq N  leq 10 5
1  leq M  leq 10 9


InputInput is given from Standard Input in the following format 
N M


OutputPrint the number of the sequences consisting of positive integers that satisfy the condition  modulo 10 9   7 

Sample Input 12 6


Sample Output 14

Four sequences satisfy the condition    a 1  a 2       1  6      2  3      3  2   and   6  1   

Sample Input 23 12


Sample Output 218


Sample Input 3100000 1000000000


Sample Output 3957870001"
AtCoder Beginner Contest 999,https://atcoder.jp/contests/abc111/tasks/abc111_a,"問題文猫のすぬけは文字を書く練習をしています 
すぬけは今日 数字の 1 と 9 を書く練習をしていたのですが 
間違えて  1 と 9 をあべこべに書いてしまいました 
すぬけが書いた 3 桁の整数 n が与えられます 
n に含まれる 1 という桁をそれぞれ 9 に 
9 という桁をそれぞれ 1 に置き換えて得られる整数を出力してください 

制約
111  leq n  leq 999
n は各桁が 1 か 9 である整数


入力入力は以下の形式で標準入力から与えられる 
n


出力n の各桁の 1 と 9 を入れ替えた整数を出力してください 

入力例 1119


出力例 1991

一の位の 9 を 1 に 十の位の 1 を 9 に 百の位の 1 を 9 に書き換えた
 991 が答えとなります 

入力例 2999


出力例 2111

Problem StatementCat Snuke is learning to write characters 
Today  he practiced writing digits 1 and 9  but he did it the other way around 
You are given a three digit integer n written by Snuke 
Print the integer obtained by replacing each digit 1 with 9 and each digit 9 with 1 in n 

Constraints
111  leq n  leq 999
n is an integer consisting of digits 1 and 9 


InputInput is given from Standard Input in the following format 
n


OutputPrint the integer obtained by replacing each occurrence of 1 with 9 and each occurrence of 9 with 1 in n 

Sample Input 1119


Sample Output 1991

Replace the 9 in the ones place with 1  the 1 in the tens place with 9 and the 1 in the hundreds place with 9  The answer is 991 

Sample Input 2999


Sample Output 2111"
AtCoder Beginner Contest 111,https://atcoder.jp/contests/abc111/tasks/abc111_b,"問題文黒橋君は AtCoder Beginner Contest  ABC  にまだ参加したことがありません 
次に行われる ABC は第 N 回です 
黒橋君は 初めて参加する ABC を第 x 回としたときに x の十進法表記でのすべての桁の数字が同じであるようにしたいです 
黒橋君が初めて参加する ABC としてふさわしいもののうち 最も早いものは第何回でしょうか 

制約
100  leq N  leq 999
N は整数


入力入力は以下の形式で標準入力から与えられる 
N


出力黒橋君が初めて参加する ABC としてふさわしいもののうち 最も早いものは第何回かを出力せよ 

入力例 1111


出力例 1111

次に行われる ABC は第 111 回です 
これは黒橋君が初めて参加する ABC としてふさわしいです 

入力例 2112


出力例 2222

次に行われる ABC は第 112 回です そのため 第 111 回の ABC にはもう参加することはできません 
黒橋君が初めて参加する ABC としてふさわしいもののうち 最も早いものは第 222 回です 

入力例 3750


出力例 3777

Problem StatementKurohashi has never participated in AtCoder Beginner Contest  ABC  
The next ABC to be held is ABC N  the N th ABC ever held  
Kurohashi wants to make his debut in some ABC x such that all the digits of x in base ten are the same 
What is the earliest ABC where Kurohashi can make his debut 

Constraints
100  leq N  leq 999
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputIf the earliest ABC where Kurohashi can make his debut is ABC n  print n 

Sample Input 1111


Sample Output 1111

The next ABC to be held is ABC 111  where Kurohashi can make his debut 

Sample Input 2112


Sample Output 2222

The next ABC to be held is ABC 112  which means Kurohashi can no longer participate in ABC 111 
Among the ABCs where Kurohashi can make his debut  the earliest one is ABC 222 

Sample Input 3750


Sample Output 3777"
Programming Education,https://atcoder.jp/contests/abc112/tasks/abc112_a,"問題文
2020 年  AtCoder 社は年商 10 億円を超え  プログラミング教育にも手を出すようになった 
ある日行われたテストでは  1 才児は Hello World を出力するプログラムを  2 才児は整数 A  B を入力して A B を出力するプログラムを書かなければならない 
高橋君はこのテストを受けているが  突然自分が何才なのかが分からなくなってしまった 
そこで  最初に自分の年齢 N  N は 1 または 2  を入力し  N 1 ならば Hello World と出力し  N 2 ならば A  B を入力して A B を出力するプログラムを作ることにした 
高橋君に代わって  このようなプログラムを作りなさい   

制約

N は 1 または 2
A は 1 以上 9 以下の整数
B は 1 以上 9 以下の整数


入力
入力は以下の 2 つのうちいずれかの形式で標準入力から与えられる   
1

2
A
B


出力
N 1 のとき  Hello World と出力し  N 2 のとき  A B を出力しなさい   

入力例 11


出力例 1Hello World

N 1 なので  高橋君は 1 才である  したがって  Hello World を出力する   

入力例 22
3
5


出力例 28

N 2 なので  高橋君は 2 才である  A 3  B 5 なので  A B である 8 を出力する   
Problem Statement
In 2020  AtCoder Inc  with an annual sales of more than one billion yen  the currency of Japan  has started a business in programming education 
One day  there was an exam where a one year old child must write a program that prints Hello World  and a two year old child must write a program that receives integers A  B and prints A B 
Takahashi  who is taking this exam  suddenly forgets his age 
He decides to write a program that first receives his age N  1 or 2  as input  then prints Hello World if N 1  and additionally receives integers A  B and prints A B if N 2 
Write this program for him   

Constraints

N is 1 or 2 
A is an integer between 1 and 9  inclusive  
B is an integer between 1 and 9  inclusive  


Input
Input is given from Standard Input in one of the following formats   
1

2
A
B


Output
If N 1  print Hello World  if N 2  print A B   

Sample Input 11


Sample Output 1Hello World

As N 1  Takahashi is one year old  Thus  we should print Hello World 

Sample Input 22
3
5


Sample Output 28

As N 2  Takahashi is two years old  Thus  we should print A B  which is 8 since A 3 and B 5"
Time Limit Exceeded,https://atcoder.jp/contests/abc112/tasks/abc112_b,"問題文外出している X さんは ABC に参加するためにスマートウォッチで最適な帰宅経路を調べることにしました 
スマートウォッチであるあなたは N 個の帰宅経路を見つけました 
X さんが i 番目の経路を使う場合 コスト c i かけて時間 t i で帰宅できます 
時間 T 以内に帰宅できる経路のうち コストが最小となる経路のコストを求めてください 

制約
入力はすべて整数である
1  leq N  leq 100
1  leq T  leq 1000
1  leq c i  leq 1000
1  leq t i  leq 1000
各  c i  t i  の組は異なる


入力入力は以下の形式で標準入力から与えられる 
N T
c 1 t 1
c 2 t 2
 
c N t N


出力時間 T 以内に帰宅できる経路のうち コストが最小となる経路のコストを出力せよ 
ただし どの経路を使っても時間 T 以内に帰宅できない場合 TLE と出力せよ 

入力例 13 70
7 60
1 80
4 50


出力例 14


1 番目の経路を使うと コスト 7 で帰宅できます
2 番目の経路では時間 T   70 以内に帰宅できません
3 番目の経路を使うと コスト 4 で帰宅できます

従って 3 番目の経路を使ったときのコスト 4 が最小です 

入力例 24 3
1 1000
2 4
3 1000
4 500


出力例 2TLE

どの経路を使っても時間 T   3 以内に帰宅できません 

入力例 35 9
25 8
5 9
4 10
1000 1000
6 1


出力例 35

Problem StatementWhen Mr  X is away from home  he has decided to use his smartwatch to search the best route to go back home  to participate in ABC 
You  the smartwatch  has found N routes to his home 
If Mr  X uses the i th of these routes  he will get home in time t i at cost c i 
Find the smallest cost of a route that takes not longer than time T 

Constraints
All values in input are integers 
1  leq N  leq 100
1  leq T  leq 1000
1  leq c i  leq 1000
1  leq t i  leq 1000
The pairs  c i  t i  are distinct 


InputInput is given from Standard Input in the following format 
N T
c 1 t 1
c 2 t 2
 
c N t N


OutputPrint the smallest cost of a route that takes not longer than time T 
If there is no route that takes not longer than time T  print TLE instead 

Sample Input 13 70
7 60
1 80
4 50


Sample Output 14


The first route gets him home at cost 7 
The second route takes longer than time T   70 
The third route gets him home at cost 4 

Thus  the cost 4 of the third route is the minimum 

Sample Input 24 3
1 1000
2 4
3 1000
4 500


Sample Output 2TLE

There is no route that takes not longer than time T   3 

Sample Input 35 9
25 8
5 9
4 10
1000 1000
6 1


Sample Output 35"
Pyramid,https://atcoder.jp/contests/abc112/tasks/abc112_c,"問題文
古代すぬけ国では  AtCoder 社長 高橋君 の権威を高めるために  ピラミッドが建てられていた 
ピラミッドには 中心座標  C X  C Y  と 高さ H が定まっており  座標  X  Y  の高度は max H    X   C X     Y   C Y   0  であった   
探検家の青木君は  このピラミッドの中心座標と高さを求めるために調査を行った  その結果  次のような情報が得られた   

C X  C Y は 0 以上 100 以下の整数で  H は 1 以上の整数であった 
上記と別に N 個の情報が得られた  そのうち i 個目の情報は   座標  x i  y i  の高度は h i である 

この情報は  ピラミッドの中心座標と高さを特定するのに十分であった  情報を手掛かりに  これらの値を求めなさい   

制約

N は 1 以上 100 以下の整数
x i  y i は 0 以上 100 以下の整数
h i は 0 以上 10 9 以下の整数
N 個の座標  x 1  y 1    x 2  y 2    x 3  y 3         x N  y N  はすべて異なる
ピラミッドの中心座標と高さをちょうど 1 つに特定することができる


入力
入力は以下の形式で標準入力から与えられる   
N
x 1 y 1 h 1
x 2 y 2 h 2
x 3 y 3 h 3
 
x N y N h N


出力
特定した中心座標と高さを表す整数 C X  C Y  H を空白区切りで  1 行に出力しなさい   

入力例 14
2 3 5
2 1 5
1 2 5
3 2 5


出力例 12 2 6

この場合  中心座標は  2  2   高さは 6 と特定することができる   

入力例 22
0 0 100
1 1 98


出力例 20 0 100

この場合  中心座標は  0  0   高さは 100 と特定することができる 
C X  C Y が 0 以上 100 以下の整数であると分かっていることに注意せよ   

入力例 33
99 1 191
100 1 192
99 0 192


出力例 3100 0 193

この場合  中心座標は  100  0   高さは 193 と特定することができる   
Problem Statement
In the Ancient Kingdom of Snuke  there was a pyramid to strengthen the authority of Takahashi  the president of AtCoder Inc 
The pyramid had center coordinates  C X  C Y  and height H  The altitude of coordinates  X  Y  is max H    X   C X     Y   C Y   0    
Aoki  an explorer  conducted a survey to identify the center coordinates and height of this pyramid  As a result  he obtained the following information   

C X  C Y was integers between 0 and 100  inclusive   and H was an integer not less than 1   
Additionally  he obtained N pieces of information  The i th of them is   the altitude of point  x i  y i  is h i    

This was enough to identify the center coordinates and the height of the pyramid  Find these values with the clues above   

Constraints

N is an integer between 1 and 100  inclusive  
x i and y i are integers between 0 and 100  inclusive  
h i is an integer between 0 and 10 9  inclusive  
The N coordinates  x 1  y 1    x 2  y 2    x 3  y 3         x N  y N  are all different 
The center coordinates and the height of the pyramid can be uniquely identified 


Input
Input is given from Standard Input in the following format   
N
x 1 y 1 h 1
x 2 y 2 h 2
x 3 y 3 h 3
 
x N y N h N


Output
Print values C X  C Y and H representing the center coordinates and the height of the pyramid in one line  with spaces in between   

Sample Input 14
2 3 5
2 1 5
1 2 5
3 2 5


Sample Output 12 2 6

In this case  the center coordinates and the height can be identified as  2  2  and 6   

Sample Input 22
0 0 100
1 1 98


Sample Output 20 0 100

In this case  the center coordinates and the height can be identified as  0  0  and 100 
Note that C X and C Y are known to be integers between 0 and 100 

Sample Input 33
99 1 191
100 1 192
99 0 192


Sample Output 3100 0 193

In this case  the center coordinates and the height can be identified as  100  0  and 193"
Partition,https://atcoder.jp/contests/abc112/tasks/abc112_d,"問題文整数 N  M が与えられます 
a 1   a 2         a N   M となる正整数からなる長さ N の数列 a において a 1  a 2       a N の最大公約数のとり得る最大値を求めてください 

制約
入力はすべて整数である
1  leq N  leq 10 5
N  leq M  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N M


出力条件を満たす数列 a 1  a 2       a N の最大公約数のとり得る最大値を出力せよ 

入力例 13 14


出力例 12

 a 1  a 2  a 3     2  4  8  としたときこれらの最大公約数が 2 となり最大です 

入力例 210 123


出力例 23


入力例 3100000 1000000000


出力例 310000

Problem StatementYou are given integers N and M 
Consider a sequence a of length N consisting of positive integers such that a 1   a 2         a N   M  Find the maximum possible value of the greatest common divisor of a 1  a 2       a N 

Constraints
All values in input are integers 
1  leq N  leq 10 5
N  leq M  leq 10 9


InputInput is given from Standard Input in the following format 
N M


OutputPrint the maximum possible value of the greatest common divisor of a sequence a 1  a 2       a N that satisfies the condition 

Sample Input 13 14


Sample Output 12

Consider the sequence  a 1  a 2  a 3     2  4  8   Their greatest common divisor is 2  and this is the maximum value 

Sample Input 210 123


Sample Output 23


Sample Input 3100000 1000000000


Sample Output 310000"
Discount Fare,https://atcoder.jp/contests/abc113/tasks/abc113_a,"問題文A 駅と B 駅を結ぶ鉄道があり 運賃は X 円です 
また B 駅と C 駅を結ぶバスがあり 運賃は Y 円です 
joisinoお姉ちゃんは A 駅から B 駅まで鉄道で移動し B 駅から C 駅までバスで移動すると バスの運賃が半額になる特別券を手に入れました 
この特別券を用いたとき A 駅から C 駅まで移動するのにいくらかかるか求めてください 

制約
1  leq X Y  leq 100
Y は偶数
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
X Y


出力A 駅から C 駅まで移動するのに x 円かかるとき x を出力せよ 

入力例 181 58


出力例 1110


鉄道の運賃は 81 円です 
バスの運賃は半額となるため 58   2 29 円です 

よって A 駅から C 駅まで移動するのに 110 円かかります 

入力例 24 54


出力例 231

Problem StatementThere is a train going from Station A to Station B that costs X yen  the currency of Japan  
Also  there is a bus going from Station B to Station C that costs Y yen 
Joisino got a special ticket  With this ticket  she can take the bus for half the fare if she travels from Station A to Station B by train and then travels from Station B to Station C by bus 
How much does it cost to travel from Station A to Station C if she uses this ticket 

Constraints
1  leq X Y  leq 100
Y is an even number 
All values in input are integers 


InputInput is given from Standard Input in the following format 
X Y


OutputIf it costs x yen to travel from Station A to Station C  print x 

Sample Input 181 58


Sample Output 1110


The train fare is 81 yen 
The train fare is 58   2 29 yen with the 50  discount 

Thus  it costs 110 yen to travel from Station A to Station C 

Sample Input 24 54


Sample Output 231"
Palace,https://atcoder.jp/contests/abc113/tasks/abc113_b,"問題文ある国で 宮殿を作ることになりました 
この国では 標高が x メートルの地点での平均気温は T x  times 0 006 度です 
宮殿を建設する地点の候補は N 個あり 地点 i の標高は H i メートルです 
joisinoお姫様は これらの中から平均気温が A 度に最も近い地点を選んで宮殿を建設するようにあなたに命じました 
宮殿を建設すべき地点の番号を出力してください 
ただし 解は一意に定まることが保証されます 

制約
1  leq N  leq 1000
0  leq T  leq 50
 60  leq A  leq T
0  leq H i  leq 10 5
入力は全て整数
解は一意に定まる


入力入力は以下の形式で標準入力から与えられる 
N
T A
H 1 H 2     H N


出力宮殿を建設すべき地点の番号を出力せよ 

入力例 12
12 5
1000 2000


出力例 11


地点 1 の平均気温は 12 1000  times 0 006 6 度です 
地点 2 の平均気温は 12 2000  times 0 006 0 度です 

よって 宮殿を建設すべき地点は地点 1 となります 

入力例 23
21  11
81234 94124 52141


出力例 23

Problem StatementA country decides to build a palace 
In this country  the average temperature of a point at an elevation of x meters is T x  times 0 006 degrees Celsius 
There are N places proposed for the place  The elevation of Place i is H i meters 
Among them  Princess Joisino orders you to select the place whose average temperature is the closest to A degrees Celsius  and build the palace there 
Print the index of the place where the palace should be built 
It is guaranteed that the solution is unique 

Constraints
1  leq N  leq 1000
0  leq T  leq 50
 60  leq A  leq T
0  leq H i  leq 10 5
All values in input are integers 
The solution is unique 


InputInput is given from Standard Input in the following format 
N
T A
H 1 H 2     H N


OutputPrint the index of the place where the palace should be built 

Sample Input 12
12 5
1000 2000


Sample Output 11


The average temperature of Place 1 is 12 1000  times 0 006 6 degrees Celsius 
The average temperature of Place 2 is 12 2000  times 0 006 0 degrees Celsius 

Thus  the palace should be built at Place 1 

Sample Input 23
21  11
81234 94124 52141


Sample Output 23"
ID,https://atcoder.jp/contests/abc113/tasks/abc113_c,"問題文Atcoder国には N 個の県があり これらの県には合計で M 個の市が属しています 
市 i が誕生したのは Y i 年であり 県 P i に属しています 
ただし 同じ年に誕生した市が複数存在することはないとします 
それぞれの市に 12 桁の認識番号を割り振ることとなりました 
市 i が 県 P i に属する市の中で x 番目に誕生した市のとき 市 i の認識番号の上 6 桁は P i 下 6 桁は x となります 
ただし P i や x が 6 桁に満たない場合は 6 桁になるまで 0 を左に追加するものとします 
全ての市の認識番号を求めてください 
ただし 市が 1 つも属さない県がある場合に注意してください 

制約
1  leq N  leq 10 5
1  leq M  leq 10 5
1  leq P i  leq N
1  leq Y i  leq 10 9
Y i は全て異なる
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N M
P 1 Y 1
 
P M Y M


出力全ての市の認識番号を市の番号の昇順に出力せよ 

入力例 12 3
1 32
2 63
1 12


出力例 1000001000002
000002000001
000001000001


市 1 は県 1 に属する市の中で 2 番目に誕生したので 認識番号は 000001000002 となります 
市 2 は県 2 に属する市の中で 1 番目に誕生したので 認識番号は 000002000001 となります 
市 3 は県 1 に属する市の中で 1 番目に誕生したので 認識番号は 000001000001 となります 


入力例 22 3
2 55
2 77
2 99


出力例 2000002000001
000002000002
000002000003

Problem StatementIn Republic of Atcoder  there are N prefectures  and a total of M cities that belong to those prefectures 
City i is established in year Y i and belongs to Prefecture P i 
You can assume that there are no multiple cities that are established in the same year 
It is decided to allocate a 12 digit ID number to each city 
If City i is the x th established city among the cities that belong to Prefecture i  the first six digits of the ID number of City i is P i  and the last six digits of the ID number is x 
Here  if P i or x  or both  has less than six digits  zeros are added to the left until it has six digits 
Find the ID numbers for all the cities 
Note that there can be a prefecture with no cities 

Constraints
1  leq N  leq 10 5
1  leq M  leq 10 5
1  leq P i  leq N
1  leq Y i  leq 10 9
Y i are all different 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N M
P 1 Y 1
 
P M Y M


OutputPrint the ID numbers for all the cities  in ascending order of indices  City 1  City 2       

Sample Input 12 3
1 32
2 63
1 12


Sample Output 1000001000002
000002000001
000001000001


As City 1 is the second established city among the cities that belong to Prefecture 1  its ID number is 000001000002 
As City 2 is the first established city among the cities that belong to Prefecture 2  its ID number is 000002000001 
As City 3 is the first established city among the cities that belong to Prefecture 1  its ID number is 000001000001 


Sample Input 22 3
2 55
2 77
2 99


Sample Output 2000002000001
000002000002
000002000003"
Number of Amidakuji,https://atcoder.jp/contests/abc113/tasks/abc113_d,"問題文あみだくじは  日本に古くから伝わる伝統的なくじ引きである 
あみだくじを作るには  まず W 本の平行な縦線を引き  次にそれらを繋ぐ横線を引いていく  それぞれの縦棒の長さは H 1  cm  であり 横線の端点となれるのは上から 1 2 3     H  cm  の位置のみである 
ここで  正しいあみだくじ とは  以下のような条件を満たすあみだくじのことである 

どの 2 つの横棒も端点を共有しない 
それぞれの横棒の 2 つの端点は同じ高さになければならない 
横棒は隣り合う縦線を繋がなければならない 


縦棒 1 の上端から  横線があれば必ずそれを通るというルールで下へたどったときに  最終的にたどり着く縦棒の番号が K となるような 正しいあみだくじ の本数を 1  000  000  007 で割った余りを求めなさい 
例として  以下のあみだくじにおいて  最終的にたどり着く縦棒の番号は 4 である 


制約
H は 1 以上 100 以下の整数
W は 1 以上 8 以下の整数
K は 1 以上 W 以下の整数


入力入力は以下の形式で標準入力から与えられる 
H W K


出力条件を満たすあみだくじの本数を 1  000  000  007 で割った余りを出力しなさい 

入力例 11 3 2


出力例 11

以下の 1 個のあみだくじのみが条件を満たす 


入力例 21 3 1


出力例 22

以下の 2 個のあみだくじのみが条件を満たす 


入力例 32 3 3


出力例 31

以下の 1 個のあみだくじのみが条件を満たす 


入力例 42 3 1


出力例 45

以下の 5 個のあみだくじのみが条件を満たす 


入力例 57 1 1


出力例 51

縦線が 1 本しかないので  横線をそもそも引くことができない  よって条件を満たすあみだくじは 一本も横線を引かない の 1 通りしかない 

入力例 615 8 5


出力例 6437760187

答えを 1  000  000  007 で割った余りを出力すること 
Problem StatementAmidakuji is a traditional method of lottery in Japan 
To make an amidakuji  we first draw W parallel vertical lines  and then draw horizontal lines that connect them  The length of each vertical line is H 1  cm   and the endpoints of the horizontal lines must be at 1  2  3       or H  cm  from the top of a vertical line 
A valid amidakuji is an amidakuji that satisfies the following conditions 

No two horizontal lines share an endpoint 
The two endpoints of each horizontal lines must be at the same height 
A horizontal line must connect adjacent vertical lines 


Find the number of the valid amidakuji that satisfy the following condition  modulo 1  000  000  007  if we trace the path from the top of the leftmost vertical line to the bottom  always following horizontal lines when we encounter them  we reach the bottom of the K th vertical line from the left 
For example  in the following amidakuji  we will reach the bottom of the fourth vertical line from the left 


Constraints
H is an integer between 1 and 100  inclusive  
W is an integer between 1 and 8  inclusive  
K is an integer between 1 and W  inclusive  


InputInput is given from Standard Input in the following format 
H W K


OutputPrint the number of the amidakuji that satisfy the condition  modulo 1  000  000  007 

Sample Input 11 3 2


Sample Output 11

Only the following one amidakuji satisfies the condition 


Sample Input 21 3 1


Sample Output 22

Only the following two amidakuji satisfy the condition 


Sample Input 32 3 3


Sample Output 31

Only the following one amidakuji satisfies the condition 


Sample Input 42 3 1


Sample Output 45

Only the following five amidakuji satisfy the condition 


Sample Input 57 1 1


Sample Output 51

As there is only one vertical line  we cannot draw any horizontal lines  Thus  there is only one amidakuji that satisfies the condition  the amidakuji with no horizontal lines 

Sample Input 615 8 5


Sample Output 6437760187

Be sure to print the answer modulo 1  000  000  007"
753,https://atcoder.jp/contests/abc114/tasks/abc114_a,"問題文七五三とは 7 歳 5 歳そして 3 歳の子どもの成長を祝うとある国の行事です 
いま 高橋くんは X 歳です 今回の七五三で 高橋くんの成長は祝われるでしょうか 

制約
1   X   9
X は整数である 


入力入力は以下の形式で標準入力から与えられる 
X


出力高橋くんの成長が祝われるなら YES  祝われないなら NO と出力せよ 

入力例 15


出力例 1YES

5 歳の子どもの成長は祝われます 

入力例 26


出力例 2NO

また来年 
Problem StatementShichi Go San  literally  Seven Five Three   is a traditional event in a certain country to celebrate the growth of seven   five  and three year old children 
Takahashi is now X years old  Will his growth be celebrated in Shichi Go San this time 

Constraints
1   X   9
X is an integer 


InputInput is given from Standard Input in the following format 
X


OutputIf Takahashi s growth will be celebrated  print YES  if it will not  print NO 

Sample Input 15


Sample Output 1YES

The growth of a five year old child will be celebrated 

Sample Input 26


Sample Output 2NO

See you next year"
754,https://atcoder.jp/contests/abc114/tasks/abc114_b,"問題文数字 1  2       9 からなる文字列 S があります 
ダックスフンドのルンルンは S から連続する 3 個の数字を取り出し 
1 つの整数 X としてご主人様の元に持っていきます  数字の順番を変えることはできません  
ご主人様が大好きな数は 753 で これに近い数ほど好きです 
X と 753 の差 の絶対値 は最小でいくつになるでしょうか 

制約
S は長さ 4 以上 10 以下の文字列である 
S の各文字は 1  2       9 のいずれかである 


入力入力は以下の形式で標準入力から与えられる 
S


出力X と 753 の差としてありうる最小値を出力せよ 

入力例 11234567876


出力例 134

7 文字目から 9 文字目までを取り出すと X   787 となり これと 753 との差は 787   753   34 です X をどこから取り出しても 差をより小さくすることはできません 
なお 数字の順番を変えることはできません 例えば 567 を取り出して 765 に並び変えてはいけません 
また S から連続していない 3 文字を取り出すこともできません 例えば 7 文字目の 7 9 文字目の 7 と 10 文字目の 6 を取り出して 776 としてはいけません 

入力例 235753


出力例 20

753 そのものを取り出すことができる場合 答えは 0 です 

入力例 31111111111


出力例 3642

どこから 3 文字を取り出しても X   111 となり 差は 753   111   642 です 
Problem StatementThere is a string S consisting of digits 1  2       9 
Lunlun  the Dachshund  will take out three consecutive digits from S  treat them as a single integer X and bring it to her master   She cannot rearrange the digits  
The master s favorite number is 753  The closer to this number  the better 
What is the minimum possible  absolute  difference between X and 753 

Constraints
S is a string of length between 4 and 10  inclusive  
Each character in S is 1  2       or 9 


InputInput is given from Standard Input in the following format 
S


OutputPrint the minimum possible difference between X and 753 

Sample Input 11234567876


Sample Output 134

Taking out the seventh to ninth characters results in X   787  and the difference between this and 753 is 787   753   34  The difference cannot be made smaller  no matter where X is taken from 
Note that the digits cannot be rearranged  For example  taking out 567 and rearranging it to 765 is not allowed 
We cannot take out three digits that are not consecutive from S  either  For example  taking out the seventh digit 7  the ninth digit 7 and the tenth digit 6 to obtain 776 is not allowed 

Sample Input 235753


Sample Output 20

If 753 itself can be taken out  the answer is 0 

Sample Input 31111111111


Sample Output 3642

No matter where X is taken from  X   111  with the difference 753   111   642"
755,https://atcoder.jp/contests/abc114/tasks/abc114_c,"問題文整数 N が与えられます 1 以上 N 以下の整数のうち 七五三数 は何個あるでしょうか 
ここで 七五三数とは以下の条件を満たす正の整数です 

十進法で表記したとき 数字 7  5  3 がそれぞれ 1 回以上現れ これら以外の数字は現れない 


制約
1  leq N   10 9
N は整数である 


入力入力は以下の形式で標準入力から与えられる 
N


出力1 以上 N 以下の七五三数の個数を出力せよ 

入力例 1575


出力例 14

575 以下の七五三数は 357  375  537  573 の 4 個です 

入力例 23600


出力例 213

3600 以下の七五三数は 上記の 4 個と 735  753  3357  3375  3537  3557  3573  3575  3577 の計 13 個です 

入力例 3999999999


出力例 326484

Problem StatementYou are given an integer N  Among the integers between 1 and N  inclusive   how many Shichi Go San numbers  literally  Seven Five Three numbers   are there 
Here  a Shichi Go San number is a positive integer that satisfies the following condition 

When the number is written in base ten  each of the digits 7  5 and 3 appears at least once  and the other digits never appear 


Constraints
1  leq N   10 9
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputPrint the number of the Shichi Go San numbers between 1 and N  inclusive  

Sample Input 1575


Sample Output 14

There are four Shichi Go San numbers not greater than 575  357  375  537 and 573 

Sample Input 23600


Sample Output 213

There are 13 Shichi Go San numbers not greater than 3600  the above four numbers  735  753  3357  3375  3537  3557  3573  3575 and 3577 

Sample Input 3999999999


Sample Output 326484"
756,https://atcoder.jp/contests/abc114/tasks/abc114_d,"問題文整数 N が与えられます N     1  times 2  times      times N  の約数のうち 七五数 は何個あるでしょうか 
ここで 七五数とは約数をちょうど 75 個持つ正の整数です 

注記正の整数 A が正の整数 B を割り切るとき A を B の 約数 といいます 
例えば 6 の約数は 1 2 3 6 の 4 個です 

制約
1  leq N  leq 100
N は整数である 


入力入力は以下の形式で標準入力から与えられる 
N


出力N  の約数であるような七五数の個数を出力せよ 

入力例 19


出力例 10

9    1  times 2  times      times 9   362880 の約数に七五数はありません 

入力例 210


出力例 21

10    3628800 の約数のうち 七五数であるのは 32400 の 1 個です 

入力例 3100


出力例 3543

Problem StatementYou are given an integer N  Among the divisors of N     1  times 2  times      times N   how many Shichi Go numbers  literally  Seven Five numbers   are there 
Here  a Shichi Go number is a positive integer that has exactly 75 divisors 

NoteWhen a positive integer A divides a positive integer B  A is said to a divisor of B 
For example  6 has four divisors  1  2  3 and 6 

Constraints
1  leq N  leq 100
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputPrint the number of the Shichi Go numbers that are divisors of N  

Sample Input 19


Sample Output 10

There are no Shichi Go numbers among the divisors of 9    1  times 2  times      times 9   362880 

Sample Input 210


Sample Output 21

There is one Shichi Go number among the divisors of 10    3628800  32400 

Sample Input 3100


Sample Output 3543"
Christmas Eve Eve Eve,https://atcoder.jp/contests/abc115/tasks/abc115_a,"問題文とある世界では 今日は 12 月 D 日です 
D   25 なら Christmas  D   24 なら Christmas Eve  D   23 なら Christmas Eve Eve  D   22 なら Christmas Eve Eve Eve と出力するプログラムを作ってください 

制約
22  leq D  leq 25
D は整数である 


入力入力は以下の形式で標準入力から与えられる 
D


出力指定された文字列を出力せよ  大文字と小文字は区別される  

入力例 125


出力例 1Christmas


入力例 222


出力例 2Christmas Eve Eve Eve

単語と単語の間のスペースも出力してください 
Problem StatementIn some other world  today is December D th 
Write a program that prints Christmas if D   25  Christmas Eve if D   24  Christmas Eve Eve if D   23 and Christmas Eve Eve Eve if D   22 

Constraints
22  leq D  leq 25
D is an integer 


InputInput is given from Standard Input in the following format 
D


OutputPrint the specified string  case sensitive  

Sample Input 125


Sample Output 1Christmas


Sample Input 222


Sample Output 2Christmas Eve Eve Eve

Be sure to print spaces between the words"
Christmas Eve Eve,https://atcoder.jp/contests/abc115/tasks/abc115_b,"問題文とある世界では 今日はクリスマスイブの前日です 
高羽氏は デパートで N 個の品物を買おうとしています i 個目の品物  1  leq i  leq N  の定価は p i 円です 
彼は割引券を持っており N 個のうち最も定価が高い品物 1 個を定価の半額で買うことができます 残りの N 1 個の品物に対しては定価を支払います 支払金額は合計でいくらになるでしょうか 

制約
2  leq N  leq 10
100  leq p i  leq 10000
p i は偶数である 


入力入力は以下の形式で標準入力から与えられる 
N
p 1
p 2
 
p N


出力合計支払金額を  整数として  出力せよ 

入力例 13
4980
7980
6980


出力例 115950

7980 円の品物が半額になり 合計 4980   7980   2   6980   15950 円です 
15950 0 などと出力すると Wrong Answer と判定されるので注意してください 

入力例 24
4320
4320
4320
4320


出力例 215120

4 個の品物のうち 1 個だけが半額になり 合計 4320   2   4320   4320   4320   15120 円です 
Problem StatementIn some other world  today is the day before Christmas Eve 
Mr  Takaha is buying N items at a department store  The regular price of the i th item  1  leq i  leq N  is p i yen  the currency of Japan  
He has a discount coupon  and can buy one item with the highest price for half the regular price  The remaining N 1 items cost their regular prices  What is the total amount he will pay 

Constraints
2  leq N  leq 10
100  leq p i  leq 10000
p i is an even number 


InputInput is given from Standard Input in the following format 
N
p 1
p 2
 
p N


OutputPrint the total amount Mr  Takaha will pay 

Sample Input 13
4980
7980
6980


Sample Output 115950

The 7980 yen item gets the discount and the total is 4980   7980   2   6980   15950 yen 
Note that outputs such as 15950 0 will be judged as Wrong Answer 

Sample Input 24
4320
4320
4320
4320


Sample Output 215120

Only one of the four items gets the discount and the total is 4320   2   4320   4320   4320   15120 yen"
Christmas Eve,https://atcoder.jp/contests/abc115/tasks/abc115_c,"問題文とある世界では 今日はクリスマスイブです 
高羽氏の庭には N 本の木が植えられています i 本目の木  1  leq i  leq N  の高さは h i メートルです 
彼は これらの木のうち K 本を選んで電飾を施すことにしました より美しい光景をつくるために できるだけ近い高さの木を飾り付けたいです 
より具体的には 飾り付ける木のうち最も高いものの高さを h  max  メートル 最も低いものの高さを h  min  メートルとすると h  max    h  min  が小さいほど好ましいです h  max    h  min  は最小でいくつにすることができるでしょうか 

制約
2  leq K   N  leq 10 5
1  leq h i  leq 10 9
h i は整数である 


入力入力は以下の形式で標準入力から与えられる 
N K
h 1
h 2
 
h N


出力h  max    h  min  としてありうる最小の値を出力せよ 

入力例 15 3
10
15
11
14
12


出力例 12

1  3  5 本目の木を飾り付けると h  max    12  h  min    10 となり h  max    h  min    2 で これが最適です 

入力例 25 3
5
7
5
7
7


出力例 20

2  4  5 本目の木を飾り付けると h  max    7  h  min    7 となり h  max    h  min    0 で これが最適です 
これらの入力例では木の数がそれほど多くありませんが 最大で 10 万本の木がある可能性に注意してください  ここに 10 万行の入力例を貼るわけにはいかないのです  
Problem StatementIn some other world  today is Christmas Eve 
There are N trees planted in Mr  Takaha s garden  The height of the i th tree  1  leq i  leq N  is h i meters 
He decides to choose K trees from these trees and decorate them with electric lights  To make the scenery more beautiful  the heights of the decorated trees should be as close to each other as possible 
More specifically  let the height of the tallest decorated tree be h  max  meters  and the height of the shortest decorated tree be h  min  meters  The smaller the value h  max    h  min  is  the better  What is the minimum possible value of h  max    h  min  

Constraints
2  leq K   N  leq 10 5
1  leq h i  leq 10 9
h i is an integer 


InputInput is given from Standard Input in the following format 
N K
h 1
h 2
 
h N


OutputPrint the minimum possible value of h  max    h  min  

Sample Input 15 3
10
15
11
14
12


Sample Output 12

If we decorate the first  third and fifth trees  h  max    12  h  min    10 so h  max    h  min    2  This is optimal 

Sample Input 25 3
5
7
5
7
7


Sample Output 20

If we decorate the second  fourth and fifth trees  h  max    7  h  min    7 so h  max    h  min    0  This is optimal 
There are not too many trees in these sample inputs  but note that there can be at most one hundred thousand trees  we just can t put a sample with a hundred thousand lines here"
Christmas,https://atcoder.jp/contests/abc115/tasks/abc115_d,"問題文とある世界では 今日はクリスマスです 
高羽氏のパーティで 彼は多次元バーガーを作ることにしました レベル L バーガー  L は 0 以上の整数  とは次のようなものです 

レベル 0 バーガーとは パティ 1 枚である 
レベル L バーガー  L  geq 1  とは バン 1 枚 レベル L 1 バーガー パティ 1 枚 レベル L 1 バーガー バン 1 枚 をこの順に下から積み重ねたものである 

例えば パティを P バンを B で表すと レベル 1 バーガーは BPPPB  を 90 度回転したもの  レベル 2 バーガーは BBPPPBPBPPPBB といった見た目になります 
高羽氏が作るのはレベル N バーガーです ダックスフンドのルンルンは このバーガーの下から X 層を食べます  パティまたはバン 1 枚を 1 層とします  ルンルンはパティを何枚食べるでしょうか 

制約
1  leq N  leq 50
1  leq X  leq   レベル N バーガーの層の総数  
N  X は整数である 


入力入力は以下の形式で標準入力から与えられる 
N X


出力レベル N バーガーの下から X 層に含まれるパティの枚数を出力せよ 

入力例 12 7


出力例 14

レベル 2 バーガー  BBPPPBPBPPPBB  の下から 7 層にはパティが 4 枚含まれます 

入力例 21 1


出力例 20

レベル 1 バーガーの一番下の層はバンです 

入力例 350 4321098765432109


出力例 32160549382716056

レベル 50 バーガーは層の数が 32 ビット整数に収まらない程度に分厚いです 
Problem StatementIn some other world  today is Christmas 
Mr  Takaha decides to make a multi dimensional burger in his party  A level L burger  L is an integer greater than or equal to 0  is the following thing 

A level 0 burger is a patty 
A level L burger  L  geq 1  is a bun  a level  L 1  burger  a patty  another level  L 1  burger and another bun  stacked vertically in this order from the bottom 

For example  a level 1 burger and a level 2 burger look like BPPPB and BBPPPBPBPPPBB  rotated 90 degrees   where B and P stands for a bun and a patty 
The burger Mr  Takaha will make is a level N burger  Lunlun the Dachshund will eat X layers from the bottom of this burger  a layer is a patty or a bun   How many patties will she eat 

Constraints
1  leq N  leq 50
1  leq X  leq   the total number of layers in a level N burger  
N and X are integers 


InputInput is given from Standard Input in the following format 
N X


OutputPrint the number of patties in the bottom most X layers from the bottom of a level N burger 

Sample Input 12 7


Sample Output 14

There are 4 patties in the bottom most 7 layers of a level 2 burger  BBPPPBPBPPPBB  

Sample Input 21 1


Sample Output 20

The bottom most layer of a level 1 burger is a bun 

Sample Input 350 4321098765432109


Sample Output 32160549382716056

A level 50 burger is rather thick  to the extent that the number of its layers does not fit into a 32 bit integer"
Right Triangle,https://atcoder.jp/contests/abc116/tasks/abc116_a,"問題文直角三角形 ABC があります  ABC 90  です 
三角形 ABC の三辺の長さである  AB   BC   CA  が与えられるので 直角三角形 ABC の面積を求めて下さい 
ただし 三角形 ABC の面積は整数となることが保証されています 

制約
1  leqq  AB   BC   CA   leqq 100
入力はすべて整数である 
三角形 ABC の面積は整数である 


入力入力は以下の形式で標準入力から与えられます 
 AB   BC   CA 


出力三角形 ABC の面積を出力してください 

入力例 13 4 5


出力例 16


この三角形の面積は 6 です 

入力例 25 12 13


出力例 230

この三角形の面積は 30 です 

入力例 345 28 53


出力例 3630

この三角形の面積は 630 です 
Problem StatementThere is a right triangle ABC with  ABC 90  
Given the lengths of the three sides   AB   BC  and  CA   find the area of the right triangle ABC 
It is guaranteed that the area of the triangle ABC is an integer 

Constraints
1  leq  AB   BC   CA   leq 100
All values in input are integers 
The area of the triangle ABC is an integer 


InputInput is given from Standard Input in the following format 
 AB   BC   CA 


OutputPrint the area of the triangle ABC 

Sample Input 13 4 5


Sample Output 16


This triangle has an area of 6 

Sample Input 25 12 13


Sample Output 230

This triangle has an area of 30 

Sample Input 345 28 53


Sample Output 3630

This triangle has an area of 630"
Collatz Problem,https://atcoder.jp/contests/abc116/tasks/abc116_b,"問題文数列 a   a 1 a 2 a 3          は 以下のようにして定まります 


初項 s は入力で与えられる 


関数 f n  を以下のように定める  n が偶数なら f n    n 2 n が奇数なら f n    3n 1 


i   1 のとき a i   s i   1 のとき a i   f a  i 1   である 


このとき 次の条件を満たす最小の整数 m を求めてください 

a m   a n  m   n  を満たす整数 n が存在する 


制約
1  leqq s  leqq 100
入力はすべて整数である 
a のすべての要素 および条件を満たす最小の m は 1000000 以下となることが保証される 


入力入力は以下の形式で標準入力から与えられます 
s


出力条件を満たす最小の整数 m を出力してください 

入力例 18


出力例 15

a   8 4 2 1 4 2 1 4 2 1          です a 5 a 2 なので 答えは 5 です 

入力例 27


出力例 218

a   7 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1 4 2 1          です 

入力例 354


出力例 3114

Problem StatementA sequence a   a 1 a 2 a 3          is determined as follows 


The first term s is given as input 


Let f n  be the following function  f n    n 2 if n is even  and f n    3n 1 if n is odd 


a i   s when i   1  and a i   f a  i 1   when i   1 


Find the minimum integer m that satisfies the following condition 

There exists an integer n such that a m   a n  m   n  


Constraints
1  leq s  leq 100
All values in input are integers 
It is guaranteed that all elements in a and the minimum m that satisfies the condition are at most 1000000 


InputInput is given from Standard Input in the following format 
s


OutputPrint the minimum integer m that satisfies the condition 

Sample Input 18


Sample Output 15

a   8 4 2 1 4 2 1 4 2 1           As a 5 a 2  the answer is 5 

Sample Input 27


Sample Output 218

a   7 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1 4 2 1          

Sample Input 354


Sample Output 3114"
Grand Garden,https://atcoder.jp/contests/abc116/tasks/abc116_c,"問題文花壇に N 本の花が咲いており それぞれ 1 2        N と番号が振られています 最初 全ての花の高さは 0 です 
数列 h   h 1 h 2 h 3          が入力として与えられます 以下の 水やり 操作を繰り返すことで すべての k 1  leqq  k  leqq N  に対して花 k の高さを h k にしたいです 

整数 l r を指定する l  leqq x  leqq r を満たすすべての x に対して 花 x の高さを 1 高くする 

条件を満たすための最小の 水やり 操作の回数を求めてください 

制約
1  leqq N   leqq 100
0  leqq h i  leqq 100
入力はすべて整数である 


入力入力は以下の形式で標準入力から与えられます 
N
h 1 h 2 h 3        h N


出力条件を満たすような最小の 水やり 操作の回数を出力してください 

入力例 14
1 2 2 1


出力例 12

 水やり 操作の回数は 2 回が最小です 
以下が一つの例です 

 l r   1 3  の 水やり 操作を行う 
 l r   2 4  の 水やり 操作を行う 


入力例 25
3 1 2 3 1


出力例 25


入力例 38
4 23 75 0 23 96 50 100


出力例 3221

Problem StatementIn a flower bed  there are N flowers  numbered 1 2        N  Initially  the heights of all flowers are 0 
You are given a sequence h   h 1 h 2 h 3          as input  You would like to change the height of Flower k to h k for all k  1  leq  k  leq N   by repeating the following  watering  operation 

Specify integers l and r  Increase the height of Flower x by 1 for all x such that l  leq x  leq r 

Find the minimum number of watering operations required to satisfy the condition 

Constraints
1  leq N   leq 100
0  leq h i  leq 100
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
h 1 h 2 h 3        h N


OutputPrint the minimum number of watering operations required to satisfy the condition 

Sample Input 14
1 2 2 1


Sample Output 12

The minimum number of watering operations required is 2 
One way to achieve it is 

Perform the operation with  l r   1 3  
Perform the operation with  l r   2 4  


Sample Input 25
3 1 2 3 1


Sample Output 25


Sample Input 38
4 23 75 0 23 96 50 100


Sample Output 3221"
Various Sushi,https://atcoder.jp/contests/abc116/tasks/abc116_d,"問題文N 個の寿司があり それぞれの寿司には ネタ t i と おいしさ d i のパラメータが設定されています 
あなたはこの N 個の寿司の中から K 個を選んで食べようとしています 
この時のあなたの 満足ポイント は 以下のようにして計算されます 

 満足ポイント は  おいしさ基礎ポイント と  種類ボーナスポイント の和である 
 おいしさ基礎ポイント は 食べた寿司の おいしさ の総和である 
 種類ボーナスポイント は 食べた寿司の ネタ の種類数を x としたとき x x である 

あなたは  満足ポイント をできるだけ大きくしたいです 
この時の 満足ポイント の値を求めてください 

制約
1  leqq K  leqq N   leqq 10 5
1  leqq t i  leqq N
1  leqq d i  leqq 10 9
入力はすべて整数である 


入力入力は以下の形式で標準入力から与えられます 
N K
t 1 d 1
t 2 d 2
 
 
 
t N d N


出力あなたの得られる 満足ポイント の最大値を出力してください 

入力例 15 3
1 9
1 7
2 6
2 5
3 1


出力例 126

寿司 1 2 3 を食べた時 

 おいしさ基礎ポイント は 9 7 6 22
 種類ボーナスポイント は 2 2 4

で 得られる 満足ポイント は 26 となり これが最適です 

入力例 27 4
1 1
2 1
3 1
4 6
4 5
4 5
4 5


出力例 225

寿司 1 2 3 4 を食べるのが最適です 

入力例 36 5
5 1000000000
2 990000000
3 980000000
6 970000000
6 960000000
4 950000000


出力例 34900000016

出力が 32 bit型整数に収まらない場合もあることに注意して下さい 
Problem StatementThere are N pieces of sushi  Each piece has two parameters   kind of topping  t i and  deliciousness  d i 
You are choosing K among these N pieces to eat 
Your  satisfaction  here will be calculated as follows 

The satisfaction is the sum of the  base total deliciousness  and the  variety bonus  
The base total deliciousness is the sum of the deliciousness of the pieces you eat 
The variety bonus is x x  where x is the number of different kinds of toppings of the pieces you eat 

You want to have as much satisfaction as possible 
Find this maximum satisfaction 

Constraints
1  leq K  leq N   leq 10 5
1  leq t i  leq N
1  leq d i  leq 10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
N K
t 1 d 1
t 2 d 2
 
 
 
t N d N


OutputPrint the maximum satisfaction that you can obtain 

Sample Input 15 3
1 9
1 7
2 6
2 5
3 1


Sample Output 126

If you eat Sushi 1 2 and 3 

The base total deliciousness is 9 7 6 22 
The variety bonus is 2 2 4 

Thus  your satisfaction will be 26  which is optimal 

Sample Input 27 4
1 1
2 1
3 1
4 6
4 5
4 5
4 5


Sample Output 225

It is optimal to eat Sushi 1 2 3 and 4 

Sample Input 36 5
5 1000000000
2 990000000
3 980000000
6 970000000
6 960000000
4 950000000


Sample Output 34900000016

Note that the output may not fit into a 32 bit integer type"
Entrance Examination,https://atcoder.jp/contests/abc117/tasks/abc117_a,"問題文明日の入学試験に合格するために 太郎くんはあと T 時間の勉強をする必要があります 
幸いにも 彼は今いる世界 世界A の X 倍の速度で時間が進む世界Bへ世界跳躍 ワールドリープ することができます 
世界Bで  X  times t  時間進むと 世界Aでは t 時間進みます 
世界Bで T 時間勉強したとき 世界Aでは何時間進んでいるでしょうか 

制約
入力は全て整数である 
1  leq T  leq 100
1  leq X  leq 100


入力入力は以下の形式で標準入力から与えられる 
T X


出力世界Aでは何時間進んでいるかを出力せよ 
なお 想定解答との絶対誤差または相対誤差が 10   3  以下であれば正解として扱われる 

入力例 18 3


出力例 12 6666666667

3 倍の速度で時間が進む世界Bで 8 時間勉強すると世界Aでは 2 6666    時間進んでいます 
10   3  以下の絶対誤差 相対誤差が許容されることに注意してください 

入力例 299 1


出力例 299 0000000000


入力例 31 100


出力例 30 0100000000

Problem StatementIn order to pass the entrance examination tomorrow  Taro has to study for T more hours 
Fortunately  he can leap to World B where time passes X times as fast as it does in our world  World A  
While  X  times t  hours pass in World B  t hours pass in World A 
How many hours will pass in World A while Taro studies for T hours in World B 

Constraints
All values in input are integers 
1  leq T  leq 100
1  leq X  leq 100


InputInput is given from Standard Input in the following format 
T X


OutputPrint the number of hours that will pass in World A 
The output will be regarded as correct when its absolute or relative error from the judge s output is at most 10   3  

Sample Input 18 3


Sample Output 12 6666666667

While Taro studies for eight hours in World B where time passes three times as fast  2 6666    hours will pass in World A 
Note that an absolute or relative error of at most 10   3  is allowed 

Sample Input 299 1


Sample Output 299 0000000000


Sample Input 31 100


Sample Output 30 0100000000"
Polygon,https://atcoder.jp/contests/abc117/tasks/abc117_b,"問題文2 次元平面上に辺の長さがそれぞれ L 1  L 2       L N の N 角形 凸多角形でなくてもよい が描けるかを判定してください 
ここで 次の定理を利用しても構いません 
定理   一番長い辺が他の N 1 辺の長さの合計よりも真に短い場合に限り 条件を満たす N 角形が描ける 

制約
入力は全て整数である 
3  leq N  leq 10
1  leq L i  leq 100


入力入力は以下の形式で標準入力から与えられる 
N
L 1 L 2     L N


出力条件を満たす N 角形が描けるなら Yes そうでないなら No を出力せよ 

入力例 14
3 8 5 1


出力例 1Yes

8   9   3   5   1 なので 定理より 2 次元平面上に条件を満たす N 角形が描けます 

入力例 24
3 8 4 1


出力例 2No

8  geq 8   3   4   1 なので 定理より 2 次元平面上に条件を満たす N 角形は描けません 

入力例 310
1 8 10 5 8 12 34 100 11 3


出力例 3No

Problem StatementDetermine if an N sided polygon  not necessarily convex  with sides of length L 1  L 2       L N can be drawn in a two dimensional plane 
You can use the following theorem 
Theorem  an N sided polygon satisfying the condition can be drawn if and only if the longest side is strictly shorter than the sum of the lengths of the other N 1 sides 

Constraints
All values in input are integers 
3  leq N  leq 10
1  leq L i  leq 100


InputInput is given from Standard Input in the following format 
N
L 1 L 2     L N


OutputIf an N sided polygon satisfying the condition can be drawn  print Yes  otherwise  print No 

Sample Input 14
3 8 5 1


Sample Output 1Yes

Since 8   9   3   5   1  it follows from the theorem that such a polygon can be drawn on a plane 

Sample Input 24
3 8 4 1


Sample Output 2No

Since 8  geq 8   3   4   1  it follows from the theorem that such a polygon cannot be drawn on a plane 

Sample Input 310
1 8 10 5 8 12 34 100 11 3


Sample Output 3No"
Streamline,https://atcoder.jp/contests/abc117/tasks/abc117_c,"問題文数直線と N 個のコマを用いて 1 人でゲームを行います 
はじめ これらのコマをそれぞれ好きな整数座標に置きます 
このとき 同じ座標に複数のコマを置いても構いません 
以下の移動を繰り返して 座標 X 1  X 2       X M の M 個の地点全てをいずれかのコマで訪れることが目的です 
移動  コマを 1 つ選び そのコマの座標を x とする そのコマを座標 x 1 もしくは座標 x 1 に移動する 
ただし 最初にコマを置いた座標はその時点で訪れたとみなします 
目的を達成するまでに移動を行う回数の最小値を求めてください 

制約
入力はすべて整数である 
1  leq N  leq 10 5
1  leq M  leq 10 5
 10 5  leq X i  leq 10 5
X 1  X 2       X M は全て異なる 


入力入力は以下の形式で標準入力から与えられる 
N M
X 1 X 2     X M


出力目的を達成するまでに移動を行う回数の最小値を出力せよ 

入力例 12 5
10 12 1 2 14


出力例 15

以下の手順で 5 回移動を行うと目的を達成でき このときが最小です 

はじめに 2 個のコマをそれぞれ座標 1  座標 10 に置きます 
座標 1 のコマを座標 2 に移動します 
座標 10 のコマを座標 11 に移動します 
座標 11 のコマを座標 12 に移動します 
座標 12 のコマを座標 13 に移動します 
座標 13 のコマを座標 14 に移動します 


入力例 23 7
 10  3 0 9  100 2 17


出力例 219


入力例 3100 1
 100000


出力例 30

Problem StatementWe will play a one player game using a number line and N pieces 
First  we place each of these pieces at some integer coordinate 
Here  multiple pieces can be placed at the same coordinate 
Our objective is to visit all of the M coordinates X 1  X 2       X M with these pieces  by repeating the following move 
Move  Choose a piece and let x be its coordinate  Put that piece at coordinate x 1 or x 1 
Note that the coordinates where we initially place the pieces are already regarded as visited 
Find the minimum number of moves required to achieve the objective 

Constraints
All values in input are integers 
1  leq N  leq 10 5
1  leq M  leq 10 5
 10 5  leq X i  leq 10 5
X 1  X 2       X M are all different 


InputInput is given from Standard Input in the following format 
N M
X 1 X 2     X M


OutputFind the minimum number of moves required to achieve the objective 

Sample Input 12 5
10 12 1 2 14


Sample Output 15

The objective can be achieved in five moves as follows  and this is the minimum number of moves required 

Initially  put the two pieces at coordinates 1 and 10 
Move the piece at coordinate 1 to 2 
Move the piece at coordinate 10 to 11 
Move the piece at coordinate 11 to 12 
Move the piece at coordinate 12 to 13 
Move the piece at coordinate 13 to 14 


Sample Input 23 7
 10  3 0 9  100 2 17


Sample Output 219


Sample Input 3100 1
 100000


Sample Output 30"
XXOR,https://atcoder.jp/contests/abc117/tasks/abc117_d,"問題文N 個の非負整数 A 1  A 2       A N および非負整数 K が与えられます 
0 以上 K 以下の整数 X に対して f X     X XOR A 1     X XOR A 2           X XOR A N  とします 
ここで 非負整数 a  b に対して a XOR b は a と b のビットごとの排他的論理和を表します 
f の最大値を求めてください 

XOR とは
整数 A  B のビットごとの排他的論理和 X は 以下のように定義されます 

X を二進表記した際の 2 k  k  geq 0  の位の数は A  B を二進表記した際の 2 k の位の数のうち一方のみが 1 であれば 1 そうでなければ 0 である 

例えば 3 XOR 5   6 となります  二進数表記すると  011 XOR 101   110  


制約
入力は全て整数である
1  leq N  leq 10 5
0  leq K  leq 10  12 
0  leq A i  leq 10  12 


入力入力は以下の形式で標準入力から与えられる 
N K
A 1 A 2     A N


出力f の最大値を出力せよ 

入力例 13 7
1 6 3


出力例 114

f 4     4 XOR 1     4 XOR 6     4 XOR 3    5   2   7   14 が最大です 

入力例 24 9
7 4 0 3


出力例 246


入力例 31 0
1000000000000


出力例 31000000000000

Problem StatementYou are given N non negative integers A 1  A 2       A N and another non negative integer K 
For a integer X between 0 and K  inclusive   let f X     X XOR A 1     X XOR A 2           X XOR A N  
Here  for non negative integers a and b  a XOR b denotes the bitwise exclusive OR of a and b 
Find the maximum value of f 

What is XOR 
The bitwise exclusive OR of a and b  X  is defined as follows 

When X is written in base two  the digit in the 2 k s place  k  geq 0  is 1 if  when written in base two  exactly one of A and B has 1 in the 2 k s place  and 0 otherwise 

For example  3 XOR 5   6   When written in base two  011 XOR 101   110  


Constraints
All values in input are integers 
1  leq N  leq 10 5
0  leq K  leq 10  12 
0  leq A i  leq 10  12 


InputInput is given from Standard Input in the following format 
N K
A 1 A 2     A N


OutputPrint the maximum value of f 

Sample Input 13 7
1 6 3


Sample Output 114

The maximum value is  f 4     4 XOR 1     4 XOR 6     4 XOR 3    5   2   7   14 

Sample Input 24 9
7 4 0 3


Sample Output 246


Sample Input 31 0
1000000000000


Sample Output 31000000000000"
B +/  A,https://atcoder.jp/contests/abc118/tasks/abc118_a,"問題文正整数 A  B が与えられます 
A が B の約数なら A   B を そうでなければ B   A を出力してください 

制約
入力は全て整数である 
1  leq A  leq B  leq 20


入力入力は以下の形式で標準入力から与えられる 
A B


出力A が B の約数なら A   B を そうでなければ B   A を出力せよ 

入力例 14 12


出力例 116

4 は 12 の約数なので 4   12   16 を出力します 

入力例 28 20


出力例 212


入力例 31 1


出力例 32

1 は 1 の約数です 
Problem StatementYou are given positive integers A and B 
If A is a divisor of B  print A   B  otherwise  print B   A 

Constraints
All values in input are integers 
1  leq A  leq B  leq 20


InputInput is given from Standard Input in the following format 
A B


OutputIf A is a divisor of B  print A   B  otherwise  print B   A 

Sample Input 14 12


Sample Output 116

As 4 is a divisor of 12  4   12   16 should be printed 

Sample Input 28 20


Sample Output 212


Sample Input 31 1


Sample Output 32

1 is a divisor of 1"
Foods Loved by Everyone,https://atcoder.jp/contests/abc118/tasks/abc118_b,"問題文カツサンドくんはオムライスが好きです 
他にも明太子や寿司 クリームブリュレやテンダーロインステーキなどが好きで これらの食べ物は全て 誰もが好きだと信じています 
その仮説を証明するために N 人の人に M 種類の食べ物について好きか嫌いかの調査を行いました 
調査の結果 i 番目の人は A  i1  番目  A  i2  番目       A  iK i  番目の食べ物だけ好きだと答えました 
N 人全ての人が好きだと答えた食べ物の種類数を求めてください 

制約
入力は全て整数である 
1  leq N  M  leq 30
1  leq K i  leq M
1  leq A  ij   leq M
各 i  1  leq i  leq N  について A  i1   A  i2        A  iK i  は全て異なる 


入力入力は以下の形式で標準入力から与えられる 
N M
K 1 A  11  A  12      A  1K 1 
K 2 A  21  A  22      A  2K 2 
 
K N A  N1  A  N2      A  NK N 


出力N 人全ての人が好きだと答えた食べ物の種類数を出力せよ 

入力例 13 4
2 1 3
3 1 2 3
2 3 2


出力例 11

3 人全員が好きだと答えた食べ物は 3 番目の食べ物だけなので 1 を出力します 

入力例 25 5
4 2 3 4 5
4 1 3 4 5
4 1 2 4 5
4 1 2 3 5
4 1 2 3 4


出力例 20

カツサンドくんの仮説は全く正しくありませんでした 

入力例 31 30
3 5 10 30


出力例 33

Problem StatementKatsusando loves omelette rice 
Besides  he loves crème brûlée  tenderloin steak and so on  and believes that these foods are all loved by everyone 
To prove that hypothesis  he conducted a survey on M kinds of foods and asked N people whether they like these foods or not 
The i th person answered that he she only likes the A  i1  th  A  i2  th       A  iK i  th food 
Find the number of the foods liked by all the N people 

Constraints
All values in input are integers 
1  leq N  M  leq 30
1  leq K i  leq M
1  leq A  ij   leq M
For each i  1  leq i  leq N   A  i1   A  i2        A  iK i  are distinct 


ConstraintsInput is given from Standard Input in the following format 
N M
K 1 A  11  A  12      A  1K 1 
K 2 A  21  A  22      A  2K 2 
 
K N A  N1  A  N2      A  NK N 


OutputPrint the number of the foods liked by all the N people 

Sample Input 13 4
2 1 3
3 1 2 3
2 3 2


Sample Output 11

As only the third food is liked by all the three people  1 should be printed 

Sample Input 25 5
4 2 3 4 5
4 1 3 4 5
4 1 2 4 5
4 1 2 3 5
4 1 2 3 4


Sample Output 20

Katsusando s hypothesis turned out to be wrong 

Sample Input 31 30
3 5 10 30


Sample Output 33"
Monsters Battle Royale,https://atcoder.jp/contests/abc118/tasks/abc118_c,"問題文N 体のモンスターが居て それぞれ 1  2       N と番号付けられています 
はじめ モンスター i の体力は A i です 
以降 体力が 1 以上のモンスターを生きているモンスターと呼びます 
生きているモンスターが 1 体になるまで以下を繰り返します 

ランダムに 1 体の生きているモンスターがランダムに別の生きているモンスターに攻撃します 
その結果 攻撃されたモンスターの体力を攻撃したモンスターの体力と同じ値だけ減らします 

最後に生き残ったモンスターの最終的な体力の最小値を求めてください 

制約
入力は全て整数である 
2  leq N  leq 10 5
1  leq A i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N
A 1 A 2     A N


出力最後に生き残ったモンスターの最終的な体力の最小値を出力せよ 

入力例 14
2 10 8 40


出力例 12

1 番目のモンスターだけが攻撃し続けた場合 最後に生き残ったモンスターの体力は 2 となり このときが最小です 

入力例 24
5 13 8 1000000000


出力例 21


入力例 33
1000000000 1000000000 1000000000


出力例 31000000000

Problem StatementThere are N monsters  numbered 1  2       N 
Initially  the health of Monster i is A i 
Below  a monster with at least 1 health is called alive 
Until there is only one alive monster  the following is repeated 

A random alive monster attacks another random alive monster 
As a result  the health of the monster attacked is reduced by the amount equal to the current health of the monster attacking 

Find the minimum possible final health of the last monster alive 

Constraints
All values in input are integers 
2  leq N  leq 10 5
1  leq A i  leq 10 9


InputInput is given from Standard Input in the following format 
N
A 1 A 2     A N


OutputPrint the minimum possible final health of the last monster alive 

Sample Input 14
2 10 8 40


Sample Output 12

When only the first monster keeps on attacking  the final health of the last monster will be 2  which is minimum 

Sample Input 24
5 13 8 1000000000


Sample Output 21


Sample Input 33
1000000000 1000000000 1000000000


Sample Output 31000000000"
Match Matching,https://atcoder.jp/contests/abc118/tasks/abc118_d,"問題文ちょうど N 本のマッチ棒を使って作れる整数の中で最大のものを求めてください 
ただし 以下の条件を満たさなければなりません 

作る整数の各桁は 1 から 9 までの数字のうち A 1  A 2       A M  1  leq A i  leq 9  のいずれかでなければならない 
数字 1  2  3  4  5  6  7  8  9 を 1 つ作るには それぞれちょうど 2  5  5  4  5  6  3  7  6 本のマッチ棒を使う 


制約
入力は全て整数である 
2  leq N  leq 10 4
1  leq M  leq 9
1  leq A i  leq 9
A i は全て異なる 
ちょうど N 本のマッチ棒を使って条件を満たすように作れる整数が存在する 


入力入力は以下の形式で標準入力から与えられる 
N M
A 1 A 2     A M


出力問題文の条件下でちょうど N 本のマッチ棒を使って作れる整数の最大値を出力せよ 

入力例 120 4
3 7 8 4


出力例 1777773

整数 777773 は 3   3   3   3   3   5   20 本のマッチ棒を使って作れ ちょうど 20 本のマッチ棒を使って条件を満たすように作れる整数の中でこれが最大です 

入力例 2101 9
9 8 7 6 5 4 3 2 1


出力例 271111111111111111111111111111111111111111111111111

出力が 64 ビット整数型に収まらない場合があります 

入力例 315 3
5 4 6


出力例 3654

Problem StatementFind the largest integer that can be formed with exactly N matchsticks  under the following conditions 

Every digit in the integer must be one of the digits A 1  A 2       A M  1  leq A i  leq 9  
The number of matchsticks used to form digits 1  2  3  4  5  6  7  8  9 should be 2  5  5  4  5  6  3  7  6  respectively 


Constraints
All values in input are integers 
2  leq N  leq 10 4
1  leq M  leq 9
1  leq A i  leq 9
A i are all different 
There exists an integer that can be formed by exactly N matchsticks under the conditions 


InputInput is given from Standard Input in the following format 
N M
A 1 A 2     A M


OutputPrint the largest integer that can be formed with exactly N matchsticks under the conditions in the problem statement 

Sample Input 120 4
3 7 8 4


Sample Output 1777773

The integer 777773 can be formed with 3   3   3   3   3   5   20 matchsticks  and this is the largest integer that can be formed by 20 matchsticks under the conditions 

Sample Input 2101 9
9 8 7 6 5 4 3 2 1


Sample Output 271111111111111111111111111111111111111111111111111

The output may not fit into a 64 bit integer type 

Sample Input 315 3
5 4 6


Sample Output 3654"
Still TBD,https://atcoder.jp/contests/abc119/tasks/abc119_a,"問題文文字列 S が入力されます これは 西暦 2019 年の実在する日付を yyyy mm dd の形式で表したものです  例えば 2019 年 4 月 30 日は 2019 04 30 と表されます  
S が表す日付が 2019 年 4 月 30 日またはそれ以前なら Heisei そうでなければ TBD と出力するプログラムを書いてください 

制約
S は西暦 2019 年の実在する日付を yyyy mm dd の形式で表す文字列である 


入力入力は以下の形式で標準入力から与えられる 
S


出力S が表す日付が 2019 年 4 月 30 日またはそれ以前なら Heisei そうでなければ TBD と出力せよ 

入力例 12019 04 30


出力例 1Heisei


入力例 22019 11 01


出力例 2TBD

Problem StatementYou are given a string S as input  This represents a valid date in the year 2019 in the yyyy mm dd format   For example  April 30  2019 is represented as 2019 04 30  
Write a program that prints Heisei if the date represented by S is not later than April 30  2019  and prints TBD otherwise 

Constraints
S is a string that represents a valid date in the year 2019 in the yyyy mm dd format 


InputInput is given from Standard Input in the following format 
S


OutputPrint Heisei if the date represented by S is not later than April 30  2019  and print TBD otherwise 

Sample Input 12019 04 30


Sample Output 1Heisei


Sample Input 22019 11 01


Sample Output 2TBD"
Digital Gifts,https://atcoder.jp/contests/abc119/tasks/abc119_b,"問題文高橋くんは N 人の親戚からお年玉をもらいました 
N 個の値 x 1  x 2       x N と N 個の文字列 u 1  u 2       u N が入力されます 各文字列 u i は JPY または BTC であり x i と u i が i 人目の親戚からのお年玉の内容を表します 
例えば x 1   10000  u 1   JPY であれば 1 人目の親戚からのお年玉は 10000 円であり x 2   0 10000000  u 2   BTC であれば 2 人目の親戚からのお年玉は 0 1 ビットコインです 
ビットコインを 1 0 BTC あたり 380000 0 円として換算すると 高橋くんがもらったお年玉は合計で何円に相当するでしょうか 

制約
2  leq N  leq 10
u i   JPY または BTC
u i   JPY のとき x i は整数であり 1  leq x i  leq 10 8
u i   BTC のとき x i は小数点以下の桁を 8 桁持つ小数であり 0 00000001  leq x i  leq 100 00000000


入力入力は以下の形式で標準入力から与えられる 
N
x 1 u 1
x 2 u 2
 
x N u N


出力高橋くんが受け取ったお年玉が合計で Y 円に相当するとき 値 Y  整数とは限らない  を出力せよ 
出力は ジャッジの出力との絶対誤差または相対誤差が 10   5  以下のとき正解と判定される 

入力例 12
10000 JPY
0 10000000 BTC


出力例 148000 0

1 人目の親戚からのお年玉は 10000 円です 2 人目の親戚からのお年玉は 0 1 ビットコインであり 1 BTC あたり 380000 0 円として換算すると 38000 0 円となります これらの合計は 48000 0 円です 
なお 48000 48000 1 などと出力しても正解と判定されます 

入力例 23
100000000 JPY
100 00000000 BTC
0 00000001 BTC


出力例 2138000000 0038

この場合 138001000 1 38e8 などと出力しても正解と判定されます 
Problem StatementTakahashi received otoshidama  New Year s money gifts  from N of his relatives 
You are given N values x 1  x 2       x N and N strings u 1  u 2       u N as input  Each string u i is either JPY or BTC  and x i and u i represent the content of the otoshidama from the i th relative 
For example  if x 1   10000 and u 1   JPY  the otoshidama from the first relative is 10000 Japanese yen  if x 2   0 10000000 and u 2   BTC  the otoshidama from the second relative is 0 1 bitcoins 
If we convert the bitcoins into yen at the rate of 380000 0 JPY per 1 0 BTC  how much are the gifts worth in total 

Constraints
2  leq N  leq 10
u i   JPY or BTC 
If u i   JPY  x i is an integer such that 1  leq x i  leq 10 8 
If u i   BTC  x i is a decimal with 8 decimal digits  such that 0 00000001  leq x i  leq 100 00000000 


InputInput is given from Standard Input in the following format 
N
x 1 u 1
x 2 u 2
 
x N u N


OutputIf the gifts are worth Y yen in total  print the value Y  not necessarily an integer  
Output will be judged correct when the absolute or relative error from the judge s output is at most 10   5  

Sample Input 12
10000 JPY
0 10000000 BTC


Sample Output 148000 0

The otoshidama from the first relative is 10000 yen  The otoshidama from the second relative is 0 1 bitcoins  which is worth 38000 0 yen if converted at the rate of 380000 0 JPY per 1 0 BTC  The sum of these is 48000 0 yen 
Outputs such as 48000 and 48000 1 will also be judged correct 

Sample Input 23
100000000 JPY
100 00000000 BTC
0 00000001 BTC


Sample Output 2138000000 0038

In this case  outputs such as 138001000 and 1 38e8 will also be judged correct"
Synthetic Kadomatsu,https://atcoder.jp/contests/abc119/tasks/abc119_c,"問題文あなたは N 本の竹を持っています これらの長さはそれぞれ l 1  l 2       l N です  単位  センチメートル  
あなたの目的は これらの竹のうち何本か  全部でもよい  を使い 長さが A  B  C であるような 3 本の竹を得ることです そのために 以下の三種類の魔法を任意の順に何度でも使うことができます 

延長魔法  1 MP  マジックポイント  を消費し 1 本の竹を選んでその長さを 1 増やす 
短縮魔法  1 MP を消費し 1 本の長さ 2 以上の竹を選んでその長さを 1 減らす 
合成魔法  10 MP を消費し 2 本の竹を選んで接続し 1 本の竹とする この新たな竹の長さは接続した 2 本の竹の長さの合計に等しい  以後 この竹に対してさらに魔法を使用することもできる  

目的を達成するには 最小でいくつの MP が必要でしょうか 

制約
3  leq N  leq 8
1  leq C   B   A  leq 1000
1  leq l i  leq 1000
入力される値はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N A B C
l 1
l 2
 
l N


出力目的の達成に必要な MP の最小量を出力せよ 

入力例 15 100 90 80
98
40
30
21
80


出力例 123

長さ 98  40  30  21  80 の 5 本の竹から長さ 100  90  80 の 3 本の竹を得ようとしています 長さ 80 の竹ははじめから持っており 長さ 100  90 の竹は次のように魔法を使うと合計 23 MP を消費することで得られ これが最適です 

長さ 98 の竹に延長魔法を 2 回使い 長さ 100 の竹を得る  消費 MP  2 
長さ 40  30 の竹に合成魔法を使い 長さ 70 の竹を得る  消費 MP  10 
長さ 21 の竹に短縮魔法を 1 回使い 長さ 20 の竹を得る  消費 MP  1 
手順 2  で得た長さ 70 の竹と手順 3  で得た長さ 20 の竹に合成魔法を使い 長さ 90 の竹を得る  消費 MP  10 


入力例 28 100 90 80
100
100
90
90
90
80
80
80


出力例 20

欲しい長さの竹をすでにすべて持っている場合 必要な MP は 0 です このように 必ずしもすべての竹を使う必要はありません 

入力例 38 1000 800 100
300
333
400
444
500
555
600
666


出力例 3243

Problem StatementYou have N bamboos  The lengths  in centimeters  of these are l 1  l 2       l N  respectively 
Your objective is to use some of these bamboos  possibly all  to obtain three bamboos of length A  B  C  For that  you can use the following three kinds of magics any number 

Extension Magic  Consumes 1 MP  magic point   Choose one bamboo and increase its length by 1 
Shortening Magic  Consumes 1 MP  Choose one bamboo of length at least 2 and decrease its length by 1 
Composition Magic  Consumes 10 MP  Choose two bamboos and combine them into one bamboo  The length of this new bamboo is equal to the sum of the lengths of the two bamboos combined   Afterwards  further magics can be used on this bamboo  

At least how much MP is needed to achieve the objective 

Constraints
3  leq N  leq 8
1  leq C   B   A  leq 1000
1  leq l i  leq 1000
All values in input are integers 


InputInput is given from Standard Input in the following format 
N A B C
l 1
l 2
 
l N


OutputPrint the minimum amount of MP needed to achieve the objective 

Sample Input 15 100 90 80
98
40
30
21
80


Sample Output 123

We are obtaining three bamboos of lengths 100  90  80 from five bamboos 98  40  30  21  80  We already have a bamboo of length 80  and we can obtain bamboos of lengths 100  90 by using the magics as follows at the total cost of 23 MP  which is optimal 

Use Extension Magic twice on the bamboo of length 98 to obtain a bamboo of length 100   MP consumed  2 
Use Composition Magic on the bamboos of lengths 40  30 to obtain a bamboo of length 70   MP consumed  10 
Use Shortening Magic once on the bamboo of length 21 to obtain a bamboo of length 20   MP consumed  1 
Use Composition Magic on the bamboo of length 70 obtained in step 2 and the bamboo of length 20 obtained in step 3 to obtain a bamboo of length 90   MP consumed  10 


Sample Input 28 100 90 80
100
100
90
90
90
80
80
80


Sample Output 20

If we already have all bamboos of the desired lengths  the amount of MP needed is 0  As seen here  we do not necessarily need to use all the bamboos 

Sample Input 38 1000 800 100
300
333
400
444
500
555
600
666


Sample Output 3243"
Lazy Faith,https://atcoder.jp/contests/abc119/tasks/abc119_d,"問題文東西方向に伸びる道路に沿って A 社の神社と B 軒の寺が建っています 
西から i 社目の神社は道路の西端から s i メートルの地点に 西から i 軒目の寺は道路の西端から t i メートルの地点にあります 
以下の Q 個の問いに答えてください 
問 i  1  leq i  leq Q   道路の西端から x i メートルの地点から出発して道路上を自由に移動するとき 神社一社と寺一軒を訪れるのに必要な最小の移動距離は何メートルか   必要数を超えた数の寺社を通過してもよい  

制約
1  leq A  B  leq 10 5
1  leq Q  leq 10 5
1  leq s 1   s 2         s A  leq 10  10 
1  leq t 1   t 2         t B  leq 10  10 
1  leq x i  leq 10  10 
s 1       s A  t 1       t B  x 1       x Q はすべて異なる 
入力される値はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
A B Q
s 1
 
s A
t 1
 
t B
x 1
 
x Q


出力Q 行出力せよ i 行目に問 i への答えを出力すること 

入力例 12 3 4
100
600
400
900
1000
150
2000
899
799


出力例 1350
1400
301
399

2 社の神社と 3 軒の寺があり 神社は道路の西端から 100  600 メートルの地点に 寺は道路の西端から 400  900  1000 メートルの地点にあります 

問 1  道路の西端から 150 メートルの地点から出発する場合 まず西に 50 メートル進んで神社を訪れ 次に東に 300 メートル進んで寺を訪れるのが最適です 
問 2  道路の西端から 2000 メートルの地点から出発する場合 まず西に 1000 メートル進んで寺を訪れ 次に西に 400 メートル進んで神社を訪れるのが最適です 途中で寺をもう一軒通過しますが 構いません 
問 3  道路の西端から 899 メートルの地点から出発する場合 まず東に 1 メートル進んで寺を訪れ 次に西に 300 メートル進んで神社を訪れるのが最適です 
問 4  道路の西端から 799 メートルの地点から出発する場合 まず西に 199 メートル進んで神社を訪れ 次に西に 200 メートル進んで寺を訪れるのが最適です 


入力例 21 1 3
1
10000000000
2
9999999999
5000000000


出力例 210000000000
10000000000
14999999998

道路は長く 32 ビット整数に収まらない距離を移動する必要があるかもしれません 
Problem StatementAlong a road running in an east west direction  there are A shrines and B temples 
The i th shrine from the west is located at a distance of s i meters from the west end of the road  and the i th temple from the west is located at a distance of t i meters from the west end of the road 
Answer the following Q queries 

Query i  1  leq i  leq Q   If we start from a point at a distance of x i meters from the west end of the road and freely travel along the road  what is the minimum distance that needs to be traveled in order to visit one shrine and one temple   It is allowed to pass by more shrines and temples than required  


Constraints
1  leq A  B  leq 10 5
1  leq Q  leq 10 5
1  leq s 1   s 2         s A  leq 10  10 
1  leq t 1   t 2         t B  leq 10  10 
1  leq x i  leq 10  10 
s 1       s A  t 1       t B  x 1       x Q are all different 
All values in input are integers 


InputInput is given from Standard Input in the following format 
A B Q
s 1
 
s A
t 1
 
t B
x 1
 
x Q


OutputPrint Q lines  The i th line should contain the answer to the i th query 

Sample Input 12 3 4
100
600
400
900
1000
150
2000
899
799


Sample Output 1350
1400
301
399

There are two shrines and three temples  The shrines are located at distances of 100  600 meters from the west end of the road  and the temples are located at distances of 400  900  1000 meters from the west end of the road 

Query 1  If we start from a point at a distance of 150 meters from the west end of the road  the optimal move is first to walk 50 meters west to visit a shrine  then to walk 300 meters east to visit a temple 
Query 2  If we start from a point at a distance of 2000 meters from the west end of the road  the optimal move is first to walk 1000 meters west to visit a temple  then to walk 400 meters west to visit a shrine  We will pass by another temple on the way  but it is fine 
Query 3  If we start from a point at a distance of 899 meters from the west end of the road  the optimal move is first to walk 1 meter east to visit a temple  then to walk 300 meters west to visit a shrine 
Query 4  If we start from a point at a distance of 799 meters from the west end of the road  the optimal move is first to walk 199 meters west to visit a shrine  then to walk 200 meters west to visit a temple 


Sample Input 21 1 3
1
10000000000
2
9999999999
5000000000


Sample Output 210000000000
10000000000
14999999998

The road is quite long  and we may need to travel a distance that does not fit into a 32 bit integer"
Favorite Sound,https://atcoder.jp/contests/abc120/tasks/abc120_a,"問題文高橋くんは 自動販売機でジュースを買ったときの音が好きです 
その音は 1 回 A 円で聞くことができます 
高橋くんは B 円持っていますが お気に入りの音を C 回聞くと満足するため B 円で最大 C 回まで聞けるだけ聞きます 
高橋くんはお気に入りの音を何回聞くことになるでしょうか 

制約
入力は全て整数である 
1  leq A  B  C  leq 100


入力入力は以下の形式で標準入力から与えられる 
A B C


出力高橋くんはお気に入りの音を何回聞くことになるか出力せよ 

入力例 12 11 4


出力例 14

高橋くんは 8 円以上持っているのでお気に入りの音を 4 回聞いて満足します 

入力例 23 9 5


出力例 23

高橋くんが満足できないこともあります 

入力例 3100 1 10


出力例 30

Problem StatementTakahashi likes the sound when he buys a drink from a vending machine 
That sound can be heard by spending A yen  the currency of Japan  each time 
Takahashi has B yen  He will hear the sound as many times as he can with that money  but at most C times  as he would be satisfied at that time 
How many times will he hear the sound 

Constraints
All values in input are integers 
1  leq A  B  C  leq 100


InputInput is given from Standard Input in the following format 
A B C


OutputPrint the number of times Takahashi will hear his favorite sound 

Sample Input 12 11 4


Sample Output 14

Since he has not less than 8 yen  he will hear the sound four times and be satisfied 

Sample Input 23 9 5


Sample Output 23

He may not be able to be satisfied 

Sample Input 3100 1 10


Sample Output 30"
K th Common Divisor,https://atcoder.jp/contests/abc120/tasks/abc120_b,"問題文正整数 A  B が与えられます 
A も B も割り切る正整数のうち K 番目に大きいものを求めてください 
なお 与えられる入力では A も B も割り切る正整数のうち K 番目に大きいものが存在することが保証されます 

制約
入力は全て整数である 
1  leq A  B  leq 100
A も B も割り切る正整数のうち K 番目に大きいものが存在する 
K  geq 1


入力入力は以下の形式で標準入力から与えられる 
A B K


出力A も B も割り切る正整数のうち K 番目に大きいものを出力せよ 

入力例 18 12 2


出力例 12

8 と 12 を割り切る正整数は 1  2  4 です 
この中で 2 番目に大きいものは 2 です 

入力例 2100 50 4


出力例 25


入力例 31 1 1


出力例 31

Problem StatementYou are given positive integers A and B 
Find the K th largest positive integer that divides both A and B 
The input guarantees that there exists such a number 

Constraints
All values in input are integers 
1  leq A  B  leq 100
The K th largest positive integer that divides both A and B exists 
K  geq 1


InputInput is given from Standard Input in the following format 
A B K


OutputPrint the K th largest positive integer that divides both A and B 

Sample Input 18 12 2


Sample Output 12

Three positive integers divides both 8 and 12  1  2 and 4 
Among them  the second largest is 2 

Sample Input 2100 50 4


Sample Output 25


Sample Input 31 1 1


Sample Output 31"
Unification,https://atcoder.jp/contests/abc120/tasks/abc120_c,"問題文机の上に N 個のキューブが縦に積まれています 長さ N の文字列 S が与えられます 
下から i 番目のキューブの色は S の i 文字目が 0 のとき赤色 1 のとき青色です 
あなたは 赤色のキューブと青色のキューブが隣り合っているような部分を選んで それら 2 個のキューブを取り除く操作を何度でも行えます 
このとき 取り除いたキューブの上にあったキューブは真下の物体の上に落下します 
最大で何個のキューブを取り除けるでしょうか 

制約
1  leq N  leq 10 5
 S    N
S の各文字は 0 または 1 である 


入力入力は以下の形式で標準入力から与えられる 
S


出力最大で何個のキューブを取り除けるかを出力せよ 

入力例 10011


出力例 14

以下の順に操作を行うと 4 個全てのキューブを取り除けます 

下から 2 番目のキューブと 3 番目のキューブを取り除きます その結果 下から 4 番目のキューブが下から 1 番目のキューブの上に落下します 
下から 1 番目のキューブと 2 番目のキューブを取り除きます 


入力例 211011010001011


出力例 212


入力例 30


出力例 30

Problem StatementThere are N cubes stacked vertically on a desk 
You are given a string S of length N  The color of the i th cube from the bottom is red if the i th character in S is 0  and blue if that character is 1 
You can perform the following operation any number of times  choose a red cube and a blue cube that are adjacent  and remove them  Here  the cubes that were stacked on the removed cubes will fall down onto the object below them 
At most how many cubes can be removed 

Constraints
1  leq N  leq 10 5
 S    N
Each character in S is 0 or 1 


InputInput is given from Standard Input in the following format 
S


OutputPrint the maximum number of cubes that can be removed 

Sample Input 10011


Sample Output 14

All four cubes can be removed  by performing the operation as follows 

Remove the second and third cubes from the bottom  Then  the fourth cube drops onto the first cube 
Remove the first and second cubes from the bottom 


Sample Input 211011010001011


Sample Output 212


Sample Input 30


Sample Output 30"
Decayed Bridges,https://atcoder.jp/contests/abc120/tasks/abc120_d,"問題文N 個の島と M 本の橋があります 
i 番目の橋は A i 番目の島と B i 番目の島を繋いでおり 双方向に行き来可能です 
はじめ どの 2 つの島についてもいくつかの橋を渡って互いに行き来できます 
調査の結果 老朽化のためこれら M 本の橋は 1 番目の橋から順に全て崩落することがわかりました 
 いくつかの橋を渡って互いに行き来できなくなった 2 つの島の組  a  b   a   b  の数 を不便さと呼ぶことにします 
各 i  1  leq i  leq M  について i 番目の橋が崩落した直後の不便さを求めてください 

制約
入力は全て整数である 
2  leq N  leq 10 5
1  leq M  leq 10 5
1  leq A i   B i  leq N
 A i  B i  の組は全て異なる 
初期状態における不便さは 0 である 


入力入力は以下の形式で標準入力から与えられる 
N M
A 1 B 1
A 2 B 2
 vdots
A M B M


出力i   1  2       M の順に i 番目の橋が崩落した直後の不便さを出力せよ 
答えが 32 bit整数型に収まらない場合があることに注意すること 

入力例 14 5
1 2
3 4
1 3
2 3
1 4


出力例 10
0
4
5
6

例えば 1 から 3 番目の橋が崩落したとき  1  2    1  3    2  4    3  4  の島の組について行き来できなくなるので不便さは 4 です 

入力例 26 5
2 3
1 2
5 6
3 4
4 5


出力例 28
9
12
14
15


入力例 32 1
1 2


出力例 31

Problem StatementThere are N islands and M bridges 
The i th bridge connects the A i th and B i th islands bidirectionally 
Initially  we can travel between any two islands using some of these bridges 
However  the results of a survey show that these bridges will all collapse because of aging  in the order from the first bridge to the M th bridge 
Let the inconvenience be the number of pairs of islands  a  b   a   b  such that we are no longer able to travel between the a th and b th islands using some of the bridges remaining 
For each i  1  leq i  leq M   find the inconvenience just after the i th bridge collapses 

Constraints
All values in input are integers 
2  leq N  leq 10 5
1  leq M  leq 10 5
1  leq A i   B i  leq N
All pairs  A i  B i  are distinct 
The inconvenience is initially 0 


InputInput is given from Standard Input in the following format 
N M
A 1 B 1
A 2 B 2
 vdots
A M B M


OutputIn the order i   1  2       M  print the inconvenience just after the i th bridge collapses 
Note that the answer may not fit into a 32 bit integer type 

Sample Input 14 5
1 2
3 4
1 3
2 3
1 4


Sample Output 10
0
4
5
6

For example  when the first to third bridges have collapsed  the inconvenience is 4 since we can no longer travel between the pairs  1  2    1  3    2  4  and  3  4  

Sample Input 26 5
2 3
1 2
5 6
3 4
4 5


Sample Output 28
9
12
14
15


Sample Input 32 1
1 2


Sample Output 31"
White Cells,https://atcoder.jp/contests/abc121/tasks/abc121_a,"問題文H 行 W 列の白色のマス目があります 
あなたは h 個の行と w 個の列を選び 選んだ行または列に含まれるマス目を全て黒色で塗りつぶします 
白色のマス目はいくつ残るでしょうか 
なお 残る白色のマス目の数は行や列の選び方によらないことが証明できます 

制約
入力は全て整数である 
1  leq H  W  leq 20
1  leq h  leq H
1  leq w  leq W


入力入力は以下の形式で標準入力から与えられる 
H W
h w


出力残る白色のマス目の数を出力せよ 

入力例 13 2
2 1


出力例 11

3 行 2 列の白色のマス目があり 2 行と 1 列を選んで黒色で塗りつぶしたとき 白色のマス目は必ず 1 個だけ残ります 

入力例 25 5
2 3


出力例 26


入力例 32 4
2 4


出力例 30

Problem StatementThere are H rows and W columns of white square cells 
You will choose h of the rows and w of the columns  and paint all of the cells contained in those rows or columns 
How many white cells will remain 
It can be proved that this count does not depend on what rows and columns are chosen 

Constraints
All values in input are integers 
1  leq H  W  leq 20
1  leq h  leq H
1  leq w  leq W


InputInput is given from Standard Input in the following format 
H W
h w


OutputPrint the number of white cells that will remain 

Sample Input 13 2
2 1


Sample Output 11

There are 3 rows and 2 columns of cells  When two rows and one column are chosen and painted in black  there is always one white cell that remains 

Sample Input 25 5
2 3


Sample Output 26


Sample Input 32 4
2 4


Sample Output 30"
Can you solve this?,https://atcoder.jp/contests/abc121/tasks/abc121_b,"問題文N 個のソースコードがあり i 個目のソースコードの特徴は A  i1   A  i2        A  iM  の M 個の整数で表されます 
また 整数 B 1  B 2       B M と 整数 C が与えられます 
A  i1  B 1   A  i2  B 2         A  iM  B M   C   0 のときに限り i 個目のソースコードはこの問題に正答するソースコードです 
N 個のソースコードのうち この問題に正答するソースコードの個数を求めてください 

制約
入力は全て整数である 
1  leq N  M  leq 20
 100  leq A  ij   leq 100
 100  leq B i  leq 100
 100  leq C  leq 100


入力入力は以下の形式で標準入力から与えられる 
N M C
B 1 B 2     B M
A  11  A  12      A  1M 
A  21  A  22      A  2M 
 vdots
A  N1  A  N2      A  NM 


出力N 個のソースコードのうち この問題に正答するソースコードの個数を出力せよ 

入力例 12 3  10
1 2 3
3 2 1
1 2 2


出力例 11

以下のように 2 個目のソースコードのみがこの問題に正答します 

3  times 1   2  times 2   1  times 3     10    0  leq 0 なので 1 個目のソースコードはこの問題に正答しません 
1  times 1   2  times 2   2  times 3     10    1   0 なので 2 個目のソースコードはこの問題に正答します 


入力例 25 2  4
 2 5
100 41
100 40
 3 0
 6  2
18  13


出力例 22


入力例 33 3 0
100  100 0
0 100 100
100 100 100
 100 100 100


出力例 30

全て Wrong Answer です あなたのソースコードは含めません 
Problem StatementThere are N pieces of source code  The characteristics of the i th code is represented by M integers A  i1   A  i2        A  iM  
Additionally  you are given integers B 1  B 2       B M and C 
The i th code correctly solves this problem if and only if A  i1  B 1   A  i2  B 2         A  iM  B M   C   0 
Among the N codes  find the number of codes that correctly solve this problem 

Constraints
All values in input are integers 
1  leq N  M  leq 20
 100  leq A  ij   leq 100
 100  leq B i  leq 100
 100  leq C  leq 100


InputInput is given from Standard Input in the following format 
N M C
B 1 B 2     B M
A  11  A  12      A  1M 
A  21  A  22      A  2M 
 vdots
A  N1  A  N2      A  NM 


OutputPrint the number of codes among the given N codes that correctly solve this problem 

Sample Input 12 3  10
1 2 3
3 2 1
1 2 2


Sample Output 11

Only the second code correctly solves this problem  as follows 

Since 3  times 1   2  times 2   1  times 3     10    0  leq 0  the first code does not solve this problem 
1  times 1   2  times 2   2  times 3     10    1   0  the second code solves this problem 


Sample Input 25 2  4
 2 5
100 41
100 40
 3 0
 6  2
18  13


Sample Output 22


Sample Input 33 3 0
100  100 0
0 100 100
100 100 100
 100 100 100


Sample Output 30

All of them are Wrong Answer  Except yours"
Energy Drink Collector,https://atcoder.jp/contests/abc121/tasks/abc121_c,"問題文栄養ドリンクにレーティング上昇効果があると聞いた高橋くんは M 本の栄養ドリンクを買い集めることにしました 
栄養ドリンクが売られている店は N 軒あり i 軒目の店では 1 本 A i 円の栄養ドリンクを B i 本まで買うことができます 
最小で何円あれば M 本の栄養ドリンクを買い集めることができるでしょうか 
なお 与えられる入力では 十分なお金があれば M 本の栄養ドリンクを買い集められることが保証されます 

制約
入力は全て整数である 
1  leq N  M  leq 10 5
1  leq A i  leq 10 9
1  leq B i  leq 10 5
B 1         B N  geq M


入力入力は以下の形式で標準入力から与えられる 
N M
A 1 B 1
A 2 B 2
 vdots
A N B N


出力M 本の栄養ドリンクを買い集めるのに必要な最小の金額を出力せよ 

入力例 12 5
4 9
2 4


出力例 112

12 円あれば 1 軒目の店で 1 本 2 軒目の店で 4 本の栄養ドリンクを購入し 合計 5 本の栄養ドリンクを買い集めることができます 一方 11 円以下では 5 本の栄養ドリンクを買い集めることができません 

入力例 24 30
6 18
2 5
3 10
7 9


出力例 2130


入力例 31 100000
1000000000 100000


出力例 3100000000000000

出力が 32 ビット整数型におさまらないことがあります 
Problem StatementHearing that energy drinks increase rating in those sites  Takahashi decides to buy up M cans of energy drinks 
There are N stores that sell energy drinks  In the i th store  he can buy at most B i cans of energy drinks for A i yen  the currency of Japan  each 
What is the minimum amount of money with which he can buy M cans of energy drinks 
It is guaranteed that  in the given inputs  a sufficient amount of money can always buy M cans of energy drinks 

Constraints
All values in input are integers 
1  leq N  M  leq 10 5
1  leq A i  leq 10 9
1  leq B i  leq 10 5
B 1         B N  geq M


InputInput is given from Standard Input in the following format 
N M
A 1 B 1
A 2 B 2
 vdots
A N B N


OutputPrint the minimum amount of money with which Takahashi can buy M cans of energy drinks 

Sample Input 12 5
4 9
2 4


Sample Output 112

With 12 yen  we can buy one drink at the first store and four drinks at the second store  for the total of five drinks  However  we cannot buy 5 drinks with 11 yen or less 

Sample Input 24 30
6 18
2 5
3 10
7 9


Sample Output 2130


Sample Input 31 100000
1000000000 100000


Sample Output 3100000000000000

The output may not fit into a 32 bit integer type"
XOR World,https://atcoder.jp/contests/abc121/tasks/abc121_d,"問題文f A  B  を A  A 1       B の排他的論理和としたとき f A  B  を求めてください 

排他的論理和とは
整数 c 1  c 2       c n のビットごとの排他的論理和 y は 以下のように定義されます 

y を二進表記した際の 2 k  k  geq 0  の位の数は c 1  c 2       c n のうち 二進表記した際の 2 k の位の数が 1 となるものが奇数個ならば 1 偶数個ならば 0 である 

例えば 3 と 5 の排他的論理和は 6 です 二進数表記すると  011 と 101 の排他的論理和は 110 です  


制約
入力は全て整数である 
0  leq A  leq B  leq 10  12 


入力入力は以下の形式で標準入力から与えられる 
A B


出力f A  B  を計算し 出力せよ 

入力例 12 4


出力例 15

2  3  4 は 2 進数でそれぞれ 010  011  100 です 
これらの排他的論理和は 101 であり これを 10 進数表記にすると 5 になります 

入力例 2123 456


出力例 2435


入力例 3123456789012 123456789012


出力例 3123456789012

Problem StatementLet f A  B  be the exclusive OR of A  A 1       B  Find f A  B  

What is exclusive OR 
The bitwise exclusive OR of integers c 1  c 2       c n  let us call it y  is defined as follows 

When y is written in base two  the digit in the 2 k s place  k  geq 0  is 1 if  the number of integers among c 1  c 2     c m whose binary representations have 1 in the 2 k s place  is odd  and 0 if that count is even 

For example  the exclusive OR of 3 and 5 is 6   When written in base two  the exclusive OR of 011 and 101 is 110  


Constraints
All values in input are integers 
0  leq A  leq B  leq 10  12 


InputInput is given from Standard Input in the following format 
A B


OutputCompute f A  B  and print it 

Sample Input 12 4


Sample Output 15

2  3  4 are 010  011  100 in base two  respectively 
The exclusive OR of these is 101  which is 5 in base ten 

Sample Input 2123 456


Sample Output 2435


Sample Input 3123456789012 123456789012


Sample Output 3123456789012"
Double Helix,https://atcoder.jp/contests/abc122/tasks/abc122_a,"問題文AtCoder 星には四種類の塩基 A  C  G  T が存在し A と T C と G がそれぞれ対になります 
文字 b が入力されます これは A  C  G  T のいずれかです 塩基 b と対になる塩基を表す文字を出力するプログラムを書いてください 

制約
b は文字 A  C  G  T のいずれかである 


入力入力は以下の形式で標準入力から与えられる 
b


出力塩基 b と対になる塩基を表す文字を出力せよ 

入力例 1A


出力例 1T


入力例 2G


出力例 2C

Problem StatementOn the Planet AtCoder  there are four types of bases  A  C  G and T  A bonds with T  and C bonds with G 
You are given a letter b as input  which is A  C  G or T  Write a program that prints the letter representing the base that bonds with the base b 

Constraints
b is one of the letters A  C  G and T 


InputInput is given from Standard Input in the following format 
b


OutputPrint the letter representing the base that bonds with the base b 

Sample Input 1A


Sample Output 1T


Sample Input 2G


Sample Output 2C"
ATCoder,https://atcoder.jp/contests/abc122/tasks/abc122_b,"問題文英大文字からなる文字列 S が与えられます S の部分文字列  注記を参照  であるような最も長い ACGT 文字列 の長さを求めてください 
ここで ACGT 文字列とは A  C  G  T 以外の文字を含まない文字列です 

注記文字列 T の部分文字列とは T の先頭と末尾から 0 文字以上を取り去って得られる文字列です 
例えば ATCODER の部分文字列には TCO  AT  CODER  ATCODER    空文字列  が含まれ AC は含まれません 

制約
S は長さ 1 以上 10 以下の文字列である 
S の各文字は英大文字である 


入力入力は以下の形式で標準入力から与えられる 
S


出力S の部分文字列であるような最も長い ACGT 文字列の長さを出力せよ 

入力例 1ATCODER


出力例 13

ATCODER の部分文字列であるような ACGT 文字列のうち 最も長いものは ATC です 

入力例 2HATAGAYA


出力例 25

HATAGAYA の部分文字列であるような ACGT 文字列のうち 最も長いものは ATAGA です 

入力例 3SHINJUKU


出力例 30

SHINJUKU の部分文字列であるような ACGT 文字列のうち 最も長いものは   空文字列  です 
Problem StatementYou are given a string S consisting of uppercase English letters  Find the length of the longest ACGT string that is a substring  see Notes  of S 
Here  a ACGT string is a string that contains no characters other than A  C  G and T 

NotesA substring of a string T is a string obtained by removing zero or more characters from the beginning and the end of T 
For example  the substrings of ATCODER include TCO  AT  CODER  ATCODER and   the empty string   but not AC 

Constraints
S is a string of length between 1 and 10  inclusive  
Each character in S is an uppercase English letter 


InputInput is given from Standard Input in the following format 
S


OutputPrint the length of the longest ACGT string that is a substring of S 

Sample Input 1ATCODER


Sample Output 13

Among the ACGT strings that are substrings of ATCODER  the longest one is ATC 

Sample Input 2HATAGAYA


Sample Output 25

Among the ACGT strings that are substrings of HATAGAYA  the longest one is ATAGA 

Sample Input 3SHINJUKU


Sample Output 30

Among the ACGT strings that are substrings of SHINJUKU  the longest one is   the empty string"
GeT AC,https://atcoder.jp/contests/abc122/tasks/abc122_c,"問題文A  C  G  T からなる長さ N の文字列 S が与えられます 以下の Q 個の問いに答えてください 

問 i  1  leq i  leq Q   整数 l i  r i  1  leq l i   r i  leq N  が与えられる S の先頭から l i 文字目から r i 文字目までの  両端含む  部分文字列を考える この文字列に AC は部分文字列として何回現れるか 


注記文字列 T の部分文字列とは T の先頭と末尾から 0 文字以上を取り去って得られる文字列です 
例えば ATCODER の部分文字列には TCO  AT  CODER  ATCODER    空文字列  が含まれ AC は含まれません 

制約
2  leq N  leq 10 5
1  leq Q  leq 10 5
S は長さ N の文字列である 
S の各文字は A  C  G  T のいずれかである 
1  leq l i   r i  leq N


入力入力は以下の形式で標準入力から与えられる 
N Q
S
l 1 r 1
 
l Q r Q


出力Q 行出力せよ i 行目に問 i への答えを出力すること 

入力例 18 3
ACACTACG
3 7
2 3
1 8


出力例 12
0
3


問 1  S の先頭から 3 文字目から 7 文字目までの部分文字列は ACTAC です この文字列に AC は部分文字列として 2 回現れます 
問 2  S の先頭から 2 文字目から 3 文字目までの部分文字列は CA です この文字列に AC は部分文字列として 0 回現れます 
問 3  S の先頭から 1 文字目から 8 文字目までの部分文字列は ACACTACG です この文字列に AC は部分文字列として 3 回現れます 

Problem StatementYou are given a string S of length N consisting of A  C  G and T  Answer the following Q queries 

Query i  1  leq i  leq Q   You will be given integers l i and r i  1  leq l i   r i  leq N   Consider the substring of S starting at index l i and ending at index r i  both inclusive   In this string  how many times does AC occurs as a substring 


NotesA substring of a string T is a string obtained by removing zero or more characters from the beginning and the end of T 
For example  the substrings of ATCODER include TCO  AT  CODER  ATCODER and   the empty string   but not AC 

Constraints
2  leq N  leq 10 5
1  leq Q  leq 10 5
S is a string of length N 
Each character in S is A  C  G or T 
1  leq l i   r i  leq N


InputInput is given from Standard Input in the following format 
N Q
S
l 1 r 1
 
l Q r Q


OutputPrint Q lines  The i th line should contain the answer to the i th query 

Sample Input 18 3
ACACTACG
3 7
2 3
1 8


Sample Output 12
0
3


Query 1  the substring of S starting at index 3 and ending at index 7 is ACTAC  In this string  AC occurs twice as a substring 
Query 2  the substring of S starting at index 2 and ending at index 3 is CA  In this string  AC occurs zero times as a substring 
Query 3  the substring of S starting at index 1 and ending at index 8 is ACACTACG  In this string  AC occurs three times as a substring"
We Like AGC,https://atcoder.jp/contests/abc122/tasks/abc122_d,"問題文整数 N が与えられます 次の条件を満たす長さ N の文字列の数を 10 9 7 で割った余りを求めてください 

A  C  G  T 以外の文字を含まない 
AGC を部分文字列として含まない 
隣接する 2 文字の入れ替えを 1 回行うことで上記の条件に違反させることはできない 


注記文字列 T の部分文字列とは T の先頭と末尾から 0 文字以上を取り去って得られる文字列です 
例えば ATCODER の部分文字列には TCO  AT  CODER  ATCODER    空文字列  が含まれ AC は含まれません 

制約
3  leq N  leq 100


入力入力は以下の形式で標準入力から与えられる 
N


出力条件を満たす文字列の数を 10 9 7 で割った余りを出力せよ 

入力例 13


出力例 161

A  C  G  T 以外の文字を含まない長さ 3 の文字列は 4 3   64 通り存在し そのうち AGC  ACG  GAC のみが条件に違反するため 答えは 64   3   61 通りです 

入力例 24


出力例 2230


入力例 3100


出力例 3388130742

文字列の数を 10 9 7 で割った余りを出力することをお忘れなく 
Problem StatementYou are given an integer N  Find the number of strings of length N that satisfy the following conditions  modulo 10 9 7 

The string does not contain characters other than A  C  G and T 
The string does not contain AGC as a substring 
The condition above cannot be violated by swapping two adjacent characters once 


NotesA substring of a string T is a string obtained by removing zero or more characters from the beginning and the end of T 
For example  the substrings of ATCODER include TCO  AT  CODER  ATCODER and   the empty string   but not AC 

Constraints
3  leq N  leq 100


InputInput is given from Standard Input in the following format 
N


OutputPrint the number of strings of length N that satisfy the following conditions  modulo 10 9 7 

Sample Input 13


Sample Output 161

There are 4 3   64 strings of length 3 that do not contain characters other than A  C  G and T  Among them  only AGC  ACG and GAC violate the condition  so the answer is 64   3   61 

Sample Input 24


Sample Output 2230


Sample Input 3100


Sample Output 3388130742

Be sure to print the number of strings modulo 10 9 7"
Five Antennas,https://atcoder.jp/contests/abc123/tasks/abc123_a,"問題文
AtCoder 市には 5 つのアンテナが一直線上に並んでいます これらは 西から順にアンテナ A  B  C  D  E と名付けられており それぞれの座標は a  b  c  d  e です 
2 つのアンテナ間の距離が k 以下であれば直接通信ができ k より大きいと直接通信ができません 
さて 直接 通信ができないアンテナの組が存在するかどうか判定してください 
ただし 座標 p と座標 q  p   q  のアンテナ間の距離は q   p であるとします   

制約

a  b  c  d  e  k は 0 以上 123 以下の整数
a   b   c   d   e


入力
入力は以下の形式で標準入力から与えられる   
a
b
c
d
e
k


出力
直接 通信ができないアンテナの組が存在する場合は    存在しない場合は Yay  と出力せよ   

入力例 11
2
4
8
9
15


出力例 1Yay 

この場合 直接通信できないアンテナの組は存在しません なぜなら   

 A  B  の距離は 2   1   1
 A  C  の距離は 4   1   3
 A  D  の距離は 8   1   7
 A  E  の距離は 9   1   8
 B  C  の距離は 4   2   2
 B  D  の距離は 8   2   6
 B  E  の距離は 9   2   7
 C  D  の距離は 8   4   4
 C  E  の距離は 9   4   5
 D  E  の距離は 9   8   1

そのように 全てのアンテナ間の距離が 15 以下であるからです 
よって Yay  と出力すれば正解となります   

入力例 215
18
26
35
36
18


出力例 2  

この場合 アンテナ A と D の距離が 35   15   20 となり 18 を超えるため直接通信ができません 
よって    と出力すれば正解となります   
Problem Statement
In AtCoder city  there are five antennas standing in a straight line  They are called Antenna A  B  C  D and E from west to east  and their coordinates are a  b  c  d and e  respectively 
Two antennas can communicate directly if the distance between them is k or less  and they cannot if the distance is greater than k 
Determine if there exists a pair of antennas that cannot communicate directly 
Here  assume that the distance between two antennas at coordinates p and q  p   q  is q   p   

Constraints

a  b  c  d  e and k are integers between 0 and 123  inclusive  
a   b   c   d   e


Input
Input is given from Standard Input in the following format 
a
b
c
d
e
k


Output
Print    if there exists a pair of antennas that cannot communicate directly  and print Yay  if there is no such pair 

Sample Input 11
2
4
8
9
15


Sample Output 1Yay 

In this case  there is no pair of antennas that cannot communicate directly  because 

the distance between A and B is 2   1   1
the distance between A and C is 4   1   3
the distance between A and D is 8   1   7
the distance between A and E is 9   1   8
the distance between B and C is 4   2   2
the distance between B and D is 8   2   6
the distance between B and E is 9   2   7
the distance between C and D is 8   4   4
the distance between C and E is 9   4   5
the distance between D and E is 9   8   1

and none of them is greater than 15  Thus  the correct output is Yay  

Sample Input 215
18
26
35
36
18


Sample Output 2  

In this case  the distance between antennas A and D is 35   15   20 and exceeds 18  so they cannot communicate directly 
Thus  the correct output is"
Five Dishes,https://atcoder.jp/contests/abc123/tasks/abc123_b,"問題文
AtCoder 料理店では 以下の 5 つの料理が提供されています ここで  調理時間 は料理を注文してから客に届くまでの時間とします   

ABC 丼  調理時間 A 分
ARC カレー  調理時間 B 分
AGC パスタ  調理時間 C 分
APC ラーメン  調理時間 D 分
ATC ハンバーグ  調理時間 E 分

また この店には以下のような 注文のルール があります   

注文は 10 の倍数の時刻  時刻 0  10  20  30       にしかできない 
一回の注文につき一つの料理しか注文できない 
ある料理を注文したら それが届くまで別の注文ができない ただし 料理が届いたちょうどの時刻には注文ができる 

E869120 君は時刻 0 に料理店に着きました 彼は 5 つの料理全てを注文します 最後の料理が届く最も早い時刻を求めてください 
ただし 料理を注文する順番は自由であり 時刻 0 に注文することも可能とであるとします   

制約

A  B  C  D  E は 1 以上 123 以下の整数


入力
入力は以下の形式で標準入力から与えられる   
A
B
C
D
E


出力
最後の料理が届く最も早い時刻を整数で出力せよ   

入力例 129
20
7
35
120


出力例 1215

ABC 丼 ARC カレー AGC パスタ ATC ハンバーグ APC ラーメン の順に注文することにすると 各料理の最も早い注文時刻 届く時刻は以下の通りになります   

時刻 0 に ABC 丼を注文する 時刻 29 に ABC 丼が届く 
時刻 30 に ARC カレーを注文する 時刻 50 に ARC カレーが届く 
時刻 50 に AGC パスタを注文する 57 に AGC パスタが届く 
時刻 60 に ATC ハンバーグを注文する 時刻 180 に ATC ハンバーグが届く 
時刻 180 に APC ラーメンを注文する 時刻 215 に APC ラーメンが届く 

これより早く最後の料理が届くような方法は存在しません   

入力例 2101
86
119
108
57


出力例 2481

AGC パスタ ARC カレー ATC ハンバーグ APC ラーメン ABC 丼の順に注文することにすると 各料理の最も早い注文時刻 届く時刻は以下の通りになります   

時刻 0 に AGC パスタを注文する 時刻 119 に AGC パスタが届く 
時刻 120 に ARC カレーを注文する 時刻 206 に ARC カレーが届く 
時刻 210 に ATC ハンバーグを注文する 時刻 267 に ATC ハンバーグが届く 
時刻 270 に APC ラーメンを注文する 時刻 378 に APC ラーメンが届く 
時刻 380 に ABC 丼を注文する 時刻 481 に ABC 丼が届く 

これより早く最後の料理が届くような方法は存在しません   

入力例 3123
123
123
123
123


出力例 3643

これが入力される最大のケースです   
Problem Statement
The restaurant AtCoder serves the following five dishes 

ABC Don  rice bowl   takes A minutes to serve 
ARC Curry  takes B minutes to serve 
AGC Pasta  takes C minutes to serve 
APC Ramen  takes D minutes to serve 
ATC Hanbagu  hamburger patty   takes E minutes to serve 

Here  the time to serve a dish is the time between when an order is placed and when the dish is delivered 
This restaurant has the following rules on orders 

An order can only be placed at a time that is a multiple of 10  time 0  10  20       
Only one dish can be ordered at a time 
No new order can be placed when an order is already placed and the dish is still not delivered  but a new order can be placed at the exact time when the dish is delivered 

E869120 arrives at this restaurant at time 0  He will order all five dishes  Find the earliest possible time for the last dish to be delivered 
Here  he can order the dishes in any order he likes  and he can place an order already at time 0 

Constraints

A  B  C  D and E are integers between 1 and 123  inclusive  


Input
Input is given from Standard Input in the following format 
A
B
C
D
E


Output
Print the earliest possible time for the last dish to be delivered  as an integer 

Sample Input 129
20
7
35
120


Sample Output 1215

If we decide to order the dishes in the order ABC Don  ARC Curry  AGC Pasta  ATC Hanbagu  APC Ramen  the earliest possible time for each order is as follows 

Order ABC Don at time 0  which will be delivered at time 29 
Order ARC Curry at time 30  which will be delivered at time 50 
Order AGC Pasta at time 50  which will be delivered at time 57 
Order ATC Hanbagu at time 60  which will be delivered at time 180 
Order APC Ramen at time 180  which will be delivered at time 215 

There is no way to order the dishes in which the last dish will be delivered earlier than this 

Sample Input 2101
86
119
108
57


Sample Output 2481

If we decide to order the dishes in the order AGC Pasta  ARC Curry  ATC Hanbagu  APC Ramen  ABC Don  the earliest possible time for each order is as follows 

Order AGC Pasta at time 0  which will be delivered at time 119 
Order ARC Curry at time 120  which will be delivered at time 206 
Order ATC Hanbagu at time 210  which will be delivered at time 267 
Order APC Ramen at time 270  which will be delivered at time 378 
Order ABC Don at time 380  which will be delivered at time 481 

There is no way to order the dishes in which the last dish will be delivered earlier than this 

Sample Input 3123
123
123
123
123


Sample Output 3643

This is the largest valid case"
Five Transportations,https://atcoder.jp/contests/abc123/tasks/abc123_c,"問題文
AtCoder 社は成長し 2028 年になってついに 6 つの都市  都市 1  2  3  4  5  6  からなる AtCoder 帝国を作りました   
AtCoder 帝国には 5 つの交通機関があります 

電車 都市 1 から 2 まで 1 分で移動する 1 つの電車には A 人まで乗ることができる 
バス 都市 2 から 3 まで 1 分で移動する 1 つのバスには B 人まで乗ることができる 
タクシー 都市 3 から 4 まで 1 分で移動する 1 つのタクシーには C 人まで乗ることができる 
飛行機 都市 4 から 5 まで 1 分で移動する 1 つの飛行機には D 人まで乗ることができる 
船 都市 5 から 6 までを 1 分で移動する 1 つの船には E 人まで乗ることができる 

それぞれの交通機関は 各整数時刻  0  1  2  3       に 都市から出発します 
いま N 人のグループが都市 1 におり 全員都市 6 まで移動したいです 全員が都市 6 に到着するまでに最短で何分かかるでしょうか 
なお 乗り継ぎにかかる時間を考える必要はありません   

制約

1  leq N  A  B  C  D  E  leq 10  15 
入力中の値はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
N
A
B
C
D
E


出力
全員が都市 6 に移動するのに必要な最小の時間を分単位で出力せよ   

入力例 15
3
2
4
3
5


出力例 17

例えば 次のような移動方法が考えられます 
はじめ 次の画像のように N   5 人が都市 1 にいます   

1 分後までに 3 人が都市 1 から都市 2 に電車で移動します ここで 電車は一度に 3 人までしか運べないことに注意してください   

2 分後までに 残り 2 人が都市 1 から都市 2 に電車で移動し 都市 2 にいた 3 人のうち 2 人がバスで都市 3 に移動します ここで バスは一度に 2 人までしか運べないことに注意してください   

3 分後までに 2 人が都市 2 から都市 3 にバスで移動し 2 人が都市 3 から都市 4 にタクシーで移動します     

それ以降は まだ都市 6 に到着していない人が止まらずに移動し続けると 全員が 7 分で都市 6 に着くことができます 
また 6 分以内で全員が都市 6 に着く方法はありません   

入力例 210
123
123
123
123
123


出力例 25

どの交通機関も N   10 人を 1 回で運ぶことができます 
したがって 全員が止まらずに移動し続ければ 5 分で都市 6 に着くことができます   

入力例 310000000007
2
3
5
7
11


出力例 35000000008

入力 出力が 32 ビット整数型に収まらない可能性があることに注意してください   
Problem Statement
In 2028 and after a continuous growth  AtCoder Inc  finally built an empire with six cities  City 1  2  3  4  5  6  
There are five means of transport in this empire 

Train  travels from City 1 to 2 in one minute  A train can occupy at most A people 
Bus  travels from City 2 to 3 in one minute  A bus can occupy at most B people 
Taxi  travels from City 3 to 4 in one minute  A taxi can occupy at most C people 
Airplane  travels from City 4 to 5 in one minute  An airplane can occupy at most D people 
Ship  travels from City 5 to 6 in one minute  A ship can occupy at most E people 

For each of them  one vehicle leaves the city at each integer time  time 0  1  2       
There is a group of N people at City 1  and they all want to go to City 6 
At least how long does it take for all of them to reach there  
You can ignore the time needed to transfer   

Constraints

1  leq N  A  B  C  D  E  leq 10  15 
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N
A
B
C
D
E


Output
Print the minimum time required for all of the people to reach City 6  in minutes 

Sample Input 15
3
2
4
3
5


Sample Output 17

One possible way to travel is as follows 
First  there are N   5 people at City 1  as shown in the following image 

In the first minute  three people travels from City 1 to City 2 by train  Note that a train can only occupy at most three people 

In the second minute  the remaining two people travels from City 1 to City 2 by train  and two of the three people who were already at City 2 travels to City 3 by bus  Note that a bus can only occupy at most two people 

In the third minute  two people travels from City 2 to City 3 by train  and another two people travels from City 3 to City 4 by taxi 

From then on  if they continue traveling without stopping until they reach City 6  all of them can reach there in seven minutes 
There is no way for them to reach City 6 in 6 minutes or less 

Sample Input 210
123
123
123
123
123


Sample Output 25

All kinds of vehicles can occupy N   10 people at a time 
Thus  if they continue traveling without stopping until they reach City 6  all of them can reach there in five minutes   

Sample Input 310000000007
2
3
5
7
11


Sample Output 35000000008

Note that the input or output may not fit into a 32 bit integer type"
Cake 123,https://atcoder.jp/contests/abc123/tasks/abc123_d,"問題文
AtCoder 洋菓子店は数字の形をしたキャンドルがついたケーキを販売しています 
ここには 1  2  3 の形をしたキャンドルがついたケーキがそれぞれ X 種類 Y 種類 Z 種類あります 
それぞれのケーキには 美味しさ という整数の値が以下のように割り当てられています   

1 の形のキャンドルがついたケーキの美味しさはそれぞれ A 1  A 2       A X
2 の形のキャンドルがついたケーキの美味しさはそれぞれ B 1  B 2       B Y
3 の形のキャンドルがついたケーキの美味しさはそれぞれ C 1  C 2       C Z

高橋君は ABC 123 を記念するために 1  2  3 の形のキャンドルがついたケーキを 1 つずつ買うことにしました 
そのようにケーキを買う方法は X  times Y  times Z 通りあります   
これらの選び方を 3 つのケーキの美味しさの合計が大きい順に並べたとき 1  2       K 番目の選び方でのケーキの美味しさの合計をそれぞれ出力してください   

制約

1  leq X  leq 1   000
1  leq Y  leq 1   000
1  leq Z  leq 1   000
1  leq K  leq  min 3   000  X  times Y  times Z 
1  leq A i  leq 10   000   000   000
1  leq B i  leq 10   000   000   000
1  leq C i  leq 10   000   000   000
入力中の値はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
X Y Z K
A 1   A 2   A 3         A X
B 1   B 2   B 3         B Y
C 1   C 2   C 3         C Z


出力
i 行目に 問題文中の i 番目の値を出力せよ   

入力例 12 2 2 8
4 6
1 5
3 8


出力例 119
17
15
14
13
12
10
8

3 つのケーキの選び方は 2  times 2  times 2   8 通りあり それらをケーキの美味しさの合計が大きい順に並べると以下の通りです 

 A 2  B 2  C 2   6   5   8   19
 A 1  B 2  C 2   4   5   8   17
 A 2  B 1  C 2   6   1   8   15
 A 2  B 2  C 1   6   5   3   14
 A 1  B 1  C 2   4   1   8   13
 A 1  B 2  C 1   4   5   3   12
 A 2  B 1  C 1   6   1   3   10
 A 1  B 1  C 1   4   1   3   8


入力例 23 3 3 5
1 10 100
2 20 200
1 10 100


出力例 2400
310
310
301
301

美味しさの合計が同じになる組み合わせが複数ある可能性もあります 例えば このテストケースで  A 1  B 3  C 3  を選ぶときと  A 3  B 3  C 1  を選ぶときはともに 美味しさの合計が 301 となります 
しかし これらは異なる選び方であるため 出力には 301 が 2 回出現します 

入力例 310 10 10 20
7467038376 5724769290 292794712 2843504496 3381970101 8402252870 249131806 6310293640 6690322794 6082257488
1873977926 2576529623 1144842195 1379118507 6003234687 4925540914 3902539811 3326692703 484657758 2877436338
4975681328 8974383988 2882263257 7690203955 514305523 6679823484 4263279310 585966808 3752282379 620585736


出力例 323379871545
22444657051
22302177772
22095691512
21667941469
21366963278
21287912315
21279176669
21160477018
21085311041
21059876163
21017997739
20703329561
20702387965
20590247696
20383761436
20343962175
20254073196
20210218542
20150096547

入力 出力は 32 ビット整数に収まらない可能性があることに注意してください   
Problem Statement
The Patisserie AtCoder sells cakes with number shaped candles 
There are X  Y and Z kinds of cakes with 1 shaped  2 shaped and 3 shaped candles  respectively 
Each cake has an integer value called deliciousness  as follows 

The deliciousness of the cakes with 1 shaped candles are A 1  A 2       A X 
The deliciousness of the cakes with 2 shaped candles are B 1  B 2       B Y 
The deliciousness of the cakes with 3 shaped candles are C 1  C 2       C Z 

Takahashi decides to buy three cakes  one for each of the three shapes of the candles  to celebrate ABC 123 
There are X  times Y  times Z such ways to choose three cakes 
We will arrange these X  times Y  times Z ways in descending order of the sum of the deliciousness of the cakes 
Print the sums of the deliciousness of the cakes for the first  second       K th ways in this list 

Constraints

1  leq X  leq 1   000
1  leq Y  leq 1   000
1  leq Z  leq 1   000
1  leq K  leq  min 3   000  X  times Y  times Z 
1  leq A i  leq 10   000   000   000
1  leq B i  leq 10   000   000   000
1  leq C i  leq 10   000   000   000
All values in input are integers 


Input
Input is given from Standard Input in the following format 
X Y Z K
A 1   A 2   A 3         A X
B 1   B 2   B 3         B Y
C 1   C 2   C 3         C Z


Output
Print K lines  The i th line should contain the i th value stated in the problem statement 

Sample Input 12 2 2 8
4 6
1 5
3 8


Sample Output 119
17
15
14
13
12
10
8

There are 2  times 2  times 2   8 ways to choose three cakes  as shown below in descending order of the sum of the deliciousness of the cakes 

 A 2  B 2  C 2   6   5   8   19
 A 1  B 2  C 2   4   5   8   17
 A 2  B 1  C 2   6   1   8   15
 A 2  B 2  C 1   6   5   3   14
 A 1  B 1  C 2   4   1   8   13
 A 1  B 2  C 1   4   5   3   12
 A 2  B 1  C 1   6   1   3   10
 A 1  B 1  C 1   4   1   3   8


Sample Input 23 3 3 5
1 10 100
2 20 200
1 10 100


Sample Output 2400
310
310
301
301

There may be multiple combinations of cakes with the same sum of the deliciousness  For example  in this test case  the sum of A 1  B 3  C 3 and the sum of A 3  B 3  C 1 are both 301 
However  they are different ways of choosing cakes  so 301 occurs twice in the output 

Sample Input 310 10 10 20
7467038376 5724769290 292794712 2843504496 3381970101 8402252870 249131806 6310293640 6690322794 6082257488
1873977926 2576529623 1144842195 1379118507 6003234687 4925540914 3902539811 3326692703 484657758 2877436338
4975681328 8974383988 2882263257 7690203955 514305523 6679823484 4263279310 585966808 3752282379 620585736


Sample Output 323379871545
22444657051
22302177772
22095691512
21667941469
21366963278
21287912315
21279176669
21160477018
21085311041
21059876163
21017997739
20703329561
20702387965
20590247696
20383761436
20343962175
20254073196
20210218542
20150096547

Note that the input or output may not fit into a 32 bit integer type"
Buttons,https://atcoder.jp/contests/abc124/tasks/abc124_a,"問題文2 個のボタンがあり 大きさはそれぞれ A  B です 
大きさ X のボタンを押すと X 枚のコインを獲得し そのボタンの大きさが 1 小さくなります 
あなたは いずれかのボタンを押すことを 2 回行います 
同じボタンを 2 回押しても構いません 
最大で何枚のコインを獲得できるでしょうか 

制約
入力は全て整数である 
3  leq A  B  leq 20


入力入力は以下の形式で標準入力から与えられる 
A B


出力獲得できるコインの枚数の最大値を出力せよ 

入力例 15 3


出力例 19

大きさ 5 のボタンを 2 回押すと 5   4   9 枚のコインが獲得でき これが最大です 

入力例 23 4


出力例 27


入力例 36 6


出力例 312

Problem StatementThere are two buttons  one of size A and one of size B 
When you press a button of size X  you get X coins and the size of that button decreases by 1 
You will press a button twice  Here  you can press the same button twice  or press both buttons once 
At most how many coins can you get 

Constraints
All values in input are integers 
3  leq A  B  leq 20


InputInput is given from Standard Input in the following format 
A B


OutputPrint the maximum number of coins you can get 

Sample Input 15 3


Sample Output 19

You can get 5   4   9 coins by pressing the button of size 5 twice  and this is the maximum result 

Sample Input 23 4


Sample Output 27


Sample Input 36 6


Sample Output 312"
Great Ocean View,https://atcoder.jp/contests/abc124/tasks/abc124_b,"問題文東西に N 個の山が連なっており 西の果てには広大な海が広がっています 
各山頂には旅館があり あなたは海を眺められる旅館を選ぶことにしました 
西から i 番目の山の高さは H i です 
西から 1 番目の山頂にある旅館からは必ず海を眺めることができます 
西から i  i   2  3       N  番目の山頂にある旅館については H 1  leq H i  H 2  leq H i       かつ H  i 1   leq H i のとき その旅館から海を眺めることができます 
これら N 個の旅館のうち 海を眺められる旅館はいくつあるでしょうか 

制約
入力は全て整数である 
1  leq N  leq 20
1  leq H i  leq 100


入力入力は以下の形式で標準入力から与えられる 
N
H 1 H 2     H N


出力海を眺められる旅館の数を出力せよ 

入力例 14
6 5 6 8


出力例 13

西から 1  3  4 番目の旅館から海を眺めることができます 

入力例 25
4 5 3 5 4


出力例 23


入力例 35
9 5 6 8 4


出力例 31

Problem StatementThere are N mountains ranging from east to west  and an ocean to the west 
At the top of each mountain  there is an inn  You have decided to choose where to stay from these inns 
The height of the i th mountain from the west is H i 
You can certainly see the ocean from the inn at the top of the westmost mountain 
For the inn at the top of the i th mountain from the west  i   2  3       N   you can see the ocean if and only if H 1  leq H i  H 2  leq H i       and H  i 1   leq H i 
From how many of these N inns can you see the ocean 

Constraints
All values in input are integers 
1  leq N  leq 20
1  leq H i  leq 100


InputInput is given from Standard Input in the following format 
N
H 1 H 2     H N


OutputPrint the number of inns from which you can see the ocean 

Sample Input 14
6 5 6 8


Sample Output 13

You can see the ocean from the first  third and fourth inns from the west 

Sample Input 25
4 5 3 5 4


Sample Output 23


Sample Input 35
9 5 6 8 4


Sample Output 31"
Coloring Colorfully,https://atcoder.jp/contests/abc124/tasks/abc124_c,"問題文左右一列に N 枚のタイルが並んでおり 各タイルの初めの色は長さ N の文字列 S で表されます 
左から i 番目のタイルは S の i 番目の文字が 0 のとき黒色で 1 のとき白色で塗られています 
あなたは いくつかのタイルを黒色または白色に塗り替えることで どの隣り合う 2 枚のタイルも異なる色で塗られているようにしたいです 
最小で何枚のタイルを塗り替えることで条件を満たすようにできるでしょうか 

制約
1  leq  S   leq 10 5
S i は 0 または 1 である 


入力入力は以下の形式で標準入力から与えられる 
S


出力条件を満たすために塗り替えるタイルの枚数の最小値を出力せよ 

入力例 1000


出力例 11

中央のタイルを白色に塗り替えれば条件を達成できます 

入力例 210010010


出力例 23


入力例 30


出力例 30

Problem StatementN tiles are arranged in a row from left to right  The initial color of each tile is represented by a string S of length N 
The i th tile from the left is painted black if the i th character of S is 0  and painted white if that character is 1 
You want to repaint some of the tiles black or white  so that any two adjacent tiles have different colors 
At least how many tiles need to be repainted to satisfy the condition 

Constraints
1  leq  S   leq 10 5
S i is 0 or 1 


InputInput is given from Standard Input in the following format 
S


OutputPrint the minimum number of tiles that need to be repainted to satisfy the condition 

Sample Input 1000


Sample Output 11

The condition can be satisfied by repainting the middle tile white 

Sample Input 210010010


Sample Output 23


Sample Input 30


Sample Output 30"
Handstand,https://atcoder.jp/contests/abc124/tasks/abc124_d,"問題文N 人の人が左右一列に並んでいます 
0  1 からなる長さ N の文字列 S と正整数 K が与えられます 
左から i 番目の人は S の i 文字目が 0 のとき直立し 1 のとき逆立ちしています 
あなたは K 回まで以下の指示を行います 一度も行わなくても構いません 
指示  1  leq l  leq r  leq N を満たす整数 l  r を選ぶ 左から l  l 1       r 番目の人の状態を反転する すなわち i   l  l 1       r について 左から i 番目の人は直立していれば逆立ちし 逆立ちしていれば直立する 
K 回までの指示で 逆立ちした人を連続で最大何人並ばせることができるか求めてください 

制約
N は 1  leq N  leq 10 5 を満たす整数である 
K は 1  leq K  leq 10 5 を満たす整数である 
文字列 S の長さは N である 
文字列 S の各文字は 0 または 1 である 


入力入力は以下の形式で標準入力から与えられる 
N K
S


出力K 回までの指示で 逆立ちした人を連続で最大何人並ばせることができるか出力せよ 

入力例 15 1
00010


出力例 14

以下のように指示を行えば逆立ちした人を連続して 4 人並ばせることができ これが最大です 

l   1  r   3 として指示を行う その結果 左から 1  2  3 番目の人の状態が反転する 


入力例 214 2
11101010110011


出力例 28


入力例 31 1
1


出力例 31

一度も指示を行う必要はありません 
Problem StatementN people are arranged in a row from left to right 
You are given a string S of length N consisting of 0 and 1  and a positive integer K 
The i th person from the left is standing on feet if the i th character of S is 0  and standing on hands if that character is 1 
You will give the following direction at most K times  possibly zero  
Direction  Choose integers l and r satisfying 1  leq l  leq r  leq N  and flip the l th   l 1  th       and r th persons  That is  for each i   l  l 1       r  the i th person from the left now stands on hands if he she was standing on feet  and stands on feet if he she was standing on hands 
Find the maximum possible number of consecutive people standing on hands after at most K directions 

Constraints
N is an integer satisfying 1  leq N  leq 10 5 
K is an integer satisfying 1  leq K  leq 10 5 
The length of the string S is N 
Each character of the string S is 0 or 1 


InputInput is given from Standard Input in the following format 
N K
S


OutputPrint the maximum possible number of consecutive people standing on hands after at most K directions 

Sample Input 15 1
00010


Sample Output 14

We can have four consecutive people standing on hands  which is the maximum result  by giving the following direction 

Give the direction with l   1  r   3  which flips the first  second and third persons from the left 


Sample Input 214 2
11101010110011


Sample Output 28


Sample Input 31 1
1


Sample Output 31

No directions are necessary"
Biscuit Generator,https://atcoder.jp/contests/abc125/tasks/abc125_a,"問題文ビスケット生産装置を起動すると 起動してから A 秒後 2A 秒後 3A 秒後      A の倍数秒後  に B 枚ずつビスケットを生産します 
ビスケット生産装置を起動してから T   0 5 秒後までに生産されるビスケットの合計枚数を求めてください 

制約
入力は全て整数である 
1  leq A  B  T  leq 20


入力入力は以下の形式で標準入力から与えられる 
A B T


出力ビスケット生産装置を起動してから T   0 5 秒後までに生産されるビスケットの合計枚数を出力せよ 

入力例 13 5 7


出力例 110


ビスケット生産装置を起動してから 3 秒後に 5 枚のビスケットが生産されます 
ビスケット生産装置を起動してから 6 秒後に 5 枚のビスケットが生産されます 
したがって ビスケット生産装置を起動してから 7 5 秒後までに合計 10 枚のビスケットが生産されます 


入力例 23 2 9


出力例 26


入力例 320 20 19


出力例 30

Problem StatementA biscuit making machine produces B biscuits at the following moments  A seconds  2A seconds  3A seconds and each subsequent multiple of A seconds after activation 
Find the total number of biscuits produced within T   0 5 seconds after activation 

Constraints
All values in input are integers 
1  leq A  B  T  leq 20


InputInput is given from Standard Input in the following format 
A B T


OutputPrint the total number of biscuits produced within T   0 5 seconds after activation 

Sample Input 13 5 7


Sample Output 110


Five biscuits will be produced three seconds after activation 
Another five biscuits will be produced six seconds after activation 
Thus  a total of ten biscuits will be produced within 7 5 seconds after activation 


Sample Input 23 2 9


Sample Output 26


Sample Input 320 20 19


Sample Output 30"
Resale,https://atcoder.jp/contests/abc125/tasks/abc125_b,"問題文N 個の宝石があり i 番目の宝石の価値は V i です 
あなたはこれらの宝石の中からいくつかを選んで手に入れます 
このとき 1 つも選ばなくとも 全て選んでも構いません 
ただし i 番目の宝石を手に入れる場合コスト C i を支払わなければいけません 
手に入れた宝石の価値の合計を X 支払ったコストの合計を Y とします 
X Y の最大値を求めてください 

制約
入力は全て整数である 
1  leq N  leq 20
1  leq C i  V i  leq 50


入力入力は以下の形式で標準入力から与えられる 
N
V 1 V 2     V N
C 1 C 2     C N


出力X Y の最大値を出力せよ 

入力例 13
10 2 5
6 3 4


出力例 15

1 番目の宝石と 3 番目の宝石を選んだとき X   10   5   15  Y   6   4   10 です 
このとき X Y   5 となり これが最大です 

入力例 24
13 21 6 19
11 30 6 15


出力例 26


入力例 31
1
50


出力例 30

Problem StatementThere are N gems  The value of the i th gem is V i 
You will choose some of these gems  possibly all or none  and get them 
However  you need to pay a cost of C i to get the i th gem 
Let X be the sum of the values of the gems obtained  and Y be the sum of the costs paid 
Find the maximum possible value of X Y 

Constraints
All values in input are integers 
1  leq N  leq 20
1  leq C i  V i  leq 50


InputInput is given from Standard Input in the following format 
N
V 1 V 2     V N
C 1 C 2     C N


OutputPrint the maximum possible value of X Y 

Sample Input 13
10 2 5
6 3 4


Sample Output 15

If we choose the first and third gems  X   10   5   15 and Y   6   4   10 
We have X Y   5 here  which is the maximum possible value 

Sample Input 24
13 21 6 19
11 30 6 15


Sample Output 26


Sample Input 31
1
50


Sample Output 30"
GCD on Blackboard,https://atcoder.jp/contests/abc125/tasks/abc125_c,"問題文N 個の整数 A 1  A 2       A N が黒板に書かれています 
あなたはこの中から整数を 1 つ選んで 1 以上 10 9 以下の好きな整数に書き換えます 
元の整数と同じ整数に書き換えても構いません 
書き換えた後の N 個の整数の最大公約数の最大値を求めてください 

制約
入力は全て整数である 
2  leq N  leq 10 5
1  leq A i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N
A 1 A 2     A N


出力書き換えた後の N 個の整数の最大公約数の最大値を出力せよ 

入力例 13
7 6 8


出力例 12

7 を 4 に書き換えると 3 つの整数の最大公約数は 2 となり これが最大です 

入力例 23
12 15 18


出力例 26


入力例 32
1000000000 1000000000


出力例 31000000000

元の整数と同じ整数に書き換えることも可能です 
Problem StatementThere are N integers  A 1  A 2       A N  written on the blackboard 
You will choose one of them and replace it with an integer of your choice between 1 and 10 9  inclusive   possibly the same as the integer originally written 
Find the maximum possible greatest common divisor of the N integers on the blackboard after your move 

Constraints
All values in input are integers 
2  leq N  leq 10 5
1  leq A i  leq 10 9


OutputInput is given from Standard Input in the following format 
N
A 1 A 2     A N


OutputPrint the maximum possible greatest common divisor of the N integers on the blackboard after your move 

Sample Input 13
7 6 8


Sample Output 12

If we replace 7 with 4  the greatest common divisor of the three integers on the blackboard will be 2  which is the maximum possible value 

Sample Input 23
12 15 18


Sample Output 26


Sample Input 32
1000000000 1000000000


Sample Output 31000000000

We can replace an integer with itself"
Flipping Signs,https://atcoder.jp/contests/abc125/tasks/abc125_d,"問題文N 個の整数が並んでおり 順に A 1  A 2       A N です 
あなたはこの整数列に対して次の操作を好きなだけ行うことができます 
操作  1  leq i  leq N 1 を満たす整数 i を選ぶ A i と A  i 1  に  1 を乗算する 
操作終了後の整数列を B 1  B 2       B N とします 
B 1   B 2         B N の最大値を求めてください 

制約
入力は全て整数である 
2  leq N  leq 10 5
 10 9  leq A i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N
A 1 A 2     A N


出力B 1   B 2         B N の最大値を出力せよ 

入力例 13
 10 5  4


出力例 119

次のように操作を行うと B 1   10  B 2   5  B 3   4 になり このときの B 1   B 2   B 3   10   5   4   19 が最大です 

i として 1 を選ぶ 操作により 整数列は 10   5   4 に変化する 
i として 2 を選ぶ 操作により 整数列は 10  5  4 に変化する 


入力例 25
10  4  8  11 3


出力例 230


入力例 311
 1000000000 1000000000  1000000000 1000000000  1000000000 0 1000000000  1000000000 1000000000  1000000000 1000000000


出力例 310000000000

出力が 32 ビット整数型に収まらない場合があります 
Problem StatementThere are N integers  A 1  A 2       A N  arranged in a row in this order 
You can perform the following operation on this integer sequence any number of times 
Operation  Choose an integer i satisfying 1  leq i  leq N 1  Multiply both A i and A  i 1  by  1 
Let B 1  B 2       B N be the integer sequence after your operations 
Find the maximum possible value of B 1   B 2         B N 

Constraints
All values in input are integers 
2  leq N  leq 10 5
 10 9  leq A i  leq 10 9


InputInput is given from Standard Input in the following format 
N
A 1 A 2     A N


OutputPrint the maximum possible value of B 1   B 2         B N 

Sample Input 13
 10 5  4


Sample Output 119

If we perform the operation as follows 

Choose 1 as i  which changes the sequence to 10   5   4 
Choose 2 as i  which changes the sequence to 10  5  4 

we have B 1   10  B 2   5  B 3   4  The sum here  B 1   B 2   B 3   10   5   4   19  is the maximum possible result 

Sample Input 25
10  4  8  11 3


Sample Output 230


Sample Input 311
 1000000000 1000000000  1000000000 1000000000  1000000000 0 1000000000  1000000000 1000000000  1000000000 1000000000


Sample Output 310000000000

The output may not fit into a 32 bit integer type"
Changing a Character,https://atcoder.jp/contests/abc126/tasks/abc126_a,nan
YYMM or MMYY,https://atcoder.jp/contests/abc126/tasks/abc126_b,"問題文長さ 4 の数字列 S が与えられます あなたは この数字列が以下のフォーマットのどちらであるか気になっています 

YYMM フォーマット  西暦年の下 2 桁と 月を 2 桁で表したもの  例えば 1 月なら 01  をこの順に並べたもの
MMYY フォーマット  月を 2 桁で表したもの  例えば 1 月なら 01  と 西暦年の下 2 桁をこの順に並べたもの

与えられた数字列のフォーマットとして考えられるものが YYMM フォーマットのみである場合 YYMM を 
MMYY フォーマットのみである場合 MMYY を 
YYMM フォーマット と MMYY フォーマットのどちらの可能性もある場合 AMBIGUOUS を 
どちらの可能性もない場合 NA を出力してください 

制約
S は長さ 4 の数字列


入力入力は以下の形式で標準入力から与えられる 
S


出力YYMM  MMYY  AMBIGUOUS  NA のうち正しいものを出力せよ 

入力例 11905


出力例 1YYMM

19 年 5 月はありえますが 05 年 19 月はありえません よって これは YYMM フォーマットです 

入力例 20112


出力例 2AMBIGUOUS

01 年 12 月も 12 年 1 月もありえます よって これはどちらの可能性もあります 

入力例 31700


出力例 3NA

17 年 0 月も 00 年 17 月もありえません よって これはどちらの可能性もありません 
Problem StatementYou have a digit sequence S of length 4  You are wondering which of the following formats S is in 

YYMM format  the last two digits of the year and the two digit representation of the month  example  01 for January   concatenated in this order
MMYY format  the two digit representation of the month and the last two digits of the year  concatenated in this order

If S is valid in only YYMM format  print YYMM  if S is valid in only MMYY format  print MMYY  if S is valid in both formats  print AMBIGUOUS  if S is valid in neither format  print NA 

Constraints
S is a digit sequence of length 4 


InputInput is given from Standard Input in the following format 
S


OutputPrint the specified string  YYMM  MMYY  AMBIGUOUS or NA 

Sample Input 11905


Sample Output 1YYMM

May XX19 is a valid date  but 19 is not valid as a month  Thus  this string is only valid in YYMM format 

Sample Input 20112


Sample Output 2AMBIGUOUS

Both December XX01 and January XX12 are valid dates  Thus  this string is valid in both formats 

Sample Input 31700


Sample Output 3NA

Neither 0 nor 17 is valid as a month  Thus  this string is valid in neither format"
Dice and Coin,https://atcoder.jp/contests/abc126/tasks/abc126_c,"問題文すぬけ君は 1   N の整数が等確率で出る N 面サイコロと表と裏が等確率で出るコインを持っています すぬけ君は このサイコロとコインを使って今から次のようなゲームをします 

まず サイコロを 1 回振り 出た目を現在の得点とする 
得点が 1 以上 K 1 以下である限り すぬけ君はコインを振り続ける 表が出たら得点は 2 倍になり 裏が出たら得点は 0 になる 
得点が 0 になった もしくは K 以上になった時点でゲームが終了する このとき 得点が K 以上である場合すぬけ君の勝ち  0 である場合すぬけ君の負けである 

N と K が与えられるので このゲームですぬけ君が勝つ確率を求めてください 

制約
1   N   10 5
1   K   10 5
入力はすべて整数


入力入力は以下の形式で標準入力から与えられる 
N K


出力すぬけ君が勝つ確率を出力せよ 絶対誤差または相対誤差が 10   9  以下のとき正解とみなされる 

入力例 13 10


出力例 10 145833333333


サイコロの出た目が 1 のとき 得点が 10 以上になるためには  4 回コインを振って 4 連続で表が出る必要があります この確率は   frac 1  3   times   frac 1  2   4    frac 1  48  です 
サイコロの出た目が 2 のとき 得点が 10 以上になるためには  3 回コインを振って 3 連続で表が出る必要があります この確率は   frac 1  3   times   frac 1  2   3    frac 1  24  です 
サイコロの出た目が 3 のとき 得点が 10 以上になるためには  2 回コインを振って 2 連続で表が出る必要があります この確率は   frac 1  3   times   frac 1  2   2    frac 1  12  です 

よって すぬけ君が勝つ確率は   frac 1  48     frac 1  24     frac 1  12     frac 7  48   simeq 0 1458333333 です 

入力例 2100000 5


出力例 20 999973749998

Problem StatementSnuke has a fair N sided die that shows the integers from 1 to N with equal probability and a fair coin  He will play the following game with them 

Throw the die  The current score is the result of the die 
As long as the score is between 1 and K 1  inclusive   keep flipping the coin  The score is doubled each time the coin lands heads up  and the score becomes 0 if the coin lands tails up 
The game ends when the score becomes 0 or becomes K or above  Snuke wins if the score is K or above  and loses if the score is 0 

You are given N and K  Find the probability that Snuke wins the game 

Constraints
1   N   10 5
1   K   10 5
All values in input are integers 


InputInput is given from Standard Input in the following format 
N K


OutputPrint the probability that Snuke wins the game  The output is considered correct when the absolute or relative error is at most 10   9  

Sample Input 13 10


Sample Output 10 145833333333


If the die shows 1  Snuke needs to get four consecutive heads from four coin flips to obtain a score of 10 or above  The probability of this happening is  frac 1  3   times   frac 1  2   4    frac 1  48  
If the die shows 2  Snuke needs to get three consecutive heads from three coin flips to obtain a score of 10 or above  The probability of this happening is  frac 1  3   times   frac 1  2   3    frac 1  24  
If the die shows 3  Snuke needs to get two consecutive heads from two coin flips to obtain a score of 10 or above  The probability of this happening is  frac 1  3   times   frac 1  2   2    frac 1  12  

Thus  the probability that Snuke wins is  frac 1  48     frac 1  24     frac 1  12     frac 7  48   simeq 0 1458333333 

Sample Input 2100000 5


Sample Output 20 999973749998"
Even Relation,https://atcoder.jp/contests/abc126/tasks/abc126_d,"問題文N 頂点の木があります 
この木の i 番目の辺は頂点 u i と頂点 v i を結んでおり その長さは w i です 
あなたは以下の条件を満たすように この木の頂点を白と黒の 2 色で塗り分けたいです  すべての頂点を同じ色で塗っても構いません  

同じ色に塗られた任意の 2 頂点について その距離が偶数である 

条件を満たす塗り分け方を 1 つ見つけて出力してください この問題の制約下では そのような塗り分け方が必ず 1 つは存在することが証明できます 

制約
入力は全て整数である 
1  leq N  leq 10 5
1  leq u i   v i  leq N
1  leq w i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N
u 1 v 1 w 1
u 2 v 2 w 2
 
 
 
u  N   1  v  N   1  w  N   1 


出力題意の条件を満たすような頂点の塗り分け方を N 行に分けて出力せよ 
i 行目には 頂点 i を白く塗る場合は 0 を 黒く塗る場合は 1 を出力せよ 
条件を満たす塗り分け方が複数存在する場合 どれを出力してもよい 

入力例 13
1 2 2
2 3 1


出力例 10
0
1


入力例 25
2 5 2
2 3 10
1 3 8
3 4 2


出力例 21
0
1
0
1

Problem StatementWe have a tree with N vertices numbered 1 to N 
The i th edge in the tree connects Vertex u i and Vertex v i  and its length is w i 
Your objective is to paint each vertex in the tree white or black  it is fine to paint all vertices the same color  so that the following condition is satisfied 

For any two vertices painted in the same color  the distance between them is an even number 

Find a coloring of the vertices that satisfies the condition and print it  It can be proved that at least one such coloring exists under the constraints of this problem 

Constraints
All values in input are integers 
1  leq N  leq 10 5
1  leq u i   v i  leq N
1  leq w i  leq 10 9


InputInput is given from Standard Input in the following format 
N
u 1 v 1 w 1
u 2 v 2 w 2
 
 
 
u  N   1  v  N   1  w  N   1 


OutputPrint a coloring of the vertices that satisfies the condition  in N lines 
The i th line should contain 0 if Vertex i is painted white and 1 if it is painted black 
If there are multiple colorings that satisfy the condition  any of them will be accepted 

Sample Input 13
1 2 2
2 3 1


Sample Output 10
0
1


Sample Input 25
2 5 2
2 3 10
1 3 8
3 4 2


Sample Output 21
0
1
0
1"
1 or 2,https://atcoder.jp/contests/abc126/tasks/abc126_e,"問題文N 枚のカードが一列に伏せられており 各カードには整数 1 または 2 が書かれています 
i 番目のカードに書かれている整数を A i とします 
あなたの目的は A 1  A 2       A N を当てることです 
次のことが分かっています 

i   1  2       M について A  X i    A  Y i    Z i は偶数である 

あなたは魔法使いです 次の魔法を何度でも使うことができます 
魔法  コストを 1 払う カードを 1 枚選び そのカードに書かれた整数 A i を知る 
最小で何コスト払えば A 1  A 2       A N 全てを確実に当てることができるでしょうか 
なお 与えられる入力には矛盾がないことが保証されます 

制約
入力は全て整数である 
2  leq N  leq 10 5
1  leq M  leq 10 5
1  leq X i   Y i  leq N
1  leq Z i  leq 100
 X i  Y i  の組は互いに異なる 
与えられる入力には矛盾がない すなわち 条件を満たす A 1  A 2       A N が存在する  


入力入力は以下の形式で標準入力から与えられる 
N M
X 1 Y 1 Z 1
X 2 Y 2 Z 2
 vdots
X M Y M Z M


出力A 1  A 2       A N 全てを確実に当てるために払う必要のあるコストの合計の最小値を出力せよ 

入力例 13 1
1 2 1


出力例 12

1 枚目と 3 枚目のカードに対してそれぞれ 1 回ずつ魔法を使えば A 1  A 2  A 3 全てを当てることができます 

入力例 26 5
1 2 1
2 3 2
1 3 3
4 5 4
5 6 5


出力例 22


入力例 3100000 1
1 100000 100


出力例 399999

Problem StatementThere are N cards placed face down in a row  On each card  an integer 1 or 2 is written 
Let A i be the integer written on the i th card 
Your objective is to guess A 1  A 2       A N correctly 
You know the following facts 

For each i   1  2       M  the value A  X i    A  Y i    Z i is an even number 

You are a magician and can use the following magic any number of times 
Magic  Choose one card and know the integer A i written on it  The cost of using this magic is 1 
What is the minimum cost required to determine all of A 1  A 2       A N 
It is guaranteed that there is no contradiction in given input 

Constraints
All values in input are integers 
2  leq N  leq 10 5
1  leq M  leq 10 5
1  leq X i   Y i  leq N
1  leq Z i  leq 100
The pairs  X i  Y i  are distinct 
There is no contradiction in input   That is  there exist integers A 1  A 2       A N that satisfy the conditions  


InputInput is given from Standard Input in the following format 
N M
X 1 Y 1 Z 1
X 2 Y 2 Z 2
 vdots
X M Y M Z M


OutputPrint the minimum total cost required to determine all of A 1  A 2       A N 

Sample Input 13 1
1 2 1


Sample Output 12

You can determine all of A 1  A 2  A 3 by using the magic for the first and third cards 

Sample Input 26 5
1 2 1
2 3 2
1 3 3
4 5 4
5 6 5


Sample Output 22


Sample Input 3100000 1
1 100000 100


Sample Output 399999"
XOR Matching,https://atcoder.jp/contests/abc126/tasks/abc126_f,"問題文以下の条件を満たす 長さ 2  M   1  の数列 a    a 1   a 2         a  2  M   1    を 存在するならば 1 つ構築してください 

a は 0 以上 2 M 未満の整数を それぞれちょうど 2 つずつ含む 
a i   a j を満たす任意の i   j    i   j  について a i   xor   a  i   1    xor         xor   a j   K である 


xor  排他的論理和  とは
整数 c 1  c 2       c n の xor は以下のように定義されます 

c 1   xor   c 2   xor         xor   c n を二進表記した際の 2 k  k  geq 0  の位の数は c 1  c 2       c n のうち二進表記した際の 2 k の位の数が 1 となるものが奇数個ならば 1 偶数個ならば 0 である 

例えば 3   xor   5   6 です  二進表記すると  011 xor 101   110 です  


制約
入力は全て整数である 
0  leq M  leq 17
0  leq K  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
M K


出力条件を満たす数列 a が存在しなければ  1 を出力せよ 
存在するならば a の要素を空白区切りで出力せよ 
条件を満たす数列が複数存在する場合 どれを出力してもよい 

入力例 11 0


出力例 10 0 1 1

このケースでは 条件を満たす数列は複数存在します 
例えば a    0  0  1  1  の場合 a i   a j を満たす  i   j    i   j  として  1  2  と  3  4  があります a 1   xor   a 2   0   a 3   xor   a 4   0 であるため この a は与えられた条件を満たしています 

入力例 21 1


出力例 2 1

条件を満たす数列は存在しません 

入力例 35 58


出力例 3 1

条件を満たす数列は存在しません 
Problem StatementConstruct a sequence a    a 1   a 2         a  2  M   1    of length 2  M   1  that satisfies the following conditions  if such a sequence exists 

Each integer between 0 and 2 M   1  inclusive  occurs twice in a 
For any i and j  i   j  such that a i   a j  the formula a i   xor   a  i   1    xor         xor   a j   K holds 


What is xor  bitwise exclusive or  
The xor of integers c 1  c 2       c n is defined as follows 

When c 1   xor   c 2   xor         xor   c n is written in base two  the digit in the 2 k s place  k  geq 0  is 1 if the number of integers among c 1  c 2     c m whose binary representations have 1 in the 2 k s place is odd  and 0 if that count is even 

For example  3   xor   5   6   If we write it in base two  011 xor 101   110  


Constraints
All values in input are integers 
0  leq M  leq 17
0  leq K  leq 10 9


InputInput is given from Standard Input in the following format 
M K


OutputIf there is no sequence a that satisfies the condition  print  1 
If there exists such a sequence a  print the elements of one such sequence a with spaces in between 
If there are multiple sequences that satisfies the condition  any of them will be accepted 

Sample Input 11 0


Sample Output 10 0 1 1

For this case  there are multiple sequences that satisfy the condition 
For example  when a    0  0  1  1   there are two pairs  i   j    i   j  such that a i   a j   1  2  and  3  4   Since a 1   xor   a 2   0 and a 3   xor   a 4   0  this sequence a satisfies the condition 

Sample Input 21 1


Sample Output 2 1

No sequence satisfies the condition 

Sample Input 35 58


Sample Output 3 1

No sequence satisfies the condition"
Ferris Wheel,https://atcoder.jp/contests/abc127/tasks/abc127_a,"問題文A 歳の高橋君が観覧車に乗ろうとしています 
この観覧車は 13 歳以上が乗るには B 円  B は偶数  かかりますが 6 歳以上 12 歳以下の人はその半額で乗ることができ 
さらに 5 歳以下の人は無料で乗ることができます 
高橋君が観覧車に乗るには何円かかるかを求めてください 

制約
0   A   100
2   B   1000
B は偶数


入力入力は以下の形式で標準入力から与えられる 
A B


出力高橋君が観覧車に乗るには何円かかるかを出力せよ 

入力例 130 100


出力例 1100

現在 30 歳の高橋君は 観覧車に乗るのに 100 円かかります 

入力例 212 100


出力例 250

12 歳の高橋君は 観覧車に乗るのに 100 円の半額 すなわち 50 円かかります 

入力例 30 100


出力例 30

0 歳の高橋君は 観覧車に無料で乗ることができます 
Problem StatementTakahashi  who is A years old  is riding a Ferris wheel 
It costs B yen  B is an even number  to ride the Ferris wheel if you are 13 years old or older  but children between 6 and 12 years old  inclusive  can ride it for half the cost  and children who are 5 years old or younger are free of charge   Yen is the currency of Japan  
Find the cost of the Ferris wheel for Takahashi 

Constraints
0   A   100
2   B   1000
B is an even number 


InputInput is given from Standard Input in the following format 
A B


OutputPrint the cost of the Ferris wheel for Takahashi 

Sample Input 130 100


Sample Output 1100

Takahashi is 30 years old now  and the cost of the Ferris wheel is 100 yen 

Sample Input 212 100


Sample Output 250

Takahashi is 12 years old  and the cost of the Ferris wheel is the half of 100 yen  that is  50 yen 

Sample Input 30 100


Sample Output 30

Takahashi is 0 years old  and he can ride the Ferris wheel for free"
Algae,https://atcoder.jp/contests/abc127/tasks/abc127_b,"問題文ある池に生えている藻類は 以下のように成長します 
西暦 i 年になる瞬間に生えている重さの合計を x i グラムとすると 
i 2000 に対して 以下の式が成り立ちます 

x  i 1    rx i   D

r  D  x  2000  が与えられます x  2001        x  2010  を計算し 順に出力してください 

制約
2   r   5
1   D   100
D   x  2000    200
入力はすべて整数


入力入力は以下の形式で標準入力から与えられる 
r D x  2000 


出力10 行出力せよ i 行目  1   i   10  には x  2000 i  を整数で出力せよ 

入力例 12 10 20


出力例 130
50
90
170
330
650
1290
2570
5130
10250

例えば x  2001    rx  2000    D   2  times 20   10   30   x  2002    rx  2001    D   2  times 30   10   50 です 

入力例 24 40 60


出力例 2200
760
3000
11960
47800
191160
764600
3058360
12233400
48933560

Problem StatementThe development of algae in a pond is as follows 
Let the total weight of the algae at the beginning of the year i be x i gram  For i 2000  the following formula holds 

x  i 1    rx i   D

You are given r  D and x  2000   Calculate x  2001        x  2010  and print them in order 

Constraints
2   r   5
1   D   100
D   x  2000    200
All values in input are integers 


InputInput is given from Standard Input in the following format 
r D x  2000 


OutputPrint 10 lines  The i th line  1   i   10  should contain x  2000 i  as an integer 

Sample Input 12 10 20


Sample Output 130
50
90
170
330
650
1290
2570
5130
10250

For example  x  2001    rx  2000    D   2  times 20   10   30 and x  2002    rx  2001    D   2  times 30   10   50 

Sample Input 24 40 60


Sample Output 2200
760
3000
11960
47800
191160
764600
3058360
12233400
48933560"
Prison,https://atcoder.jp/contests/abc127/tasks/abc127_c,"問題文N 枚の ID カードと M 個のゲートがあります 
i 番目のゲートは L i  L i 1       R i 番目の ID カードのうちどれか 1 枚を持っていれば通過できます 
1 枚だけで全てのゲートを通過できる ID カードは何枚あるでしょうか 

制約
入力は全て整数である 
1  leq N  leq 10 5
1  leq M  leq 10 5
1  leq L i  leq R i  leq N


入力入力は以下の形式で標準入力から与えられる 
N M
L 1 R 1
L 2 R 2
 vdots
L M R M


出力1 枚だけで全てのゲートを通過できる ID カードの枚数を出力せよ 

入力例 14 2
1 3
2 4


出力例 12

以下のように 1 枚だけで全てのゲートを通過できる ID カードは 2 枚です 

1 番目の ID カードでは 2 番目のゲートを通過できません 
2 番目の ID カードでは全てのゲートを通過できます 
3 番目の ID カードでは全てのゲートを通過できます 
4 番目の ID カードでは 1 番目のゲートを通過できません 


入力例 210 3
3 6
5 7
6 9


出力例 21


入力例 3100000 1
1 100000


出力例 3100000

Problem StatementWe have N ID cards  and there are M gates 
We can pass the i th gate if we have one of the following ID cards  the L i th   L i 1  th       and R i th ID cards 
How many of the ID cards allow us to pass all the gates alone 

Constraints
All values in input are integers 
1  leq N  leq 10 5
1  leq M  leq 10 5
1  leq L i  leq R i  leq N


InputInput is given from Standard Input in the following format 
N M
L 1 R 1
L 2 R 2
 vdots
L M R M


OutputPrint the number of ID cards that allow us to pass all the gates alone 

Sample Input 14 2
1 3
2 4


Sample Output 12

Two ID cards allow us to pass all the gates alone  as follows 

The first ID card does not allow us to pass the second gate 
The second ID card allows us to pass all the gates 
The third ID card allows us to pass all the gates 
The fourth ID card does not allow us to pass the first gate 


Sample Input 210 3
3 6
5 7
6 9


Sample Output 21


Sample Input 3100000 1
1 100000


Sample Output 3100000"
Integer Cards,https://atcoder.jp/contests/abc127/tasks/abc127_d,"問題文N 枚のカードがあり i 番目のカードには整数 A i が書かれています 
あなたは j   1  2       M について順に以下の操作を 1 回ずつ行います 
操作  カードを B j 枚まで選ぶ 0 枚でもよい  選んだカードに書かれている整数をそれぞれ C j に書き換える 
M 回の操作終了後に N 枚のカードに書かれた整数の合計の最大値を求めてください 

制約
入力は全て整数である 
1  leq N  leq 10 5
1  leq M  leq 10 5
1  leq A i  C i  leq 10 9
1  leq B i  leq N


入力入力は以下の形式で標準入力から与えられる 
N M
A 1 A 2     A N
B 1 C 1
B 2 C 2
 vdots
B M C M


出力M 回の操作終了後に N 枚のカードに書かれた整数の合計の最大値を出力せよ 

入力例 13 2
5 1 4
2 3
1 5


出力例 114

2 番目のカードに書かれた整数を 5 に書き換えることで 3 枚のカードに書かれた整数の合計が 5   5   4   14 となり このときが最大です 

入力例 210 3
1 8 5 7 100 4 52 33 13 5
3 10
4 30
1 4


出力例 2338


入力例 33 2
100 100 100
3 99
3 99


出力例 3300


入力例 411 3
1 1 1 1 1 1 1 1 1 1 1
3 1000000000
4 1000000000
3 1000000000


出力例 410000000001

出力が 32 bit 整数型に収まらない場合があります 
Problem StatementYou have N cards  On the i th card  an integer A i is written 
For each j   1  2       M in this order  you will perform the following operation once 
Operation  Choose at most B j cards  possibly zero   Replace the integer written on each chosen card with C j 
Find the maximum possible sum of the integers written on the N cards after the M operations 

Constraints
All values in input are integers 
1  leq N  leq 10 5
1  leq M  leq 10 5
1  leq A i  C i  leq 10 9
1  leq B i  leq N


InputInput is given from Standard Input in the following format 
N M
A 1 A 2     A N
B 1 C 1
B 2 C 2
 vdots
B M C M


OutputPrint the maximum possible sum of the integers written on the N cards after the M operations 

Sample Input 13 2
5 1 4
2 3
1 5


Sample Output 114

By replacing the integer on the second card with 5  the sum of the integers written on the three cards becomes 5   5   4   14  which is the maximum result 

Sample Input 210 3
1 8 5 7 100 4 52 33 13 5
3 10
4 30
1 4


Sample Output 2338


Sample Input 33 2
100 100 100
3 99
3 99


Sample Output 3300


Sample Input 411 3
1 1 1 1 1 1 1 1 1 1 1
3 1000000000
4 1000000000
3 1000000000


Sample Output 410000000001

The output may not fit into a 32 bit integer type"
Cell Distance,https://atcoder.jp/contests/abc127/tasks/abc127_e,"問題文N 行 M 列のマス目があり 上から i 行目 左から j 列目のマスを  i  j  で表します 
このうち K マスに駒を 1 つずつ置きます 
K 個の駒がそれぞれ  x 1  y 1    x 2  y 2         x K  y K  に置かれているとき この配置のコストは
 sum  i 1   K 1   sum  j i 1  K   x i   x j     y i   y j  
と計算されます 
駒の全ての配置のコストの総和を計算してください この値は非常に大きくなることがあるので 10 9 7 で割った余りを出力してください 
ただし 2 つの駒の配置が異なるとは 片方の配置では駒があるがもう一方では駒が無いようなマスが存在する場合を表します 

制約
2  leq N  times M  leq 2  times 10 5
2  leq K  leq N  times M
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N M K


出力駒の全ての配置のコストの総和を 10 9 7 で割った余りを出力せよ 

入力例 12 2 2


出力例 18

駒の配置としては 以下の 6 通りが考えられます 

  1 1   1 2    コストは  1 1   1 2    1
  1 1   2 1    コストは  1 2   1 1    1
  1 1   2 2    コストは  1 2   1 2    2
  1 2   2 1    コストは  1 2   2 1    2
  1 2   2 2    コストは  1 2   2 2    1
  2 1   2 2    コストは  2 2   1 2    1

これらの総和は 8 です 

入力例 24 5 4


出力例 287210


入力例 3100 100 5000


出力例 3817260251

総和を 10 9 7 で割った余りを出力することに注意してください 
Problem StatementWe have a grid of squares with N rows and M columns  Let  i  j  denote the square at the i th row from the top and j th column from the left  We will choose K of the squares and put a piece on each of them 
If we place the K pieces on squares  x 1  y 1    x 2  y 2        and  x K  y K   the cost of this arrangement is computed as 
 sum  i 1   K 1   sum  j i 1  K   x i   x j     y i   y j  
Find the sum of the costs of all possible arrangements of the pieces  Since this value can be tremendous  print it modulo 10 9 7 
We consider two arrangements of the pieces different if and only if there is a square that contains a piece in one of the arrangements but not in the other 

Constraints
2  leq N  times M  leq 2  times 10 5
2  leq K  leq N  times M
All values in input are integers 


InputInput is given from Standard Input in the following format 
N M K


OutputPrint the sum of the costs of all possible arrangements of the pieces  modulo 10 9 7 

Sample Input 12 2 2


Sample Output 18

There are six possible arrangements of the pieces  as follows 

  1 1   1 2    with the cost  1 1   1 2    1
  1 1   2 1    with the cost  1 2   1 1    1
  1 1   2 2    with the cost  1 2   1 2    2
  1 2   2 1    with the cost  1 2   2 1    2
  1 2   2 2    with the cost  1 2   2 2    1
  2 1   2 2    with the cost  2 2   1 2    1

The sum of these costs is 8 

Sample Input 24 5 4


Sample Output 287210


Sample Input 3100 100 5000


Sample Output 3817260251

Be sure to print the sum modulo 10 9 7"
Absolute Minima,https://atcoder.jp/contests/abc127/tasks/abc127_f,"問題文関数 f x  があります 
はじめ これは定数関数 f x    0 です 
Q 個のクエリが与えられるので 順番に処理してください クエリは 2 種類あり 入力形式とクエリの内容は以下の通りです 

更新クエリ 1 a b 　2整数 a  b が与えられるので g x    f x     x   a    b として f x  を g x  で置き換える 
求値クエリ 2 　f x  の最小値を与える x および f x  の最小値を出力する ただし そのような x が複数存在する場合には最小の x を答える 

この時 求値クエリにおいて出力すべき値は常に整数となることが示せます 
したがって 出力する際は小数点を用いず 整数で出力してください 

制約
入力は全て整数
1  leq Q  leq 2  times 10 5
 10 9  leq a  b  leq 10 9
1 番目のクエリは更新クエリである


入力入力は以下の形式で標準入力から与えられる 
Q
Query 1
 
Query Q

実例は入出力例 1 を参照せよ 

出力求値クエリに対する応答を クエリが与えられた順にそれぞれ 1 行で出力せよ 
各求値クエリに対する応答では f x  の最小値を与える最小の x および f x  の最小値を空白スペース区切りで出力すること 

入力例 14
1 4 2
2
1 1  8
2


出力例 14 2
1  3

1 つ目の求値クエリにおいて f x     x   4    2 となっています 
したがって x   4 において最小値 2 を取ります 
2 つ目の求値クエリでは f x     x   1     x   4    6 となっており x が 1  leq x  leq 4 を満たすならば最小値  3 を与えます この時 最小値を与える x が複数存在していますが その中で最小の値である 1 を出力してください 

入力例 24
1  1000000000 1000000000
1  1000000000 1000000000
1  1000000000 1000000000
2


出力例 2 1000000000 3000000000

Problem StatementThere is a function f x   which is initially a constant function f x    0 
We will ask you to process Q queries in order  There are two kinds of queries  update queries and evaluation queries  as follows 

An update query 1 a b  Given two integers a and b  let g x    f x     x   a    b and replace f x  with g x  
An evaluation query 2  Print x that minimizes f x   and the minimum value of f x   If there are multiple such values of x  choose the minimum such value 

We can show that the values to be output in an evaluation query are always integers  so we ask you to print those values as integers without decimal points 

Constraints
All values in input are integers 
1  leq Q  leq 2  times 10 5
 10 9  leq a  b  leq 10 9
The first query is an update query 


InputInput is given from Standard Input in the following format 
Q
Query 1
 
Query Q

See Sample Input 1 for an example 

OutputFor each evaluation query  print a line containing the response  in the order in which the queries are given 
The response to each evaluation query should be the minimum value of x that minimizes f x   and the minimum value of f x   in this order  with space in between 

Sample Input 14
1 4 2
2
1 1  8
2


Sample Output 14 2
1  3

In the first evaluation query  f x     x   4    2  which attains the minimum value of 2 at x   4 
In the second evaluation query  f x     x   1     x   4    6  which attains the minimum value of  3 when 1  leq x  leq 4  Among the multiple values of x that minimize f x   we ask you to print the minimum  that is  1 

Sample Input 24
1  1000000000 1000000000
1  1000000000 1000000000
1  1000000000 1000000000
2


Sample Output 2 1000000000 3000000000"
Apple Pie,https://atcoder.jp/contests/abc128/tasks/abc128_a,"問題文林檎が A 個 林檎の欠片が P 個あります 
林檎 1 個は 砕くことで林檎の欠片 3 個になります また 林檎の欠片 2 個を鍋で煮込むことで アップルパイが 1 個作れます 
今ある材料で作れるアップルパイの最大数を求めてください 

制約
入力は全て整数である 
0  leq A  P  leq 100


入力入力は以下の形式で標準入力から与えられる 
A P


出力今ある材料で作れるアップルパイの最大数を出力せよ 

入力例 11 3


出力例 13

3 つある林檎の欠片のうち 2 つを鍋で煮込むことで まず 1 つのアップルパイを作ることができます 林檎の欠片が 1 つ残りますが これと 1 つある林檎を砕いて新しく得た 3 つの林檎の欠片から さらに 2 つのアップルパイを作れます 

入力例 20 1


出力例 20

残念ながら 1 つもアップルパイを作ることができません 

入力例 332 21


出力例 358

Problem StatementWe have A apples and P pieces of apple 
We can cut an apple into three pieces of apple  and make one apple pie by simmering two pieces of apple in a pan 
Find the maximum number of apple pies we can make with what we have now 

Constraints
All values in input are integers 
0  leq A  P  leq 100


InputInput is given from Standard Input in the following format 
A P


OutputPrint the maximum number of apple pies we can make with what we have 

Sample Input 11 3


Sample Output 13

We can first make one apple pie by simmering two of the three pieces of apple  Then  we can make two more by simmering the remaining piece and three more pieces obtained by cutting the whole apple 

Sample Input 20 1


Sample Output 20

We cannot make an apple pie in this case  unfortunately 

Sample Input 332 21


Sample Output 358"
Guidebook,https://atcoder.jp/contests/abc128/tasks/abc128_b,"問題文あなたは美味しいレストランを紹介する本を書くことにしました 
あなたは N 個のレストラン レストラン 1 レストラン 2   レストラン N を紹介しようとしています レストラン i は S i 市にあり あなたは 100 点満点中 P i 点と評価しています 
異なる 2 個のレストランに同じ点数がついていることはありません 
この本では 次のような順でレストランを紹介しようとしています 

市名が辞書順で早いものから紹介していく 
同じ市に複数レストランがある場合は 点数が高いものから紹介していく 

この本で紹介される順にレストランの番号を出力してください 

制約
1   N   100
S は英小文字のみからなる長さ 1 以上 10 以下の文字列
0   P i   100
P i は整数
P i   P j  1   i   j   N 


入力入力は以下の形式で標準入力から与えられる 
N
S 1 P 1
 
S N P N


出力N 行出力せよ i 行目  1   i   N  には i 番目に紹介されるレストランの番号を出力せよ 

入力例 16
khabarovsk 20
moscow 10
kazan 50
kazan 35
moscow 60
khabarovsk 40


出力例 13
4
6
1
5
2

3 種類の市名は辞書順で kazan   khabarovsk   moscow です 
それぞれの市について 点数が高いレストランから順に紹介されていきます よって レストランは 3 4 6 1 5 2 の順に紹介されていきます 

入力例 210
yakutsk 10
yakutsk 20
yakutsk 30
yakutsk 40
yakutsk 50
yakutsk 60
yakutsk 70
yakutsk 80
yakutsk 90
yakutsk 100


出力例 210
9
8
7
6
5
4
3
2
1

Problem StatementYou have decided to write a book introducing good restaurants 
There are N restaurants that you want to introduce  Restaurant 1  Restaurant 2       Restaurant N  Restaurant i is in city S i  and your assessment score of that restaurant on a 100 point scale is P i 
No two restaurants have the same score 
You want to introduce the restaurants in the following order 

The restaurants are arranged in lexicographical order of the names of their cities 
If there are multiple restaurants in the same city  they are arranged in descending order of score 

Print the identification numbers of the restaurants in the order they are introduced in the book 

Constraints
1   N   100
S is a string of length between 1 and 10  inclusive  consisting of lowercase English letters 
0   P i   100
P i is an integer 
P i   P j  1   i   j   N 


InputInput is given from Standard Input in the following format 
N
S 1 P 1
 
S N P N


OutputPrint N lines  The i th line  1   i   N  should contain the identification number of the restaurant that is introduced i th in the book 

Sample Input 16
khabarovsk 20
moscow 10
kazan 50
kazan 35
moscow 60
khabarovsk 40


Sample Output 13
4
6
1
5
2

The lexicographical order of the names of the three cities is kazan   khabarovsk   moscow  For each of these cities  the restaurants in it are introduced in descending order of score  Thus  the restaurants are introduced in the order 3 4 6 1 5 2 

Sample Input 210
yakutsk 10
yakutsk 20
yakutsk 30
yakutsk 40
yakutsk 50
yakutsk 60
yakutsk 70
yakutsk 80
yakutsk 90
yakutsk 100


Sample Output 210
9
8
7
6
5
4
3
2
1"
Switches,https://atcoder.jp/contests/abc128/tasks/abc128_c,"問題文on と off の状態を持つ N 個の スイッチと M 個の電球があります スイッチには 1 から N の 電球には 1 から M の番号がついています 
電球 i は k i 個のスイッチに繋がっており スイッチ s  i1   s  i2        s  ik i  のうち on になっているスイッチの個数を 2 で割った余りが p i に等しい時に点灯します 
全ての電球が点灯するようなスイッチの on off の状態の組み合わせは何通りあるでしょうか 

制約
1  leq N  M  leq 10
1  leq k i  leq N
1  leq s  ij   leq N
s  ia   neq s  ib   a  neq b 
p i は 0 または 1
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N M
k 1 s  11  s  12      s  1k 1 
 
k M s  M1  s  M2      s  Mk M 
p 1 p 2     p M


出力全ての電球が点灯するようなスイッチの on off の状態の組み合わせの個数を出力せよ 

入力例 12 2
2 1 2
1 2
0 1


出力例 11


電球 1 は 次のスイッチのうち偶数個が on の時に点灯します  スイッチ 1  2
電球 2 は 次のスイッチのうち奇数個が on の時に点灯します  スイッチ 2

 スイッチ 1 スイッチ 2  の状態としては  on on   on off   off on   off off  が考えられますが このうち  on on  のみが条件を満たすので 1 を出力してください 

入力例 22 3
2 1 2
1 1
1 2
0 0 1


出力例 20


電球 1 は 次のスイッチのうち偶数個が on の時に点灯します  スイッチ 1  2
電球 2 は 次のスイッチのうち偶数個が on の時に点灯します  スイッチ 1
電球 3 は 次のスイッチのうち奇数個が on の時に点灯します  スイッチ 2

電球 2 を点灯させるためには スイッチ 1 が off  電球 3 を点灯させるためにはスイッチ 2 が on である必要がありますが この時電球 1 は点灯しません 
よって 全ての電球が点灯するようなスイッチの on off の状態の組み合わせは存在しないので 0 を出力してください 

入力例 35 2
3 1 2 5
2 2 3
1 0


出力例 38

Problem StatementWe have N switches with  on  and  off  state  and M bulbs  The switches are numbered 1 to N  and the bulbs are numbered 1 to M 
Bulb i is connected to k i switches  Switch s  i1   s  i2        and s  ik i   It is lighted when the number of switches that are  on  among these switches is congruent to p i modulo 2 
How many combinations of  on  and  off  states of the switches light all the bulbs 

Constraints
1  leq N  M  leq 10
1  leq k i  leq N
1  leq s  ij   leq N
s  ia   neq s  ib   a  neq b 
p i is 0 or 1 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N M
k 1 s  11  s  12      s  1k 1 
 
k M s  M1  s  M2      s  Mk M 
p 1 p 2     p M


OutputPrint the number of combinations of  on  and  off  states of the switches that light all the bulbs 

Sample Input 12 2
2 1 2
1 2
0 1


Sample Output 11


Bulb 1 is lighted when there is an even number of switches that are  on  among the following  Switch 1 and 2 
Bulb 2 is lighted when there is an odd number of switches that are  on  among the following  Switch 2 

There are four possible combinations of states of  Switch 1  Switch 2    on  on    on  off    off  on  and  off  off   Among them  only  on  on  lights all the bulbs  so we should print 1 

Sample Input 22 3
2 1 2
1 1
1 2
0 0 1


Sample Output 20


Bulb 1 is lighted when there is an even number of switches that are  on  among the following  Switch 1 and 2 
Bulb 2 is lighted when there is an even number of switches that are  on  among the following  Switch 1 
Bulb 3 is lighted when there is an odd number of switches that are  on  among the following  Switch 2 

Switch 1 has to be  off  to light Bulb 2 and Switch 2 has to be  on  to light Bulb 3  but then Bulb 1 will not be lighted  Thus  there are no combinations of states of the switches that light all the bulbs  so we should print 0 

Sample Input 35 2
3 1 2 5
2 2 3
1 0


Sample Output 38"
equeue,https://atcoder.jp/contests/abc128/tasks/abc128_d,"問題文あなたは誕生日プレゼントとして友人から dequeue D を貰いました 
D は左右に長い筒であり N 個の宝石が一列に詰められています 
宝石の価値は左から順に V 1  V 2       V N です 負の価値の宝石が詰められている場合もあります 
はじめ あなたは 1 つも宝石を持っていません 
あなたは D に対して以下の 4 種類の操作から 1 つを選んで実行することを K 回まで行うことができます 


操作 A  D に詰められた宝石のうち 左端の宝石を取り出して手に入れる D が空の場合 この操作を行えない 


操作 B  D に詰められた宝石のうち 右端の宝石を取り出して手に入れる D が空の場合 この操作を行えない 


操作 C  持っている宝石を 1 つ選んで D の左端に詰める 宝石を持っていない場合 この操作を行えない 


操作 D  持っている宝石を 1 つ選んで D の右端に詰める 宝石を持っていない場合 この操作を行えない 


操作終了後に持っている宝石の価値の合計の最大値を求めてください 

制約
入力は全て整数である 
1  leq N  leq 50
1  leq K  leq 100
 10 7  leq V i  leq 10 7


入力入力は以下の形式で標準入力から与えられる 
N K
V 1 V 2     V N


出力操作終了後に持っている宝石の価値の合計の最大値を出力せよ 

入力例 16 4
 10 8 2 1 2 6


出力例 114

以下の順に操作を行うことで 価値 8  6 の宝石をそれぞれ 1 個ずつ手に入れることができ このときの合計価値 14 が最大です 

操作 A を行い D の左端から価値  10 の宝石を取り出します 
操作 B を行い D の右端から価値 6 の宝石を取り出します 
操作 A を行い D の左端から価値 8 の宝石を取り出します 
操作 D を行い D の右端に価値  10 の宝石を詰めます 


入力例 26 4
 6  100 50  2  5  3


出力例 244


入力例 36 3
 6  100 50  2  5  3


出力例 30

操作を行わないのが最適です 
Problem StatementYour friend gave you a dequeue D as a birthday present 
D is a horizontal cylinder that contains a row of N jewels 
The values of the jewels are V 1  V 2       V N from left to right  There may be jewels with negative values 
In the beginning  you have no jewel in your hands 
You can perform at most K operations on D  chosen from the following  at most K times  possibly zero  


Operation A  Take out the leftmost jewel contained in D and have it in your hand  You cannot do this operation when D is empty 


Operation B  Take out the rightmost jewel contained in D and have it in your hand  You cannot do this operation when D is empty 


Operation C  Choose a jewel in your hands and insert it to the left end of D  You cannot do this operation when you have no jewel in your hand 


Operation D  Choose a jewel in your hands and insert it to the right end of D  You cannot do this operation when you have no jewel in your hand 


Find the maximum possible sum of the values of jewels in your hands after the operations 

Constraints
All values in input are integers 
1  leq N  leq 50
1  leq K  leq 100
 10 7  leq V i  leq 10 7


InputInput is given from Standard Input in the following format 
N K
V 1 V 2     V N


OutputPrint the maximum possible sum of the values of jewels in your hands after the operations 

Sample Input 16 4
 10 8 2 1 2 6


Sample Output 114

After the following sequence of operations  you have two jewels of values 8 and 6 in your hands for a total of 14  which is the maximum result 

Do operation A  You take out the jewel of value  10 from the left end of D 
Do operation B  You take out the jewel of value 6 from the right end of D 
Do operation A  You take out the jewel of value 8 from the left end of D 
Do operation D  You insert the jewel of value  10 to the right end of D 


Sample Input 26 4
 6  100 50  2  5  3


Sample Output 244


Sample Input 36 3
 6  100 50  2  5  3


Sample Output 30

It is optimal to do no operation"
Roadwork,https://atcoder.jp/contests/abc128/tasks/abc128_e,"問題文東西に無限に続く 1 本の大通りがあり 数直線とみなすことができます 
この大通り上で N 回道路工事が行われます 
i 番目の道路工事は時刻 S i   0 5 から時刻 T i   0 5 まで座標 X i を通行止めにします 
Q 人の人が座標 0 に立っています 
i 番目の人は時刻 D i に座標 0 を出発し 速度 1 で正の方向へ歩き続けます 
歩いている途中で通行止めとなっている地点に到達した場合には そこで歩くのをやめます 
Q 人それぞれが進む距離を求めてください 

制約
入力は全て整数
1  leq N  Q  leq 2  times 10 5
0  leq S i   T i  leq 10 9
1  leq X i  leq 10 9
0  leq D 1   D 2         D Q  leq 10 9
i  neq j かつ X i   X j の時 区間  S i  T i  と 区間  S j  T j  は重ならない


入力入力は以下の形式で標準入力から与えられる 
N Q
S 1 T 1 X 1
 
S N T N X N
D 1
 
D Q


出力Q 行出力せよ 
i 行目には i 番目の人が進む距離を出力せよ 
ただし i 番目の人が無限に歩き続ける場合は 代わりに  1 を出力せよ 

入力例 14 6
1 3 2
7 13 10
18 20 13
3 4 2
0
1
2
3
5
8


出力例 12
2
10
 1
13
 1

1 番目の人は時刻 0 に座標 0 を出発し 時刻 2 に座標 2 に到着した時点で 1 番目の道路工事による通行止めによって歩くのをやめます 
2 番目の人は時刻 1 に座標 0 を出発し 時刻 3 に座標 2 に到着します この時 1 番目の道路工事は既に終了していますが 4 番目の道路工事が始まっているため 同様に座標 2 で歩くのをやめます 
4 番目および 6 番目の人は 歩いている最中に通行止めに出くわさないため 無限に歩き続けます 
Problem StatementThere is an infinitely long street that runs west to east  which we consider as a number line 
There are N roadworks scheduled on this street 
The i th roadwork blocks the point at coordinate X i from time S i   0 5 to time T i   0 5 
Q people are standing at coordinate 0  The i th person will start the coordinate 0 at time D i  continue to walk with speed 1 in the positive direction and stop walking when reaching a blocked point 
Find the distance each of the Q people will walk 

Constraints
All values in input are integers 
1  leq N  Q  leq 2  times 10 5
0  leq S i   T i  leq 10 9
1  leq X i  leq 10 9
0  leq D 1   D 2         D Q  leq 10 9
If i  neq j and X i   X j  the intervals  S i  T i  and  S j  T j  do not overlap 


InputInput is given from Standard Input in the following format 
N Q
S 1 T 1 X 1
 
S N T N X N
D 1
 
D Q


OutputPrint Q lines  The i th line should contain the distance the i th person will walk or  1 if that person walks forever 

Sample Input 14 6
1 3 2
7 13 10
18 20 13
3 4 2
0
1
2
3
5
8


Sample Output 12
2
10
 1
13
 1

The first person starts coordinate 0 at time 0 and stops walking at coordinate 2 when reaching a point blocked by the first roadwork at time 2 
The second person starts coordinate 0 at time 1 and reaches coordinate 2 at time 3  The first roadwork has ended  but the fourth roadwork has begun  so this person also stops walking at coordinate 2 
The fourth and sixth persons encounter no roadworks while walking  so they walk forever  The output for these cases is  1"
Frog Jump,https://atcoder.jp/contests/abc128/tasks/abc128_f,"問題文無限に広がる池があり 数直線とみなせます この池には N 個の蓮が浮かんでおり それらは座標 0 1 2     N 2 N 1 にあります 
あなたは 最初座標0 の蓮の上にいます あなたは 以下の手順に従ってゲームを行うことにしました 


1 正の整数 A B を決める 得点ははじめ 0 である 


2 現在の位置を x として y x Aとする x にある蓮を消して y に移動する 

y N 1 ならば ゲームが終了する 
そうでなくて y に蓮があるならば 得点が s y 増加する 
そこに蓮がないならば あなたは溺れる 得点が 10  100  減少して ゲームが終了する 



3 現在の位置を x として y x Bとする x にある蓮を消して y に移動する 

y N 1 ならば ゲームが終了する 
そうでなくて y に蓮があるならば 得点が s y 増加する 
そこに蓮がないならば あなたは溺れる 得点が 10  100  減少して ゲームが終了する 



4 手順2に戻る 


あなたは 最終得点をできるだけ大きくしたいです 
最適に A B の値を決めたときの最終得点はいくらになるでしょうか 

制約
3  leqq N  leqq 10 5
 10 9  leqq s i  leqq 10 9
s 0 s  N 1  0
入力はすべて整数である 


入力入力は以下の形式で標準入力から与えられます 
N
s 0 s 1        s  N 1 


出力最適に A B の値を決めたときの最終得点を出力してください 

入力例 15
0 2 5 1 0


出力例 13

A   3  B   2 としたとき ゲームは次のように進行します 

座標 0   3   3 に移動し 得点が s 3   1 増加する 
座標 3   2   1 に移動し 得点が s 1   2 増加する 
座標 1   3   4 に移動し 得点 3 でゲームが終了する 

得点 4 以上でゲームを終了することはできないため 答えは 3 です 座標 2 にある蓮に乗ってその後溺れずに済ますことはできないことに注意してください 

入力例 26
0 10  7  4  13 0


出力例 20

ここでの最適な戦略は A   5 を選んで  B の値は不問  ただちに最後の蓮に乗ることです 

入力例 311
0  4 0  99 31 14  15  39 43 18 0


出力例 359

Problem StatementThere is an infinitely large pond  which we consider as a number line 
In this pond  there are N lotuses floating at coordinates 0  1  2       N 2 and N 1 
On the lotus at coordinate i  an integer s i is written 
You are standing on the lotus at coordinate 0  You will play a game that proceeds as follows 

1  Choose positive integers A and B  Your score is initially 0 
2  Let x be your current coordinate  and y   x A  The lotus at coordinate x disappears  and you move to coordinate y 
If y   N 1  the game ends 
If y  neq N 1 and there is a lotus floating at coordinate y  your score increases by s y 
If y  neq N 1 and there is no lotus floating at coordinate y  you drown  Your score decreases by 10  100  points  and the game ends 


3  Let x be your current coordinate  and y   x B  The lotus at coordinate x disappears  and you move to coordinate y 
If y   N 1  the game ends 
If y  neq N 1 and there is a lotus floating at coordinate y  your score increases by s y 
If y  neq N 1 and there is no lotus floating at coordinate y  you drown  Your score decreases by 10  100  points  and the game ends 


4  Go back to step 2 

You want to end the game with as high a score as possible 
What is the score obtained by the optimal choice of A and B 

Constraints
3  leq N  leq 10 5
 10 9  leq s i  leq 10 9
s 0 s  N 1  0
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
s 0 s 1        s  N 1 


OutputPrint the score obtained by the optimal choice of A and B 

Sample Input 15
0 2 5 1 0


Sample Output 13

If you choose A   3 and B   2  the game proceeds as follows 

Move to coordinate 0   3   3  Your score increases by s 3   1 
Move to coordinate 3   2   1  Your score increases by s 1   2 
Move to coordinate 1   3   4  The game ends with a score of 3 

There is no way to end the game with a score of 4 or higher  so the answer is 3  Note that you cannot land the lotus at coordinate 2 without drowning later 

Sample Input 26
0 10  7  4  13 0


Sample Output 20

The optimal strategy here is to land the final lotus immediately by choosing A   5  the value of B does not matter  

Sample Input 311
0  4 0  99 31 14  15  39 43 18 0


Sample Output 359"
Airplane,https://atcoder.jp/contests/abc129/tasks/abc129_a,"問題文空港 A  B  C があり それぞれの空港の間では 双方向に飛行機が運航しています 
空港 A  B 間の飛行時間は片道 P 時間 空港 B  C 間の飛行時間は片道 Q 時間 空港 C  A 間の飛行時間は片道 R 時間です 
いずれかの空港からスタートして他の空港に飛行機で移動し さらにそのどちらでもない空港に飛行機で移動するような経路を考えます 
飛行時間の和は最短で何時間になるでしょうか 

制約
1  leq P Q R  leq 100
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
P Q R


出力飛行時間の和の最小値を出力せよ 

入力例 11 3 4


出力例 14

A  B  C の順に移動する経路の飛行時間の和は 1   3   4 時間
A  C  B の順に移動する経路の飛行時間の和は 4   3   7 時間
B  A  C の順に移動する経路の飛行時間の和は 1   4   5 時間
B  C  A の順に移動する経路の飛行時間の和は 3   4   7 時間
C  A  B の順に移動する経路の飛行時間の和は 4   1   5 時間
C  B  A の順に移動する経路の飛行時間の和は 3   1   4 時間
であるので これらの最小値は 4 時間です 

入力例 23 2 3


出力例 25

Problem StatementThere are three airports A  B and C  and flights between each pair of airports in both directions 
A one way flight between airports A and B takes P hours  a one way flight between airports B and C takes Q hours  and a one way flight between airports C and A takes R hours 
Consider a route where we start at one of the airports  fly to another airport and then fly to the other airport 
What is the minimum possible sum of the flight times 

Constraints
1  leq P Q R  leq 100
All values in input are integers 


InputInput is given from Standard Input in the following format 
P Q R


OutputPrint the minimum possible sum of the flight times 

Sample Input 11 3 4


Sample Output 14


The sum of the flight times in the route A  rightarrow B  rightarrow C  1   3   4 hours
The sum of the flight times in the route A  rightarrow C  rightarrow C  4   3   7 hours
The sum of the flight times in the route B  rightarrow A  rightarrow C  1   4   5 hours
The sum of the flight times in the route B  rightarrow C  rightarrow A  3   4   7 hours
The sum of the flight times in the route C  rightarrow A  rightarrow B  4   1   5 hours
The sum of the flight times in the route C  rightarrow B  rightarrow A  3   1   4 hours

The minimum of these is 4 hours 

Sample Input 23 2 3


Sample Output 25"
Balance,https://atcoder.jp/contests/abc129/tasks/abc129_b,"問題文1 から N の番号がついた N 個の重りがあり 番号 i の重りの重さは W i です 
ある整数 1  leq T   N に対してこれらの重りを 番号が T 以下の重り と 番号が T より大きい重りの 2 グループに分けることを考え それぞれのグループの重さの和を S 1  S 2 とします 
このような分け方全てを考えた時 S 1 と S 2 の差の絶対値の最小値を求めてください 

制約
2  leq N  leq 100
1  leq W i  leq 100
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N
W 1 W 2     W  N 1  W N


出力S 1 と S 2 の差の絶対値の最小値を出力せよ 

入力例 13
1 2 3


出力例 10

T   2 としたとき S 1   1   2   3  S 2   3 となり 差の絶対値は 0 となります 

入力例 24
1 3 1 1


出力例 22

T   2 としたとき S 1   1   3   4  S 2   1   1   2 となり 差の絶対値は 2 です これより差の絶対値を小さくすることは出来ません 

入力例 38
27 23 76 2 3 5 62 52


出力例 32

Problem StatementWe have N weights indexed 1 to N  The mass of the weight indexed i is W i 
We will divide these weights into two groups  the weights with indices not greater than T  and those with indices greater than T  for some integer 1  leq T   N  Let S 1 be the sum of the masses of the weights in the former group  and S 2 be the sum of the masses of the weights in the latter group 
Consider all possible such divisions and find the minimum possible absolute difference of S 1 and S 2 

Constraints
2  leq N  leq 100
1  leq W i  leq 100
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
W 1 W 2     W  N 1  W N


OutputPrint the minimum possible absolute difference of S 1 and S 2 

Sample Input 13
1 2 3


Sample Output 10

If T   2  S 1   1   2   3 and S 2   3  with the absolute difference of 0 

Sample Input 24
1 3 1 1


Sample Output 22

If T   2  S 1   1   3   4 and S 2   1   1   2  with the absolute difference of 2  We cannot have a smaller absolute difference 

Sample Input 38
27 23 76 2 3 5 62 52


Sample Output 32"
Typical Stairs,https://atcoder.jp/contests/abc129/tasks/abc129_c,"問題文N 段の階段があります 高橋君は現在 上り口 0 段目 にいます 
高橋君は一歩で 1 段か 2 段上ることができます 
ただし a 1 a 2 a 3     a M 段目の床は壊れており その段に足を踏み入れることは危険です 
壊れている床を踏まないようにしながら 最上段 N 段目 にたどりつくまでの移動方法は何通りあるでしょうか 
総数を 1 000 000 007 で割った余りを求めてください 

制約
1  leqq N  leqq 10 5
0  leqq M  leqq N 1
1  leqq a 1   a 2            a M  leqq N 1


入力入力は以下の形式で標準入力から与えられます 
N M
a 1
a 2
  
  
  
a M


出力条件を満たすような移動方法の総数を 1 000 000 007 で割った余りを出力してください 

入力例 16 1
3


出力例 14

移動方法は以下の 4 通りです 

0  to 1  to 2  to 4  to 5  to 6
0  to 1  to 2  to 4  to 6
0  to 2  to 4  to 5  to 6
0  to 2  to 4  to 6


入力例 210 2
4
5


出力例 20

壊れている床を踏まないような移動方法がない場合もあります 

入力例 3100 5
1
23
45
67
89


出力例 3608200469

総数を 1 000 000 007 で割った余りを出力することに注意して下さい 
Problem StatementThere is a staircase with N steps  Takahashi is now standing at the foot of the stairs  that is  on the 0 th step 
He can climb up one or two steps at a time 
However  the treads of the a 1 th  a 2 th  a 3 th   ldots  a M th steps are broken  so it is dangerous to set foot on those steps 
How many are there to climb up to the top step  that is  the N th step  without setting foot on the broken steps 
Find the count modulo 1  000  000  007 

Constraints
1  leq N  leq 10 5
0  leq M  leq N 1
1  leq a 1   a 2           a M  leq N 1


InputInput is given from Standard Input in the following format 
N M
a 1
a 2
  
  
  
a M


OutputPrint the number of ways to climb up the stairs under the condition  modulo 1  000  000  007 

Sample Input 16 1
3


Sample Output 14

There are four ways to climb up the stairs  as follows 

0  to 1  to 2  to 4  to 5  to 6
0  to 1  to 2  to 4  to 6
0  to 2  to 4  to 5  to 6
0  to 2  to 4  to 6


Sample Input 210 2
4
5


Sample Output 20

There may be no way to climb up the stairs without setting foot on the broken steps 

Sample Input 3100 5
1
23
45
67
89


Sample Output 3608200469

Be sure to print the count modulo 1  000  000  007"
Lamp,https://atcoder.jp/contests/abc129/tasks/abc129_d,"問題文縦 H 行横 W 列のグリッドが与えられます このグリッドのうち いくつかのマスには障害物が存在します 
すぬけ君は 障害物のないマスのうち一つを選び そのマスに明かりを設置しようとしています 
設置されたマスから 上下左右の四方向にまっすぐに光線が伸びます それぞれの方向について 最初に障害物が存在するマスにぶつかる もしくはグリッドの端にぶつかる手前のマスまで照らされます 明かりを設置したマスも照らされますが 障害物が存在するマスは照らされません 
すぬけ君は明かりによって照らされるマスの個数を最大化したいです 
H 個の長さ W の文字列 S i  1   i   H  が与えられます S i の j 文字目  1   j   W  が   のとき グリッドの上から i 行目で左から j 列目のマスには障害物があり    のときは障害物がありません 
照らされるマスの個数の最大値を求めてください 

制約
1   H   2 000
1   W   2 000
S i は   と   のみからなる長さ W の文字列
S i  1   i   H  のうちいずれかに   は最低 1 つ存在する


入力入力は以下の形式で標準入力から与えられる 
H W
S 1
 
S H


出力照らされるマスの個数の最大値を出力せよ 

入力例 14 6
      
      
      
      


出力例 18

すぬけ君が上から 2 行目 左から 2 列目のマスに明かりを設置すると 上から 2 行目のうち左から 1   5 列目のマス 
左から 2 列目のうち上から 1   4 列目のマス全てが照らされ 全部で 8 マスです 

入力例 28 8
        
        
        
        
        
        
        
        


出力例 213

Problem StatementThere is a grid with H horizontal rows and W vertical columns  and there are obstacles on some of the squares 
Snuke is going to choose one of the squares not occupied by an obstacle and place a lamp on it 
The lamp placed on the square will emit straight beams of light in four cardinal directions  up  down  left  and right 
In each direction  the beam will continue traveling until it hits a square occupied by an obstacle or it hits the border of the grid  It will light all the squares on the way  including the square on which the lamp is placed  but not the square occupied by an obstacle 
Snuke wants to maximize the number of squares lighted by the lamp 
You are given H strings S i  1  leq i  leq H   each of length W  If the j th character  1  leq j  leq W  of S i is    there is an obstacle on the square at the i th row from the top and the j th column from the left  if that character is    there is no obstacle on that square 
Find the maximum possible number of squares lighted by the lamp 

Constraints
1  leq H  leq 2 000
1  leq W  leq 2 000
S i is a string of length W consisting of   and   
  occurs at least once in one of the strings S i  1  leq i  leq H  


InputInput is given from Standard Input in the following format 
H W
S 1
 
S H


OutputPrint the maximum possible number of squares lighted by the lamp 

Sample Input 14 6
      
      
      
      


Sample Output 18

If Snuke places the lamp on the square at the second row from the top and the second column from the left  it will light the following squares  the first through fifth squares from the left in the second row  and the first through fourth squares from the top in the second column  for a total of eight squares 

Sample Input 28 8
        
        
        
        
        
        
        
        


Sample Output 213"
Sum Equals Xor,https://atcoder.jp/contests/abc129/tasks/abc129_e,"問題文正整数 L が二進数表記で与えられます 
以下の条件を満たす非負整数 a  b の組  a  b  がいくつ存在するか求めてください 

a   b  leq L
a   b   a  text  XOR   b

ただし この値は非常に大きくなることがあるので 10 9   7 で割った余りを出力してください 
 XOR とは
整数 A  B のビットごとの排他的論理和 a  text  XOR   b は 以下のように定義されます 
a  text  XOR   b を二進数表記した際の 2 k  k  geq 0  の位の数は A  B を二進数表記した際の 2 k の位の数のうち一方のみが 1 であれば 1 そうでなければ 0 である 
例えば 3  text  XOR   5   6 となります  二進数表記すると  011  text  XOR   101   110  


制約
Lは二進数表記で与えられ 先頭文字は必ず 1 である
1  leq L   2  100 001 


入力入力は以下の形式で標準入力から与えられる 
L


出力条件を満たす組  a  b  の個数を 10 9   7 で割った余りを出力せよ 

入力例 110


出力例 15

条件を満たす  a  b  としては  0  0    0  1    1  0    0  2    2  0  の 5 つが考えられます 

入力例 21111111111111111111


出力例 2162261460

Problem StatementYou are given a positive integer L in base two 
How many pairs of non negative integers  a  b  satisfy the following conditions 

a   b  leq L
a   b   a  text  XOR   b

Since there can be extremely many such pairs  print the count modulo 10 9   7 
 What is XOR 
The XOR of integers A and B  A  text  XOR   B  is defined as follows 

When A  text  XOR   B is written in base two  the digit in the 2 k s place  k  geq 0  is 1 if either A or B  but not both  has 1 in the 2 k s place  and 0 otherwise 

For example  3  text  XOR   5   6   In base two  011  text  XOR   101   110  


Constraints
L is given in base two  without leading zeros 
1  leq L   2  100  001 


InputInput is given from Standard Input in the following format 
L


OutputPrint the number of pairs  a  b  that satisfy the conditions  modulo 10 9   7 

Sample Input 110


Sample Output 15

Five pairs  a  b  satisfy the conditions   0  0    0  1    1  0    0  2  and  2  0  

Sample Input 21111111111111111111


Sample Output 2162261460"
Takahashi's Basics in Education and Learning,https://atcoder.jp/contests/abc129/tasks/abc129_f,"問題文

長さ L の等差数列 s 0  s 1  s 2        s  L 1  があります 
この等差数列の初項は A 公差は B です つまり s i   A   B  times i が成り立ちます 
この数列の各項を 先頭に 0 の無い十進法表記に直し 順につなげて読んでできる整数を考えます たとえば 数列 3  7  11  15  19 をつなげて読んでできる整数は 37111519 となります この整数を M で割ったあまりはいくらでしょうか 

制約

入力はすべて整数である
1  leq L  A  B   10  18 
2  leq M  leq 10 9
等差数列の要素は全て 10  18  未満


入力
入力は以下の形式で標準入力から与えられます 
L A B M


出力
数列の各項をつなげて読んだ整数を M で割ったあまりを出力してください 

入力例 15 3 4 10007


出力例 15563

考える等差数列は 3  7  11  15  19 なので 37111519 を 10007 で割ったあまりである 5563 が答えです 

入力例 24 8 1 1000000


出力例 2891011


入力例 3107 10000000000007 1000000000000007 998244353


出力例 339122908

Problem Statement
There is an arithmetic progression with L terms  s 0  s 1  s 2        s  L 1  
The initial term is A  and the common difference is B  That is  s i   A   B  times i holds 
Consider the integer obtained by concatenating the terms written in base ten without leading zeros  For example  the sequence 3  7  11  15  19 would be concatenated into 37111519  What is the remainder when that integer is divided by M 

Constraints

All values in input are integers 
1  leq L  A  B   10  18 
2  leq M  leq 10 9
All terms in the arithmetic progression are less than 10  18  


InputInput is given from Standard Input in the following format 
L A B M


Output
Print the remainder when the integer obtained by concatenating the terms is divided by M 

Sample Input 15 3 4 10007


Sample Output 15563

Our arithmetic progression is 3  7  11  15  19  so the answer is 37111519 mod 10007  that is  5563 

Sample Input 24 8 1 1000000


Sample Output 2891011


Sample Input 3107 10000000000007 1000000000000007 998244353


Sample Output 339122908"
Rounding,https://atcoder.jp/contests/abc130/tasks/abc130_a,"問題文X  A は 0 以上 9 以下の整数です 
X が A 未満の時 0 A 以上の時 10 を出力してください 

制約
0  leq X  A  leq 9
入力は全て整数である    


入力入力は以下の形式で標準入力から与えられる 
X A


出力X が A 未満の時 0 A 以上の時 10 を出力せよ 

入力例 13 5


出力例 10

3 は 5 未満であるので 0 を出力してください     

入力例 27 5


出力例 210

7 は 5 以上であるので 10 を出力してください 

入力例 36 6


出力例 310

6 は 6 以上であるので 10 を出力してください 
Problem StatementX and A are integers between 0 and 9  inclusive  
If X is less than A  print 0  if X is not less than A  print 10 

Constraints
0  leq X  A  leq 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
X A


OutputIf X is less than A  print 0  if X is not less than A  print 10 

Sample Input 13 5


Sample Output 10

3 is less than 5  so we should print 0 

Sample Input 27 5


Sample Output 210

7 is not less than 5  so we should print 10 

Sample Input 36 6


Sample Output 310

6 is not less than 6  so we should print 10"
Bounding,https://atcoder.jp/contests/abc130/tasks/abc130_b,"問題文数直線上を N   1 回跳ねるボールがあり 1 回目は 座標 D 1   0   i 回目は 座標 D i   D  i 1    L  i 1   2  leq i  leq N 1  で跳ねます 
数直線の座標が X 以下の領域でボールが跳ねる回数は何回でしょうか 

制約
1  leq N  leq 100
1  leq L i  leq 100
1  leq X  leq 10000
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N X
L 1 L 2     L  N 1  L N


出力数直線の座標が X 以下の領域でボールが跳ねる回数を出力せよ 

入力例 13 6
3 4 5


出力例 12

ボールは順に座標 0  3  7  12 で跳ねるので 座標 6 以下の領域で跳ねる回数は 2 回です 

入力例 24 9
3 3 3 3


出力例 24

ボールは順に座標 0  3  6  9  12 で跳ねるので 座標 9 以下の領域で跳ねる回数は 4 回です 
Problem StatementA ball will bounce along a number line  making N   1 bounces  It will make the first bounce at coordinate D 1   0  and the i th bounce  2  leq i  leq N 1  at coordinate D i   D  i 1    L  i 1  
How many times will the ball make a bounce where the coordinate is at most X 

Constraints
1  leq N  leq 100
1  leq L i  leq 100
1  leq X  leq 10000
All values in input are integers 


InputInput is given from Standard Input in the following format 
N X
L 1 L 2     L  N 1  L N


OutputPrint the number of times the ball will make a bounce where the coordinate is at most X 

Sample Input 13 6
3 4 5


Sample Output 12

The ball will make a bounce at the coordinates 0  3  7 and 12  among which two are less than or equal to 6 

Sample Input 24 9
3 3 3 3


Sample Output 24

The ball will make a bounce at the coordinates 0  3  6  9 and 12  among which four are less than or equal to 9"
Rectangle Cutting,https://atcoder.jp/contests/abc130/tasks/abc130_c,"問題文平面上に長方形があり 4 つの頂点の座標は  0 0   W 0   W H   0 H  です 
この長方形の内部または周上の点  x y  が与えられます  x y  を通る直線で長方形を 2 つの部分に分割するとき 
面積の大きくない方の面積の最大値を求めてください また その最大値を達成する分割の方法が複数あるかも判定してください 

制約
1  leq W H  leq 10 9
0 leq x leq W
0 leq y leq H
入力はすべて整数である


入力入力は以下の形式で標準入力から与えられる 
W H x y


出力はじめに 面積の大きくない方の面積の最大値を出力せよ つづいて その最大値を達成する分割の方法が複数あるなら 1 を そうでないなら 0 を出力せよ 
出力された面積は 絶対誤差あるいは相対誤差が 10   9  以下の時正答と判定される 

入力例 12 3 1 2


出力例 13 000000 0

直線 x 1 で分割するのが最適です また 最適な分割方法はこれ以外には存在しません 

入力例 22 2 1 1


出力例 22 000000 1

Problem StatementThere is a rectangle in a coordinate plane  The coordinates of the four vertices are  0 0    W 0    W H   and  0 H  
You are given a point  x y  which is within the rectangle or on its border  We will draw a straight line passing through  x y  to cut the rectangle into two parts  Find the maximum possible area of the part whose area is not larger than that of the other  Additionally  determine if there are multiple ways to cut the rectangle and achieve that maximum 

Constraints
1  leq W H  leq 10 9
0 leq x leq W
0 leq y leq H
All values in input are integers 


InputInput is given from Standard Input in the following format 
W H x y


OutputPrint the maximum possible area of the part whose area is not larger than that of the other  followed by 1 if there are multiple ways to cut the rectangle and achieve that maximum  and 0 otherwise 
The area printed will be judged correct when its absolute or relative error is at most 10   9  

Sample Input 12 3 1 2


Sample Output 13 000000 0

The line x 1 gives the optimal cut  and no other line does 

Sample Input 22 2 1 1


Sample Output 22 000000 1"
Enough Array,https://atcoder.jp/contests/abc130/tasks/abc130_d,"問題文長さ N の正整数列 A a 1 a 2   a  N  と整数 K が与えられます A の連続する部分列であって 以下の条件を満たすようなものは何個あるでしょうか 

 条件  連続部分列に含まれる全ての要素の値の和は K 以上である 

ただし ある二つの連続部分列が列として同じでも 取り出された位置が異なるならそれらは別々に数えるものとします 
出力が 32bit 整数型に収まらない場合があることに注意してください 

制約
1  leqq a i  leqq 10 5
1  leqq N  leqq 10 5
1  leqq K  leqq 10  10 


入力入力は以下の形式で標準入力から与えられます 
N K
a 1 a 2     a N


出力条件を満たすような連続部分列の個数を出力してください 

入力例 14 10
6 1 2 7


出力例 12


A 1  4  a 1 a 2 a 3 a 4  要素の値の和は 16 
A 2  4  a 2 a 3 a 4  要素の値の和は 10 

の二通りです 

入力例 23 5
3 3 3


出力例 23

ある二つの連続部分列が列として同じでも 取り出された位置が異なるならそれらは別々に数えることに注意してください 

入力例 310 53462
103 35322 232 342 21099 90000 18843 9010 35221 19352


出力例 336

Problem StatementYou are given a sequence of positive integers of length N  A a 1 a 2   a  N   and an integer K 
How many contiguous subsequences of A satisfy the following condition 

 Condition  The sum of the elements in the contiguous subsequence is at least K 

We consider two contiguous subsequences different if they derive from different positions in A  even if they are the same in content 
Note that the answer may not fit into a 32 bit integer type 

Constraints
1  leq a i  leq 10 5
1  leq N  leq 10 5
1  leq K  leq 10  10 


InputInput is given from Standard Input in the following format 
N K
a 1 a 2     a N


OutputPrint the number of contiguous subsequences of A that satisfy the condition 

Sample Input 14 10
6 1 2 7


Sample Output 12

The following two contiguous subsequences satisfy the condition 

A 1  4  a 1 a 2 a 3 a 4  with the sum of 16
A 2  4  a 2 a 3 a 4  with the sum of 10


Sample Input 23 5
3 3 3


Sample Output 23

Note again that we consider two contiguous subsequences different if they derive from different positions  even if they are the same in content 

Sample Input 310 53462
103 35322 232 342 21099 90000 18843 9010 35221 19352


Sample Output 336"
Common Subsequence,https://atcoder.jp/contests/abc130/tasks/abc130_e,"問題文1 以上 10 5 以下の整数から成る 長さ N の整数列 S と 長さ M の整数列 T が与えられます 
S の部分列と T の部分列の組であって 整数列として等しいような組は何通りあるでしょうか 
ただし 整数列 A の部分列とは A の要素を 0 個以上いくつか選んで削除し 残ったものを元の順序を保って並べた整数列を表します 
また S  T それぞれの部分列は 整数列として等しい場合でも 削除した要素の添字の集合が異なる場合には異なる部分列として区別してください 
答えは非常に大きくなることがあるので 10 9 7 で割った余りを出力してください 

制約
1  leq N  M  leq 2  times 10 3
S の長さは N である
T の長さは M である   
1  leq S i  T i  leq 10 5
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N M
S 1 S 2     S  N 1  S  N 
T 1 T 2     T  M 1  T  M 


出力整数列として等しいような S  T の部分列の組の個数を 10 9 7 で割った余りを出力せよ 

入力例 12 2
1 3
3 1


出力例 13

S の部分列としては      1    3    1  3  が考えられます 
T の部分列としては      3    1    3  1  が考えられます 
共に部分列が       である組は 1  times 1 通り 共に部分列が  1    である組は 1  times 1 通り 共に部分列が  3    である組は 1  times 1 通り考えられるので 合計 3 通りの組が存在します 

入力例 22 2
1 1
1 1


出力例 26

S の部分列としては      1    1    1  1  が考えられます 
T の部分列としては      1    1    1  1  が考えられます 
共に部分列が       である組は 1  times 1 通り 共に部分列が  1    である組は 2  times 2 通り 共に部分列が  1  1  である組は 1  times 1 通り考えられるので 合計 6 通りの組が存在します 
部分列において削除する要素の添字の集合が異なるものを区別することに注意してください 

入力例 34 4
3 4 5 6
3 4 5 6


出力例 316


入力例 410 9
9 6 5 7 5 9 8 5 6 7
8 6 8 5 5 7 9 9 7


出力例 4191


入力例 520 20
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1


出力例 5846527861

個数を 10 9 7 で割った余りを出力することに注意してください 
Problem StatementYou are given two integer sequences S and T of length N and M  respectively  both consisting of integers between 1 and 10 5  inclusive  
In how many pairs of a subsequence of S and a subsequence of T do the two subsequences are the same in content 
Here the subsequence of A is a sequence obtained by removing zero or more elements from A and concatenating the remaining elements without changing the order 
For both S and T  we distinguish two subsequences if the sets of the indices of the removed elements are different  even if the subsequences are the same in content 
Since the answer can be tremendous  print the number modulo 10 9 7 

Constraints
1  leq N  M  leq 2  times 10 3
The length of S is N 
The length of T is M      
1  leq S i  T i  leq 10 5
All values in input are integers 


InputInput is given from Standard Input in the following format 
N M
S 1 S 2     S  N 1  S  N 
T 1 T 2     T  M 1  T  M 


OutputPrint the number of pairs of a subsequence of S and a subsequence of T such that the subsequences are the same in content  modulo 10 9 7 

Sample Input 12 2
1 3
3 1


Sample Output 13

S has four subsequences       1    3    1  3  
T has four subsequences       3    1    3  1  
There are 1  times 1 pair of subsequences in which the subsequences are both     1  times 1 pair of subsequences in which the subsequences are both  1   and 1  times 1 pair of subsequences in which the subsequences are both  3   for a total of three pairs 

Sample Input 22 2
1 1
1 1


Sample Output 26

S has four subsequences       1    1    1  1  
T has four subsequences       1    1    1  1  
There are 1  times 1 pair of subsequences in which the subsequences are both     2  times 2 pairs of subsequences in which the subsequences are both  1   and 1  times 1 pair of subsequences in which the subsequences are both  1 1   for a total of six pairs 
Note again that we distinguish two subsequences if the sets of the indices of the removed elements are different  even if the subsequences are the same in content 

Sample Input 34 4
3 4 5 6
3 4 5 6


Sample Output 316


Sample Input 410 9
9 6 5 7 5 9 8 5 6 7
8 6 8 5 5 7 9 9 7


Sample Output 4191


Sample Input 520 20
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1


Sample Output 5846527861

Be sure to print the number modulo 10 9 7"
Minimum Bounding Box,https://atcoder.jp/contests/abc130/tasks/abc130_f,"問題文二次元平面に N 個の点があります i 番目の点の初期座標は  x i  y i  です それぞれの点はこれから秒速 1 で同時に移動を始めます 点の移動方向は全て x 軸または y 軸に平行です 具体的には i 番目の点の移動方向は文字 d i によって与えられ 

d i    R のとき x 軸正方向
d i    L のとき x 軸負方向
d i    U のとき y 軸正方向
d i    D のとき y 軸負方向

です 
あなたは点が移動を開始して以降 任意のタイミングで全ての点の動きを止めることができます  移動開始 0 秒後に止めることも可能です  
動きを止めたあとの N 点の x 座標のうち最大のものを x  max  最小のものを x  min  y 座標のうち最大のものを y  max  最小のものを y  min  とします 
 x  max    x  min    times  y  max    y  min   としてありうる値の最小値を求めて出力してください 

制約
1  leq N  leq 10 5
 10 8  leq x i   y i  leq 10 8
x i    y i はともに整数である 
d i は R  L  U  D のいずれかである 


入力入力は以下の形式で標準入力から与えられる 
N
x 1 y 1 d 1
x 2 y 2 d 2
 
 
 
x N y N d N


出力 x  max    x  min    times  y  max    y  min   としてありうる値の最小値を出力せよ 
ジャッジプログラムの出力との絶対誤差または相対誤差が 10   9  以下のとき正解とみなされる 

入力例 12
0 3 D
3 0 L


出力例 10

3 秒後に 2 つの点は原点で重なり このとき題意の値は 0 になります 

入力例 25
 7  10 U
7  6 U
 8 7 D
 3 3 D
0  6 R


出力例 297 5

出力が整数にならない場合もあります 

入力例 320
6  10 R
 4  9 U
9 6 D
 3  2 R
0 7 D
4 5 D
10  10 U
 1  8 U
10  6 D
8  5 U
6 4 D
0 3 D
7 9 R
9  4 R
3 10 D
1 9 U
1  6 U
9  8 R
6 7 D
7  3 D


出力例 3273

Problem StatementThere are N points in a two dimensional plane  The initial coordinates of the i th point are  x i  y i   Now  each point starts moving at a speed of 1 per second  in a direction parallel to the x  or y  axis  You are given a character d i that represents the specific direction in which the i th point moves  as follows 

If d i   R  the i th point moves in the positive x direction 
If d i   L  the i th point moves in the negative x direction 
If d i   U  the i th point moves in the positive y direction 
If d i   D  the i th point moves in the negative y direction 

You can stop all the points at some moment of your choice after they start moving  including the moment they start moving  
Then  let x  max  and x  min  be the maximum and minimum among the x coordinates of the N points  respectively  Similarly  let y  max  and y  min  be the maximum and minimum among the y coordinates of the N points  respectively 
Find the minimum possible value of  x  max    x  min    times  y  max    y  min   and print it 

Constraints
1  leq N  leq 10 5
 10 8  leq x i   y i  leq 10 8
x i and y i are integers 
d i is R  L  U  or D 


InputInput is given from Standard Input in the following format 
N
x 1 y 1 d 1
x 2 y 2 d 2
 
 
 
x N y N d N


OutputPrint the minimum possible value of  x  max    x  min    times  y  max    y  min   
The output will be considered correct when its absolute or relative error from the judge s output is at most 10   9  

Sample Input 12
0 3 D
3 0 L


Sample Output 10

After three seconds  the two points will meet at the origin  The value in question will be 0 at that moment 

Sample Input 25
 7  10 U
7  6 U
 8 7 D
 3 3 D
0  6 R


Sample Output 297 5

The answer may not be an integer 

Sample Input 320
6  10 R
 4  9 U
9 6 D
 3  2 R
0 7 D
4 5 D
10  10 U
 1  8 U
10  6 D
8  5 U
6 4 D
0 3 D
7 9 R
9  4 R
3 10 D
1 9 U
1  6 U
9  8 R
6 7 D
7  3 D


Sample Output 3273"
Security,https://atcoder.jp/contests/abc131/tasks/abc131_a,"問題文
すぬけ君の管理する研究室の扉にはロックがかかっており 解錠にはセキュリティコードを入力する必要があります 
セキュリティコードは 4 桁の数字列です セキュリティコードが 入力しづらい とは 同じ数字が連続する箇所が存在することを言います 
現在のセキュリティコード S が与えられます S が 入力しづらい なら Bad を そうでなければ Good を出力してください 

制約

S は半角数字のみからなる長さ 4 の文字列


入力
入力は以下の形式で標準入力から与えられます 
S


出力
セキュリティコード S が 入力しづらい なら Bad を そうでなければ Good を出力してください 

入力例 13776


出力例 1Bad

2 文字目と 3 文字目が同じなので 3776 は入力しづらいセキュリティコードです 

入力例 28080


出力例 2Good

同じ数字が連続していないので 8080 は入力しづらいセキュリティコードではありません 

入力例 31333


出力例 3Bad


入力例 40024


出力例 4Bad

Problem Statement
The door of Snuke s laboratory is locked with a security code 
The security code is a 4 digit number  We say the security code is hard to enter when it contains two consecutive digits that are the same 
You are given the current security code S  If S is hard to enter  print Bad  otherwise  print Good 

Constraints

S is a 4 character string consisting of digits 


Input
Input is given from Standard Input in the following format 
S


Output
If S is hard to enter  print Bad  otherwise  print Good 

Sample Input 13776


Sample Output 1Bad

The second and third digits are the same  so 3776 is hard to enter 

Sample Input 28080


Sample Output 2Good

There are no two consecutive digits that are the same  so 8080 is not hard to enter 

Sample Input 31333


Sample Output 3Bad


Sample Input 40024


Sample Output 4Bad"
Bite Eating,https://atcoder.jp/contests/abc131/tasks/abc131_b,"問題文N 個のリンゴがあります これらはそれぞれリンゴ 1 リンゴ 2 リンゴ 3     リンゴ N と呼ばれており リンゴ i の 味 は L i 1 です  味 は負になることもありえます 
また 1 個以上のリンゴを材料として アップルパイをつくることができます その 味 は 材料となったリンゴの 味 の総和となります 
あなたはこれらのリンゴを全て材料として アップルパイをつくる予定でしたが おなかがすいたので 1 個だけ食べることにしました 勿論 食べてしまったリンゴはアップルパイの材料にはできません 
つくる予定だったアップルパイとできるだけ同じものをつくりたいので N 個のリンゴ全てを材料としてできるアップルパイの 味 と 食べていない N 1 個のリンゴを材料としてできるアップルパイの 味 の差の絶対値ができるだけ小さくなるように 食べるリンゴを選ぶことにしました 
このようにして選ばれたリンゴを食べた時 食べていない N 1 個のリンゴを材料としてできるアップルパイの 味 を求めてください 
なお この値は一意に定まることが証明できます 

制約
2  leqq N  leqq 200
 100  leqq L  leqq 100
入力は全て整数である 


入力入力は以下の形式で標準入力から与えられます 
N L


出力最適に食べるリンゴを選んだ時の 食べていない N 1 個のリンゴを材料としてできるアップルパイの 味 を出力してください 

入力例 15 2


出力例 118

リンゴ 1 2 3 4 5 の 味 は それぞれ 2 3 4 5 6 です リンゴ 1 を食べるのが最適で 答えは 3 4 5 6 18 となります 

入力例 23  1


出力例 20

リンゴ 1 2 3 の 味 は それぞれ  1 0 1 です リンゴ 2 を食べるのが最適で 答えは   1  1 0 となります 

入力例 330  50


出力例 3 1044

Problem StatementYou have N apples  called Apple 1  Apple 2  Apple 3       Apple N  The flavor of Apple i is L i 1  which can be negative 
You can make an apple pie using one or more of the apples  The flavor of the apple pie will be the sum of the flavors of the apples used 
You planned to make an apple pie using all of the apples  but being hungry tempts you to eat one of them  which can no longer be used to make the apple pie 
You want to make an apple pie that is as similar as possible to the one that you planned to make  Thus  you will choose the apple to eat so that the flavor of the apple pie made of the remaining N 1 apples will have the smallest possible absolute difference from the flavor of the apple pie made of all the N apples 
Find the flavor of the apple pie made of the remaining N 1 apples when you choose the apple to eat as above 
We can prove that this value is uniquely determined 

Constraints
2  leq N  leq 200
 100  leq L  leq 100
All values in input are integers 


InputInput is given from Standard Input in the following format 
N L


OutputFind the flavor of the apple pie made of the remaining N 1 apples when you optimally choose the apple to eat 

Sample Input 15 2


Sample Output 118

The flavors of Apple 1  2  3  4  and 5 are 2  3  4  5  and 6  respectively  The optimal choice is to eat Apple 1  so the answer is 3 4 5 6 18 

Sample Input 23  1


Sample Output 20

The flavors of Apple 1  2  and 3 are  1  0  and 1  respectively  The optimal choice is to eat Apple 2  so the answer is   1  1 0 

Sample Input 330  50


Sample Output 3 1044"
Anti Division,https://atcoder.jp/contests/abc131/tasks/abc131_c,"問題文整数 A B C D が与えられます A 以上 B 以下の整数のうち C でも D でも割り切れないものの個数を求めてください 

制約
1 leq A leq B leq 10  18 
1 leq C D leq 10 9
入力はすべて整数である


入力入力は以下の形式で標準入力から与えられる 
A B C D


出力A 以上 B 以下の整数のうち C でも D でも割り切れないものの個数を出力せよ 

入力例 14 9 2 3


出力例 12

5 7 が条件を満たします 

入力例 210 40 6 8


出力例 223


入力例 3314159265358979323 846264338327950288 419716939 937510582


出力例 3532105071133627368

Problem StatementYou are given four integers A  B  C  and D  Find the number of integers between A and B  inclusive  that can be evenly divided by neither C nor D 

Constraints
1 leq A leq B leq 10  18 
1 leq C D leq 10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
A B C D


OutputPrint the number of integers between A and B  inclusive  that can be evenly divided by neither C nor D 

Sample Input 14 9 2 3


Sample Output 12

5 and 7 satisfy the condition 

Sample Input 210 40 6 8


Sample Output 223


Sample Input 3314159265358979323 846264338327950288 419716939 937510582


Sample Output 3532105071133627368"
Megalomania,https://atcoder.jp/contests/abc131/tasks/abc131_d,"問題文
AtCoder王国の王立問題工房でABC管理官の座に就いたキザハシ君は 浮かれるあまり仕事を引き受けすぎてしまいました 
現在の時刻は 0 です キザハシ君は 1 から N までの番号が振られた N 件の仕事を持っています 
キザハシ君が仕事 i を終えるには A i 単位時間かかります また 仕事 i の〆切は時刻 B i であり これまでに仕事を終わらせる必要があります 時刻 B i ちょうどに仕事 i を終わらせてもかまいません 
キザハシ君は 2 件以上の仕事を同時にすることはできませんが ある仕事を終わらせた直後に別の仕事を始めることはできます 
キザハシ君はすべての仕事を〆切までに終わらせることができるでしょうか 可能ならば Yes 不可能ならば No を出力してください 

制約

入力はすべて整数
1  leq N  leq 2  times 10 5
1  leq A i  B i  leq 10 9  1  leq i  leq N 


入力
入力は以下の形式で標準入力から与えられます 
N
A 1 B 1
 
 
 
A N B N


出力
全ての仕事を〆切までに終わらせることが可能ならば Yes 不可能ならば No を出力してください 

入力例 15
2 4
1 9
1 8
4 9
3 12


出力例 1Yes

たとえば以下の順番で仕事を行うことで すべての仕事を達成できます 

時刻 0 から 1 までの間 仕事 2 を行う 
時刻 1 から 3 までの間 仕事 1 を行う 
時刻 3 から 7 までの間 仕事 4 を行う 
時刻 7 から 8 までの間 仕事 3 を行う 
時刻 8 から 11 までの間 仕事 5 を行う 

仕事 3 は〆切である時刻 8 ちょうどに終えていますが 問題ないことに注意してください 

入力例 23
334 1000
334 1000
334 1000


出力例 2No

どんな順番で仕事をしても 全ての仕事を間に合わせることはできません 

入力例 330
384 8895
1725 9791
170 1024
4 11105
2 6
578 1815
702 3352
143 5141
1420 6980
24 1602
849 999
76 7586
85 5570
444 4991
719 11090
470 10708
1137 4547
455 9003
110 9901
15 8578
368 3692
104 1286
3 4
366 12143
7 6649
610 2374
152 7324
4 7042
292 11386
334 5720


出力例 3Yes

Problem Statement
Kizahashi  who was appointed as the administrator of ABC at National Problem Workshop in the Kingdom of AtCoder  got too excited and took on too many jobs 
Let the current time be time 0  Kizahashi has N jobs numbered 1 to N 
It takes A i units of time for Kizahashi to complete Job i  The deadline for Job i is time B i  and he must complete the job before or at this time 
Kizahashi cannot work on two or more jobs simultaneously  but when he completes a job  he can start working on another immediately 
Can Kizahashi complete all the jobs in time  If he can  print Yes  if he cannot  print No 

Constraints

All values in input are integers 
1  leq N  leq 2  times 10 5
1  leq A i  B i  leq 10 9  1  leq i  leq N 


Input
Input is given from Standard Input in the following format 
N
A 1 B 1
 
 
 
A N B N


Output
If Kizahashi can complete all the jobs in time  print Yes  if he cannot  print No 

Sample Input 15
2 4
1 9
1 8
4 9
3 12


Sample Output 1Yes

He can complete all the jobs in time by  for example  doing them in the following order 

Do Job 2 from time 0 to 1 
Do Job 1 from time 1 to 3 
Do Job 4 from time 3 to 7 
Do Job 3 from time 7 to 8 
Do Job 5 from time 8 to 11 

Note that it is fine to complete Job 3 exactly at the deadline  time 8 

Sample Input 23
334 1000
334 1000
334 1000


Sample Output 2No

He cannot complete all the jobs in time  no matter what order he does them in 

Sample Input 330
384 8895
1725 9791
170 1024
4 11105
2 6
578 1815
702 3352
143 5141
1420 6980
24 1602
849 999
76 7586
85 5570
444 4991
719 11090
470 10708
1137 4547
455 9003
110 9901
15 8578
368 3692
104 1286
3 4
366 12143
7 6649
610 2374
152 7324
4 7042
292 11386
334 5720


Sample Output 3Yes"
Friendships,https://atcoder.jp/contests/abc131/tasks/abc131_e,"問題文以下の条件を満たす N 頂点の無向グラフは存在するでしょうか 

グラフは単純かつ連結である 
各頂点には 1  2       N の番号が付けられている 
グラフの辺数を M としたとき 各辺には 1  2       M の番号が付けられていて 辺 i は頂点 u i と頂点 v i をつなぐ長さ 1 の辺である 
最短距離が 2 であるような頂点対  i   j    i   j  が ちょうど K 個存在する 

条件を満たすグラフが存在するならば 1 つ構築してください 

制約
入力は全て整数である 
2  leq N  leq 100
0  leq K  leq  frac N N   1   2 


入力入力は以下の形式で標準入力から与えられる 
N K


出力条件を満たすグラフが存在しなければ  1 を出力せよ 
存在するならば そのようなグラフを 1 つ 以下の形式で出力せよ  記号の意味は問題文を参照せよ  
M
u 1 v 1
 
u M v M

条件を満たすグラフが複数存在する場合 どれを出力してもよい 

入力例 15 3


出力例 15
4 3
1 2
3 1
4 5
2 3

このグラフには最短距離が 2 であるような頂点対が  1   4     2   4     3   5  の 3 個存在します よって条件を満たしています 

入力例 25 8


出力例 2 1

条件を満たすグラフは存在しません 
Problem Statement
Does there exist an undirected graph with N vertices satisfying the following conditions 

The graph is simple and connected 
The vertices are numbered 1  2       N 
Let M be the number of edges in the graph  The edges are numbered 1  2       M  the length of each edge is 1  and Edge i connects Vertex u i and Vertex v i 
There are exactly K pairs of vertices  i   j    i   j  such that the shortest distance between them is 2 

If there exists such a graph  construct an example 

Constraints
All values in input are integers 
2  leq N  leq 100
0  leq K  leq  frac N N   1   2 


Input
Input is given from Standard Input in the following format 
N K


OutputIf there does not exist an undirected graph with N vertices satisfying the conditions  print  1 
If there exists such a graph  print an example in the following format  refer to Problem Statement for what the symbols stand for  
M
u 1 v 1
 
u M v M

If there exist multiple graphs satisfying the conditions  any of them will be accepted 

Sample Input 15 3


Sample Output 15
4 3
1 2
3 1
4 5
2 3

This graph has three pairs of vertices such that the shortest distance between them is 2   1   4    2   4   and  3   5   Thus  the condition is satisfied 

Sample Input 25 8


Sample Output 2 1

There is no graph satisfying the conditions"
Must Be Rectangular!,https://atcoder.jp/contests/abc131/tasks/abc131_f,"問題文2 次元平面上の N 個の点があり i 番目の点の座標は  x i  y i  です 
以下の操作を行える限り繰り返します 

座標  a  b    a  d    c  b    c  d  のうちちょうど 3 箇所に点が存在するような整数 a  b  c  d  a  neq c  b  neq d  を選び 残りの 1 箇所に点を追加する 

この操作は有限回しか行なうことができないことが証明できます 操作回数の最大値を求めてください 

制約
1  leq N  leq 10 5
1  leq x i  y i  leq 10 5
x i  neq x j または y i  neq y j  i  neq j 
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N
x 1 y 1
 
x N y N


出力操作回数の最大値を出力せよ 

入力例 13
1 1
5 1
5 5


出力例 11

a   1  b   1  c   5  d   5 とすると  1  5  に点を追加することができます これ以上操作を行うことはできないので 操作回数の最大値は 1 回です 

入力例 22
10 10
20 20


出力例 20

2 点しか点がないので操作を 1 回も行うことができません 

入力例 39
1 1
2 1
3 1
4 1
5 1
1 2
1 3
1 4
1 5


出力例 316

a   1  b   1  c   i  d   j  2  leq i j  leq 5  の全てに対して操作を行うことができ それ以上操作を行うことはできないので 操作回数の最大値は 16 回です 
Problem StatementThere are N dots in a two dimensional plane  The coordinates of the i th dot are  x i  y i  
We will repeat the following operation as long as possible 

Choose four integers a  b  c  d  a  neq c  b  neq d  such that there are dots at exactly three of the positions  a  b    a  d    c  b  and  c  d   and add a dot at the remaining position 

We can prove that we can only do this operation a finite number of times  Find the maximum number of times we can do the operation 

Constraints
1  leq N  leq 10 5
1  leq x i  y i  leq 10 5
If i  neq j  x i  neq x j or y i  neq y j 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
x 1 y 1
 
x N y N


OutputPrint the maximum number of times we can do the operation 

Sample Input 13
1 1
5 1
5 5


Sample Output 11

By choosing a   1  b   1  c   5  d   5  we can add a dot at  1  5   We cannot do the operation any more  so the maximum number of operations is 1 

Sample Input 22
10 10
20 20


Sample Output 20

There are only two dots  so we cannot do the operation at all 

Sample Input 39
1 1
2 1
3 1
4 1
5 1
1 2
1 3
1 4
1 5


Sample Output 316

We can do the operation for all choices of the form a   1  b   1  c   i  d   j  2  leq i j  leq 5   and no more  Thus  the maximum number of operations is 16"
Fifty Fifty,https://atcoder.jp/contests/abc132/tasks/abc132_a,"問題文長さ 4 の英大文字からなる文字列 S が与えられます 
S がちょうど 2 種類の文字からなり かつ現れる各文字はちょうど 2 回ずつ現れているかどうかを判定してください 

制約
S の長さは 4 である
S は英大文字からなる


入力入力は以下の形式で標準入力から与えられる 
S


出力S がちょうど 2 種類の文字からなり かつ現れる各文字はちょうど 2 回ずつ現れているなら Yes を そうでないなら No を出力せよ 

入力例 1ASSA


出力例 1Yes

S は A と S からなり A と S はそれぞれ 2 回ずつ現れます 

入力例 2STOP


出力例 2No


入力例 3FFEE


出力例 3Yes


入力例 4FREE


出力例 4No

Problem StatementYou are given a 4 character string S consisting of uppercase English letters 
Determine if S consists of exactly two kinds of characters which both appear twice in S 

Constraints
The length of S is 4 
S consists of uppercase English letters 


InputInput is given from Standard Input in the following format 
S


OutputIf S consists of exactly two kinds of characters which both appear twice in S  print Yes  otherwise  print No 

Sample Input 1ASSA


Sample Output 1Yes

S consists of A and S which both appear twice in S 

Sample Input 2STOP


Sample Output 2No


Sample Input 3FFEE


Sample Output 3Yes


Sample Input 4FREE


Sample Output 4No"
Ordinary Number,https://atcoder.jp/contests/abc132/tasks/abc132_b,"問題文 1   2         n  の順列 p    p 1   p 2         p n  があります 
以下の条件を満たすような p i  1   i   n  がいくつあるかを出力してください 

p  i   1    p i   p  i   1  の 3 つの数の中で p i が 2 番目に小さい 


制約
入力は全て整数である 
3  leq n  leq 20
p は  1   2         n  の順列である 


入力入力は以下の形式で標準入力から与えられる 
n
p 1 p 2     p n


出力条件を満たす p i の個数を出力せよ 

入力例 15
1 3 5 4 2


出力例 12

p 1   1   p 2   3   p 3   5 の中で p 2   3 は 2 番目に小さい数です また p 3   5   p 4   4   p 5   2 の中で p 4   4 は 2 番目に小さい数です 条件を満たす要素はこの 2 つです 

入力例 29
9 6 3 2 5 8 7 4 1


出力例 25

Problem StatementWe have a permutation p    p 1   p 2         p n  of  1   2         n  
Print the number of elements p i  1   i   n  that satisfy the following condition 

p i is the second smallest number among the three numbers p  i   1   p i  and p  i   1  


Constraints
All values in input are integers 
3  leq n  leq 20
p is a permutation of  1   2         n  


InputInput is given from Standard Input in the following format 
n
p 1 p 2     p n


OutputPrint the number of elements p i  1   i   n  that satisfy the condition 

Sample Input 15
1 3 5 4 2


Sample Output 12

p 2   3 is the second smallest number among p 1   1  p 2   3  and p 3   5  Also  p 4   4 is the second smallest number among p 3   5  p 4   4  and p 5   2  These two elements satisfy the condition 

Sample Input 29
9 6 3 2 5 8 7 4 1


Sample Output 25"
Divide the Problems,https://atcoder.jp/contests/abc132/tasks/abc132_c,"問題文高橋君は   N 個の競技プログラミング用の問題をつくりました 
それぞれの問題には 1 から N の番号がついており 問題 i の難易度は整数 d i で表されます 大きいほど難しいです  
高橋君はある整数 K を決めることで 

難易度が K 以上ならば  ARC 用の問題 
難易度が K 未満ならば  ABC 用の問題 

という風に これらの問題を二種類に分類しようとしています 
 ARC 用の問題 と ABC 用の問題 が同じ数になるような整数 K の選び方は何通りあるでしょうか 

制約
2  leqq N  leqq 10 5
N は偶数である 
1  leqq d i  leqq 10 5
入力は全て整数である 


入力入力は以下の形式で標準入力から与えられます 
N
d 1 d 2     d N


出力 ARC 用の問題 と ABC 用の問題 が同じ数になるような整数 K の選び方の数を出力してください 

入力例 16
9 1 4 4 6 7


出力例 12

K 5 6 としたとき 問題 1 5 6 が ARC 用の問題  問題 2 3 4 が ABC 用の問題 となり 条件を満たします 
よって 答えは 2 通りです 

入力例 28
9 1 14 5 5 4 4 14


出力例 20

 ARC 用の問題 と ABC 用の問題 が同じ数になるような整数 K の選び方が存在しない場合もあります 

入力例 314
99592 10342 29105 78532 83018 11639 92015 77204 30914 21912 34519 80835 100000 1


出力例 342685

Problem StatementTakahashi made N problems for competitive programming 
The problems are numbered 1 to N  and the difficulty of Problem i is represented as an integer d i  the higher  the harder  
He is dividing the problems into two categories by choosing an integer K  as follows 

A problem with difficulty K or higher will be for ARCs 
A problem with difficulty lower than K will be for ABCs 

How many choices of the integer K make the number of problems for ARCs and the number of problems for ABCs the same 

Problem Statement
2  leq N  leq 10 5
N is an even number 
1  leq d i  leq 10 5
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
d 1 d 2     d N


OutputPrint the number of choices of the integer K that make the number of problems for ARCs and the number of problems for ABCs the same 

Sample Input 16
9 1 4 4 6 7


Sample Output 12

If we choose K 5 or 6  Problem 1  5  and 6 will be for ARCs  Problem 2  3  and 4 will be for ABCs  and the objective is achieved 
Thus  the answer is 2 

Sample Input 28
9 1 14 5 5 4 4 14


Sample Output 20

There may be no choice of the integer K that make the number of problems for ARCs and the number of problems for ABCs the same 

Sample Input 314
99592 10342 29105 78532 83018 11639 92015 77204 30914 21912 34519 80835 100000 1


Sample Output 342685"
Blue and Red Balls,https://atcoder.jp/contests/abc132/tasks/abc132_d,"問題文K 個の青いボールと N K 個の赤いボールがあります 同じ色のボールは区別が不可能です すぬけ君と高橋君はこれらのボールで遊んでいます 
まず すぬけ君が N 個のボールを左から右に一列に並べます 
次に 高橋君は これらのうち K 個の青いボールのみを回収します 高橋君は 1 回の操作で連続して並ぶ青いボールを何個でも回収することができます 高橋君は 常に K 個の青いボールを回収するのにかかる操作の回数が最小になるように行動します 
K 個の青いボールを回収するために高橋君がちょうど i 回操作をする必要があるボールの並べ方は何通りあるでしょうか  1   i   K をみたす i それぞれについて答えを計算し  10 9 7 で割った余りを答えてください 

制約
1   K   N   2000


入力入力は以下の形式で標準入力から与えられる 
N K


出力i 行目  1   i   K  に高橋君がちょうど i 回操作をする必要があるボールの並べ方の総数を 10 9 7 で割った余りを出力せよ 

入力例 15 3


出力例 13
6
1

高橋君がちょうど 1 回操作をする必要があるボールの並べ方は  青  青  青  赤  赤    赤  青  青  青  赤    赤  赤  青  青  青  の 3 通りです 
高橋君がちょうど 2 回操作をする必要があるボールの並べ方は  青  青  赤  青  赤    青  青  赤  赤  青    赤  青  青  赤  青    赤  青  赤  青  青    青  赤  青  青  赤    青  赤  赤  青  青  の 6 通りです 
高橋君がちょうど 3 回操作をする必要があるボールの並べ方は  青  赤  青  赤  青  のみの 1 通りです 

入力例 22000 3


出力例 21998
3990006
327341989

並べ方の総数を 10 9 7 で割った余りを出力することに注意してください 
Problem StatementThere are K blue balls and N K red balls  The balls of the same color cannot be distinguished  Snuke and Takahashi are playing with these balls 
First  Snuke will arrange the N balls in a row from left to right 
Then  Takahashi will collect only the K blue balls  In one move  he can collect any number of consecutive blue balls  He will collect all the blue balls in the fewest moves possible 
How many ways are there for Snuke to arrange the N balls in a row so that Takahashi will need exactly i moves to collect all the blue balls  Compute this number modulo 10 9 7 for each i such that 1  leq i  leq K 

Constraints
1  leq K  leq N  leq 2000


InputInput is given from Standard Input in the following format 
N K


OutputPrint K lines  The i th line  1  leq i  leq K  should contain the number of ways to arrange the N balls so that Takahashi will need exactly i moves to collect all the blue balls  modulo 10 9 7 

Sample Input 15 3


Sample Output 13
6
1

There are three ways to arrange the balls so that Takahashi will need exactly one move   B  B  B  R  R    R  B  B  B  R   and  R  R  B  B  B    R and B stands for red and blue  respectively  
There are six ways to arrange the balls so that Takahashi will need exactly two moves   B  B  R  B  R    B  B  R  R  B    R  B  B  R  B    R  B  R  B  B    B  R  B  B  R   and  B  R  R  B  B  
There is one way to arrange the balls so that Takahashi will need exactly three moves   B  R  B  R  B  

Sample Input 22000 3


Sample Output 21998
3990006
327341989

Be sure to print the numbers of arrangements modulo 10 9 7"
Hopscotch Addict,https://atcoder.jp/contests/abc132/tasks/abc132_e,"問題文ケンくんはけんけんぱが大好きです 今日は有向グラフ G の上でけんけんぱをすることにしました 
G は 1 から N で番号付けされた N 頂点および M 辺からなり 
i 番目の辺は頂点 u i から頂点 v i に接続しています 
ケンくんははじめ頂点 S にいて 頂点 T までけんけんぱで移動したいです 
1 回のけんけんぱでは  自分の今いる頂点から出ている辺を 1 つ選んで その辺が接続する頂点に移動する という操作をちょうど 3 回連続で行います 
ケンくんが頂点 T に移動することができるか また移動できるなら最小何回のけんけんぱで頂点 T まで移動することができるかを答えてください 
けんけんぱの操作の途中で頂点 T に訪れても  頂点 T に移動できた とは見なさないことに注意してください 

制約
2  leq N  leq 10 5
0  leq M  leq  min 10 5  N  N 1  
1  leq u i  v i  leq N 1  leq i  leq M 
u i  neq v i  1  leq i  leq M 
i  neq j ならば  u i  v i   neq  u j  v j 
1  leq S  T  leq N
S  neq T


入力入力は以下の形式で標準入力から与えられる 
N M
u 1 v 1
 
u M v M
S T


出力何回けんけんぱを繰り返しても頂点 S から頂点 T へ移動できない場合には  1 を出力せよ 
移動できる場合には 移動するのに必要なけんけんぱの最小回数を出力せよ 

入力例 14 4
1 2
2 3
3 4
4 1
1 3


出力例 12

1 回目のけんけんぱでは 1  rightarrow 2  rightarrow 3  rightarrow 4 2 回目のけんけんぱでは 4  rightarrow 1  rightarrow 2  rightarrow 3 と移動することで頂点 3 に辿り着くことができ これが最小回数です 

入力例 23 3
1 2
2 3
3 1
1 2


出力例 2 1

何回けんけんぱを繰り返しても頂点 1 に辿り着くため 頂点 2 に移動することは不可能です 
けんけんぱの途中で頂点 2 を通過することはできますが これは移動できたとは見なしません 

入力例 32 0
1 2


出力例 3 1

頂点 S と頂点 T は非連結である場合があります 

入力例 46 8
1 2
2 3
3 4
4 5
5 1
1 4
1 5
4 6
1 6


出力例 42

Problem StatementKen loves ken ken pa  Japanese version of hopscotch   Today  he will play it on a directed graph G 
G consists of N vertices numbered 1 to N  and M edges  The i th edge points from Vertex u i to Vertex v i 
First  Ken stands on Vertex S  He wants to reach Vertex T by repeating ken ken pa  In one ken ken pa  he does the following exactly three times  follow an edge pointing from the vertex on which he is standing 
Determine if he can reach Vertex T by repeating ken ken pa  If the answer is yes  find the minimum number of ken ken pa needed to reach Vertex T  Note that visiting Vertex T in the middle of a ken ken pa does not count as reaching Vertex T by repeating ken ken pa 

Constraints
2  leq N  leq 10 5
0  leq M  leq  min 10 5  N  N 1  
1  leq u i  v i  leq N 1  leq i  leq M 
u i  neq v i  1  leq i  leq M 
If i  neq j   u i  v i   neq  u j  v j  
1  leq S  T  leq N
S  neq T


InputInput is given from Standard Input in the following format 
N M
u 1 v 1
 
u M v M
S T


OutputIf Ken cannot reach Vertex T from Vertex S by repeating ken ken pa  print  1 
If he can  print the minimum number of ken ken pa needed to reach vertex T 

Sample Input 14 4
1 2
2 3
3 4
4 1
1 3


Sample Output 12

Ken can reach Vertex 3 from Vertex 1 in two ken ken pa  as follows  1  rightarrow 2  rightarrow 3  rightarrow 4 in the first ken ken pa  then 4  rightarrow 1  rightarrow 2  rightarrow 3 in the second ken ken pa  This is the minimum number of ken ken pa needed 

Sample Input 23 3
1 2
2 3
3 1
1 2


Sample Output 2 1

Any number of ken ken pa will bring Ken back to Vertex 1  so he cannot reach Vertex 2  though he can pass through it in the middle of a ken ken pa 

Sample Input 32 0
1 2


Sample Output 3 1

Vertex S and Vertex T may be disconnected 

Sample Input 46 8
1 2
2 3
3 4
4 5
5 1
1 4
1 5
4 6
1 6


Sample Output 42"
Small Products,https://atcoder.jp/contests/abc132/tasks/abc132_f,"問題文正の整数 K 個を一列に並べたものであって 隣接して並んでいるどの 2 つの整数の積も N 以下であるものの個数を 10 9 7 で割った余りを求めてください 

制約
1 leq N leq 10 9
1 2 leq K leq 100  21 33 修正 
N K は整数である


入力入力は以下の形式で標準入力から与えられる 
N K


出力条件を満たす列の個数を 10 9 7 で割った余りを出力せよ 

入力例 13 2


出力例 15

 1 1   1 2   1 3   2 1   3 1  が条件を満たします 

入力例 210 3


出力例 2147


入力例 3314159265 35


出力例 3457397712

Problem StatementFind the number of sequences of length K consisting of positive integers such that the product of any two adjacent elements is at most N  modulo 10 9 7 

Constraints
1 leq N leq 10 9
1 2 leq K leq 100  fixed at 21 33 JST 
N and K are integers 


InputInput is given from Standard Input in the following format 
N K


OutputPrint the number of sequences  modulo 10 9 7 

Sample Input 13 2


Sample Output 15

 1 1    1 2    1 3    2 1   and  3 1  satisfy the condition 

Sample Input 210 3


Sample Output 2147


Sample Input 3314159265 35


Sample Output 3457397712"
T or T,https://atcoder.jp/contests/abc133/tasks/abc133_a,"問題文私たちは N 人で旅行しようとしており その交通手段として電車とタクシーがあります 
電車を使うと 1 人あたり A 円かかります 
タクシーを使うと N 人で B 円かかります 
全員の交通費の合計は最小でいくらになるでしょうか 

制約
入力は全て整数である 
1  leq N  leq 20
1  leq A  leq 50
1  leq B  leq 50


入力入力は以下の形式で標準入力から与えられる 
N A B


出力最小の合計交通費を表す整数を出力せよ 

入力例 14 2 9


出力例 18

電車を使うと 4  times 2   8 円かかり タクシーを使うと 9 円かかるので 全員の交通費の合計の最小値は 8 円です 

入力例 24 2 7


出力例 27


入力例 34 2 8


出力例 38

Problem StatementN of us are going on a trip  by train or taxi 
The train will cost each of us A yen  the currency of Japan  
The taxi will cost us a total of B yen 
How much is our minimum total travel expense 

Constraints
All values in input are integers 
1  leq N  leq 20
1  leq A  leq 50
1  leq B  leq 50


InputInput is given from Standard Input in the following format 
N A B


OutputPrint an integer representing the minimum total travel expense 

Sample Input 14 2 9


Sample Output 18

The train will cost us 4  times 2   8 yen  and the taxi will cost us 9 yen  so the minimum total travel expense is 8 yen 

Sample Input 24 2 7


Sample Output 27


Sample Input 34 2 8


Sample Output 38"
Good Distance,https://atcoder.jp/contests/abc133/tasks/abc133_b,"問題文D 次元空間上に N 個の点があります 
i 番目の点の座標は  X  i1   X  i2        X  iD   です 
座標  y 1  y 2       y D  の点と座標  z 1  z 2       z D  の点の距離は  sqrt  y 1   z 1  2    y 2   z 2  2          y D   z D  2  です 
i 番目の点と j 番目の点の距離が整数となるような組  i  j   i   j  はいくつあるでしょうか 

制約
入力は全て整数である 
2  leq N  leq 10
1  leq D  leq 10
 20  leq X  ij   leq 20
同じ座標の点は与えられない すなわち i  neq j ならば X  ik   neq X  jk  なる k が存在する 


入力入力は以下の形式で標準入力から与えられる 
N D
X  11  X  12      X  1D 
X  21  X  22      X  2D 
 vdots
X  N1  X  N2      X  ND 


出力i 番目の点と j 番目の点の距離が整数となるような組  i  j   i   j  の数を出力せよ 

入力例 13 2
1 2
5 5
 2 8


出力例 11

以下のように距離が整数となる点の組は 1 組です 

1 番目の点と 2 番目の点の距離は  sqrt  1 5  2    2 5  2    5 で これは整数です 
2 番目の点と 3 番目の点の距離は  sqrt  5   2   2    5 8  2     sqrt 58  で これは整数ではありません 
3 番目の点と 1 番目の点の距離は  sqrt   2 1  2  8 2  2    3 sqrt 5  で これは整数ではありません 


入力例 23 4
 3 7 8 2
 12 1 10 2
 2 8 9 3


出力例 22


入力例 35 1
1
2
3
4
5


出力例 310

Problem StatementThere are N points in a D dimensional space 
The coordinates of the i th point are  X  i1   X  i2        X  iD   
The distance between two points with coordinates  y 1  y 2       y D  and  z 1  z 2       z D  is  sqrt  y 1   z 1  2    y 2   z 2  2          y D   z D  2  
How many pairs  i  j   i   j  are there such that the distance between the i th point and the j th point is an integer 

Constraints
All values in input are integers 
2  leq N  leq 10
1  leq D  leq 10
 20  leq X  ij   leq 20
No two given points have the same coordinates  That is  if i  neq j  there exists k such that X  ik   neq X  jk  


InputInput is given from Standard Input in the following format 
N D
X  11  X  12      X  1D 
X  21  X  22      X  2D 
 vdots
X  N1  X  N2      X  ND 


OutputPrint the number of pairs  i  j   i   j  such that the distance between the i th point and the j th point is an integer 

Sample Input 13 2
1 2
5 5
 2 8


Sample Output 11

The number of pairs with an integer distance is one  as follows 

The distance between the first point and the second point is  sqrt  1 5  2    2 5  2    5  which is an integer 
The distance between the second point and the third point is  sqrt  5   2   2    5 8  2     sqrt 58   which is not an integer 
The distance between the third point and the first point is  sqrt   2 1  2  8 2  2    3 sqrt 5   which is not an integer 


Sample Input 23 4
 3 7 8 2
 12 1 10 2
 2 8 9 3


Sample Output 22


Sample Input 35 1
1
2
3
4
5


Sample Output 310"
Remainder Minimization 2019,https://atcoder.jp/contests/abc133/tasks/abc133_c,"問題文非負整数 L  R が与えられます 
2 つの整数 i  j を L  leq i   j  leq R を満たすように選びます 
 i  times j   text  mod   2019 の最小値を求めてください 

制約
入力は全て整数
0  leq L   R  leq 2  times 10 9


入力入力は以下の形式で標準入力から与えられる 
L R


出力条件を満たすように i  j を選んだ時の  i  times j   text  mod   2019 の最小値を出力せよ 

入力例 12020 2040


出力例 12

 i  j     2020  2021  とすると  i  times j   text  mod   2019    2 となります 

入力例 24 5


出力例 220

選び方は  i  j     4  5  の 1 通りしか存在しません 
Problem StatementYou are given two non negative integers L and R 
We will choose two integers i and j such that L  leq i   j  leq R 
Find the minimum possible value of  i  times j   text  mod   2019 

Constraints
All values in input are integers 
0  leq L   R  leq 2  times 10 9


InputInput is given from Standard Input in the following format 
L R


OutputPrint the minimum possible value of  i  times j   text  mod   2019 when i and j are chosen under the given condition 

Sample Input 12020 2040


Sample Output 12

When  i  j     2020  2021    i  times j   text  mod   2019    2 

Sample Input 24 5


Sample Output 220

We have only one choice   i  j     4  5"
Rain Flows into Dams,https://atcoder.jp/contests/abc133/tasks/abc133_d,"問題文円形に N 個の山が連なっており 時計回りに山 1  山 2     山 N と呼ばれます N は奇数です 
これらの山の間に N 個のダムがあり ダム 1  ダム 2     ダム N と呼ばれます ダム i  1  leq i  leq N  は山 i と山 i 1 の間にあります  山 N 1 は山 1 のことを指します  
山 i  1  leq i  leq N  に 2x リットルの雨が降ると ダム i 1 とダム i にそれぞれ x リットルずつ水が溜まります  ダム 0 はダム N のことを指します  
ある日 各山に非負の偶数リットルの雨が降りました 
その結果 ダム i  1  leq i  leq N  には合計で A i リットルの水が溜まりました 
各山に降った雨の量を求めてください この問題の制約下では解が一意に定まることが証明できます 

制約
入力は全て整数である 
3  leq N  leq 10 5 1
N は奇数である 
0  leq A i  leq 10 9
入力が表す状況は 各山に非負の偶数リットルの雨が降った際に発生しうる 


入力入力は以下の形式で標準入力から与えられる 
N
A 1 A 2     A N


出力山 1  山 2     山 N に降った雨の量を表す N 個の整数をこの順に出力せよ 

入力例 13
2 2 4


出力例 14 0 4

山 1  2  3 に降った雨の量をそれぞれ 4 リットル  0 リットル  4 リットルとすると以下のように辻褄が合います 

ダム 1 には  frac 4  2     frac 0  2    2 リットルの水が溜まります 
ダム 2 には  frac 0  2     frac 4  2    2 リットルの水が溜まります 
ダム 3 には  frac 4  2     frac 4  2    4 リットルの水が溜まります 


入力例 25
3 8 7 5 5


出力例 22 4 12 2 8


入力例 33
1000000000 1000000000 0


出力例 30 2000000000 0

Problem StatementThere are N mountains in a circle  called Mountain 1  Mountain 2       Mountain N in clockwise order  N is an odd number 
Between these mountains  there are N dams  called Dam 1  Dam 2       Dam N  Dam i  1  leq i  leq N  is located between Mountain i and i 1  Mountain N 1 is Mountain 1  
When Mountain i  1  leq i  leq N  receives 2x liters of rain  Dam i 1 and Dam i each accumulates x liters of water  Dam 0 is Dam N  
One day  each of the mountains received a non negative even number of liters of rain 
As a result  Dam i  1  leq i  leq N  accumulated a total of A i liters of water 
Find the amount of rain each of the mountains received  We can prove that the solution is unique under the constraints of this problem 

Constraints
All values in input are integers 
3  leq N  leq 10 5 1
N is an odd number 
0  leq A i  leq 10 9
The situation represented by input can occur when each of the mountains receives a non negative even number of liters of rain 


InputInput is given from Standard Input in the following format 
N
A 1 A 2     A N


OutputPrint N integers representing the number of liters of rain Mountain 1  Mountain 2       Mountain N received  in this order 

Sample Input 13
2 2 4


Sample Output 14 0 4

If we assume Mountain 1  2  and 3 received 4  0  and 4 liters of rain  respectively  it is consistent with this input  as follows 

Dam 1 should have accumulated  frac 4  2     frac 0  2    2 liters of water 
Dam 2 should have accumulated  frac 0  2     frac 4  2    2 liters of water 
Dam 3 should have accumulated  frac 4  2     frac 4  2    4 liters of water 


Sample Input 25
3 8 7 5 5


Sample Output 22 4 12 2 8


Sample Input 33
1000000000 1000000000 0


Sample Output 30 2000000000 0"
Virus Tree 2,https://atcoder.jp/contests/abc133/tasks/abc133_e,"問題文N 頂点 N 1 辺を持つ木が与えられます  頂点には番号 1 2     N がつけられており i 番目の辺は頂点 a i b i をつないでいます 
あなたは K 色の絵の具を持っています 
木の頂点それぞれに対して 以下の条件を満たすように K 色の中から 1 色を選んで塗ることにしました 

二つの異なる頂点 x y 間の距離が 2 以下ならば 頂点 x の色と頂点 y の色は異なる 

木を塗り分ける方法は何通りあるでしょうか 
総数を 1 000 000 007 で割った余りを求めてください 

木とは
木とはグラフの一種です 詳しくはこちらをご覧ください  Wikipedia 木  数学  


距離とは
二つの頂点 x y 間の距離とは x から y に到達する際にたどる必要のある最小の辺数です 


制約
1  leqq N K  leqq 10 5
1  leqq a i b i  leqq N
与えられるグラフは木である 


入力入力は以下の形式で標準入力から与えられます 
N K
a 1 b 1
a 2 b 2
 
 
 
a  N 1  b  N 1 


出力木の塗り分け方の総数を 1 000 000 007 で割った余りを出力してください 

入力例 14 3
1 2
2 3
3 4


出力例 16


塗り分け方は 6 通りです 

入力例 25 4
1 2
1 3
1 4
4 5


出力例 248


入力例 316 22
12 1
3 1
4 16
7 12
6 2
2 15
5 16
14 16
10 11
3 10
3 13
8 6
16 8
9 12
4 3


出力例 3271414432

Problem StatementYou are given a tree with N vertices and N 1 edges  The vertices are numbered 1 to N  and the i th edge connects Vertex a i and b i 
You have coloring materials of K colors 
For each vertex in the tree  you will choose one of the K colors to paint it  so that the following condition is satisfied 

If the distance between two different vertices x and y is less than or equal to two  x and y have different colors 

How many ways are there to paint the tree  Find the count modulo 1  000  000  007 

What is tree 
A tree is a kind of graph  For detail  please see  Wikipedia  Tree  graph theory  


What is distance 
The distance between two vertices x and y is the minimum number of edges one has to traverse to get from x to y 


Constraints
1  leq N K  leq 10 5
1  leq a i b i  leq N
The given graph is a tree 


InputInput is given from Standard Input in the following format 
N K
a 1 b 1
a 2 b 2
 
 
 
a  N 1  b  N 1 


OutputPrint the number of ways to paint the tree  modulo 1  000  000  007 

Sample Input 14 3
1 2
2 3
3 4


Sample Output 16


There are six ways to paint the tree 

Sample Input 25 4
1 2
1 3
1 4
4 5


Sample Output 248


Sample Input 316 22
12 1
3 1
4 16
7 12
6 2
2 15
5 16
14 16
10 11
3 10
3 13
8 6
16 8
9 12
4 3


Sample Output 3271414432"
Colorful Tree,https://atcoder.jp/contests/abc133/tasks/abc133_f,"問題文1 から N までの番号がつけられた N 個の頂点を持つ木があります 
この木の i 番目の辺は頂点 a i と頂点 b i を結び その色は c i 長さは d i です 
ここで各辺の色は 1 以上 N 1 以下の整数で表されており 同じ整数は同じ色に 異なる整数は異なる色に対応します 
以下の Q 個の問いに答えてください 

問 j  1  leq j  leq Q   色 x j のすべての辺の長さが y j に変更されたと仮定して 二頂点 u j  v j 間の距離を求めよ  辺の長さの変更はこれ以降の問いには影響しない  


制約
2  leq N  leq 10 5
1  leq Q  leq 10 5
1  leq a i  b i  leq N
1  leq c i  leq N 1
1  leq d i  leq 10 4
1  leq x j  leq N 1
1  leq y j  leq 10 4
1  leq u j   v j  leq N
与えられるグラフは木である 
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
N Q
a 1 b 1 c 1 d 1
 
a  N 1  b  N 1  c  N 1  d  N 1 
x 1 y 1 u 1 v 1
 
x Q y Q u Q v Q


出力Q 行出力せよ j 行目  1  leq j  leq Q  に問 j への回答を出力すること 

入力例 15 3
1 2 1 10
1 3 2 20
2 4 4 30
5 2 1 40
1 100 1 4
1 100 1 5
3 1000 3 4


出力例 1130
200
60

この入力中のグラフは次のようなものです 

ここで 色 1 の辺は赤い実線で 色 2 の辺は緑の太線で 色 4 の辺は青い破線で示されています 

問 1  色 1 のすべての辺の長さが 100 に変更されたと仮定すると 頂点 1  4 間の距離は 100   30   130 です 
問 2  色 1 のすべての辺の長さが 100 に変更されたと仮定すると 頂点 1  5 間の距離は 100   100   200 です 
問 3  色 3 のすべての辺の長さが 1000 に変更されたと仮定すると  そのような辺は存在しません  頂点 3  4 間の距離は 20   10   30   60 です この問いでは色 1 の辺の長さが元に戻っていることに注意してください 

Problem StatementThere is a tree with N vertices numbered 1 to N 
The i th edge in this tree connects Vertex a i and Vertex b i  and the color and length of that edge are c i and d i  respectively 
Here the color of each edge is represented by an integer between 1 and N 1  inclusive   The same integer corresponds to the same color  and different integers correspond to different colors 
Answer the following Q queries 

Query j  1  leq j  leq Q   assuming that the length of every edge whose color is x j is changed to y j  find the distance between Vertex u j and Vertex v j   The changes of the lengths of edges do not affect the subsequent queries  


Constraints
2  leq N  leq 10 5
1  leq Q  leq 10 5
1  leq a i  b i  leq N
1  leq c i  leq N 1
1  leq d i  leq 10 4
1  leq x j  leq N 1
1  leq y j  leq 10 4
1  leq u j   v j  leq N
The given graph is a tree 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N Q
a 1 b 1 c 1 d 1
 
a  N 1  b  N 1  c  N 1  d  N 1 
x 1 y 1 u 1 v 1
 
x Q y Q u Q v Q


OutputPrint Q lines  The j th line  1  leq j  leq Q  should contain the answer to Query j 

Sample Input 15 3
1 2 1 10
1 3 2 20
2 4 4 30
5 2 1 40
1 100 1 4
1 100 1 5
3 1000 3 4


Sample Output 1130
200
60

The graph in this input is as follows 

Here the edges of Color 1 are shown as solid red lines  the edge of Color 2 is shown as a bold green line  and the edge of Color 4 is shown as a blue dashed line 

Query 1  Assuming that the length of every edge whose color is 1 is changed to 100  the distance between Vertex 1 and Vertex 4 is 100   30   130 
Query 2  Assuming that the length of every edge whose color is 1 is changed to 100  the distance between Vertex 1 and Vertex 5 is 100   100   200 
Query 3  Assuming that the length of every edge whose color is 3 is changed to 1000  there is no such edge   the distance between Vertex 3 and Vertex 4 is 20   10   30   60  Note that the edges of Color 1 now have their original lengths"
Dodecagon,https://atcoder.jp/contests/abc134/tasks/abc134_a,"問題文半径 a の円に内接する正十二角形の面積は 3a 2 であることが知られています 
整数 r が与えられるので 半径 r の円に内接する正十二角形の面積を求めて下さい 

制約
1  leqq r  leqq 100
r は整数である 


入力入力は以下の形式で標準入力から与えられます 
r


出力正十二角形の面積を表す整数を出力してください 

入力例 14


出力例 148

正十二角形の面積は 3  times 4 2   48 です 

入力例 215


出力例 2675


入力例 380


出力例 319200

Problem StatementIt is known that the area of a regular dodecagon inscribed in a circle of radius a is 3a 2 
Given an integer r  find the area of a regular dodecagon inscribed in a circle of radius r 

Constraints
1  leq r  leq 100
r is an integer 


InputInput is given from Standard Input in the following format 
r


OutputPrint an integer representing the area of the regular dodecagon 

Sample Input 14


Sample Output 148

The area of the regular dodecagon is 3  times 4 2   48 

Sample Input 215


Sample Output 2675


Sample Input 380


Sample Output 319200"
Golden Apple,https://atcoder.jp/contests/abc134/tasks/abc134_b,"問題文一列に並んだ N 本の林檎の木のうちいずれかに黄金の林檎が実ると言われています 
そこで 何人かの監視員を配置してどの林檎の木もいずれかの監視員に監視された状態にしたいです 
それぞれの監視員は N 本の木のうちいずれかに配置します 便宜上 これらの木に 1 から N までの番号をつけます 番号 i の木に配置された監視員は 番号が i D 以上 i D 以下のすべての林檎の木を監視します 
条件を満たすために少なくとも何人の監視員を配置する必要があるか求めてください 

制約
入力は全て整数である 
1  leq N  leq 20
1  leq D  leq 20


入力入力は以下の形式で標準入力から与えられる 
N D


出力条件を満たすために配置する必要のある監視員の人数の最小値を出力せよ 

入力例 16 2


出力例 12

例えば 番号 3  4 の木に 1 人ずつ監視員を配置すれば条件を満たすことができます 

入力例 214 3


出力例 22


入力例 320 4


出力例 33

Problem StatementThere are N apple trees in a row  People say that one of them will bear golden apples 
We want to deploy some number of inspectors so that each of these trees will be inspected 
Each inspector will be deployed under one of the trees  For convenience  we will assign numbers from 1 through N to the trees  An inspector deployed under the i th tree  1  leq i  leq N  will inspect the trees with numbers between i D and i D  inclusive  
Find the minimum number of inspectors that we need to deploy to achieve the objective 

Constraints
All values in input are integers 
1  leq N  leq 20
1  leq D  leq 20


InputInput is given from Standard Input in the following format 
N D


OutputPrint the minimum number of inspectors that we need to deploy to achieve the objective 

Sample Input 16 2


Sample Output 12

We can achieve the objective by  for example  placing an inspector under Tree 3 and Tree 4 

Sample Input 214 3


Sample Output 22


Sample Input 320 4


Sample Output 33"
Exception Handling,https://atcoder.jp/contests/abc134/tasks/abc134_c,"問題文長さ N の数列 A 1  A 2       A N が与えられます 
1 以上 N 以下の各整数 i に対し 次の問いに答えてください 

数列中の A i を除く N   1 個の要素のうちの最大の値を求めよ 


制約
2  leq N  leq 200000
1  leq A i  leq 200000
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
N
A 1
 
A N


出力N 行出力せよ i 行目  1  leq i  leq N  に 数列中の A i を除く N   1 個の要素のうちの最大の値を出力すること 

入力例 13
1
4
3


出力例 14
3
4


数列中の A 1 を除く 2 個の要素 A 2   4 と A 3   3 のうちの最大の値は 4 です 
数列中の A 2 を除く 2 個の要素 A 1   1 と A 3   3 のうちの最大の値は 3 です 
数列中の A 3 を除く 2 個の要素 A 1   1 と A 2   4 のうちの最大の値は 4 です 


入力例 22
5
5


出力例 25
5

Problem StatementYou are given a sequence of length N  A 1  A 2       A N 
For each integer i between 1 and N  inclusive   answer the following question 

Find the maximum value among the N 1 elements other than A i in the sequence 


Constraints
2  leq N  leq 200000
1  leq A i  leq 200000
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
A 1
 
A N


OutputPrint N lines  The i th line  1  leq i  leq N  should contain the maximum value among the N 1 elements other than A i in the sequence 

Sample Input 13
1
4
3


Sample Output 14
3
4


The maximum value among the two elements other than A 1  that is  A 2   4 and A 3   3  is 4 
The maximum value among the two elements other than A 2  that is  A 1   1 and A 3   3  is 3 
The maximum value among the two elements other than A 3  that is  A 1   1 and A 2   4  is 4 


Sample Input 22
5
5


Sample Output 25
5"
Preparing Boxes,https://atcoder.jp/contests/abc134/tasks/abc134_d,"問題文N 個の空の箱が横一列に並んでいます 
左から i    1  leq i  leq N  番目の箱には整数 i が書かれています 
すぬけさんは それぞれの箱に対してボールを 1 個入れるか何も入れないかを選ぶことができます 
ここで 以下の条件を満たすようなボールの入れ方を いいボールの入れ方と定めます 

1 以上 N 以下の任意の整数 i について i の倍数が書かれた箱に入っているボールの個数の和を 2 で割った余りが a i である 

いいボールの入れ方は存在するでしょうか 存在するならば 1 つ求めてください 

制約
入力は全て整数である 
1  leq N  leq 2  times 10 5
a i は 0 または 1 である 


入力入力は以下の形式で標準入力から与えられる 
N
a 1 a 2     a N


出力いいボールの入れ方が存在しないなら  1 を出力せよ 
存在するならば そのような入れ方のうちの 1 つを以下の形式で出力せよ 
M
b 1 b 2     b M

ここで M はボールを入れる箱の個数を表し b 1   b 2         b M はボールを入れる箱に書かれた整数を任意の順番に並べたものである 

入力例 13
1 0 0


出力例 11
1

1 が書かれた箱だけにボールを入れることを考えます 

1 の倍数が書かれた箱は 1 が書かれた箱 2 が書かれた箱 3 が書かれた箱の 3 個です これらの箱に入っているボールの個数の和は 1 です 
2 の倍数が書かれた箱は 2 が書かれた箱の 1 個だけです これらの箱に入っているボールの個数の和は 0 です 
3 の倍数が書かれた箱は 3 が書かれた箱の 1 個だけです これらの箱に入っているボールの個数の和は 0 です 

以上より 1 が書かれた箱だけにボールを入れるのは 与えられた条件を満たすいいボールの入れ方です 

入力例 25
0 0 0 0 0


出力例 20

ボールを 1 つも入れない入れ方が いい入れ方になる場合もあります 
Problem StatementThere are N empty boxes arranged in a row from left to right 
The integer i is written on the i th box from the left  1  leq i  leq N  
For each of these boxes  Snuke can choose either to put a ball in it or to put nothing in it 
We say a set of choices to put a ball or not in the boxes is good when the following condition is satisfied 

For every integer i between 1 and N  inclusive   the total number of balls contained in the boxes with multiples of i written on them is congruent to a i modulo 2 

Does there exist a good set of choices  If the answer is yes  find one good set of choices 

Constraints
All values in input are integers 
1  leq N  leq 2  times 10 5
a i is 0 or 1 


InputInput is given from Standard Input in the following format 
N
a 1 a 2     a N


OutputIf a good set of choices does not exist  print  1 
If a good set of choices exists  print one such set of choices in the following format 
M
b 1 b 2     b M

where M denotes the number of boxes that will contain a ball  and b 1   b 2         b M are the integers written on these boxes  in any order 

Sample Input 13
1 0 0


Sample Output 11
1

Consider putting a ball only in the box with 1 written on it 

There are three boxes with multiples of 1 written on them  the boxes with 1  2  and 3  The total number of balls contained in these boxes is 1 
There is only one box with a multiple of 2 written on it  the box with 2  The total number of balls contained in these boxes is 0 
There is only one box with a multiple of 3 written on it  the box with 3  The total number of balls contained in these boxes is 0 

Thus  the condition is satisfied  so this set of choices is good 

Sample Input 25
0 0 0 0 0


Sample Output 20

Putting nothing in the boxes can be a good set of choices"
Sequence Decomposing,https://atcoder.jp/contests/abc134/tasks/abc134_e,"問題文N 個の整数からなる数列 A      A 1  A 2   cdots  A N    が与えられます 
N 個それぞれの整数に対して 色を 1 つ選んでその色を塗ります 
この時 以下の条件を満たす必要があります 

A i と A j  i   j  が同じ色で塗られているならば A i   A j が成立する

条件を満たすように色を塗る時 用いる色の数の最小値を求めてください 

制約
1  leq N  leq 10 5
0  leq A i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N
A 1
 
A N


出力条件を満たすように色を塗る時 用いる色の数の最小値を出力せよ 

入力例 15
2
1
4
5
3


出力例 12

例えば 2  3 を赤色 1  4  5 を青色で塗れば 2 色で条件を満たす塗り方が出来ます 

入力例 24
0
0
0
0


出力例 24

全ての整数を異なる色で塗るしかありません 
Problem StatementYou are given a sequence with N integers  A      A 1  A 2   cdots  A N    
For each of these N integers  we will choose a color and paint the integer with that color  Here the following condition must be satisfied 

If A i and A j  i   j  are painted with the same color  A i   A j 

Find the minimum number of colors required to satisfy the condition 

Constraints
1  leq N  leq 10 5
0  leq A i  leq 10 9


InputInput is given from Standard Input in the following format 
N
A 1
 
A N


OutputPrint the minimum number of colors required to satisfy the condition 

Sample Input 15
2
1
4
5
3


Sample Output 12

We can satisfy the condition with two colors by  for example  painting 2 and 3 red and painting 1  4  and 5 blue 

Sample Input 24
0
0
0
0


Sample Output 24

We have to paint all the integers with distinct colors"
Permutation Oddness,https://atcoder.jp/contests/abc134/tasks/abc134_f,"問題文 1   2         n  の順列 p    p 1   p 2         p n  の 奇妙さ を  sum  i   1  n  i   p i  と定義します 
奇妙さが k であるような  1   2         n  の順列の個数を 10 9 7 で割った余りを求めてください 

制約
入力は全て整数である 
1  leq n  leq 50
0  leq k  leq n 2


入力入力は以下の形式で標準入力から与えられる 
n k


出力奇妙さが k であるような  1   2         n  の順列の個数を 10 9 7 で
割った余りを出力せよ 

入力例 13 2


出力例 12

 1   2   3  の順列は 6 個存在します その中で奇妙さが 2 であるのは  2   1   3  と  1   3   2  の 2 つです 

入力例 239 14


出力例 274764168

Problem StatementLet us define the oddness of a permutation p    p 1   p 2         p n  of  1   2         n  as  sum  i   1  n  i   p i  
Find the number of permutations of  1   2         n  of oddness k  modulo 10 9 7 

Constraints
All values in input are integers 
1  leq n  leq 50
0  leq k  leq n 2


InputInput is given from Standard Input in the following format 
n k


OutputPrint the number of permutations of  1   2         n  of oddness k  modulo 10 9 7 

Sample Input 13 2


Sample Output 12

There are six permutations of  1   2   3   Among them  two have oddness of 2    2   1   3  and  1   3   2  

Sample Input 239 14


Sample Output 274764168"
Harmony,https://atcoder.jp/contests/abc135/tasks/abc135_a,"問題文相違なる整数 A  B があります 
 A   K     B   K  となるような整数 K を出力してください 
そのような整数が存在しなければ 代わりに IMPOSSIBLE を出力してください 

制約
入力は全て整数である 
0  leq A   B  leq 10 9
A と B は相違なる 


入力入力は以下の形式で標準入力から与えられる 
A B


出力条件を満たす整数 K を出力せよ 
そのような整数が存在しなければ 代わりに IMPOSSIBLE を出力せよ 

入力例 12 16


出力例 19

 2   9    7   16   9    7 であるため 9 は条件を満たす整数です 

入力例 20 3


出力例 2IMPOSSIBLE

条件を満たす整数は存在しません 

入力例 3998244353 99824435


出力例 3549034394

Problem StatementWe have two distinct integers A and B 
Print the integer K such that  A   K     B   K  
If such an integer does not exist  print IMPOSSIBLE instead 

Constraints
All values in input are integers 
0  leq A   B  leq 10 9
A and B are distinct 


InputInput is given from Standard Input in the following format 
A B


OutputPrint the integer K satisfying the condition 
If such an integer does not exist  print IMPOSSIBLE instead 

Sample Input 12 16


Sample Output 19

 2   9    7 and  16   9    7  so 9 satisfies the condition 

Sample Input 20 3


Sample Output 2IMPOSSIBLE

No integer satisfies the condition 

Sample Input 3998244353 99824435


Sample Output 3549034394"
0 or 1 Swap,https://atcoder.jp/contests/abc135/tasks/abc135_b,"問題文 1   2         N  を並び替えた数列 p    p 1   p 2         p N  があります 
あなたは一度だけ 整数   i   j    1  leq i   j  leq N  を選んで   p i   と   p j   を入れ替える操作を行うことができます 操作を行わないことも可能です 
p を昇順にすることができるなら YES を できないならば NO を出力してください 

制約
入力は全て整数である 
2  leq N  leq 50
p は  1   2         N  を並び替えた数列である 


入力入力は以下の形式で標準入力から与えられる 
N
p 1 p 2     p N


出力p を昇順にすることができるなら YES を できないならば NO を出力せよ 

入力例 15
5 2 3 4 1


出力例 1YES

p 1 と p 5 を入れ替えることで p を昇順にできます 

入力例 25
2 4 3 5 1


出力例 2NO

この場合 どのような操作を行っても p を昇順にすることはできません 

入力例 37
1 2 3 4 5 6 7


出力例 3YES

p が最初から昇順なので 操作を行う必要はありません 
Problem StatementWe have a sequence p    p 1   p 2         p N  which is a permutation of  1   2         N  
You can perform the following operation at most once  choose integers i and j  1  leq i   j  leq N   and swap p i and p j  Note that you can also choose not to perform it 
Print YES if you can sort p in ascending order in this way  and NO otherwise 

Constraints
All values in input are integers 
2  leq N  leq 50
p is a permutation of  1   2         N  


InputInput is given from Standard Input in the following format 
N
p 1 p 2     p N


OutputPrint YES if you can sort p in ascending order in the way stated in the problem statement  and NO otherwise 

Sample Input 15
5 2 3 4 1


Sample Output 1YES

You can sort p in ascending order by swapping p 1 and p 5 

Sample Input 25
2 4 3 5 1


Sample Output 2NO

In this case  swapping any two elements does not sort p in ascending order 

Sample Input 37
1 2 3 4 5 6 7


Sample Output 3YES

p is already sorted in ascending order  so no operation is needed"
City Savers,https://atcoder.jp/contests/abc135/tasks/abc135_c,"問題文N 1 個の街があり i 番目の街は A i 体のモンスターに襲われています 
N 人の勇者が居て i 番目の勇者は i 番目または i 1 番目の街を襲っているモンスターを合計で B i 体まで倒すことができます 
N 人の勇者がうまく協力することで 合計して最大で何体のモンスターを倒せるでしょうか 

制約
入力は全て整数である 
1  leq N  leq 10 5
1  leq A i  leq 10 9
1  leq B i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N
A 1 A 2     A  N 1 
B 1 B 2     B N


出力合計して倒せるモンスターの数の最大値を出力せよ 

入力例 12
3 5 2
4 5


出力例 19

以下のようにモンスターを倒すと 合計 9 体のモンスターを倒すことができ このときが最大です 

1 番目の勇者が 1 番目の街を襲っているモンスターを 2 体 2 番目の街を襲っているモンスターを 2 体倒します 
2 番目の勇者が 2 番目の街を襲っているモンスターを 3 体 3 番目の街を襲っているモンスターを 2 体倒します 


入力例 23
5 6 3 8
5 100 8


出力例 222


入力例 32
100 1 1
1 100


出力例 33

Problem StatementThere are N 1 towns  The i th town is being attacked by A i monsters 
We have N heroes  The i th hero can defeat monsters attacking the i th or  i 1  th town  for a total of at most B i monsters 
What is the maximum total number of monsters the heroes can cooperate to defeat 

Constraints
All values in input are integers 
1  leq N  leq 10 5
1  leq A i  leq 10 9
1  leq B i  leq 10 9


InputInput is given from Standard Input in the following format 
N
A 1 A 2     A  N 1 
B 1 B 2     B N


OutputPrint the maximum total number of monsters the heroes can defeat 

Sample Input 12
3 5 2
4 5


Sample Output 19

If the heroes choose the monsters to defeat as follows  they can defeat nine monsters in total  which is the maximum result 

The first hero defeats two monsters attacking the first town and two monsters attacking the second town 
The second hero defeats three monsters attacking the second town and two monsters attacking the third town 


Sample Input 23
5 6 3 8
5 100 8


Sample Output 222


Sample Input 32
100 1 1
1 100


Sample Output 33"
Digits Parade,https://atcoder.jp/contests/abc135/tasks/abc135_d,"問題文
文字列 S が与えられます S の各文字は 数字  0   9  か   です 
  を数字に置き換えてできる整数のうち 13 で割って 5 あまる数は何通りあるでしょうか ただし 頭文字が 0 である場合も整数とみなすものとします 
答えは非常に大きくなる可能性があるため 10 9 7 で割ったあまりを答えてください 

制約

S は数字  0   9  と   からなる文字列 
1  leq  S   leq 10 5


入力
入力は以下の形式で標準入力から与えられます 
S


出力
条件を満たす整数の個数を 10 9 7 で割ったあまりを出力してください 

入力例 1  2  5


出力例 1768

たとえば 482305  002865  972665 などが条件を満たします 

入力例 2 44


出力例 21

044 のみが条件を満たします 

入力例 37 4


出力例 30

条件を満たす整数を作ることが不可能な場合もあります 

入力例 4 6 42   8  2  06243    9  3   7258  5  7       774    4 1  17   9 5 70   76   


出力例 4153716888

Problem StatementGiven is a string S  Each character in S is either a digit  0       9  or   
Among the integers obtained by replacing each occurrence of   with a digit  how many have a remainder of 5 when divided by 13  An integer may begin with 0 
Since the answer can be enormous  print the count modulo 10 9 7 

Constraints

S is a string consisting of digits  0       9  and   
1  leq  S   leq 10 5


Input
Input is given from Standard Input in the following format 
S


Output
Print the number of integers satisfying the condition  modulo 10 9 7 

Sample Input 1  2  5


Sample Output 1768

For example  482305  002865  and 972665 satisfy the condition 

Sample Input 2 44


Sample Output 21

Only 044 satisfies the condition 

Sample Input 37 4


Sample Output 30

We may not be able to produce an integer satisfying the condition 

Sample Input 4 6 42   8  2  06243    9  3   7258  5  7       774    4 1  17   9 5 70   76   


Sample Output 4153716888"
Golf,https://atcoder.jp/contests/abc135/tasks/abc135_e,"問題文
無限に広がる二次元格子があります ジャンボ高橋君はこの上でゴルフをすることにしました 
ボールははじめ原点  0  0  にあり ゴールは格子点 座標がいずれも整数である点   X  Y  です ジャンボ高橋君は 1 打ごとに 次の操作を行えます 

その時点でボールがある点とのマンハッタン距離が K であるような格子点を 1 つ選び その点にボールを飛ばす 

ゴールと同じ座標にボールが来た時点でクリアとなり それまでの打数がスコアとなります ジャンボ高橋君はできるだけ少ないスコアでクリアしたいと思っています 
クリアが可能かどうか判定し 可能ならばスコアが最小となるボールの動かし方を 1 つ求めてください 
マンハッタン距離の説明
2 つの座標  x 1  y 1    x 2  y 2  に対するマンハッタン距離は  x 1 x 2   y 1 y 2  と定義されます 


制約

入力はすべて整数
1  leq K  leq 10 9
 10 5  leq X  Y  leq 10 5
 X  Y   neq  0  0 


入力
入力は以下の形式で標準入力から与えられます 
K
X Y


出力
クリアが不可能な場合は  1 と出力してください 
クリアが可能な場合 スコアが最小となるボールの動かし方を次のように出力してください 
s
x 1 y 1
x 2 y 2
 
 
 
x s y s

ここで s はスコアの最小値です また  x i  y i  を i 打目にボールを飛ばす先の座標とします 

入力例 111
 1 2


出力例 13
7 4
2 10
 1 2


 0  0    7  4  のマンハッタン距離は  0 7   0 4  11 
 7  4    2  10  のマンハッタン距離は  7 2   4 10  11 
 2  10     1  2  のマンハッタン距離は  2   1    10 2  11 

以上より このボールの動かし方は正しいです 
また 3 打より少なくクリアする方法は存在しません 

入力例 24600
52 149


出力例 2 1


入力例 34
9 9


出力例 35
1 3
4 2
4 6
6 8
9 9

Problem StatementJumbo Takahashi will play golf on an infinite two dimensional grid 
The ball is initially at the origin  0  0   and the goal is a grid point  a point with integer coordinates   X  Y   In one stroke  Jumbo Takahashi can perform the following operation 

Choose a grid point whose Manhattan distance from the current position of the ball is K  and send the ball to that point 

The game is finished when the ball reaches the goal  and the score will be the number of strokes so far  Jumbo Takahashi wants to finish the game with the lowest score possible 
Determine if the game can be finished  If the answer is yes  find one way to bring the ball to the goal with the lowest score possible 
What is Manhattan distance 
The Manhattan distance between two points  x 1  y 1  and  x 2  y 2  is defined as  x 1 x 2   y 1 y 2  


Constraints
All values in input are integers 
1  leq K  leq 10 9
 10 5  leq X  Y  leq 10 5
 X  Y   neq  0  0 


InputInput is given from Standard Input in the following format 
K
X Y


Output
If the game cannot be finished  print  1 
If the game can be finished  print one way to bring the ball to the destination with the lowest score possible  in the following format 
s
x 1 y 1
x 2 y 2
 
 
 
x s y s

Here  s is the lowest score possible  and  x i  y i  is the position of the ball just after the i th stroke 

Sample Input 111
 1 2


Sample Output 13
7 4
2 10
 1 2


The Manhattan distance between  0  0  and  7  4  is  0 7   0 4  11 
The Manhattan distance between  7  4  and  2  10  is  7 2   4 10  11 
The Manhattan distance between  2  10  and   1  2  is  2   1    10 2  11 

Thus  this play is valid 
Also  there is no way to finish the game with less than three strokes 

Sample Input 24600
52 149


Sample Output 2 1


Sample Input 34
9 9


Sample Output 35
1 3
4 2
4 6
6 8
9 9"
Strings of Eternity,https://atcoder.jp/contests/abc135/tasks/abc135_f,"問題文英小文字からなる二つの文字列 s  t が与えられます 次の条件を満たす非負整数 i の個数が有限であるか判定し 有限である場合はそのような i の最大値を求めてください 

ある非負整数 j が存在し t を i 個連結して得られる文字列は s を j 個連結して得られる文字列の部分文字列である 


注記

文字列 a が文字列 b の部分文字列であるとは ある整数 x  0  leq x  leq  b     a   が存在して任意の整数 y  1  leq y  leq  a   に対して a y   b  x y  であることです 


任意の文字列に対し それを 0 個連結して得られる文字列は空文字列であるとします また 上記の定義より 空文字列は任意の文字列の部分文字列です したがって 任意の二つの文字列 s  t に対して i   0 は問題文中の条件を満たします 



制約
1  leq  s   leq 5  times 10 5
1  leq  t   leq 5  times 10 5
s  t は英小文字からなる 


入力入力は以下の形式で標準入力から与えられる 
s
t


出力条件を満たす非負整数 i の個数が有限である場合はそのような i の最大値を 無限である場合は  1 を出力せよ 

入力例 1abcabab
ab


出力例 13

t を 3 個連結して得られる文字列 ababab は s を 2 個連結して得られる文字列 abcabababcabab の部分文字列であるため i   3 は条件を満たします 
一方で t を 4 個連結して得られる文字列 abababab は s を何個連結しても部分文字列として現れないため i   4 は条件を満たしません 
同様に 5 以上の任意の整数も条件を満たしません よって条件を満たす非負整数 i の個数は有限で その最大値は 3 です 

入力例 2aa
aaaaaaa


出力例 2 1

任意の非負整数 i に対し t を i 個連結して得られる文字列は s を 4i 個連結して得られる文字列の部分文字列です したがって条件を満たす非負整数 i は無限に存在します 

入力例 3aba
baaab


出力例 30

注記で述べたように i   0 は必ず条件を満たします 
Problem StatementGiven are two strings s and t consisting of lowercase English letters  Determine if the number of non negative integers i satisfying the following condition is finite  and find the maximum value of such i if the number is finite 

There exists a non negative integer j such that the concatenation of i copies of t is a substring of the concatenation of j copies of s 


Notes

A string a is a substring of another string b if and only if there exists an integer x  0  leq x  leq  b     a   such that  for any y  1  leq y  leq  a    a y   b  x y  holds 


We assume that the concatenation of zero copies of any string is the empty string  From the definition above  the empty string is a substring of any string  Thus  for any two strings s and t  i   0 satisfies the condition in the problem statement 



Constraints
1  leq  s   leq 5  times 10 5
1  leq  t   leq 5  times 10 5
s and t consist of lowercase English letters 


InputInput is given from Standard Input in the following format 
s
t


OutputIf the number of non negative integers i satisfying the following condition is finite  print the maximum value of such i  if the number is infinite  print  1 

Sample Input 1abcabab
ab


Sample Output 13

The concatenation of three copies of t  ababab  is a substring of the concatenation of two copies of s  abcabababcabab  so i   3 satisfies the condition 
On the other hand  the concatenation of four copies of t  abababab  is not a substring of the concatenation of any number of copies of s  so i   4 does not satisfy the condition 
Similarly  any integer greater than 4 does not satisfy the condition  either  Thus  the number of non negative integers i satisfying the condition is finite  and the maximum value of such i is 3 

Sample Input 2aa
aaaaaaa


Sample Output 2 1

For any non negative integer i  the concatenation of i copies of t is a substring of the concatenation of 4i copies of s  Thus  there are infinitely many non negative integers i that satisfy the condition 

Sample Input 3aba
baaab


Sample Output 30

As stated in Notes  i   0 always satisfies the condition"
Transfer,https://atcoder.jp/contests/abc136/tasks/abc136_a,"問題文水を入れる容器が 2 つあります 
容器 1 には水を A ミリリットルまで入れることができ 水が B ミリリットル入っています 
容器 2 には水が C ミリリットル入っています 
容器 2 から容器 1 に入るだけ水を移します 
容器 2 の中には何ミリリットルの水が残るでしょうか 

制約
入力は全て整数である 
1  leq B  leq A  leq 20
1  leq C  leq 20


入力入力は以下の形式で標準入力から与えられる 
A B C


出力ミリリットル単位で容器 2 の中に残る水の量を整数で出力せよ 

入力例 16 4 3


出力例 11

容器 2 から容器 1 に 2 ミリリットルの水を移すことになるので 容器 2 には 1 ミリリットルの水が残ります 

入力例 28 3 9


出力例 24


入力例 312 3 7


出力例 30

Problem StatementWe have two bottles for holding water 
Bottle 1 can hold up to A milliliters of water  and now it contains B milliliters of water 
Bottle 2 contains C milliliters of water 
We will transfer water from Bottle 2 to Bottle 1 as much as possible 
How much amount of water will remain in Bottle 2 

Constraints
All values in input are integers 
1  leq B  leq A  leq 20
1  leq C  leq 20


InputInput is given from Standard Input in the following format 
A B C


OutputPrint the integer representing the amount of water  in milliliters  that will remain in Bottle 2 

Sample Input 16 4 3


Sample Output 11

We will transfer two milliliters of water from Bottle 2 to Bottle 1  and one milliliter of water will remain in Bottle 2 

Sample Input 28 3 9


Sample Output 24


Sample Input 312 3 7


Sample Output 30"
Uneven Numbers,https://atcoder.jp/contests/abc136/tasks/abc136_b,"問題文整数 N が与えられます N 以下の正の整数のうち  先頭に 0 をつけずに十進法で表記したときの  桁数が奇数であるようなものの個数を求めてください 

制約
1  leq N  leq 10 5


入力入力は以下の形式で標準入力から与えられる 
N


出力N 以下の正の整数のうち 桁数が奇数であるようなものの個数を出力せよ 

入力例 111


出力例 19

11 以下の正の整数のうち 桁数が奇数であるようなものは 1  2   ldots  9 の 9 個です 

入力例 2136


出力例 246

1  2   ldots  9 に加えて 100  101   ldots  136 の 37 個の数も桁数が奇数です 

入力例 3100000


出力例 390909

Problem StatementGiven is an integer N  Find the number of positive integers less than or equal to N that have an odd number of digits  in base ten without leading zeros  

Constraints
1  leq N  leq 10 5


InputInput is given from Standard Input in the following format 
N


OutputPrint the number of positive integers less than or equal to N that have an odd number of digits 

Sample Input 111


Sample Output 19

Among the positive integers less than or equal to 11  nine integers have an odd number of digits  1  2   ldots  9 

Sample Input 2136


Sample Output 246

In addition to 1  2   ldots  9  another 37 integers also have an odd number of digits  100  101   ldots  136 

Sample Input 3100000


Sample Output 390909"
Build Stairs,https://atcoder.jp/contests/abc136/tasks/abc136_c,"問題文左右一列に N 個のマスが並んでおり 左から i 番目のマスの高さは H i です 
あなたは各マスについて 1 度ずつ次のいずれかの操作を行います 

マスの高さを 1 低くする 
何もしない 

操作をうまく行うことでマスの高さを左から右に向かって単調非減少にできるか求めてください 

制約
入力は全て整数である 
1  leq N  leq 10 5
1  leq H i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N
H 1 H 2     H N


出力マスの高さを左から右に向かって単調非減少にできるなら Yes そうでないなら No を出力せよ 

入力例 15
1 2 1 1 3


出力例 1Yes

左から 2 番目のマスのみ高さを 1 低くすることで目的を達成できます 

入力例 24
1 3 2 1


出力例 2No


入力例 35
1 2 3 4 5


出力例 3Yes


入力例 41
1000000000


出力例 4Yes

Problem StatementThere are N squares arranged in a row from left to right  The height of the i th square from the left is H i 
For each square  you will perform either of the following operations once 

Decrease the height of the square by 1 
Do nothing 

Determine if it is possible to perform the operations so that the heights of the squares are non decreasing from left to right 

Constraints
All values in input are integers 
1  leq N  leq 10 5
1  leq H i  leq 10 9


InputInput is given from Standard Input in the following format 
N
H 1 H 2     H N


OutputIf it is possible to perform the operations so that the heights of the squares are non decreasing from left to right  print Yes  otherwise  print No 

Sample Input 15
1 2 1 1 3


Sample Output 1Yes

You can achieve the objective by decreasing the height of only the second square from the left by 1 

Sample Input 24
1 3 2 1


Sample Output 2No


Sample Input 35
1 2 3 4 5


Sample Output 3Yes


Sample Input 41
1000000000


Sample Output 4Yes"
Gathering Children,https://atcoder.jp/contests/abc136/tasks/abc136_d,"問題文マスの情報を表す L と R で構成された文字列 S が与えられます 
文字列 S の長さを N としたとき N 個のマスが左右一列に並んでおり 左から i 番目のマスには S の左から i 番目の文字が書かれています 
ただし 左端のマスには必ず R 右端のマスには必ず L が書かれています 
はじめ 各マスには 1 人の子どもが居ます 
子どもたちはそれぞれ次の規則に従った移動を 10  100  回行います 

今居るマスに書かれた文字に従って 1 マス移動する すなわち 今居るマスに書かれた文字が L のとき左隣のマスに R のとき右隣のマスに移動する 

10  100  回の移動の後に各マスに居る子どもの人数を求めてください 

制約
S は長さ 2 以上 10 5 以下の文字列であり S の各文字は L または R である 
S の 1 文字目は R N 文字目は L である 


入力入力は以下の形式で標準入力から与えられる 
S


出力10  100  回の移動の後に各マスに居る子どもの人数を左のマスから順に出力せよ 

入力例 1RRLRL


出力例 10 1 2 1 1


1 回の移動の後に各マスに居る子どもの人数は左のマスから順に 0  2  1  1  1 人です 
2 回の移動の後に各マスに居る子どもの人数は左のマスから順に 0  1  2  1  1 人です 
この移動を 10  100  回行った後に各マスに居る子どもの人数は左のマスから順に 0  1  2  1  1 人です 


入力例 2RRLLLLRLRRLL


出力例 20 3 3 0 0 0 1 1 0 2 2 0


入力例 3RRRLLRLLRRRLLLLL


出力例 30 0 3 2 0 2 1 0 0 0 4 4 0 0 0 0

Problem StatementGiven is a string S consisting of L and R 
Let N be the length of S  There are N squares arranged from left to right  and the i th character of S from the left is written on the i th square from the left 
The character written on the leftmost square is always R  and the character written on the rightmost square is always L 
Initially  one child is standing on each square 
Each child will perform the move below 10  100  times 

Move one square in the direction specified by the character written in the square on which the child is standing  L denotes left  and R denotes right 

Find the number of children standing on each square after the children performed the moves 

Constraints
S is a string of length between 2 and 10 5  inclusive  
Each character of S is L or R 
The first and last characters of S are R and L  respectively 


InputInput is given from Standard Input in the following format 
S


OutputPrint the number of children standing on each square after the children performed the moves  in order from left to right 

Sample Input 1RRLRL


Sample Output 10 1 2 1 1


After each child performed one move  the number of children standing on each square is 0  2  1  1  1 from left to right 
After each child performed two moves  the number of children standing on each square is 0  1  2  1  1 from left to right 
After each child performed 10  100  moves  the number of children standing on each square is 0  1  2  1  1 from left to right 


Sample Input 2RRLLLLRLRRLL


Sample Output 20 3 3 0 0 0 1 1 0 2 2 0


Sample Input 3RRRLLRLLRRRLLLLL


Sample Output 30 0 3 2 0 2 1 0 0 0 4 4 0 0 0 0"
Max GCD,https://atcoder.jp/contests/abc136/tasks/abc136_e,"問題文長さ N の整数列 A 1  A 2   cdots  A N があります 
次の操作を 0 回以上 K 回以下行うことができます 

i  neq j なる 1 以上 N 以下の 2 つの整数 i  j を選び A i に 1 を足し A j に  1 を足す この操作の後いずれかの要素が負になってもよい 

操作後の A の全ての要素を割り切る正の整数として考えられる値の最大値を計算してください ただし 正の整数 x が整数 y を割り切るとは ある整数 z を用いて y   xz と表せる場合を表します 

制約
2  leq N  leq 500
1  leq A i  leq 10 6
0  leq K  leq 10 9
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N K
A 1 A 2  cdots A  N 1  A  N 


出力操作後の A の全ての要素を割り切る正の整数として考えられる値の最大値を出力せよ 

入力例 12 3
8 20


出力例 17

例えば以下の操作で 7 が A の全ての要素を割り切るようにできます 

i   2  j   1 とする A は  7  21  となる 

また 8 以上の整数が A の全ての要素を割り切るようにはできません 

入力例 22 10
3 5


出力例 28

例えば 以下のように操作を 5 回行います 


i   2  j   1 とする A は  2  6  となる 


i   2  j   1 とする A は  1  7  となる 


i   2  j   1 とする A は  0  8  となる 


i   2  j   1 とする A は   1  9  となる 


i   1  j   2 とする A は  0  8  となる 


このとき 0   8  times 0  8   8  times 1 と表せるので 8 は A の全ての要素を割り切ります また 9 以上の整数が A の全ての要素を割り切るようにはできません 

入力例 34 5
10 1 2 22


出力例 37


入力例 48 7
1 7 5 6 8 2 6 5


出力例 45

Problem StatementWe have a sequence of N integers  A 1  A 2   cdots  A N 
You can perform the following operation between 0 and K times  inclusive  

Choose two integers i and j such that i  neq j  each between 1 and N  inclusive   Add 1 to A i and  1 to A j  possibly producing a negative element 

Compute the maximum possible positive integer that divides every element of A after the operations  Here a positive integer x divides an integer y if and only if there exists an integer z such that y   xz 

Constraints
2  leq N  leq 500
1  leq A i  leq 10 6
0  leq K  leq 10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
N K
A 1 A 2  cdots A  N 1  A  N 


OutputPrint the maximum possible positive integer that divides every element of A after the operations 

Sample Input 12 3
8 20


Sample Output 17

7 will divide every element of A if  for example  we perform the following operation 

Choose i   2  j   1  A becomes  7  21  

We cannot reach the situation where 8 or greater integer divides every element of A 

Sample Input 22 10
3 5


Sample Output 28

Consider performing the following five operations 

Choose i   2  j   1  A becomes  2  6  
Choose i   2  j   1  A becomes  1  7  
Choose i   2  j   1  A becomes  0  8  
Choose i   2  j   1  A becomes   1  9  
Choose i   1  j   2  A becomes  0  8  

Then  0   8  times 0 and 8   8  times 1  so 8 divides every element of A  We cannot reach the situation where 9 or greater integer divides every element of A 

Sample Input 34 5
10 1 2 22


Sample Output 37


Sample Input 48 7
1 7 5 6 8 2 6 5


Sample Output 45"
Enclosed Points,https://atcoder.jp/contests/abc136/tasks/abc136_f,"問題文2 次元平面上の N 個の点からなる集合 S があり i 番目の点の座標は  x i  y i  です N 個の点の x 座標 y 座標はそれぞれ相異なります 
S の空でない部分集合 T に対して f T  を 各辺が座標軸と平行であって T の点を全て含むような最小の長方形に含まれる点の個数として定義します より正確には 

f T     T に含まれる点について x 座標の最小値と最大値を それぞれ a  b  そして y 座標の最小値と最大値をそれぞれ c  d としたとき a  leq x i  leq b かつ c  leq y i  leq d を満たす 1  leq i  leq N の個数

S の空でない全ての部分集合 T についての f T  の和を計算してください 答えは非常に大きくなることがあるので 998244353 で割った余りを出力してください 

制約
1  leq N  leq 2  times 10 5
 10 9  leq x i  y i  leq 10 9
x i  neq x j  i  neq j 
y i  neq y j  i  neq j 
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N
x 1 y 1
 
x N y N


出力S の空でない全ての部分集合 T についての f T  の和を 998244353 で割った余りを出力せよ 

入力例 13
 1 3
2 1
3  2


出力例 113

1  2  3 番目の点をそれぞれ P 1  P 2  P 3 とします S     P 1  P 2  P 3   の空でない部分集合は 7 個あり それぞれに対する f の値は次の通りです 

f   P 1      1
f   P 2      1
f   P 3      1
f   P 1  P 2      2
f   P 2  P 3      2
f   P 3  P 1      3
f   P 1  P 2  P 3      3

これらの和は 13 です 

入力例 24
1 4
2 1
3 3
4 2


出力例 234


入力例 310
19  11
 3  12
5 3
3  15
8  14
 9  20
10  9
0 2
 7 17
6  6


出力例 37222

和を 998244353 で割った余りを出力することに注意してください 
Problem StatementWe have a set S of N points in a two dimensional plane  The coordinates of the i th point are  x i  y i   The N points have distinct x coordinates and distinct y coordinates 
For a non empty subset T of S  let f T  be the number of points contained in the smallest rectangle  whose sides are parallel to the coordinate axes  that contains all the points in T  More formally  we define f T  as follows 

f T       the number of integers i  1  leq i  leq N  such that a  leq x i  leq b and c  leq y i  leq d  where a  b  c  and d are the minimum x coordinate  the maximum x coordinate  the minimum y coordinate  and the maximum y coordinate of the points in T 

Find the sum of f T  over all non empty subset T of S  Since it can be enormous  print the sum modulo 998244353 

Constraints
1  leq N  leq 2  times 10 5
 10 9  leq x i  y i  leq 10 9
x i  neq x j  i  neq j 
y i  neq y j  i  neq j 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
x 1 y 1
 
x N y N


OutputPrint the sum of f T  over all non empty subset T of S  modulo 998244353 

Sample Input 13
 1 3
2 1
3  2


Sample Output 113

Let the first  second  and third points be P 1  P 2  and P 3  respectively  S     P 1  P 2  P 3   has seven non empty subsets  and f has the following values for each of them 

f   P 1      1
f   P 2      1
f   P 3      1
f   P 1  P 2      2
f   P 2  P 3      2
f   P 3  P 1      3
f   P 1  P 2  P 3      3

The sum of these is 13 

Sample Input 24
1 4
2 1
3 3
4 2


Sample Output 234


Sample Input 310
19  11
 3  12
5 3
3  15
8  14
 9  20
10  9
0 2
 7 17
6  6


Sample Output 37222

Be sure to print the sum modulo 998244353"
+ x,https://atcoder.jp/contests/abc137/tasks/abc137_a,"問題文整数 A  B があります 
A   B    A   B    A  times B の中で最大の数を出力してください 

制約
入力は全て整数である 
 100  leq A   B  leq 100


入力入力は以下の形式で標準入力から与えられる 
A B


出力A   B    A   B    A  times B の中で最大の数を出力せよ 

入力例 1 13 3


出力例 1 10

A   B    10    A   B    16    A  times B    39 の中で最大の数は  10 です 

入力例 21  33


出力例 234

A   B    32    A   B   34    A  times B    33 の中で最大の数は 34 です 

入力例 313 3


出力例 339

A   B   16    A   B   10    A  times B   39 の中で最大の数は 39 です 
Problem StatementWe have two integers  A and B 
Print the largest number among A   B  A   B  and A  times B 

Constraints
All values in input are integers 
 100  leq A   B  leq 100


InputInput is given from Standard Input in the following format 
A B


OutputPrint the largest number among A   B  A   B  and A  times B 

Sample Input 1 13 3


Sample Output 1 10

The largest number among A   B    10  A   B    16  and A  times B    39 is  10 

Sample Input 21  33


Sample Output 234

The largest number among A   B    32  A   B   34  and A  times B    33 is 34 

Sample Input 313 3


Sample Output 339

The largest number among A   B   16  A   B   10  and A  times B   39 is 39"
One Clue,https://atcoder.jp/contests/abc137/tasks/abc137_b,"問題文数直線上に 2000001 個の石が置かれています これらの石の座標は  1000000   999999   999998   ldots  999999  1000000 です 
これらの石のうち ある連続する K 個の石が黒で塗られており それ以外の石は白で塗られています 
また 座標 X にある石は黒で塗られていることが分かっています 
黒で塗られている石が置かれている可能性のある座標をすべて 小さい順に出力してください 

制約
1  leq K  leq 100
0  leq X  leq 100
入力中の値はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
K X


出力黒で塗られている石が置かれている可能性のある座標をすべて 空白で区切って小さい順に出力せよ 

入力例 13 7


出力例 15 6 7 8 9

黒で塗られた石の数が 3 個であることと 座標 7 の石が黒で塗られていることが分かっています このとき 次の 3 通りの可能性が考えられます 

黒で塗られた 3 個の石は座標 5 6 7 に置かれている 
黒で塗られた 3 個の石は座標 6 7 8 に置かれている 
黒で塗られた 3 個の石は座標 7 8 9 に置かれている 

よって 黒で塗られている石が置かれている可能性のある座標は 5 6 7 8 9 の 5 つです 

入力例 24 0


出力例 2 3  2  1 0 1 2 3

負の座標に黒で塗られている石が置かれている可能性もあります 

入力例 31 100


出力例 3100

Problem StatementThere are 2000001 stones placed on a number line  The coordinates of these stones are  1000000   999999   999998   ldots  999999  1000000 
Among them  some K consecutive stones are painted black  and the others are painted white 
Additionally  we know that the stone at coordinate X is painted black 
Print all coordinates that potentially contain a stone painted black  in ascending order 

Constraints
1  leq K  leq 100
0  leq X  leq 100
All values in input are integers 


InputInput is given from Standard Input in the following format 
K X


OutputPrint all coordinates that potentially contain a stone painted black  in ascending order  with spaces in between 

Sample Input 13 7


Sample Output 15 6 7 8 9

We know that there are three stones painted black  and the stone at coordinate 7 is painted black  There are three possible cases 

The three stones painted black are placed at coordinates 5  6  and 7 
The three stones painted black are placed at coordinates 6  7  and 8 
The three stones painted black are placed at coordinates 7  8  and 9 

Thus  five coordinates potentially contain a stone painted black  5  6  7  8  and 9 

Sample Input 24 0


Sample Output 2 3  2  1 0 1 2 3

Negative coordinates can also contain a stone painted black 

Sample Input 31 100


Sample Output 3100"
Green Bin,https://atcoder.jp/contests/abc137/tasks/abc137_c,"問題文文字列 a に含まれる文字を何らかの順序で並べることで得られる文字列を a の アナグラム と呼びます 
例えば greenbin は beginner のアナグラムです このように 同じ文字が複数回現れるときはその文字をちょうどその回数だけ使わなければなりません 
N 個の文字列 s 1  s 2   ldots  s N が与えられます それぞれの文字列は長さが 10 で英小文字からなり またこれらの文字列はすべて異なります 二つの整数 i  j  1  leq i   j  leq N  の組であって s i が s j のアナグラムであるようなものの個数を求めてください 

制約
2  leq N  leq 10 5
s i は長さ 10 の文字列である 
s i の各文字は英小文字である 
s 1  s 2   ldots  s N はすべて異なる 


入力入力は以下の形式で標準入力から与えられる 
N
s 1
s 2
 
s N


出力二つの整数 i  j  1  leq i   j  leq N  の組であって s i が s j のアナグラムであるようなものの個数を出力せよ 

入力例 13
acornistnt
peanutbomb
constraint


出力例 11

s 1   acornistnt は s 3   constraint のアナグラムです 他に s i が s j のアナグラムであるような i  j の組はないため 答えは 1 です 

入力例 22
oneplustwo
ninemodsix


出力例 20

s i が s j のアナグラムであるような i  j の組がないときは 0 と出力してください 

入力例 35
abaaaaaaaa
oneplustwo
aaaaaaaaba
twoplusone
aaaabaaaaa


出力例 34

ここにそのようなケースを置くことはできませんが 答えは 32 bit 整数型に収まらない可能性があるので注意してください 
Problem StatementWe will call a string obtained by arranging the characters contained in a string a in some order  an anagram of a 
For example  greenbin is an anagram of beginner  As seen here  when the same character occurs multiple times  that character must be used that number of times 
Given are N strings s 1  s 2   ldots  s N  Each of these strings has a length of 10 and consists of lowercase English characters  Additionally  all of these strings are distinct  Find the number of pairs of integers i  j  1  leq i   j  leq N  such that s i is an anagram of s j 

Constraints
2  leq N  leq 10 5
s i is a string of length 10 
Each character in s i is a lowercase English letter 
s 1  s 2   ldots  s N are all distinct 


InputInput is given from Standard Input in the following format 
N
s 1
s 2
 
s N


OutputPrint the number of pairs of integers i  j  1  leq i   j  leq N  such that s i is an anagram of s j 

Sample Input 13
acornistnt
peanutbomb
constraint


Sample Output 11

s 1   acornistnt is an anagram of s 3   constraint  There are no other pairs i  j such that s i is an anagram of s j  so the answer is 1 

Sample Input 22
oneplustwo
ninemodsix


Sample Output 20

If there is no pair i  j such that s i is an anagram of s j  print 0 

Sample Input 35
abaaaaaaaa
oneplustwo
aaaaaaaaba
twoplusone
aaaabaaaaa


Sample Output 34

Note that the answer may not fit into a 32 bit integer type  though we cannot put such a case here"
Summer Vacation,https://atcoder.jp/contests/abc137/tasks/abc137_d,"問題文N 件の日雇いアルバイトがあり i 件目の日雇いアルバイトを請けて働くと その A i 日後に報酬 B i が得られます 
あなたは これらの中から 1 日に 1 件まで選んで請け 働くことができます 
ただし 請けたことのある日雇いアルバイトは選べません 
今日から M 日後まで M 日後を含む に得られる報酬の合計の最大値を求めてください 
なお 日雇いアルバイトは今日から請けて働くことができます 

制約
入力は全て整数である 
1  leq N  leq 10 5
1  leq M  leq 10 5
1  leq A i  leq 10 5
1  leq B i  leq 10 4


入力入力は以下の形式で標準入力から与えられる 
N M
A 1 B 1
A 2 B 2
 vdots
A N B N


出力M 日後までに得られる報酬の合計の最大値を出力せよ 

入力例 13 4
4 3
4 1
2 2


出力例 15

以下のように日雇いアルバイトを請けて働くと 報酬の合計は 5 となり このときが最大です 

今日 1 件目の日雇いアルバイトを請けて働き 今日から 4 日後に報酬 3 を得ます 
明日 今日から 1 日後  3 件目の日雇いアルバイトを請けて働き 今日から 1 2   3 日後に報酬 2 を得ます 


入力例 25 3
1 2
1 3
1 4
2 1
2 3


出力例 210


入力例 31 1
2 1


出力例 30

Problem StatementThere are N one off jobs available  If you take the i th job and complete it  you will earn the reward of B i after A i days from the day you do it 
You can take and complete at most one of these jobs in a day 
However  you cannot retake a job that you have already done 
Find the maximum total reward that you can earn no later than M days from today 
You can already start working today 

Constraints
All values in input are integers 
1  leq N  leq 10 5
1  leq M  leq 10 5
1  leq A i  leq 10 5
1  leq B i  leq 10 4


InputInput is given from Standard Input in the following format 
N M
A 1 B 1
A 2 B 2
 vdots
A N B N


OutputPrint the maximum total reward that you can earn no later than M days from today 

Sample Input 13 4
4 3
4 1
2 2


Sample Output 15

You can earn the total reward of 5 by taking the jobs as follows 

Take and complete the first job today  You will earn the reward of 3 after four days from today 
Take and complete the third job tomorrow  You will earn the reward of 2 after two days from tomorrow  that is  after three days from today 


Sample Input 25 3
1 2
1 3
1 4
2 1
2 3


Sample Output 210


Sample Input 31 1
2 1


Sample Output 30"
Coins Respawn,https://atcoder.jp/contests/abc137/tasks/abc137_e,"問題文1 から N までの番号がつけられた N 頂点と M 辺からなる有向グラフがあります 
i 番目の辺は頂点 A i から頂点 B i へと向かい この辺の上には C i 枚のコインが置かれています 
また 頂点 N にはボタンが設置されています 
このグラフ上でゲームを行います 
あなたは頂点 1 でコインを 0 枚持ってゲームを開始し 辺をたどってコインを拾いながら頂点 N を目指します 
1 本の辺を通るには 1 分の時間がかかり 辺を通るたびにその辺の上に置かれているすべてのコインを拾うことができます 
ゲームの世界ではよくあるように ある辺を通ってその上のコインを拾っても その辺を次に通る際には同じ枚数のコインが再び出現しており それらを再び拾うことができます 
頂点 N に到着したとき ボタンを押してゲームを終了することができます  ボタンを押さずに移動を続けることもできます  
ただし ゲームを終了する際に ゲーム開始からの経過時間を T 分として T  times P 枚のコインの支払いが要求されます 持っているコインの枚数が T  times P 枚未満の場合は 代わりに持っているコインをすべて支払います 
この支払いの後に残ったコインの枚数があなたのスコアとなります 
獲得できるスコアの最大値が存在するか判定し 存在する場合はその最大値を求めてください 

制約
2  leq N  leq 2500
1  leq M  leq 5000
1  leq A i  B i  leq N
1  leq C i  leq 10 5
0  leq P  leq 10 5
入力中の値はすべて整数である 
頂点 1 から頂点 N に到達することが可能である 


入力入力は以下の形式で標準入力から与えられる 
N M P
A 1 B 1 C 1
 
A M B M C M


出力獲得できるスコアの最大値が存在する場合はその最大値を 存在しない場合は  1 を出力せよ 

入力例 13 3 10
1 2 20
2 3 30
1 3 45


出力例 135


頂点 1 から頂点 3 に移動する方法は以下の 2 通りです 

頂点 1  rightarrow 2  rightarrow 3  道中でコインを 20   30   50 枚拾う ゲーム開始から 2 分後に頂点 3 に着き ボタンを押してコインを 2  times 10   20 枚支払い 50   20   30 枚残る 
頂点 1  rightarrow 3  道中でコインを 45 枚拾う ゲーム開始から 1 分後に頂点 3 に着き ボタンを押してコインを 1  times 10   10 枚支払い 45   10   35 枚残る 

よって 獲得できるスコアの最大値は 35 です 

入力例 22 2 10
1 2 100
2 2 100


出力例 2 1


頂点 1 から伸びる辺を通ると頂点 2 に着き ここで頂点 2 から自分自身へと向かう辺を t 回通ってからボタンを押すとスコアは 90   90t となります よってスコアは無限に高めることができ 獲得できるスコアの最大値は存在しません 

入力例 34 5 10
1 2 1
1 4 1
3 4 1
2 2 100
3 3 100


出力例 30


頂点 1 から頂点 4 へと直接向かう辺を通ること以外に頂点 1 から頂点 4 に移動する方法はありません この辺の上で 1 枚のコインを拾いますが ゲーム終了時に 10 枚のコインの支払いを要求されてスコアは 0 となります 
なお 頂点 1 から頂点 2 へと向かう辺を通るとその後コインを無限に拾えますが 頂点 4 に到達してゲームを終了することができなくなるため無意味です 
Problem StatementThere is a directed graph with N vertices numbered 1 to N and M edges 
The i th edge is directed from Vertex A i to Vertex B i  and there are C i coins placed along that edge 
Additionally  there is a button on Vertex N 
We will play a game on this graph 
You start the game on Vertex 1 with zero coins  and head for Vertex N by traversing the edges while collecting coins 
It takes one minute to traverse an edge  and you can collect the coins placed along the edge each time you traverse it 
As usual in games  even if you traverse an edge once and collect the coins  the same number of coins will reappear next time you traverse that edge  which you can collect again 
When you reach Vertex N  you can end the game by pressing the button   You can also choose to leave Vertex N without pressing the button and continue traveling  
However  when you end the game  you will be asked to pay T  times P coins  where T is the number of minutes elapsed since the start of the game  If you have less than T  times P coins  you will have to pay all of your coins instead 
Your score will be the number of coins you have after this payment 
Determine if there exists a maximum value of the score that can be obtained  If the answer is yes  find that maximum value 

Constraints
2  leq N  leq 2500
1  leq M  leq 5000
1  leq A i  B i  leq N
1  leq C i  leq 10 5
0  leq P  leq 10 5
All values in input are integers 
Vertex N can be reached from Vertex 1 


InputInput is given from Standard Input in the following format 
N M P
A 1 B 1 C 1
 
A M B M C M


OutputIf there exists a maximum value of the score that can be obtained  print that maximum value  otherwise  print  1 

Sample Input 13 3 10
1 2 20
2 3 30
1 3 45


Sample Output 135


There are two ways to travel from Vertex 1 to Vertex 3 

Vertex 1  rightarrow 2  rightarrow 3  You collect 20   30   50 coins on the way  After two minutes from the start of the game  you press the button  pay 2  times 10   20 coins  and you have 50   20   30 coins left 
Vertex 1  rightarrow 2  You collect 45 coins on the way  After one minute from the start of the game  you press the button  pay 1  times 10   10 coins  and you have 45   10   35 coins left 

Thus  the maximum score that can be obtained is 35 

Sample Input 22 2 10
1 2 100
2 2 100


Sample Output 2 1


The edge extending from Vertex 1 takes you to Vertex 2  If you then traverse the edge extending from Vertex 2 to itself t times and press the button  your score will be 90   90t  Thus  you can infinitely increase your score  which means there is no maximum value of the score that can be obtained 

Sample Input 34 5 10
1 2 1
1 4 1
3 4 1
2 2 100
3 3 100


Sample Output 30


There is no way to travel from Vertex 1 to Vertex 4 other than traversing the edge leading from Vertex 1 to Vertex 4 directly  You will pick up one coin along this edge  but after being asked to paying 10 coins  your score will be 0 
Note that you can collect an infinite number of coins if you traverse the edge leading from Vertex 1 to Vertex 2  but this is pointless since you can no longer reach Vertex 4 and end the game"
Polynomial Construction,https://atcoder.jp/contests/abc137/tasks/abc137_f,"問題文素数 p と 長さ p の 0 と 1 からなる整数列 a 0   ldots  a  p 1  が与えられます 
以下の条件を満たす p 1 次以下の多項式 f x    b  p 1  x  p 1    b  p 2  x  p 2     ldots   b 0 を一つ求めてください 

各 i  0  leq i  leq p 1  に対し b i は 0  leq b i  leq p 1 なる整数
各 i  0  leq i  leq p 1  に対し f i   equiv a i  pmod p


制約
2  leq p  leq 2999
p は素数である 
0  leq a i  leq 1


入力入力は以下の形式で標準入力から与えられる 
p
a 0 a 1  ldots a  p 1 


出力条件を満たす多項式 f x  の一つにおける b 0  b 1   ldots  b  p 1  の値をこの順に空白区切りで出力せよ 
なお 解は必ず存在することが示せる 複数の解が存在する場合は そのうちのどれを出力してもよい 

入力例 12
1 0


出力例 11 1

f x    x   1 は以下のように条件を満たします 

f 0    0   1   1  equiv 1  pmod 2
f 1    1   1   2  equiv 0  pmod 2


入力例 23
0 0 0


出力例 20 0 0

f x    0 も有効な出力です 

入力例 35
0 1 0 1 0


出力例 30 2 0 1 3

Problem StatementGiven are a prime number p and a sequence of p integers a 0   ldots  a  p 1  consisting of zeros and ones 
Find a polynomial of degree at most p 1  f x    b  p 1  x  p 1    b  p 2  x  p 2     ldots   b 0  satisfying the following conditions 

For each i  0  leq i  leq p 1   b i is an integer such that 0  leq b i  leq p 1 
For each i  0  leq i  leq p 1   f i   equiv a i  pmod p 


Constraints
2  leq p  leq 2999
p is a prime number 
0  leq a i  leq 1


InputInput is given from Standard Input in the following format 
p
a 0 a 1  ldots a  p 1 


OutputPrint b 0  b 1   ldots  b  p 1  of a polynomial f x  satisfying the conditions  in this order  with spaces in between 
It can be proved that a solution always exists  If multiple solutions exist  any of them will be accepted 

Sample Input 12
1 0


Sample Output 11 1

f x    x   1 satisfies the conditions  as follows 

f 0    0   1   1  equiv 1  pmod 2
f 1    1   1   2  equiv 0  pmod 2


Sample Input 23
0 0 0


Sample Output 20 0 0

f x    0 is also valid 

Sample Input 35
0 1 0 1 0


Sample Output 30 2 0 1 3"
Red or Not,https://atcoder.jp/contests/abc138/tasks/abc138_a,"問題文整数 a と 英小文字からなる文字列 s が入力されます 
a が 3200 以上なら s と出力し a が 3200 未満なら red と出力するプログラムを書いてください 

制約
2800  leq a   5000
s は長さ 1 以上 10 以下の文字列である 
s の各文字は英小文字である 


入力入力は以下の形式で標準入力から与えられる 
a
s


出力a が 3200 以上なら s と出力し a が 3200 未満なら red と出力せよ 

入力例 13200
pink


出力例 1pink

a   3200 は 3200 以上であるため s   pink と出力します 

入力例 23199
pink


出力例 2red

a   3199 は 3200 未満であるため red と出力します 

入力例 34049
red


出力例 3red

a   4049 は 3200 以上であるため s   red と出力します 
Problem StatementYou will be given an integer a and a string s consisting of lowercase English letters as input 
Write a program that prints s if a is not less than 3200 and prints red if a is less than 3200 

Constraints
2800  leq a   5000
s is a string of length between 1 and 10  inclusive  
Each character of s is a lowercase English letter 


InputInput is given from Standard Input in the following format 
a
s


OutputIf a is not less than 3200  print s  if a is less than 3200  print red 

Sample Input 13200
pink


Sample Output 1pink

a   3200 is not less than 3200  so we print s   pink 

Sample Input 23199
pink


Sample Output 2red

a   3199 is less than 3200  so we print red 

Sample Input 34049
red


Sample Output 3red

a   4049 is not less than 3200  so we print s   red"
Resistors in Parallel,https://atcoder.jp/contests/abc138/tasks/abc138_b,"問題文N 個の整数の列 A 1   ldots  A N が与えられます 
これらの逆数の総和の逆数  frac 1   frac 1  A 1     ldots    frac 1  A N   を求めてください 

制約
1  leq N  leq 100
1  leq A i  leq 1000


入力入力は以下の形式で標準入力から与えられる 
N
A 1 A 2  ldots A N


出力 frac 1   frac 1  A 1     ldots    frac 1  A N   の値を表す小数  または整数  を出力せよ 
出力は ジャッジの出力との絶対誤差または相対誤差が 10   5  以下のとき正解と判定される 

入力例 12
10 30


出力例 17 5

 frac 1   frac 1  10     frac 1  30      frac 1   frac 4  30      frac 30  4    7 5 です 
なお 7 50001  7 49999 などと出力しても正解と判定されます 

入力例 23
200 200 200


出力例 266 66666666666667

 frac 1   frac 1  200     frac 1  200     frac 1  200      frac 1   frac 3  200      frac 200  3    66 6666    です 
なお 6 66666e 1 などと出力しても正解と判定されます 

入力例 31
1000


出力例 31000

 frac 1   frac 1  1000     1000 です 
なお  1000 0 などと出力しても正解と判定されます 
Problem StatementGiven is a sequence of N integers A 1   ldots  A N 
Find the  multiplicative  inverse of the sum of the inverses of these numbers   frac 1   frac 1  A 1     ldots    frac 1  A N   

Constraints
1  leq N  leq 100
1  leq A i  leq 1000


InputInput is given from Standard Input in the following format 
N
A 1 A 2  ldots A N


OutputPrint a decimal number  or an integer  representing the value of  frac 1   frac 1  A 1     ldots    frac 1  A N   
Your output will be judged correct when its absolute or relative error from the judge s output is at most 10   5  

Sample Input 12
10 30


Sample Output 17 5

 frac 1   frac 1  10     frac 1  30      frac 1   frac 4  30      frac 30  4    7 5 
Printing 7 50001  7 49999  and so on will also be accepted 

Sample Input 23
200 200 200


Sample Output 266 66666666666667

 frac 1   frac 1  200     frac 1  200     frac 1  200      frac 1   frac 3  200      frac 200  3    66 6666    
Printing 6 66666e 1 and so on will also be accepted 

Sample Input 31
1000


Sample Output 31000

 frac 1   frac 1  1000     1000 
Printing  1000 0 and so on will also be accepted"
Alchemist,https://atcoder.jp/contests/abc138/tasks/abc138_c,"問題文あなたは鍋と N 個の具材を持っています 各具材は 価値 と呼ばれる実数の値を持ち i 個目  1  leq i  leq N  の具材の価値は v i です 
2 個の具材を鍋に入れると それらは消滅して新たに 1 個の具材が生成されます この新たな具材の価値は元の 2 個の具材の価値を x  y として  x   y    2 であり この具材を再び鍋に入れることもできます 
この具材の合成を N   1 回行うと 最後に 1 個の具材が残ります この具材の価値として考えられる最大の値を求めてください 

制約
2  leq N  leq 50
1  leq v i  leq 1000
入力中の値はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N
v 1 v 2  ldots v N


出力最後に残る 1 個の具材の価値として考えられる最大の値を表す小数  または整数  を出力せよ 
出力は ジャッジの出力との絶対誤差または相対誤差が 10   5  以下のとき正解と判定される 

入力例 12
3 4


出力例 13 5

はじめに持っている具材が 2 個の場合 それらをともに鍋に入れるほかありません 価値 3  4 の具材から合成される具材の価値は  3   4    2   3 5 です 
なお 3 50001  3 49999 などと出力しても正解となります 

入力例 23
500 300 200


出力例 2375

今回ははじめに 3 個の具材を持っており 一度目の合成で鍋にどの具材を入れるかに選択の余地があります 選択肢は次の 3 通りです 

価値 500  300 の具材を入れ 価値  500   300    2   400 の具材を合成する この場合 次の合成ではこれと価値 200 の具材を鍋に入れることになり 価値  400   200    2   300 の具材が合成される 
価値 500  200 の具材を入れ 価値  500   200    2   350 の具材を合成する この場合 次の合成ではこれと価値 300 の具材を鍋に入れることになり 価値  350   300    2   325 の具材が合成される 
価値 300  200 の具材を入れ 価値  300   200    2   250 の具材を合成する この場合 次の合成ではこれと価値 500 の具材を鍋に入れることになり 価値  250   500    2   375 の具材が合成される 

よって 最後に残る 1 個の具材の価値として考えられる最大の値は 375 です 
なお 375 0 などと出力しても正解となります 

入力例 35
138 138 138 138 138


出力例 3138

Problem StatementYou have a pot and N ingredients  Each ingredient has a real number parameter called value  and the value of the i th ingredient  1  leq i  leq N  is v i 
When you put two ingredients in the pot  they will vanish and result in the formation of a new ingredient  The value of the new ingredient will be  x   y    2 where x and y are the values of the ingredients consumed  and you can put this ingredient again in the pot 
After you compose ingredients in this way N 1 times  you will end up with one ingredient  Find the maximum possible value of this ingredient 

Constraints
2  leq N  leq 50
1  leq v i  leq 1000
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
v 1 v 2  ldots v N


OutputPrint a decimal number  or an integer  representing the maximum possible value of the last ingredient remaining 
Your output will be judged correct when its absolute or relative error from the judge s output is at most 10   5  

Sample Input 12
3 4


Sample Output 13 5

If you start with two ingredients  the only choice is to put both of them in the pot  The value of the ingredient resulting from the ingredients of values 3 and 4 is  3   4    2   3 5 
Printing 3 50001  3 49999  and so on will also be accepted 

Sample Input 23
500 300 200


Sample Output 2375

You start with three ingredients this time  and you can choose what to use in the first composition  There are three possible choices 

Use the ingredients of values 500 and 300 to produce an ingredient of value  500   300    2   400  The next composition will use this ingredient and the ingredient of value 200  resulting in an ingredient of value  400   200    2   300 
Use the ingredients of values 500 and 200 to produce an ingredient of value  500   200    2   350  The next composition will use this ingredient and the ingredient of value 300  resulting in an ingredient of value  350   300    2   325 
Use the ingredients of values 300 and 200 to produce an ingredient of value  300   200    2   250  The next composition will use this ingredient and the ingredient of value 500  resulting in an ingredient of value  250   500    2   375 

Thus  the maximum possible value of the last ingredient remaining is 375 
Printing 375 0 and so on will also be accepted 

Sample Input 35
138 138 138 138 138


Sample Output 3138"
Ki,https://atcoder.jp/contests/abc138/tasks/abc138_d,"問題文1 から N までの番号がついた N 個の頂点を持つ根付き木が与えられます 
この木の根は頂点 1 で i 番目の辺  1  leq i  leq N   1  は頂点 a i と頂点 b i を結びます 
各頂点にはカウンターが設置されており はじめすべての頂点のカウンターの値は 0 です 
これから 以下のような Q 回の操作が行われます 

操作 j  1  leq j  leq Q   頂点 p j を根とする部分木に含まれるすべての頂点のカウンターの値に x j を足す 

すべての操作のあとの各頂点のカウンターの値を求めてください 

制約
2  leq N  leq 2  times 10 5
1  leq Q  leq 2  times 10 5
1  leq a i   b i  leq N
1  leq p j  leq N
1  leq x j  leq 10 4
与えられるグラフは木である 
入力中の値はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N Q
a 1 b 1
 
a  N 1  b  N 1 
p 1 x 1
 
p Q x Q


出力すべての操作のあとの各頂点のカウンターの値を 頂点 1  2   ldots  N の順に空白区切りで出力せよ 

入力例 14 3
1 2
2 3
2 4
2 10
1 100
3 1


出力例 1100 110 111 110

この入力中の木は次のようなものです 

各操作で 頂点のカウンターの値は次のように変化します 

操作 1  頂点 2 を根とする部分木に含まれるすべての頂点 すなわち頂点 2  3  4 のカウンターの値に 10 を足す 頂点 1  2  3  4 のカウンターの値はそれぞれ 0  10  10  10 となる 
操作 2  頂点 1 を根とする部分木に含まれるすべての頂点 すなわち頂点 1  2  3  4 のカウンターの値に 100 を足す 頂点 1  2  3  4 のカウンターの値はそれぞれ 100  110  110  110 となる 
操作 3  頂点 3 を根とする部分木に含まれるすべての頂点 すなわち頂点 3 のカウンターの値に 1 を足す 頂点 1  2  3  4 のカウンターの値はそれぞれ 100  110  111  110 となる 


入力例 26 2
1 2
1 3
2 4
3 6
2 5
1 10
1 10


出力例 220 20 20 20 20 20

Problem StatementGiven is a rooted tree with N vertices numbered 1 to N 
The root is Vertex 1  and the i th edge  1  leq i  leq N   1  connects Vertex a i and b i 
Each of the vertices has a counter installed  Initially  the counters on all the vertices have the value 0 
Now  the following Q operations will be performed 

Operation j  1  leq j  leq Q   Increment by x j the counter on every vertex contained in the subtree rooted at Vertex p j 

Find the value of the counter on each vertex after all operations 

Constraints
2  leq N  leq 2  times 10 5
1  leq Q  leq 2  times 10 5
1  leq a i   b i  leq N
1  leq p j  leq N
1  leq x j  leq 10 4
The given graph is a tree 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N Q
a 1 b 1
 
a  N 1  b  N 1 
p 1 x 1
 
p Q x Q


OutputPrint the values of the counters on Vertex 1  2   ldots  N after all operations  in this order  with spaces in between 

Sample Input 14 3
1 2
2 3
2 4
2 10
1 100
3 1


Sample Output 1100 110 111 110

The tree in this input is as follows 

Each operation changes the values of the counters on the vertices as follows 

Operation 1  Increment by 10 the counter on every vertex contained in the subtree rooted at Vertex 2  that is  Vertex 2  3  4  The values of the counters on Vertex 1  2  3  4 are now 0  10  10  10  respectively 
Operation 2  Increment by 100 the counter on every vertex contained in the subtree rooted at Vertex 1  that is  Vertex 1  2  3  4  The values of the counters on Vertex 1  2  3  4 are now 100  110  110  110  respectively 
Operation 3  Increment by 1 the counter on every vertex contained in the subtree rooted at Vertex 3  that is  Vertex 3  The values of the counters on Vertex 1  2  3  4 are now 100  110  111  110  respectively 


Sample Input 26 2
1 2
1 3
2 4
3 6
2 5
1 10
1 10


Sample Output 220 20 20 20 20 20"
Strings of Impurity,https://atcoder.jp/contests/abc138/tasks/abc138_e,"問題文英小文字からなる二つの文字列 s  t が与えられます 次の条件を満たす整数 i  1  leq i  leq 10  100   times  s   が存在するか判定し 存在する場合はそのような i の最小値を求めてください 

s を 10  100  個連結して得られる文字列を s  とする t は 文字列  s   1 s   2 ldots s   i  s  の先頭 i 文字  の部分列である 


注記
文字列 a の部分列とは a から 0 文字以上を削除して残った文字を相対的な順序を保ったまま連結して得られる文字列です 例えば contest の部分列には net  c  contest などがあります 


制約
1  leq  s   leq 10 5
1  leq  t   leq 10 5
s  t は英小文字からなる 


入力入力は以下の形式で標準入力から与えられる 
s
t


出力条件を満たす整数 i が存在する場合はそのような i の最小値を 存在しない場合は  1 を出力せよ 

入力例 1contest
son


出力例 110

t   son は文字列 contestcon  s    contestcontestcontest    の先頭 10 文字  の部分列であるため i   10 は条件を満たします 
一方で t は文字列 contestco  s  の先頭 9 文字  の部分列ではないため i   9 は条件を満たしません 
同様に 8 以下の任意の整数も条件を満たしません よって 条件を満たす整数 i の最小値は 10 です 

入力例 2contest
programming


出力例 2 1

t   programming は s    contestcontestcontest    の部分列ではありません よって 条件を満たす整数 i は存在しません 

入力例 3contest
sentence


出力例 333

ここにそのようなケースを置くことはできませんが 答えは 32 bit 整数に収まらない可能性があるのでご注意ください 
Problem StatementGiven are two strings s and t consisting of lowercase English letters  Determine if there exists an integer i satisfying the following condition  and find the minimum such i if it exists 

Let s  be the concatenation of 10  100  copies of s  t is a subsequence of the string  s   1 s   2 ldots s   i  the first i characters in s   


Notes
A subsequence of a string a is a string obtained by deleting zero or more characters from a and concatenating the remaining characters without changing the relative order  For example  the subsequences of contest include net  c  and contest 


Constraints
1  leq  s   leq 10 5
1  leq  t   leq 10 5
s and t consists of lowercase English letters 


InputInput is given from Standard Input in the following format 
s
t


OutputIf there exists an integer i satisfying the following condition  print the minimum such i  otherwise  print  1 

Sample Input 1contest
son


Sample Output 110

t   son is a subsequence of the string contestcon  the first 10 characters in s    contestcontestcontest      so i   10 satisfies the condition 
On the other hand  t is not a subsequence of the string contestco  the first 9 characters in s    so i   9 does not satisfy the condition 
Similarly  any integer less than 9 does not satisfy the condition  either  Thus  the minimum integer i satisfying the condition is 10 

Sample Input 2contest
programming


Sample Output 2 1

t   programming is not a substring of s    contestcontestcontest     Thus  there is no integer i satisfying the condition 

Sample Input 3contest
sentence


Sample Output 333

Note that the answer may not fit into a 32 bit integer type  though we cannot put such a case here"
Coincidence,https://atcoder.jp/contests/abc138/tasks/abc138_f,"問題文整数 L  R が与えられます 整数の組  x  y   L  leq x  leq y  leq R  であって y を x で割った余りが y  text  XOR   x に等しいものの個数を 10 9   7 で割ったあまりを求めてください 

 text  XOR   とは

整数 A  B のビットごとの排他的論理和 a  text  XOR   b は 以下のように定義されます 

 a  text  XOR   b を二進数表記した際の 2 k  k  geq 0  の位の数は A  B を二進数表記した際の 2 k の位の数のうち一方のみが 1 であれば 1 そうでなければ 0 である 

例えば 3  text  XOR   5   6 となります  二進数表記すると  011  text  XOR   101   110  



制約
1  leq L  leq R  leq 10  18 


入力入力は以下の形式で標準入力から与えられる 
L R


出力条件を満たす整数の組  x  y   L  leq x  leq y  leq R  の個数を 10 9   7 で割ったあまりを出力せよ 

入力例 12 3


出力例 13

条件を満たす組は  2  2    2  3    3  3  の 3 通りです 

入力例 210 100


出力例 2604


入力例 31 1000000000000000000


出力例 368038601

個数を 10 9   7 で割ったあまりを計算することを忘れないでください 
Problem StatementGiven are integers L and R  Find the number  modulo 10 9   7  of pairs of integers  x  y   L  leq x  leq y  leq R  such that the remainder when y is divided by x is equal to y  text  XOR   x 

What is  text  XOR   

The XOR of integers A and B  A  text  XOR   B  is defined as follows 

When A  text  XOR   B is written in base two  the digit in the 2 k s place  k  geq 0  is 1 if either A or B  but not both  has 1 in the 2 k s place  and 0 otherwise 

For example  3  text  XOR   5   6   In base two  011  text  XOR   101   110  



Constraints
1  leq L  leq R  leq 10  18 


InputInput is given from Standard Input in the following format 
L R


OutputPrint the number of pairs of integers  x  y   L  leq x  leq y  leq R  satisfying the condition  modulo 10 9   7 

Sample Input 12 3


Sample Output 13

Three pairs satisfy the condition   2  2    2  3   and  3  3  

Sample Input 210 100


Sample Output 2604


Sample Input 31 1000000000000000000


Sample Output 368038601

Be sure to compute the number modulo 10 9   7"
Tenki,https://atcoder.jp/contests/abc139/tasks/abc139_a,"問題文ある 3 日間の天気予報が 長さ 3 の文字列 S として与えられます 
S の i  1  leq i  leq 3  文字目が S のとき i 日目の天気予報が晴れだったことを C のときは曇りだったことを R のときは雨だったことを意味します 
また 3 日間の実際の天気が 長さ 3 の文字列 T として与えられます 
T の i  1  leq i  leq 3  文字目が S のとき i 日目の実際の天気が晴れだったことを C のときは曇りだったことを R のときは雨だったことを意味します 
3 日間で天気予報が的中した日が何日あるかを出力してください 

制約
S および T は長さ 3 の文字列である 
S および T は S  C  R のみからなる 


入力入力は以下の形式で標準入力から与えられる 
S
T


出力3 日間で天気予報が的中した日が何日あるかを出力せよ 

入力例 1CSS
CSR


出力例 12


1 日目の天気予報は曇り 実際の天気は曇りなので この日の天気予報は的中している 
2 日目の天気予報は晴れ 実際の天気は晴れなので この日の天気予報は的中している 
3 日目の天気予報は晴れ 実際の天気は雨なので この日の天気予報は的中していない 

以上より このケースでは 3 日間で天気予報が的中した日が 2 日あります 

入力例 2SSR
SSR


出力例 23


入力例 3RRR
SSS


出力例 30

Problem StatementYou will be given a string S of length 3 representing the weather forecast for three days in the past 
The i th character  1  leq i  leq 3  of S represents the forecast for the i th day  S  C  and R stand for sunny  cloudy  and rainy  respectively 
You will also be given a string T of length 3 representing the actual weather on those three days 
The i th character  1  leq i  leq 3  of S represents the actual weather on the i th day  S  C  and R stand for sunny  cloudy  and rainy  respectively 
Print the number of days for which the forecast was correct 

Constraints
S and T are strings of length 3 each 
S and T consist of S  C  and R 


InputInput is given from Standard Input in the following format 
S
T


OutputPrint the number of days for which the forecast was correct 

Sample Input 1CSS
CSR


Sample Output 12


For the first day  it was forecast to be cloudy  and it was indeed cloudy 
For the second day  it was forecast to be sunny  and it was indeed sunny 
For the third day  it was forecast to be sunny  but it was rainy 

Thus  the forecast was correct for two days in this case 

Sample Input 2SSR
SSR


Sample Output 23


Sample Input 3RRR
SSS


Sample Output 30"
Power Socket,https://atcoder.jp/contests/abc139/tasks/abc139_b,"問題文高橋くんの家には電源プラグの差込口が 1 口しかありません 
そこで 高橋くんは A 個口の電源タップをいくつか使って未使用の差込口を B 口以上に拡張したいと考えています 
A 個口の電源タップ 1 つと未使用の差込口 1 口を使って 新たに差込口を A 口増やすことができます 
最小でいくつの電源タップが必要でしょうか 

制約
入力は全て整数である 
2  leq A  leq 20
1  leq B  leq 20


入力入力は以下の形式で標準入力から与えられる 
A B


出力必要な電源タップの個数の最小値を出力せよ 

入力例 14 10


出力例 13

4 個口の電源タップを 3 つ使うと 未使用の差込口は 10 口になります 

入力例 28 9


出力例 22

8 個口の電源タップを 2 つ使うと 未使用の差込口は 15 口になります 

入力例 38 8


出力例 31

Problem StatementTakahashi s house has only one socket 
Takahashi wants to extend it with some number of power strips  each with A sockets  into B or more empty sockets 
One power strip with A sockets can extend one empty socket into A empty sockets 
Find the minimum number of power strips required 

Constraints
All values in input are integers 
2  leq A  leq 20
1  leq B  leq 20


InputInput is given from Standard Input in the following format 
A B


OutputPrint the minimum number of power strips required 

Sample Input 14 10


Sample Output 13

3 power strips  each with 4 sockets  extend the socket into 10 empty sockets 

Sample Input 28 9


Sample Output 22

2 power strips  each with 8 sockets  extend the socket into 15 empty sockets 

Sample Input 38 8


Sample Output 31"
Lower,https://atcoder.jp/contests/abc139/tasks/abc139_c,"問題文左右一列に N 個のマスが並んでいます 
左から i 番目のマスの高さは H i です 
あなたは好きなマスに降り立ち 右隣のマスの高さが今居るマスの高さ以下である限り右隣のマスへ移動し続けます 
最大で何回移動できるでしょうか 

制約
入力は全て整数である 
1  leq N  leq 10 5
1  leq H i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N
H 1 H 2     H N


出力移動できる回数の最大値を出力せよ 

入力例 15
10 4 8 7 3


出力例 12

左から 3 番目のマスに降り立つと 右に 2 回移動できます 

入力例 27
4 4 5 6 6 5 5


出力例 23

左から 4 番目のマスに降り立つと 右に 3 回移動できます 

入力例 34
1 2 3 4


出力例 30

Problem StatementThere are N squares arranged in a row from left to right 
The height of the i th square from the left is H i 
You will land on a square of your choice  then repeat moving to the adjacent square on the right as long as the height of the next square is not greater than that of the current square 
Find the maximum number of times you can move 

Constraints
All values in input are integers 
1  leq N  leq 10 5
1  leq H i  leq 10 9


InputInput is given from Standard Input in the following format 
N
H 1 H 2     H N


OutputPrint the maximum number of times you can move 

Sample Input 15
10 4 8 7 3


Sample Output 12

By landing on the third square from the left  you can move to the right twice 

Sample Input 27
4 4 5 6 6 5 5


Sample Output 23

By landing on the fourth square from the left  you can move to the right three times 

Sample Input 34
1 2 3 4


Sample Output 30"
ModSum,https://atcoder.jp/contests/abc139/tasks/abc139_d,"問題文整数 N に対して   1  2       N   を並べ替えた数列   P 1  P 2       P N   を選びます 
そして 各 i 1 2     N について i を P i で割った余りを M i とします 
M 1   M 2    cdots   M N の最大値を求めてください 

制約
N は 1  leq N  leq 10 9 を満たす整数である 


入力入力は以下の形式で標準入力から与えられる 
N


出力M 1   M 2    cdots   M N の最大値を出力せよ 

入力例 12


出力例 11

  1  2   を並び替えた数列として   P 1  P 2       2  1   を選ぶと M 1   M 2   1   0   1 となります 

入力例 213


出力例 278


入力例 31


出力例 30

Problem StatementFor an integer N  we will choose a permutation   P 1  P 2       P N   of   1  2       N   
Then  for each i 1 2     N  let M i be the remainder when i is divided by P i 
Find the maximum possible value of M 1   M 2    cdots   M N 

Constraints
N is an integer satisfying 1  leq N  leq 10 9 


InputInput is given from Standard Input in the following format 
N


OutputPrint the maximum possible value of M 1   M 2    cdots   M N 

Sample Input 12


Sample Output 11

When the permutation   P 1  P 2       2  1   is chosen  M 1   M 2   1   0   1 

Sample Input 213


Sample Output 278


Sample Input 31


Sample Output 30"
League,https://atcoder.jp/contests/abc139/tasks/abc139_e,"問題文N 人の選手がテニスの大会に参加します 彼らを選手 1 選手 2  ldots 選手 N と呼びます 
大会は総当たり戦で 合計 N N 1  2 試合が行われます 
これらの試合の日程を 以下の条件をすべて満たすように決めることは可能でしょうか 可能である場合 必要な最小の日数も求めてください 

各選手は一日に最大で一試合を行う 
各選手 i  1  leq i  leq N  は 選手 A  i  1   A  i  2    ldots  A  i  N 1  とこの順に一度ずつ試合を行う 


制約
3  leq N  leq 1000
1  leq A  i  j   leq N
A  i  j   neq i
A  i  1   A  i  2    ldots  A  i  N 1  はすべて異なる 


入力入力は以下の形式で標準入力から与えられる 
N
A  1  1  A  1  2   ldots A  1  N 1 
A  2  1  A  2  2   ldots A  2  N 1 
 
A  N  1  A  N  2   ldots A  N  N 1 


出力条件をすべて満たすように全試合の日程を決めることが可能なら必要な最小の日数を 不可能なら  1 を出力せよ 

入力例 13
2 3
1 3
1 2


出力例 13

3 日間で次のように試合を行えばすべての条件を満たせます 

1 日目  選手 1 対 選手 2
2 日目  選手 1 対 選手 3
3 日目  選手 2 対 選手 3

これが必要な最小日数です 

入力例 24
2 3 4
1 3 4
4 1 2
3 1 2


出力例 24

4 日間で次のように試合を行えばすべての条件を満たせます 

1 日目  選手 1 対 選手 2 選手 3 対 選手 4
2 日目  選手 1 対 選手 3
3 日目  選手 1 対 選手 4 選手 2 対 選手 3
4 日目  選手 2 対 選手 4

これが必要な最小日数です 

入力例 33
2 3
3 1
1 2


出力例 3 1

どのような日程で試合を行っても何らかの条件に違反します 
Problem StatementN players will participate in a tennis tournament  We will call them Player 1  Player 2   ldots  Player N 
The tournament is round robin format  and there will be N N 1  2 matches in total 
Is it possible to schedule these matches so that all of the following conditions are satisfied  If the answer is yes  also find the minimum number of days required 

Each player plays at most one matches in a day 
Each player i  1  leq i  leq N  plays one match against Player A  i  1   A  i  2    ldots  A  i  N 1  in this order 


Constraints
3  leq N  leq 1000
1  leq A  i  j   leq N
A  i  j   neq i
A  i  1   A  i  2    ldots  A  i  N 1  are all different 


InputInput is given from Standard Input in the following format 
N
A  1  1  A  1  2   ldots A  1  N 1 
A  2  1  A  2  2   ldots A  2  N 1 
 
A  N  1  A  N  2   ldots A  N  N 1 


OutputIf it is possible to schedule all the matches so that all of the conditions are satisfied  print the minimum number of days required  if it is impossible  print  1 

Sample Input 13
2 3
1 3
1 2


Sample Output 13

All the conditions can be satisfied if the matches are scheduled for three days as follows 

Day 1  Player 1 vs Player 2
Day 2  Player 1 vs Player 3
Day 3  Player 2 vs Player 3

This is the minimum number of days required 

Sample Input 24
2 3 4
1 3 4
4 1 2
3 1 2


Sample Output 24

All the conditions can be satisfied if the matches are scheduled for four days as follows 

Day 1  Player 1 vs Player 2  Player 3 vs Player 4
Day 2  Player 1 vs Player 3
Day 3  Player 1 vs Player 4  Player 2 vs Player 3
Day 4  Player 2 vs Player 4

This is the minimum number of days required 

Sample Input 33
2 3
3 1
1 2


Sample Output 3 1

Any scheduling of the matches violates some condition"
Engines,https://atcoder.jp/contests/abc139/tasks/abc139_f,"問題文
E869120 君は最初 2 次元平面上の原点  0  0  に立っています   
彼は N 個のエンジンを持っています エンジンの使い方と機能は以下のようになります 

i 個目のエンジンを使うと E869120 君のいる場所の X 座標が x i Y 座標が y i 変化する つまり E869120 君が座標  X  Y  にいるときに i 個目のエンジンを使うと 座標  X   x i  Y   y i  に移動する 
エンジンはどのような順番で使ってもよいが 各エンジンは 1 回までしか使えない ただし 使わないエンジンがあってもよい 

彼は 原点から最も遠い場所に行きたいです 
最後に到達する地点の座標を  X  Y  として 原点からの距離  sqrt X 2   Y 2  の最大値を求めてください   

制約

1  leq N  leq 100
 1   000   000  leq x i  leq 1   000   000
 1   000   000  leq y i  leq 1   000   000
入力はすべて整数


入力
入力は以下の形式で標準入力から与えられる   
N
x 1 y 1
x 2 y 2
    
x N y N


出力
最後に到達する地点の 原点からの距離の最大値を実数値として出力せよ 
ただし 実際の答えとの相対誤差または絶対誤差が 10   10  以内であれば正解とみなす   

入力例 13
0 10
5  5
 5  5


出力例 110 000000000000000000000000000000000000000000000000

うまくエンジンを使うと 最後に到達する地点の 原点からの距離を 10 にすることができます 
これには次の 3 通りの方法があります   

エンジン 1 を使って  0  10  に移動する
エンジン 2 を使って  5   5  に移動し その後エンジン 3 を使って  0   10  に移動する
エンジン 3 を使って   5   5  に移動し その後エンジン 2 を使って  0   10  に移動する

距離を 10 より大きくする方法はないので 最大値は 10 となります 

入力例 25
1 1
1 0
0 1
 1 0
0  1


出力例 22 828427124746190097603377448419396157139343750753

最後に到達する地点の 原点からの距離の最大値は 2  sqrt 2    2 82842    となります 
これを達成する方法として 次のようなものが挙げられます   

エンジン 1 を使って  1  1  に移動し その後エンジン 2 を使って  2  1  に移動し 最後にエンジン 3 を使って  2  2  に移動する


入力例 35
1 1
2 2
3 3
4 4
5 5


出力例 321 213203435596425732025330863145471178545078130654

エンジン 1  rightarrow 2  rightarrow 3  rightarrow 4  rightarrow 5 の順で全部使うと 最終的に  15  15  にたどり着き 原点からの距離は 15  sqrt 2    21 2132    となります 

入力例 43
0 0
0 1
1 0


出力例 41 414213562373095048801688724209698078569671875376

 x i  y i     0  0  である 何の意味も持たないエンジンがある可能性もあります   

入力例 51
90447 91000


出力例 5128303 000000000000000000000000000000000000000000000000

1 個しかエンジンがない場合もあることにご注意ください   

入力例 62
96000  72000
 72000 54000


出力例 6120000 000000000000000000000000000000000000000000000000

2 個しかエンジンがない場合もあります   

入力例 710
1 2
3 4
5 6
7 8
9 10
11 12
13 14
15 16
17 18
19 20


出力例 7148 660687473185055226120082139313966514489855137208

Problem Statement
E869120 is initially standing at the origin  0  0  in a two dimensional plane 
He has N engines  which can be used as follows 

When E869120 uses the i th engine  his X  and Y coordinate change by x i and y i  respectively  In other words  if E869120 uses the i th engine from coordinates  X  Y   he will move to the coordinates  X   x i  Y   y i  
E869120 can use these engines in any order  but each engine can be used at most once  He may also choose not to use some of the engines 

He wants to go as far as possible from the origin 
Let  X  Y  be his final coordinates  Find the maximum possible value of  sqrt X 2   Y 2   the distance from the origin 

Constraints

1  leq N  leq 100
 1   000   000  leq x i  leq 1   000   000
 1   000   000  leq y i  leq 1   000   000
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N
x 1 y 1
x 2 y 2
    
x N y N


Output
Print the maximum possible final distance from the origin  as a real value 
Your output is considered correct when the relative or absolute error from the true answer is at most 10   10  

Sample Input 13
0 10
5  5
 5  5


Sample Output 110 000000000000000000000000000000000000000000000000

The final distance from the origin can be 10 if we use the engines in one of the following three ways 

Use Engine 1 to move to  0  10  
Use Engine 2 to move to  5   5   and then use Engine 3 to move to  0   10  
Use Engine 3 to move to   5   5   and then use Engine 2 to move to  0   10  

The distance cannot be greater than 10  so the maximum possible distance is 10 

Sample Input 25
1 1
1 0
0 1
 1 0
0  1


Sample Output 22 828427124746190097603377448419396157139343750753

The maximum possible final distance is 2  sqrt 2    2 82842    
One of the ways to achieve it is 

Use Engine 1 to move to  1  1   and then use Engine 2 to move to  2  1   and finally use Engine 3 to move to  2  2  


Sample Input 35
1 1
2 2
3 3
4 4
5 5


Sample Output 321 213203435596425732025330863145471178545078130654

If we use all the engines in the order 1  rightarrow 2  rightarrow 3  rightarrow 4  rightarrow 5  we will end up at  15  15   with the distance 15  sqrt 2    21 2132    from the origin 

Sample Input 43
0 0
0 1
1 0


Sample Output 41 414213562373095048801688724209698078569671875376

There can be useless engines with  x i  y i     0  0  

Sample Input 51
90447 91000


Sample Output 5128303 000000000000000000000000000000000000000000000000

Note that there can be only one engine 

Sample Input 62
96000  72000
 72000 54000


Sample Output 6120000 000000000000000000000000000000000000000000000000

There can be only two engines  too 

Sample Input 710
1 2
3 4
5 6
7 8
9 10
11 12
13 14
15 16
17 18
19 20


Sample Output 7148 660687473185055226120082139313966514489855137208"
Password,https://atcoder.jp/contests/abc140/tasks/abc140_a,"問題文高橋君は 3 桁のパスワードを設定しようとしています 
使える文字が 1 以上 N 以下の数字のみであるとき 設定できるパスワードが全部で何種類であるかを答えてください 

制約
1   N   9
N は整数である 


入力入力は以下の形式で標準入力から与えられる 
N


出力設定できるパスワードが何種類であるかを出力せよ 

入力例 12


出力例 18

設定出来るパスワードは 111  112  121  122  211  212  221  222 の 8 種類です 

入力例 21


出力例 21

使える文字が 1 種類しか無い場合 パスワードは 1 種類しか設定出来ません 
Problem StatementTakahashi is going to set a 3 character password 
How many possible passwords are there if each of its characters must be a digit between 1 and N  inclusive  

Constraints
1  leq N  leq 9
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputPrint the number of possible passwords 

Sample Input 12


Sample Output 18

There are eight possible passwords  111  112  121  122  211  212  221  and 222 

Sample Input 21


Sample Output 21

There is only one possible password if you can only use one kind of character"
Buffet,https://atcoder.jp/contests/abc140/tasks/abc140_b,"問題文高橋くんは N 種類の料理が食べ放題のビュッフェに行き 全種類の料理  料理 1  料理 2   ldots  料理 N  を 1 度ずつ食べました 
高橋くんが i  1  leq i  leq N  番目に食べた料理は料理 A i でした 
高橋くんは 料理 i  1  leq i  leq N  を食べると満足度 B i を得ます 
また 料理 i  1  leq i  leq N   1  を食べた直後に料理 i 1 を食べると満足度 C i を追加で得ます 
高橋くんが得た満足度の合計を求めてください 

制約
入力は全て整数である 
2  leq N  leq 20
1  leq A i  leq N
A 1  A 2       A N は全て異なる 
1  leq B i  leq 50
1  leq C i  leq 50


入力入力は以下の形式で標準入力から与えられる 
N
A 1 A 2     A N
B 1 B 2     B N
C 1 C 2     C  N 1 


出力高橋くんが得た満足度の合計を整数で出力せよ 

入力例 13
3 1 2
2 5 4
3 6


出力例 114

以下のように高橋くんは合計 14 の満足度を得ました 

高橋くんはまず料理 3 を食べ 満足度 4 を得ました 
高橋くんは次に料理 1 を食べ 満足度 2 を得ました 
高橋くんは最後に料理 2 を食べ 満足度 5   3   8 を得ました 


入力例 24
2 3 4 1
13 5 8 24
45 9 15


出力例 274


入力例 32
1 2
50 50
50


出力例 3150

Problem StatementTakahashi went to an all you can eat buffet with N kinds of dishes and ate all of them  Dish 1  Dish 2   ldots  Dish N  once 
The i th dish  1  leq i  leq N  he ate was Dish A i 
When he eats Dish i  1  leq i  leq N   he gains B i satisfaction points 
Additionally  when he eats Dish i 1 just after eating Dish i  1  leq i  leq N   1   he gains C i more satisfaction points 
Find the sum of the satisfaction points he gained 

Constraints
All values in input are integers 
2  leq N  leq 20
1  leq A i  leq N
A 1  A 2       A N are all different 
1  leq B i  leq 50
1  leq C i  leq 50


InputInput is given from Standard Input in the following format 
N
A 1 A 2     A N
B 1 B 2     B N
C 1 C 2     C  N 1 


OutputPrint the sum of the satisfaction points Takahashi gained  as an integer 

Sample Input 13
3 1 2
2 5 4
3 6


Sample Output 114

Takahashi gained 14 satisfaction points in total  as follows 

First  he ate Dish 3 and gained 4 satisfaction points 
Next  he ate Dish 1 and gained 2 satisfaction points 
Lastly  he ate Dish 2 and gained 5   3   8 satisfaction points 


Sample Input 24
2 3 4 1
13 5 8 24
45 9 15


Sample Output 274


Sample Input 32
1 2
50 50
50


Sample Output 3150"
Maximal Value,https://atcoder.jp/contests/abc140/tasks/abc140_c,"問題文長さ N の値の分からない整数列 A があります 
長さ N 1 の整数列 B が与えられます このとき 
 B i  geq  max A i  A  i 1   
が成立することが分かっています 
A の要素の総和として考えられる値の最大値を求めてください 

制約
入力は全て整数
2   N   100
0  leq B i  leq 10 5


入力入力は以下の形式で標準入力から与えられる 
N
B 1 B 2     B  N 1 


出力A の要素の総和として考えられる値の最大値を出力せよ 

入力例 13
2 5


出力例 19

A として 例えば A     2   1   5  や  A      1    2    3    A     2   2   5   等が考えられます これらのうち A の要素の総和が最大となるものは  A     2   2   5   です 

入力例 22
3


出力例 26


入力例 36
0 153 10 10 23


出力例 353

Problem StatementThere is an integer sequence A of length N whose values are unknown 
Given is an integer sequence B of length N 1 which is known to satisfy the following 
 B i  geq  max A i  A  i 1   
Find the maximum possible sum of the elements of A 

Constraints
All values in input are integers 
2  leq N  leq 100
0  leq B i  leq 10 5


InputInput is given from Standard Input in the following format 
N
B 1 B 2     B  N 1 


OutputPrint the maximum possible sum of the elements of A 

Sample Input 13
2 5


Sample Output 19

A can be  for example    2   1   5       1    2    3    or   2   2   5    Among those candidates  A     2   2   5   has the maximum possible sum 

Sample Input 22
3


Sample Output 26


Sample Input 36
0 153 10 10 23


Sample Output 353"
Face Produces Unhappiness,https://atcoder.jp/contests/abc140/tasks/abc140_d,"問題文東西一列に N 人の人が並んでいます 
各人の状態を表す長さ N の文字列 S が与えられます 
西から i 番目の人は 文字列 S の i 文字目が L ならば西を R ならば東を向いています 
どの人も 目の前の人が自分と同じ方向を向いていれば幸福です 
ただし 目の前に人が居ない場合 幸福ではありません 
あなたは 以下の操作を 0 回以上 K 回以下の好きな回数だけ行います 
操作  1  leq l  leq r  leq N を満たす整数 l  r を選ぶ 西から l  l 1       r 番目の人の列を 180 度回転する すなわち i   0  1       r l について 西から l   i 番目の人は操作後には西から r   i 番目に移動し 元々西を向いていれば東を 東を向いていれば西を向く 
幸福である人は最大で何人にできるでしょうか 

制約
N は 1  leq N  leq 10 5 を満たす整数である 
K は 1  leq K  leq 10 5 を満たす整数である 
 S    N
S の各文字は L または R である 


入力入力は以下の形式で標準入力から与えられる 
N K
S


出力K 回以下の操作後に幸福である人数の最大値を出力せよ 

入力例 16 1
LRLRRL


出力例 13

 l  r     2  5  と選べば LLLRLL となり 西から 2  3  6 番目の人が幸福です 

入力例 213 3
LRRLRLRRLRLLR


出力例 29


入力例 310 1
LLLLLRRRRR


出力例 39


入力例 49 2
RRRLRLRLL


出力例 47

Problem StatementThere are N people standing in a queue from west to east 
Given is a string S of length N representing the directions of the people 
The i th person from the west is facing west if the i th character of S is L  and east if that character of S is R 
A person is happy if the person in front of him her is facing the same direction 
If no person is standing in front of a person  however  he she is not happy 
You can perform the following operation any number of times between 0 and K  inclusive  
Operation  Choose integers l and r such that 1  leq l  leq r  leq N  and rotate by 180 degrees the part of the queue  the l th   l 1  th       r th persons  That is  for each i   0  1       r l  the  l   i  th person from the west will stand the  r   i  th from the west after the operation  facing east if he she is facing west now  and vice versa 
What is the maximum possible number of happy people you can have 

Constraints
N is an integer satisfying 1  leq N  leq 10 5 
K is an integer satisfying 1  leq K  leq 10 5 
 S    N
Each character of S is L or R 


InputInput is given from Standard Input in the following format 
N K
S


OutputPrint the maximum possible number of happy people after at most K operations 

Sample Input 16 1
LRLRRL


Sample Output 13

If we choose  l  r     2  5   we have LLLRLL  where the 2 nd  3 rd  and 6 th persons from the west are happy 

Sample Input 213 3
LRRLRLRRLRLLR


Sample Output 29


Sample Input 310 1
LLLLLRRRRR


Sample Output 39


Sample Input 49 2
RRRLRLRLL


Sample Output 47"
Second Sum,https://atcoder.jp/contests/abc140/tasks/abc140_e,"問題文
  1  2   ldots  N   の順列 P が与えられます 
ペア  L  R   1  le L  lt R  le N について P L  P  L 1    ldots  P R の中で 2 番目に大きいものを X  L  R  とします 
 displaystyle  sum  L 1   N 1   sum  R L 1   N  X  L R  を求めてください 

制約

 2  le N  le 10 5 
 1  le P i  le N 
 P i  neq P j   i  neq j 
入力はすべて整数


入力
入力は以下の形式で標準入力から与えられる 
N
P 1 P 2  ldots P N


出力
 displaystyle  sum  L 1   N 1   sum  R L 1   N  X  L R  を出力せよ 

入力例 13
2 3 1


出力例 15

X  1  2    2  X  1  3    2  X  2  3    1 より 総和は 2   2   1   5 となります 

入力例 25
1 2 3 4 5


出力例 230


入力例 38
8 2 7 3 4 5 6 1


出力例 3136

Problem Statement
Given is a permutation P of   1  2   ldots  N   
For a pair  L  R   1  le L  lt R  le N   let X  L  R  be the second largest value among P L  P  L 1    ldots  P R 
Find  displaystyle  sum  L 1   N 1   sum  R L 1   N  X  L R  

Constraints

 2  le N  le 10 5 
 1  le P i  le N 
 P i  neq P j   i  neq j 
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N
P 1 P 2  ldots P N


Output
Print  displaystyle  sum  L 1   N 1   sum  R L 1   N  X  L R  

Sample Input 13
2 3 1


Sample Output 15

X  1  2    2  X  1  3    2  and X  2  3    1  so the sum is 2   2   1   5 

Sample Input 25
1 2 3 4 5


Sample Output 230


Sample Input 38
8 2 7 3 4 5 6 1


Sample Output 3136"
Many Slimes,https://atcoder.jp/contests/abc140/tasks/abc140_f,"問題文1 匹のスライムがいます 
あなたはこのスライムの 体力 を自由な整数の値に設定できます 
スライムは 1 秒ごとに 自分より真に小さい整数の体力をもつスライムを 1 匹生成することで増殖していきます 生成されるスライムの体力は スライムごとに毎回自由に決めることができます 最初の増殖はこれから 1 秒後に起こります 
最初のスライム および生成されるスライムの体力を適切に定めることで これから N 秒後に存在する 2 N 匹のスライムの体力の集合を集合 S に一致させることができるか判定してください 
ここで S は 2 N 要素からなる重複を認める整数の集合で その要素は S 1  S 2       S  2 N  です 

制約
入力は全て整数である 
1  leq N  leq 18
1  leq S i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N
S 1 S 2     S  2 N 


出力最初のスライム および生成されるスライムの体力を適切に定めることで N 秒後に存在する 2 N 匹のスライムの体力の集合を集合 S に一致させることができるなら Yes を できないなら No を出力せよ 

入力例 12
4 2 3 1


出力例 1Yes

2 秒後に存在するスライムの体力の集合を S に一致させる一例を示します 
まず最初のスライムの体力を 4 に設定します 
最初のスライムに体力が 3 のスライムを生成させることで 1 秒後に存在するスライムの体力を 4  3 とできます 
そして最初のスライムに体力が 2 の 2 匹目のスライムに体力が 1 のスライムを生成させることで 2 秒後に存在するスライムの体力を 4  3  2  1 とできます これは集合として S に一致しています 

入力例 22
1 2 3 1


出力例 2Yes

S は同じ整数を複数含むこともあります 

入力例 31
1 1


出力例 3No


入力例 45
4 3 5 3 1 2 7 8 7 4 6 3 7 2 3 6 2 7 3 2 6 7 3 4 6 7 3 4 2 5 2 3


出力例 4No

Problem StatementWe have one slime 
You can set the health of this slime to any integer value of your choice 
A slime reproduces every second by spawning another slime that has strictly less health  You can freely choose the health of each new slime  The first reproduction of our slime will happen in one second 
Determine if it is possible to set the healths of our first slime and the subsequent slimes spawn so that the multiset of the healths of the 2 N slimes that will exist in N seconds equals a multiset S 
Here S is a multiset containing 2 N  possibly duplicated  integers  S 1  S 2       S  2 N  

Constraints
All values in input are integers 
1  leq N  leq 18
1  leq S i  leq 10 9


InputInput is given from Standard Input in the following format 
N
S 1 S 2     S  2 N 


OutputIf it is possible to set the healths of the first slime and the subsequent slimes spawn so that the multiset of the healths of the 2 N slimes that will exist in N seconds equals S  print Yes  otherwise  print No 

Sample Input 12
4 2 3 1


Sample Output 1Yes

We will show one way to make the multiset of the healths of the slimes that will exist in 2 seconds equal to S 
First  set the health of the first slime to 4 
By letting the first slime spawn a slime whose health is 3  the healths of the slimes that exist in 1 second can be 4  3 
Then  by letting the first slime spawn a slime whose health is 2  and letting the second slime spawn a slime whose health is 1  the healths of the slimes that exist in 2 seconds can be 4  3  2  1  which is equal to S as multisets 

Sample Input 22
1 2 3 1


Sample Output 2Yes

S may contain multiple instances of the same integer 

Sample Input 31
1 1


Sample Output 3No


Sample Input 45
4 3 5 3 1 2 7 8 7 4 6 3 7 2 3 6 2 7 3 2 6 7 3 4 6 7 3 4 2 5 2 3


Sample Output 4No"
Weather Prediction,https://atcoder.jp/contests/abc141/tasks/abc141_a,"問題文
高橋君の住む町の天気は 一日ごとに晴れ Sunny  くもり Cloudy  雨 Rainy  晴れ くもり 雨   と周期的に変化します 
今日の天気を表す文字列 S が与えられるので 明日の天気を予測してください 

制約

S は Sunny  Cloudy  Rainy のいずれかである


入力
入力は以下の形式で標準入力から与えられる 
S


出力
明日の天気を入力と同じ形式で出力せよ 

入力例 1Sunny


出力例 1Cloudy

高橋くんの住む町では 晴れの日の次の日の天気はくもりです 

入力例 2Rainy


出力例 2Sunny

Problem Statement
The weather in Takahashi s town changes day by day  in the following cycle  Sunny  Cloudy  Rainy  Sunny  Cloudy  Rainy     
Given is a string S representing the weather in the town today  Predict the weather tomorrow 

Constraints

S is Sunny  Cloudy  or Rainy 


Input
Input is given from Standard Input in the following format 
S


Output
Print a string representing the expected weather tomorrow  in the same format in which input is given 

Sample Input 1Sunny


Sample Output 1Cloudy

In Takahashi s town  a sunny day is followed by a cloudy day 

Sample Input 2Rainy


Sample Output 2Sunny"
Tap Dance,https://atcoder.jp/contests/abc141/tasks/abc141_b,"問題文
高橋君はタップダンスをすることにしました タップダンスの動きは文字列 S で表され S の各文字は L  R  U  D のいずれかです 各文字は足を置く位置を表しており 1 文字目から順番に踏んでいきます 
S が以下の 2 条件を満たすとき またその時に限り S を 踏みやすい 文字列といいます 

奇数文字目がすべて R  U  D のいずれか 
偶数文字目がすべて L  U  D のいずれか 

S が 踏みやすい 文字列なら Yes を そうでなければ No を出力してください 

制約

S は長さ 1 以上 100 以下の文字列
S の各文字は L  R  U  D のいずれか


入力
入力は以下の形式で標準入力から与えられます 
S


出力
S が 踏みやすい 文字列なら Yes を そうでなければ No を出力してください 

入力例 1RUDLUDR


出力例 1Yes

1  3  5  7 文字目は R  U  D のいずれかです 
2  4  6 文字目は L  U  D のいずれかです 
したがって この S は 踏みやすい 文字列です 

入力例 2DULL


出力例 2No

3 文字目が R  U  D のいずれでもないので この S は 踏みやすい 文字列ではありません 

入力例 3UUUUUUUUUUUUUUU


出力例 3Yes


入力例 4ULURU


出力例 4No


入力例 5RDULULDURURLRDULRLR


出力例 5Yes

Problem Statement
Takahashi will do a tap dance  The dance is described by a string S where each character is L  R  U  or D  These characters indicate the positions on which Takahashi should step  He will follow these instructions one by one in order  starting with the first character 
S is said to be easily playable if and only if it satisfies both of the following conditions 

Every character in an odd position  1 st  3 rd  5 th   ldots  is R  U  or D 
Every character in an even position  2 nd  4 th  6 th   ldots  is L  U  or D 

Your task is to print Yes if S is easily playable  and No otherwise 

Constraints

S is a string of length between 1 and 100  inclusive  
Each character of S is L  R  U  or D 


Input
Input is given from Standard Input in the following format 
S


Output
Print Yes if S is easily playable  and No otherwise 

Sample Input 1RUDLUDR


Sample Output 1Yes

Every character in an odd position  1 st  3 rd  5 th  7 th  is R  U  or D 
Every character in an even position  2 nd  4 th  6 th  is L  U  or D 
Thus  S is easily playable 

Sample Input 2DULL


Sample Output 2No

The 3 rd character is not R  U  nor D  so S is not easily playable 

Sample Input 3UUUUUUUUUUUUUUU


Sample Output 3Yes


Sample Input 4ULURU


Sample Output 4No


Sample Input 5RDULULDURURLRDULRLR


Sample Output 5Yes"
Attack Survival,https://atcoder.jp/contests/abc141/tasks/abc141_c,"問題文
高橋君は早押しクイズの大会を開くことにしました スコアボードの作成を任されたキザハシ君は 次のルールを持つラウンドのポイントを管理するプログラムを書くのに苦戦しています 
このラウンドの参加者は N 人であり 1 から N までの番号がついています ラウンド開始時点では全員が K ポイントを持っています 
誰かが問題に正解すると その人以外の N 1 人のポイントが 1 減ります これ以外によるポイントの変動はありません 
ラウンド終了時にポイントが 0 以下の参加者は敗退し 残りの参加者が勝ち抜けます 
このラウンドでは Q 回の正解が出て i 番目に正解したのは参加者 A i でした 
キザハシ君の代わりに N 人の参加者のそれぞれが勝ち抜けたか敗退したかを求めるプログラムを作成してください 

制約

入力はすべて整数
2  leq N  leq 10 5
1  leq K  leq 10 9
1  leq Q  leq 10 5
1  leq A i  leq N   1  leq i  leq Q 


入力
入力は以下の形式で標準入力から与えられます 
N K Q
A 1
A 2
 
 
 
A Q


出力
N 行出力してください i 行目には 参加者 i が勝ち抜けたなら Yes を 敗退したなら No を出力してください 

入力例 16 3 4
3
1
3
2


出力例 1No
No
Yes
No
No
No

はじめ 各参加者の持つポイントは  3  3  3  3  3  3  です 

参加者 3 が正解し 各参加者のポイントは  2  2  3  2  2  2  になります 
参加者 1 が正解し 各参加者のポイントは  2  1  2  1  1  1  になります 
参加者 3 が正解し 各参加者のポイントは  1  0  2  0  0  0  になります 
参加者 2 が正解し 各参加者のポイントは  0  0  1   1   1   1  になります 

得点が 0 以下になった参加者 1  2  4  5  6 は敗退し 残った参加者 3 が勝ち抜けます 

入力例 26 5 4
3
1
3
2


出力例 2Yes
Yes
Yes
Yes
Yes
Yes


入力例 310 13 15
3
1
4
1
5
9
2
6
5
3
5
8
9
7
9


出力例 3No
No
No
No
Yes
No
No
No
Yes
No

Problem Statement
Takahashi has decided to hold fastest finger fast quiz games  Kizahashi  who is in charge of making the scoreboard  is struggling to write the program that manages the players  scores in a game  which proceeds as follows 
A game is played by N players  numbered 1 to N  At the beginning of a game  each player has K points 
When a player correctly answers a question  each of the other N 1 players receives minus one   1  point  There is no other factor that affects the players  scores 
At the end of a game  the players with 0 points or lower are eliminated  and the remaining players survive 
In the last game  the players gave a total of Q correct answers  the i th of which was given by Player A i 
For Kizahashi  write a program that determines whether each of the N players survived this game 

Constraints

All values in input are integers 
2  leq N  leq 10 5
1  leq K  leq 10 9
1  leq Q  leq 10 5
1  leq A i  leq N   1  leq i  leq Q 


Input
Input is given from Standard Input in the following format 
N K Q
A 1
A 2
 
 
 
A Q


Output
Print N lines  The i th line should contain Yes if Player i survived the game  and No otherwise 

Sample Input 16 3 4
3
1
3
2


Sample Output 1No
No
Yes
No
No
No

In the beginning  the players  scores are  3  3  3  3  3  3  

Player 3 correctly answers a question  The players  scores are now  2  2  3  2  2  2  
Player 1 correctly answers a question  The players  scores are now  2  1  2  1  1  1  
Player 3 correctly answers a question  The players  scores are now  1  0  2  0  0  0  
Player 2 correctly answers a question  The players  scores are now  0  0  1   1   1   1  

Players 1  2  4  5 and 6  who have 0 points or lower  are eliminated  and Player 3 survives this game 

Sample Input 26 5 4
3
1
3
2


Sample Output 2Yes
Yes
Yes
Yes
Yes
Yes


Sample Input 310 13 15
3
1
4
1
5
9
2
6
5
3
5
8
9
7
9


Sample Output 3No
No
No
No
Yes
No
No
No
Yes
No"
Powerful Discount Tickets,https://atcoder.jp/contests/abc141/tasks/abc141_d,"問題文高橋くんは N 個の品物を 1 個ずつ順番に買う予定です 
i 番目に買う品物の値段は A i 円です 
高橋くんは M 枚の割引券を持っています 
品物を買う際に割引券を好きな枚数使うことができます 
X 円の品物を買う際に Y 枚の割引券を使った場合 その品物を  frac X  2 Y  円 小数点以下切り捨て で買うことができます 
最小で何円あれば全ての品物を買うことができるでしょうか 

制約
入力は全て整数である 
1  leq N  M  leq 10 5
1  leq A i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N M
A 1 A 2     A N


出力全ての品物を買うのに必要なお金の最小値を出力せよ 

入力例 13 3
2 13 8


出力例 19

以下のように割引券を使えば 合計 9 円で全ての商品を買うことができます 

1 番目に買う品物には割引券を使わず 2 円で買います 
2 番目に買う品物には 2 枚の割引券を使い 3 円で買います 
3 番目に買う品物には 1 枚の割引券を使い 4 円で買います 


入力例 24 4
1 9 3 5


出力例 26


入力例 31 100000
1000000000


出力例 30

1000000000 円の品物を買う際に 100000 枚の割引券を使うと 0 円で買うことができます 

入力例 410 1
1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000


出力例 49500000000

Problem StatementTakahashi is going to buy N items one by one 
The price of the i th item he buys is A i yen  the currency of Japan  
He has M discount tickets  and he can use any number of them when buying an item 
If Y tickets are used when buying an item priced X yen  he can get the item for  frac X  2 Y   rounded down to the nearest integer  yen 
What is the minimum amount of money required to buy all the items 

Constraints
All values in input are integers 
1  leq N  M  leq 10 5
1  leq A i  leq 10 9


InputInput is given from Standard Input in the following format 
N M
A 1 A 2     A N


OutputPrint the minimum amount of money required to buy all the items 

Sample Input 13 3
2 13 8


Sample Output 19

We can buy all the items for 9 yen  as follows 

Buy the 1 st item for 2 yen without tickets 
Buy the 2 nd item for 3 yen with 2 tickets 
Buy the 3 rd item for 4 yen with 1 ticket 


Sample Input 24 4
1 9 3 5


Sample Output 26


Sample Input 31 100000
1000000000


Sample Output 30

We can buy the item priced 1000000000 yen for 0 yen with 100000 tickets 

Sample Input 410 1
1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000


Sample Output 49500000000"
Who Says a Pun?,https://atcoder.jp/contests/abc141/tasks/abc141_e,"問題文長さ N の文字列 S が与えられます 
非空文字列であって S の連続する部分文字列として重ならずに 2 回以上現れるもののうち 最長のものの長さを答えてください 
より厳密には 


l 1   len  leq l 2


S l 1 i    S l 2 i   i   0  1       len   1 


を満たす整数 l 1   l 2   1  leq l 1  l 2  leq N   len   1   が存在するような正整数 len の最大値を求めてください そのような len が存在しないときは 0 を出力してください 

制約
2   N   5  times 10 3
 S    N
S は英小文字から成る


入力入力は以下の形式で標準入力から与えられる 
N
S


出力非空文字列であって S の連続する部分文字列として重ならずに 2 回以上現れるもののうち 最長のものの長さを出力せよ そのような非空文字列が存在しないときは 0 を出力せよ 

入力例 15
ababa


出力例 12

条件を満たす文字列として a  b  ab  ba が考えられます これらの長さの最大値 2 が答えです 
aba は S の連続する部分文字列として 2 度現れますが l 1   len  leq l 2 を満たすような l 1   l 2 が取れないことに注意してください 

入力例 22
xy


出力例 20

条件を満たす非空文字列は存在しません 

入力例 313
strangeorange


出力例 35

Problem StatementGiven is a string S of length N 
Find the maximum length of a non empty string that occurs twice or more in S as contiguous substrings without overlapping 
More formally  find the maximum positive integer len such that there exist integers l 1 and l 2   1  leq l 1  l 2  leq N   len   1   that satisfy the following 


l 1   len  leq l 2


S l 1 i    S l 2 i   i   0  1       len   1 


If there is no such integer len  print 0 

Constraints
2  leq N  leq 5  times 10 3
 S    N
S consists of lowercase English letters 


InputInput is given from Standard Input in the following format 
N
S


OutputPrint the maximum length of a non empty string that occurs twice or more in S as contiguous substrings without overlapping  If there is no such non empty string  print 0 instead 

Sample Input 15
ababa


Sample Output 12

The strings satisfying the conditions are  a  b  ab  and ba  The maximum length among them is 2  which is the answer 
Note that aba occurs twice in S as contiguous substrings  but there is no pair of integers l 1 and l 2 mentioned in the statement such that l 1   len  leq l 2 

Sample Input 22
xy


Sample Output 20

No non empty string satisfies the conditions 

Sample Input 313
strangeorange


Sample Output 35"
Xor Sum 3,https://atcoder.jp/contests/abc141/tasks/abc141_f,"問題文
N 個の非負整数 A 1  A 2       A N があります 
このうち 1 個以上 N 1 個以下を赤色で 残りを青色で塗り分けることを考えます 
塗り分けの 美しさ を  赤く塗った整数の  text XOR  と 青く塗った整数の  text XOR  の和とします 
塗り分けの美しさの最大値を求めてください 

 text XOR  とは

n 個の非負整数 x 1 x 2   ldots  x n の  text XOR  x 1  oplus x 2  oplus  ldots  oplus x n は以下のように定義されます 

 x 1  oplus x 2  oplus  ldots  oplus x n を二進表記した際の 2 k k  geq 0  の位の数は x 1 x 2   ldots  x n のうち 二進表記した際の 2 k k  geq 0  の位の数が 1 となるものの個数が奇数ならば 1 そうでなければ 0 となる 

例えば 3  oplus 5   6 となります 



制約

入力はすべて整数
2  leq N  leq 10 5
0  leq A i   2  60    1  leq i  leq N 


入力
入力は以下の形式で標準入力から与えられます 
N
A 1 A 2     A N


出力
塗り分けの美しさの最大値を出力してください 

入力例 13
3 6 5


出力例 112

 3  6  5  をそれぞれ  青  赤  青  で塗り分けたとき 美しさは  6     3  oplus 5    12 になります 
12 よりも高い美しさの塗り分けは存在しないので 答えは 12 です 

入力例 24
23 36 66 65


出力例 2188


入力例 320
1008288677408720767 539403903321871999 1044301017184589821 215886900497862655 504277496111605629 972104334925272829 792625803473366909 972333547668684797 467386965442856573 755861732751878143 1151846447448561405 467257771752201853 683930041385277311 432010719984459389 319104378117934975 611451291444233983 647509226592964607 251832107792119421 827811265410084479 864032478037725181


出力例 32012721721873704572

A i や答えは 32 ビット整数型に収まらないことがあります 
Problem Statement
We have N non negative integers  A 1  A 2       A N 
Consider painting at least one and at most N 1 integers among them in red  and painting the rest in blue 
Let the beauty of the painting be the  text XOR  of the integers painted in red  plus the  text XOR  of the integers painted in blue 
Find the maximum possible beauty of the painting 

What is  text XOR  

The bitwise  text XOR  x 1  oplus x 2  oplus  ldots  oplus x n of n non negative integers x 1  x 2   ldots  x n is defined as follows 

 When x 1  oplus x 2  oplus  ldots  oplus x n is written in base two  the digit in the 2 k s place  k  geq 0  is 1 if the number of integers among x 1  x 2   ldots  x n whose binary representations have 1 in the 2 k s place is odd  and 0 if that count is even  

For example  3  oplus 5   6 



Constraints

All values in input are integers 
2  leq N  leq 10 5
0  leq A i   2  60    1  leq i  leq N 


Input
Input is given from Standard Input in the following format 
N
A 1 A 2     A N


Output
Print the maximum possible beauty of the painting 

Sample Input 13
3 6 5


Sample Output 112

If we paint 3  6  5 in blue  red  blue  respectively  the beauty will be  6     3  oplus 5    12 
There is no way to paint the integers resulting in greater beauty than 12  so the answer is 12 

Sample Input 24
23 36 66 65


Sample Output 2188


Sample Input 320
1008288677408720767 539403903321871999 1044301017184589821 215886900497862655 504277496111605629 972104334925272829 792625803473366909 972333547668684797 467386965442856573 755861732751878143 1151846447448561405 467257771752201853 683930041385277311 432010719984459389 319104378117934975 611451291444233983 647509226592964607 251832107792119421 827811265410084479 864032478037725181


Sample Output 32012721721873704572

A i and the answer may not fit into a 32 bit integer type"
Odds of Oddness,https://atcoder.jp/contests/abc142/tasks/abc142_a,"問題文整数 N が与えられます 
高橋君は N 以下の正整数の中から等確率で 1 つを選んで a とします 
このとき a が奇数である確率を答えてください 

制約
1   N   100


入力入力は以下の形式で標準入力から与えられる 
N


出力a が奇数である確率を出力せよ 
出力は ジャッジの出力との絶対誤差または相対誤差が 10   6  以下のとき正解と判定される 

入力例 14


出力例 10 5000000000

4 以下の正整数は 1   2   3   4 の 4 つであり そのうち奇数は 1   3 の 2 つです 以上より 答えは  frac 2  4    0 5 です 

入力例 25


出力例 20 6000000000


入力例 31


出力例 31 0000000000

Problem StatementGiven is an integer N 
Takahashi chooses an integer a from the positive integers not greater than N with equal probability 
Find the probability that a is odd 

Constraints
1  leq N  leq 100


InputInput is given from Standard Input in the following format 
N


OutputPrint the probability that a is odd 
Your output will be considered correct when its absolute or relative error from the judge s output is at most 10   6  

Sample Input 14


Sample Output 10 5000000000

There are four positive integers not greater than 4  1  2  3  and 4  Among them  we have two odd numbers  1 and 3  Thus  the answer is  frac 2  4    0 5 

Sample Input 25


Sample Output 20 6000000000


Sample Input 31


Sample Output 31 0000000000"
Roller Coaster,https://atcoder.jp/contests/abc142/tasks/abc142_b,"問題文
高橋君の仲間たちは N 人で遊園地に遊びにいきました 
遊園地の一番人気のジェットコースターに乗るためには 身長が K cm以上必要です 
高橋君の i 番目の仲間の身長は h i cm です 
高橋君の仲間たちのうち 一番人気のジェットコースターに乗ることができる人の数を求めてください 

制約

 1  le N  le 10 5 
 1  le K  le 500 
 1  le h i  le 500
入力はすべて整数


入力
入力は以下の形式で標準入力から与えられる 
N K
h 1 h 2  ldots h N


出力
高橋君の仲間たちのうち 一番人気のジェットコースターに乗ることのできる人の数を出力してください 

入力例 14 150
150 140 100 200


出力例 12

一番人気のジェットコースターに乗ることができるのは 1 番目の仲間と 4 番目の仲間の 2 人です 

入力例 21 500
499


出力例 20


入力例 35 1
100 200 300 400 500


出力例 35

Problem Statement
N friends of Takahashi has come to a theme park 
To ride the most popular roller coaster in the park  you must be at least K centimeters tall 
The i th friend is h i centimeters tall 
How many of the Takahashi s friends can ride the roller coaster 

Constraints

 1  le N  le 10 5 
 1  le K  le 500 
 1  le h i  le 500
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N K
h 1 h 2  ldots h N


Output
Print the number of people among the Takahashi s friends who can ride the roller coaster 

Sample Input 14 150
150 140 100 200


Sample Output 12

Two of them can ride the roller coaster  the first and fourth friends 

Sample Input 21 500
499


Sample Output 20


Sample Input 35 1
100 200 300 400 500


Sample Output 35"
Go to School,https://atcoder.jp/contests/abc142/tasks/abc142_c,"問題文
高橋くんは N 人の生徒たちのいるクラスの担当教師です 
生徒たちには 1 から N までの出席番号が重複なく割り当てられています 
今日は全ての生徒たちが相異なるタイミングで登校しました 
高橋くんは 出席番号 i の生徒が登校した時点で 教室に A i 人の生徒たちがいたことを記録しています 出席番号 i の生徒を含む  
記録された情報を元に 生徒たちの登校した順番を復元してください 

制約

 1  le N  le 10 5 
 1  le A i  le N 
 A i  neq A j   i  neq j 
入力はすべて整数


入力
入力は以下の形式で標準入力から与えられる 
N
A 1 A 2  ldots A N


出力
生徒たちの出席番号を登校した順に出力せよ 

入力例 13
2 3 1


出力例 13 1 2

最初に出席番号 3 の生徒が登校しました 
続いて出席番号 1 の生徒が登校しました 
最後に出席番号 2 の生徒が登校しました 

入力例 25
1 2 3 4 5


出力例 21 2 3 4 5


入力例 38
8 2 7 3 4 5 6 1


出力例 38 2 4 5 6 7 3 1

Problem Statement
Takahashi is a teacher responsible for a class of N students 
The students are given distinct student numbers from 1 to N 
Today  all the students entered the classroom at different times 
According to Takahashi s record  there were A i students in the classroom when student number i entered the classroom  including student number i  
From these records  reconstruct the order in which the students entered the classroom 

Constraints

 1  le N  le 10 5 
 1  le A i  le N 
 A i  neq A j   i  neq j 
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N
A 1 A 2  ldots A N


Output
Print the student numbers of the students in the order the students entered the classroom 

Sample Input 13
2 3 1


Sample Output 13 1 2

First  student number 3 entered the classroom 
Then  student number 1 entered the classroom 
Finally  student number 2 entered the classroom 

Sample Input 25
1 2 3 4 5


Sample Output 21 2 3 4 5


Sample Input 38
8 2 7 3 4 5 6 1


Sample Output 38 2 4 5 6 7 3 1"
Disjoint Set of Common Divisors,https://atcoder.jp/contests/abc142/tasks/abc142_d,"問題文正整数 A  B が与えられます 
A と B の正の公約数の中からいくつかを選びます 
ただし 選んだ整数の中のどの異なる 2 つの整数についても互いに素でなければなりません 
最大でいくつ選べるでしょうか 
公約数とは
整数 d が整数 x と整数 y の公約数であるとは d が x と y をともに割り切ることをいいます 

互いに素とは
整数 x  y が互いに素であるとは x  y の正の公約数が 1 のみであることをいいます 

割り切るとは
整数 x が整数 y を割り切るとは y    alpha x なる整数  alpha が存在することをいいます 


制約
入力は全て整数である 
1  leq A  B  leq 10  12 


入力入力は以下の形式で標準入力から与えられる 
A B


出力条件を満たすように選べる整数の個数の最大値を出力せよ 

入力例 112 18


出力例 13

12 と 18 の正の公約数は 1  2  3  6 です 
1 と 2 2 と 3 3 と 1 は互いに素なので 1  2  3 を選ぶことができ このときが最大です 

入力例 2420 660


出力例 24


入力例 31 2019


出力例 31

1 と 2019 の正の公約数は 1 しかありません 
Problem StatementGiven are positive integers A and B 
Let us choose some number of positive common divisors of A and B 
Here  any two of the chosen divisors must be coprime 
At most  how many divisors can we choose 
Definition of common divisor
An integer d is said to be a common divisor of integers x and y when d divides both x and y 

Definition of being coprime
Integers x and y are said to be coprime when x and y have no positive common divisors other than 1 

Definition of dividing
An integer x is said to divide another integer y when there exists an integer  alpha such that y    alpha x 


Constraints
All values in input are integers 
1  leq A  B  leq 10  12 


InputInput is given from Standard Input in the following format 
A B


OutputPrint the maximum number of divisors that can be chosen to satisfy the condition 

Sample Input 112 18


Sample Output 13

12 and 18 have the following positive common divisors  1  2  3  and 6 
1 and 2 are coprime  2 and 3 are coprime  and 3 and 1 are coprime  so we can choose 1  2  and 3  which achieve the maximum result 

Sample Input 2420 660


Sample Output 24


Sample Input 31 2019


Sample Output 31

1 and 2019 have no positive common divisors other than 1"
Get Everything,https://atcoder.jp/contests/abc142/tasks/abc142_e,"問題文鍵のかかった宝箱が N 個あり 1 から N までの番号がつけられています 
店で M 個の鍵が売られています i 個目の鍵は a i 円で販売されており b i 種類の宝箱 c  i1     c  i2         c  i b i   を開けることが出来ます 購入した鍵は何度でも使うことが出来ます 
全ての宝箱を開ける為に必要な費用の最小値を答えてください 全ての宝箱を開けることが不可能である場合は  1 を出力してください 

制約
入力は全て整数
1   N   12
1   M   10 3
1  leq a i  leq 10 5
1  leq b i  leq N
1  leq c  i1    c  i2          c  i b i    leq N


入力入力は以下の形式で標準入力から与えられる 
N M
a 1 b 1
c  11  c  12      c  1 b 1  
 
a M b M
c  M1  c  M2      c  M b M  


出力全ての宝箱を開ける為に必要な費用の最小値を出力せよ 
全ての宝箱を開けることが不可能である場合は  1 を出力せよ 

入力例 12 3
10 1
1
15 1
2
30 2
1 2


出力例 125

鍵 1 と鍵 2 を購入すると 全ての宝箱を開けることが出来ます このときの費用は 25 円であり これが最小値です 

入力例 212 1
100000 1
2


出力例 2 1

全ての宝箱を開けることは出来ません 

入力例 34 6
67786 3
1 3 4
3497 1
2
44908 3
2 3 4
2156 3
2 3 4
26230 1
2
86918 1
3


出力例 369942

Problem StatementWe have N locked treasure boxes  numbered 1 to N 
A shop sells M keys  The i th key is sold for a i yen  the currency of Japan   and it can unlock b i of the boxes  Box c  i1   c  i2        c  i b i    Each key purchased can be used any number of times 
Find the minimum cost required to unlock all the treasure boxes  If it is impossible to unlock all of them  print  1 

Constraints
All values in input are integers 
1  leq N  leq 12
1  leq M  leq 10 3
1  leq a i  leq 10 5
1  leq b i  leq N
1  leq c  i1    c  i2          c  i b i    leq N


InputInput is given from Standard Input in the following format 
N M
a 1 b 1
c  11  c  12      c  1 b 1  
 
a M b M
c  M1  c  M2      c  M b M  


OutputPrint the minimum cost required to unlock all the treasure boxes 
If it is impossible to unlock all of them  print  1 

Sample Input 12 3
10 1
1
15 1
2
30 2
1 2


Sample Output 125

We can unlock all the boxes by purchasing the first and second keys  at the cost of 25 yen  which is the minimum cost required 

Sample Input 212 1
100000 1
2


Sample Output 2 1

We cannot unlock all the boxes 

Sample Input 34 6
67786 3
1 3 4
3497 1
2
44908 3
2 3 4
2156 3
2 3 4
26230 1
2
86918 1
3


Sample Output 369942"
Pure,https://atcoder.jp/contests/abc142/tasks/abc142_f,"問題文N 頂点 M 辺の有向グラフ G が与えられます 
このグラフの頂点には 1 から N までの番号が付けられており i 番目の辺は頂点 A i から頂点 B i に向けて張られています 
このグラフは自己辺や多重辺を持たないことが保証されています 
すべての頂点の入次数が 1 出次数が 1 であるような G の誘導部分グラフ  注記を参照  が存在するか判定し 
存在するならその一例を示してください 
ただし 空グラフは含めないものとします 

注記有向グラフ G    V  E  に対し 次のような条件を満たす有向グラフ G     V   E   を G の誘導部分グラフと呼びます 

V  は V の  空でない  部分集合である 
E  は E の辺であって両端点がともに V  に含まれるものすべてを含む集合である 


制約
1  leq N  leq 1000
0  leq M  leq 2000
1  leq A i B i  leq N
A i  neq B i
組  A i  B i  はすべて異なる 
入力はすべて整数である 


入力入力は以下の形式で標準入力から与えられます 
N M
A 1 B 1
A 2 B 2
 
A M B M


出力条件を満たす G の誘導部分グラフが存在しないとき  1 と出力してください 
そうでないとき 以下のフォーマットで条件を満たす G の誘導部分グラフの一例を出力してください 
K
v 1
v 2
 
v K

これは 頂点数が K 頂点集合が   v 1  v 2   ldots  v K   であるような G の誘導部分グラフを表します  v 1  v 2   ldots  v K の順序は問いません  
条件を満たす G の誘導部分グラフが複数存在するときは そのうちのどれを出力しても構いません 

入力例 14 5
1 2
2 3
2 4
4 1
4 3


出力例 13
1
2
4

頂点集合が   1  2  4   であるような G の誘導部分グラフの辺集合は    1  2    2  4    4  1    であり すべての頂点の入次数が 1 出次数が 1 となります 

入力例 24 5
1 2
2 3
2 4
1 4
4 3


出力例 2 1

条件を満たす G の誘導部分グラフは存在しません 

入力例 36 9
1 2
2 3
3 4
4 5
5 6
5 1
5 2
6 1
6 2


出力例 34
2
3
4
5

Problem StatementGiven is a directed graph G with N vertices and M edges 
The vertices are numbered 1 to N  and the i th edge is directed from Vertex A i to Vertex B i 
It is guaranteed that the graph contains no self loops or multiple edges 
Determine whether there exists an induced subgraph  see Notes  of G such that the in degree and out degree of every vertex are both 1  If the answer is yes  show one such subgraph 
Here the null graph is not considered as a subgraph 

NotesFor a directed graph G    V  E   we call a directed graph G     V   E   satisfying the following conditions an induced subgraph of G 

V  is a  non empty  subset of V 
E  is the set of all the edges in E that have both endpoints in V  


Constraints
1  leq N  leq 1000
0  leq M  leq 2000
1  leq A i B i  leq N
A i  neq B i
All pairs  A i  B i  are distinct 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N M
A 1 B 1
A 2 B 2
 
A M B M


OutputIf there is no induced subgraph of G that satisfies the condition  print  1 
Otherwise  print an induced subgraph of G that satisfies the condition  in the following format 
K
v 1
v 2
 
v K

This represents the induced subgraph of G with K vertices whose vertex set is   v 1  v 2   ldots  v K     The order of v 1  v 2   ldots  v K does not matter  
If there are multiple subgraphs of G that satisfy the condition  printing any of them is accepted 

Sample Input 14 5
1 2
2 3
2 4
4 1
4 3


Sample Output 13
1
2
4

The induced subgraph of G whose vertex set is   1  2  4   has the edge set    1  2    2  4    4  1     The in degree and out degree of every vertex in this graph are both 1 

Sample Input 24 5
1 2
2 3
2 4
1 4
4 3


Sample Output 2 1

There is no induced subgraph of G that satisfies the condition 

Sample Input 36 9
1 2
2 3
3 4
4 5
5 6
5 1
5 2
6 1
6 2


Sample Output 34
2
3
4
5"
Curtain,https://atcoder.jp/contests/abc143/tasks/abc143_a,"問題文高橋君の家の窓の横方向の長さは A であり 横方向の長さが B のカーテンが 2 枚取り付けられています  カーテンは縦方向には窓を覆うのに十分な長さがあります  
窓のうちカーテンで隠されていない部分の横方向の長さが最小になるようにカーテンを閉めます 
このとき 窓のカーテンで隠されていない部分の合計の横方向の長さを求めてください 

制約
1   A   100
1   B   100
A  B は整数である 


入力入力は以下の形式で標準入力から与えられる 
A B


出力窓のうちカーテンで隠されていない部分の合計の横方向の長さを出力せよ 

入力例 112 4


出力例 14

横幅 12 の窓の 例えば両端からの距離が 4 以内の部分が隠されます カーテンで隠されない部分の横方向の長さは 4 です 

入力例 220 15


出力例 20

窓がカーテンで完全に隠される場合は 0 と出力してください 

入力例 320 30


出力例 30

各カーテンが窓の横幅より長い場合があります 
Problem StatementThe window of Takahashi s room has a width of A  There are two curtains hung over the window  each of which has a horizontal length of B   Vertically  the curtains are long enough to cover the whole window  
We will close the window so as to minimize the total horizontal length of the uncovered part of the window 
Find the total horizontal length of the uncovered parts of the window then 

Constraints
1  leq A  leq 100
1  leq B  leq 100
A and B are integers 


InputInput is given from Standard Input in the following format 
A B


OutputPrint the total horizontal length of the uncovered parts of the window 

Sample Input 112 4


Sample Output 14

We have a window with a horizontal length of 12  and two curtains  each of length 4  that cover both ends of the window  for example  The uncovered part has a horizontal length of 4 

Sample Input 220 15


Sample Output 20

If the window is completely covered  print 0 

Sample Input 320 30


Sample Output 30

Each curtain may be longer than the window"
TAKOYAKI FESTIVAL 2019,https://atcoder.jp/contests/abc143/tasks/abc143_b,"問題文たこ焼きフェスティバル  たこフェス  の季節がやってきました 
今年のたこフェスでは N 個のたこ焼きがふるまわれる予定です このうち i 個目のたこ焼きのおいしさは d i です 
ところで おいしさが x と y であるたこ焼きを一緒に食べると 体力が x  times y 回復することが一般に知られています 
たこフェスでふるまわれる N 個のたこ焼きから 2 個を選ぶ方法は  frac N  times  N   1   2  通り考えられます そのそれぞれについて 一緒に食べたときの体力の回復量を求めて その総和を出力してください 

制約
入力は全て整数である 
2  leq N  leq 50
0  leq d i  leq 100


入力入力は以下の形式で標準入力から与えられる 
N
d 1 d 2     d N


出力たこフェスでふるまわれる N 個のたこやきから 2 個を選んで一緒に食べたときの体力の回復量の総和を出力せよ 

入力例 13
3 1 2


出力例 111

以下の 3 通りの食べ方が考えられます 

1  2 個目のたこ焼きを選んで一緒に食べる このとき 体力の回復量は 3 である 
2  3 個目のたこ焼きを選んで一緒に食べる このとき 体力の回復量は 2 である 
1  3 個目のたこ焼きを選んで一緒に食べる このとき 体力の回復量は 6 である 

体力の回復量の総和は 11 です 

入力例 27
5 0 7 8 3 3 2


出力例 2312

Problem StatementIt s now the season of TAKOYAKI FESTIVAL 
This year  N takoyaki  a ball shaped food with a piece of octopus inside  will be served  The deliciousness of the i th takoyaki is d i 
As is commonly known  when you eat two takoyaki of deliciousness x and y together  you restore x  times y health points 
There are  frac N  times  N   1   2  ways to choose two from the N takoyaki served in the festival  For each of these choices  find the health points restored from eating the two takoyaki  then compute the sum of these  frac N  times  N   1   2  values 

Constraints
All values in input are integers 
2  leq N  leq 50
0  leq d i  leq 100


InputInput is given from Standard Input in the following format 
N
d 1 d 2     d N


OutputPrint the sum of the health points restored from eating two takoyaki over all possible choices of two takoyaki from the N takoyaki served 

Sample Input 13
3 1 2


Sample Output 111

There are three possible choices 

Eat the first and second takoyaki  You will restore 3 health points 
Eat the second and third takoyaki  You will restore 2 health points 
Eat the first and third takoyaki  You will restore 6 health points 

The sum of these values is 11 

Sample Input 27
5 0 7 8 3 3 2


Sample Output 2312"
Slimes,https://atcoder.jp/contests/abc143/tasks/abc143_c,"問題文N 匹のスライムが横一列に並んでいます これらの色に関する情報が 長さ N の英小文字から成る文字列 S で与えられます 左から i 番目のスライムは  S の i 文字目に対応する色を持っています 
同じ色を持ち隣接するスライムは融合し 色は変わらずに 1 匹のスライムとなります このとき 融合した後のスライムは 融合する前の各スライムが隣接していた他のスライムと隣接した状態になります 
最終的に存在するスライムは何匹となるでしょうか 

制約
1   N   10 5
 S    N
S は英小文字から成る


入力入力は以下の形式で標準入力から与えられる 
N
S


出力最終的に存在するスライムの数を出力せよ 

入力例 110
aabbbbaaca


出力例 15

最終的に残るスライムを文字列で表すと abacaとなります 

入力例 25
aaaaa


出力例 21

全てのスライムが融合します 

入力例 320
xxzaffeeeeddfkkkkllq


出力例 310

Problem StatementThere are N slimes lining up from left to right  The colors of these slimes will be given as a string S of length N consisting of lowercase English letters  The i th slime from the left has the color that corresponds to the i th character of S 
Adjacent slimes with the same color will fuse into one larger slime without changing the color  If there were a slime adjacent to this group of slimes before fusion  that slime is now adjacent to the new larger slime 
Ultimately  how many slimes will be there 

Constraints
1  leq N  leq 10 5
 S    N
S consists of lowercase English letters 


InputInput is given from Standard Input in the following format 
N
S


OutputPrint the final number of slimes 

Sample Input 110
aabbbbaaca


Sample Output 15

Ultimately  these slimes will fuse into abaca 

Sample Input 25
aaaaa


Sample Output 21

All the slimes will fuse into one 

Sample Input 320
xxzaffeeeeddfkkkkllq


Sample Output 310"
Triangles,https://atcoder.jp/contests/abc143/tasks/abc143_d,"問題文高橋君は 互いに区別出来る N 本の棒を持っています i 本目の棒の長さは L i です 
高橋君は これらのうち 3 本の棒を使って三角形を作ろうとしています このとき 棒の長さを a  b  c として 以下の条件がすべて成り立たなければなりません 

a   b   c
b   c   a
c   a   b

作れる三角形は何種類あるでしょうか ただし 2 つの三角形は そのうち一方にのみ使われている棒が存在するときに異なるとします 

制約
入力は全て整数
3   N   2  times 10 3
1  leq L i  leq 10 3


入力入力は以下の形式で標準入力から与えられる 
N
L 1 L 2     L N


出力作れる三角形が何種類あるかを出力せよ 

入力例 14
3 4 2 1


出力例 11

作れる三角形は 1 2 3 番目の棒から成る三角形のみです 

入力例 23
1 1000 1


出力例 20

作れる三角形はありません 

入力例 37
218 786 704 233 645 728 389


出力例 323

Problem StatementTakahashi has N sticks that are distinguishable from each other  The length of the i th stick is L i 
He is going to form a triangle using three of these sticks  Let a  b  and c be the lengths of the three sticks used  Here  all of the following conditions must be satisfied 

a   b   c
b   c   a
c   a   b

How many different triangles can be formed  Two triangles are considered different when there is a stick used in only one of them 

Constraints
All values in input are integers 
3  leq N  leq 2  times 10 3
1  leq L i  leq 10 3


InputInput is given from Standard Input in the following format 
N
L 1 L 2     L N


ConstraintsPrint the number of different triangles that can be formed 

Sample Input 14
3 4 2 1


Sample Output 11

Only one triangle can be formed  the triangle formed by the first  second  and third sticks 

Sample Input 23
1 1000 1


Sample Output 20

No triangles can be formed 

Sample Input 37
218 786 704 233 645 728 389


Sample Output 323"
Travel by Car,https://atcoder.jp/contests/abc143/tasks/abc143_e,"問題文1 から N までの番号がついた N 個の町と M 本の道があります i 本目の道は町 A i と町 B i を双方向に結び その長さは C i です 
高橋君はこれらの町の間を 道を車で通行することで移動します 車の燃料タンクの容量は L リットルであり 距離 1 を移動する度に燃料を 1 リットル消費します 移動中に町を訪れた場合 燃料をタンクが一杯になるまで補給することが出来ます  補給しないという選択も可能です  道の途中で燃料が尽きるような移動は出来ません 
以下の Q 個のクエリに答えてください 

はじめ 車の燃料タンクは一杯です 町 s i から町 t i へ移動するとき 最小で何回途中で燃料を補給する必要があるかを答えてください 町 t i まで移動出来ない場合は  1 を出力してください 


制約
入力は全て整数
2   N   300
0   M    frac N N 1   2 
1  leq L  leq 10 9
1   A i  B i   N
A i  neq B i
 left A i  B i right   neq  left A j  B j right    i  neq j のとき 
 left A i  B i right   neq  left B j  A j right    i  neq j のとき 
1  leq C i  leq 10 9
1   Q   N left N 1 right 
1   s i  t i   N
s i  neq t i
 left s i  t i right   neq  left s j  t j right    i  neq j のとき 


入力入力は以下の形式で標準入力から与えられる 
N M L
A 1 B 1 C 1
 
A M B M C M
Q
s 1 t 1
 
s Q t Q


出力Q 行出力せよ 
i 行目には 町 s i から町 t i へ移動するとき 最小で何回燃料を補給する必要があるかを出力せよ 町 t i まで移動出来ない場合は  1 を出力せよ 

入力例 13 2 5
1 2 3
2 3 3
2
3 2
1 3


出力例 10
1

町 3 から町 2 へ移動するときは  2 本目の道を使えば 途中で燃料を補給することなく町 2 へ到着することが出来ます 
町 1 から町 3 へ移動するときは まず 1 本目の道を使って町 2 へ移動し 燃料をタンク一杯まで補給し  2 本目の道を使うことにより 町 3 へ到着することが出来ます 

入力例 24 0 1
1
2 1


出力例 2 1

道が無いこともあります 

入力例 35 4 4
1 2 2
2 3 2
3 4 3
4 5 2
20
2 1
3 1
4 1
5 1
1 2
3 2
4 2
5 2
1 3
2 3
4 3
5 3
1 4
2 4
3 4
5 4
1 5
2 5
3 5
4 5


出力例 30
0
1
2
0
0
1
2
0
0
0
1
1
1
0
0
2
2
1
0

Problem StatementThere are N towns numbered 1 to N and M roads  The i th road connects Town A i and Town B i bidirectionally and has a length of C i 
Takahashi will travel between these towns by car  passing through these roads  The fuel tank of his car can contain at most L liters of fuel  and one liter of fuel is consumed for each unit distance traveled  When visiting a town while traveling  he can full the tank  or choose not to do so   Travel that results in the tank becoming empty halfway on the road cannot be done 
Process the following Q queries 

The tank is now full  Find the minimum number of times he needs to full his tank while traveling from Town s i to Town t i  If Town t i is unreachable  print  1 


Constraints
All values in input are integers 
2  leq N  leq 300
0  leq M  leq  frac N N 1   2 
1  leq L  leq 10 9
1  leq A i  B i  leq N
A i  neq B i
 left A i  B i right   neq  left A j  B j right   if i  neq j 
 left A i  B i right   neq  left B j  A j right   if i  neq j 
1  leq C i  leq 10 9
1  leq Q  leq N left N 1 right 
1  leq s i  t i  leq N
s i  neq t i
 left s i  t i right   neq  left s j  t j right   if i  neq j 


InputInput is given from Standard Input in the following format 
N M L
A 1 B 1 C 1
 
A M B M C M
Q
s 1 t 1
 
s Q t Q


OutputPrint Q lines 
The i th line should contain the minimum number of times the tank needs to be fulled while traveling from Town s i to Town t i  If Town t i is unreachable  the line should contain  1 instead 

Sample Input 13 2 5
1 2 3
2 3 3
2
3 2
1 3


Sample Output 10
1

To travel from Town 3 to Town 2  we can use the second road to reach Town 2 without fueling the tank on the way 
To travel from Town 1 to Town 3  we can first use the first road to get to Town 2  full the tank  and use the second road to reach Town 3 

Sample Input 24 0 1
1
2 1


Sample Output 2 1

There may be no road at all 

Sample Input 35 4 4
1 2 2
2 3 2
3 4 3
4 5 2
20
2 1
3 1
4 1
5 1
1 2
3 2
4 2
5 2
1 3
2 3
4 3
5 3
1 4
2 4
3 4
5 4
1 5
2 5
3 5
4 5


Sample Output 30
0
1
2
0
0
1
2
0
0
0
1
1
1
0
0
2
2
1
0"
Distinct Numbers,https://atcoder.jp/contests/abc143/tasks/abc143_f,"問題文
高橋くんは N 枚のカードを持っています  i 番目のカードには整数 A i が書かれています 
高橋くんは整数 K を選びます そして 以下の操作を何度か繰り返します 

書かれている整数が互いに異なるちょうど K 枚のカードを選び 食べる 食べたカードは消滅する 

K   1 2   ldots  N のそれぞれに対して 操作を行える最大の回数を求めてください 

制約

 1  le N  le 3  times 10 5 
 1  le A i  le N 
入力はすべて整数


入力
入力は以下の形式で標準入力から与えられる 
N
A 1 A 2  ldots A N


出力
N 個の整数を出力せよ 
t  1  le t  le N  個目には K t のときの答えを出力せよ 

入力例 13
2 1 2


出力例 13
1
0

K   1 のとき 操作を以下のように行うことができます 

1 枚目のカードを選び 食べる
2 枚目のカードを選び 食べる
3 枚目のカードを選び 食べる

また K   2 のとき 操作を以下のように行うことができます 

1 枚目のカードと 2 枚目のカードを選び 食べる

K   3 のときは 操作を行うことができません 1 枚目のカードと 3 枚目のカードを同時に選べないことに注意してください 

入力例 25
1 2 3 4 5


出力例 25
2
1
1
1


入力例 34
1 3 3 3


出力例 34
1
0
0

Problem Statement
Takahashi has N cards  The i th of these cards has an integer A i written on it 
Takahashi will choose an integer K  and then repeat the following operation some number of times 

Choose exactly K cards such that the integers written on them are all different  and eat those cards   The eaten cards disappear  

For each K   1 2   ldots  N  find the maximum number of times Takahashi can do the operation 

Constraints

 1  le N  le 3  times 10 5 
 1  le A i  le N 
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N
A 1 A 2  ldots A N


Output
Print N integers 
The t th  1  le t  le N  of them should be the answer for the case K t 

Sample Input 13
2 1 2


Sample Output 13
1
0

For K   1  we can do the operation as follows 

Choose the first card to eat 
Choose the second card to eat 
Choose the third card to eat 

For K   2  we can do the operation as follows 

Choose the first and second cards to eat 

For K   3  we cannot do the operation at all  Note that we cannot choose the first and third cards at the same time 

Sample Input 25
1 2 3 4 5


Sample Output 25
2
1
1
1


Sample Input 34
1 3 3 3


Sample Output 34
1
0
0"
9x9,https://atcoder.jp/contests/abc144/tasks/abc144_a,"問題文高橋君は九九を覚えたので 1 以上 9 以下の 2 つの整数の積を計算することができます それ以外の計算はできません 
2 つの整数 A  B が与えられます 
高橋君が A  times B を計算できるならその結果を できないなら代わりに  1 を出力してください 

制約
1  leq A  leq 20
1  leq B  leq 20
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
A B


出力高橋君が A  times B を計算できるならその結果を できないなら  1 を出力せよ 

入力例 12 5


出力例 110

2  times 5 は 10 です 

入力例 25 10


出力例 2 1

5 times 10 は 50 ですが 高橋君には計算できないので かわりに  1 を出力します 

入力例 39 9


出力例 381

Problem StatementHaving learned the multiplication table  Takahashi can multiply two integers between 1 and 9  inclusive  together  He cannot do any other calculation 
Given are two integers A and B 
If Takahashi can calculate A  times B  print the result  if he cannot  print  1 instead 

Constraints
1  leq A  leq 20
1  leq B  leq 20
All values in input are integers 


InputInput is given from Standard Input in the following format 
A B


OutputIf Takahashi can calculate A  times B  print the result  if he cannot  print  1 

Sample Input 12 5


Sample Output 110

2  times 5   10 

Sample Input 25 10


Sample Output 2 1

5 times 10   50  but Takahashi cannot do this calculation  so print  1 instead 

Sample Input 39 9


Sample Output 381"
81,https://atcoder.jp/contests/abc144/tasks/abc144_b,"問題文高橋君は九九を覚えたので 1 以上 9 以下の 2 つの整数の積を計算することができます 
整数 N が与えられるので N を 1 以上 9 以下の 2 つの整数の積として表すことができるか判定し できるなら Yes を できないなら No を出力して下さい 

制約
1  leq N  leq 100
N は整数である 


入力入力は以下の形式で標準入力から与えられる 
N


出力N を 1 以上 9 以下の 2 つの整数の積として表すことができるなら Yes を できないなら No を出力せよ 

入力例 110


出力例 1Yes

例えば 2  times 5 と表すことができます 

入力例 250


出力例 2No

50 を 1 以上 9 以下の 2 つの整数の積として表すことはできません 

入力例 381


出力例 3Yes

Problem StatementHaving learned the multiplication table  Takahashi can multiply two integers between 1 and 9  inclusive  together 
Given an integer N  determine whether N can be represented as the product of two integers between 1 and 9  If it can  print Yes  if it cannot  print No 

Constraints
1  leq N  leq 100
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputIf N can be represented as the product of two integers between 1 and 9  inclusive   print Yes  if it cannot  print No 

Sample Input 110


Sample Output 1Yes

10 can be represented as  for example  2  times 5 

Sample Input 250


Sample Output 2No

50 cannot be represented as the product of two integers between 1 and 9 

Sample Input 381


Sample Output 3Yes"
Walk on Multiplication Table,https://atcoder.jp/contests/abc144/tasks/abc144_c,"問題文高橋君は無限に広い掛け算表の上にいます 
掛け算表のマス  i j  には整数 i  times j が書かれており 高橋君は最初  1 1  にいます 
高橋君は 1 回の移動で  i j  から  i 1 j  か  i j 1  のどちらかにのみ移ることができます 
整数 N が与えられるので N が書かれているマスに到達するまでに必要な移動回数の最小値を求めてください 

制約
2  leq N  leq 10  12 
N は整数である 


入力入力は以下の形式で標準入力から与えられる 
N


出力整数 N が書かれているマスに到達するまでに必要な移動回数の最小値を出力せよ 

入力例 110


出力例 15

5 回の移動で  2 5  に到達することができます 5 回未満の移動では 10 が書かれたマスに到達することは出来ません 

入力例 250


出力例 213

13 回の移動で  5 10  に到達できます 

入力例 310000000019


出力例 310000000018

入出力とも非常に大きな値になる可能性があります 
Problem StatementTakahashi is standing on a multiplication table with infinitely many rows and columns 
The square  i j  contains the integer i  times j  Initially  Takahashi is standing at  1 1  
In one move  he can move from  i j  to either  i 1 j  or  i j 1  
Given an integer N  find the minimum number of moves needed to reach a square that contains N 

Constraints
2  leq N  leq 10  12 
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputPrint the minimum number of moves needed to reach a square that contains the integer N 

Sample Input 110


Sample Output 15

 2 5  can be reached in five moves  We cannot reach a square that contains 10 in less than five moves 

Sample Input 250


Sample Output 213

 5  10  can be reached in 13 moves 

Sample Input 310000000019


Sample Output 310000000018

Both input and output may be enormous"
Water Bottle,https://atcoder.jp/contests/abc144/tasks/abc144_d,"問題文高橋君は 底面が 1 辺 a  mathrm cm  の正方形であり 高さが b  mathrm cm  であるような直方体型の水筒を持っています  水筒の厚みは無視できます  
この水筒の中に体積 x  mathrm cm  3 の水を入れ 底面の正方形の 1 辺を軸として この水筒を徐々に傾けます 
水を溢れさせずに水筒を傾けることができる最大の角度を求めてください 

制約
入力は全て整数
1   a  leq 100
1   b  leq 100
1   x   a 2b


入力入力は以下の形式で標準入力から与えられる 
a b x


出力水を溢れさせずに水筒を傾けることができる最大の角度を度数法で出力せよ 
出力は ジャッジの出力との絶対誤差または相対誤差が 10   6  以下のとき正解と判定される 

入力例 12 2 4


出力例 145 0000000000

水筒は立方体であり 水は半分まで入っています この水筒を 45  より大きく傾けると水が溢れます 

入力例 212 21 10


出力例 289 7834636934

水筒はほぼ空であり 水が溢れるときにはほぼ水平になっています 

入力例 33 1 8


出力例 34 2363947991

水筒はほぼ満杯であり ほぼ垂直の状態で水が溢れます 
Problem StatementTakahashi has a water bottle with the shape of a rectangular prism whose base is a square of side a  mathrm cm  and whose height is b  mathrm cm    The thickness of the bottle can be ignored  
We will pour x  mathrm cm  3 of water into the bottle  and gradually tilt the bottle around one of the sides of the base 
When will the water be spilled  More formally  find the maximum angle in which we can tilt the bottle without spilling any water 

Constraints
All values in input are integers 
1  leq a  leq 100
1  leq b  leq 100
1  leq x  leq a 2b


InputInput is given from Standard Input in the following format 
a b x


OutputPrint the maximum angle in which we can tilt the bottle without spilling any water  in degrees 
Your output will be judged as correct when the absolute or relative error from the judge s output is at most 10   6  

Sample Input 12 2 4


Sample Output 145 0000000000

This bottle has a cubic shape  and it is half full  The water gets spilled when we tilt the bottle more than 45 degrees 

Sample Input 212 21 10


Sample Output 289 7834636934

This bottle is almost empty  When the water gets spilled  the bottle is nearly horizontal 

Sample Input 33 1 8


Sample Output 34 2363947991

This bottle is almost full  When the water gets spilled  the bottle is still nearly vertical"
Gluttony,https://atcoder.jp/contests/abc144/tasks/abc144_e,"問題文
高橋君は早食い大会に出ることにしました この大会は N 人でのチーム戦であり 高橋君のチームは年齢順に 1 から N までの番号がついた N 人のメンバーからなります メンバー i の 消化コスト は A i です 
大会では 1 から N までの番号がついた N 個の食べ物が用意されており 食べ物 i の 食べにくさ は F i です 大会のルールは以下の通りです 

1 個の食べ物につき 1 人のチームメンバーを割り当てる 同じメンバーを複数の食べ物に割り当てることはできない 
あるメンバーについて そのメンバーの消化コストが x 担当する食べ物の食べにくさが y のとき その食べ物の完食には x  times y 秒かかる 
N 人のメンバーそれぞれが完食にかかる時間のうち最大値が チーム全体の成績となる 

コンテストの前に 高橋君のチームは修行をすることにしました 各メンバーは 自分の消化コストが 0 より小さくならない限り 1 回修行するごとに自分の消化コストを 1 減らすことができます ただし 修行には膨大な食費がかかるため N 人合計で K 回までしか修行することができません 
各メンバーの修行回数と担当する食べ物を適切に選んだとき チーム全体の成績は最小でいくらになるでしょうか 

制約

入力はすべて整数
1  leq N  leq 2  times 10 5
0  leq K  leq 10  18 
1  leq A i  leq 10 6   1  leq i  leq N 
1  leq F i  leq 10 6   1  leq i  leq N 


入力
入力は以下の形式で標準入力から与えられます 
N K
A 1 A 2     A N
F 1 F 2     F N


出力
チーム全体の成績の最小値を出力してください 

入力例 13 5
4 2 1
2 3 1


出力例 12

下のようにすることで チーム全体の成績は 2 になります 

メンバー 1 に 4 回修行させ 食べ物 2 を割り当てます 完食にかかる時間は  4 4   times 3   0 秒です 
メンバー 2 に 1 回修行させ 食べ物 3 を割り当てます 完食にかかる時間は  2 1   times 1   1 秒です 
メンバー 3 に 0 回修行させ 食べ物 1 を割り当てます 完食にかかる時間は  1 0   times 2   2 秒です 

チーム全体の成績を 2 より小さくすることはできないので 答えは 2 です 

入力例 23 8
4 2 1
2 3 1


出力例 20

必ずしも K 回ちょうど修行する必要はありません 

入力例 311 14
3 1 4 1 5 9 2 6 5 3 5
8 9 7 9 3 2 3 8 4 6 2


出力例 312

Problem Statement
Takahashi will take part in an eating contest  Teams of N members will compete in this contest  and Takahashi s team consists of N players numbered 1 through N from youngest to oldest  The consumption coefficient of Member i is A i 
In the contest  N foods numbered 1 through N will be presented  and the difficulty of Food i is F i  The details of the contest are as follows 

A team should assign one member to each food  and should not assign the same member to multiple foods 
It will take x  times y seconds for a member to finish the food  where x is the consumption coefficient of the member and y is the difficulty of the dish 
The score of a team is the longest time it takes for an individual member to finish the food 

Before the contest  Takahashi s team decided to do some training  In one set of training  a member can reduce his her consumption coefficient by 1  as long as it does not go below 0  However  for financial reasons  the N members can do at most K sets of training in total 
What is the minimum possible score of the team  achieved by choosing the amounts of members  training and allocating the dishes optimally 

Constraints

All values in input are integers 
1  leq N  leq 2  times 10 5
0  leq K  leq 10  18 
1  leq A i  leq 10 6   1  leq i  leq N 
1  leq F i  leq 10 6   1  leq i  leq N 


Input
Input is given from Standard Input in the following format 
N K
A 1 A 2     A N
F 1 F 2     F N


Output
Print the minimum possible score of the team 

Sample Input 13 5
4 2 1
2 3 1


Sample Output 12

They can achieve the score of 2  as follows 

Member 1 does 4 sets of training and eats Food 2 in  4 4   times 3   0 seconds 
Member 2 does 1 set of training and eats Food 3 in  2 1   times 1   1 second 
Member 3 does 0 sets of training and eats Food 1 in  1 0   times 2   2 seconds 

They cannot achieve a score of less than 2  so the answer is 2 

Sample Input 23 8
4 2 1
2 3 1


Sample Output 20

They can choose not to do exactly K sets of training 

Sample Input 311 14
3 1 4 1 5 9 2 6 5 3 5
8 9 7 9 3 2 3 8 4 6 2


Sample Output 312"
Fork in the Road,https://atcoder.jp/contests/abc144/tasks/abc144_f,"問題文N 個の部屋と M 本の一方向にのみ通れる通路から成る洞窟があります 部屋には 1 から N までの番号がついています 
高橋君はいま部屋 1 におり 部屋 N が出口へと繋がっています i 番目の通路は部屋 s i と部屋 t i   s i   t i   を繋いでおり 部屋 s i から部屋 t i の方向にのみ通ることが出来ます 部屋 N 以外の各部屋について その部屋から出る通路が少なくとも 1 つ存在することが分かっています 
高橋君はこの洞窟から脱出を試みます 部屋に到達するたびに  脱出開始時は部屋 1 に到達したとみなします  高橋君はその部屋から出る通路のうち等確率でランダムに 1 つを選んで進みます 
高橋君の友達の青木君は 高橋君が部屋 1 から移動する前に 1 つだけ通路を塞ぐ  または何もしない  ことが出来ます ただし 高橋君が部屋 N に到達できなくなる可能性が生じるような通路の塞ぎ方は出来ません 
高橋君が部屋 N に到達するまでに通る通路の数の期待値を E とします 青木君が E を最小化するような選択をしたときの E の値を求めてください 

制約
2   N   600
N 1   M    frac N N 1   2 
s i   t i
i  neq j のとき  s i  t i   neq  s j  t j   21 23 追記 
任意の v   1  2       N 1 に対し ある i が存在して v   s i


入力入力は以下の形式で標準入力から与えられる 
N M
s 1 t 1
 
s M t M


出力青木君が E を最小化するような選択をしたときの E の値を出力せよ 
出力は ジャッジと出力との絶対誤差または相対誤差が 10   6  以下のとき正解と判定される 

入力例 14 6
1 4
2 3
1 3
1 2
3 4
2 4


出力例 11 5000000000

青木君が部屋 1 から部屋 2 への通路を塞ぐと 高橋君は  frac 1  2  の確率で 1   3   4 という経路を辿り   frac 1  2  の確率で 1   4 という経路を辿ります このとき E   1 5 であり これが E がとりうる最小の値です 

入力例 23 2
1 2
2 3


出力例 22 0000000000

どの通路を塞いでも部屋 N に到達出来なくなるため 青木君は通路を塞ぐことは出来ません 

入力例 310 33
3 7
5 10
8 9
1 10
4 6
2 5
1 7
6 10
1 4
1 3
8 10
1 5
2 6
6 9
5 6
5 8
3 6
4 8
2 7
2 9
6 7
1 2
5 9
6 8
9 10
3 9
7 8
4 5
2 10
5 7
3 5
4 7
4 9


出力例 33 0133333333

Problem StatementThere is a cave consisting of N rooms and M one directional passages  The rooms are numbered 1 through N 
Takahashi is now in Room 1  and Room N has the exit  The i th passage connects Room s i and Room t i  s i   t i  and can only be traversed in the direction from Room s i to Room t i  It is known that  for each room except Room N  there is at least one passage going from that room 
Takahashi will escape from the cave  Each time he reaches a room  assume that he has reached Room 1 at the beginning   he will choose a passage uniformly at random from the ones going from that room and take that passage 
Aoki  a friend of Takahashi s  can block one of the passages  or do nothing  before Takahashi leaves Room 1  However  it is not allowed to block a passage so that Takahashi is potentially unable to reach Room N 
Let E be the expected number of passages Takahashi takes before he reaches Room N  Find the value of E when Aoki makes a choice that minimizes E 

Constraints
2  leq N  leq 600
N 1  leq M  leq  frac N N 1   2 
s i   t i
If i    j   s i  t i   neq  s j  t j    Added 21 23 JST 
For every v   1  2       N 1  there exists i such that v   s i 


InputInput is given from Standard Input in the following format 
N M
s 1 t 1
 
s M t M


OutputPrint the value of E when Aoki makes a choice that minimizes E 
Your output will be judged as correct when the absolute or relative error from the judge s output is at most 10   6  

Sample Input 14 6
1 4
2 3
1 3
1 2
3 4
2 4


Sample Output 11 5000000000

If Aoki blocks the passage from Room 1 to Room 2  Takahashi will go along the path 1   3   4 with probability  frac 1  2  and 1   4 with probability  frac 1  2   E   1 5 here  and this is the minimum possible value of E 

Sample Input 23 2
1 2
2 3


Sample Output 22 0000000000

Blocking any one passage makes Takahashi unable to reach Room N  so Aoki cannot block a passage 

Sample Input 310 33
3 7
5 10
8 9
1 10
4 6
2 5
1 7
6 10
1 4
1 3
8 10
1 5
2 6
6 9
5 6
5 8
3 6
4 8
2 7
2 9
6 7
1 2
5 9
6 8
9 10
3 9
7 8
4 5
2 10
5 7
3 5
4 7
4 9


Sample Output 33 0133333333"
Circle,https://atcoder.jp/contests/abc145/tasks/abc145_a,"問題文整数 r が与えられます 
半径 r の円の面積が半径 1 の円の面積の何倍になるかを求めてください 
なお答えは制約の下では必ず整数になることが示せます 

制約
1  leq r  leq 100
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
r


出力半径 r の円の面積が半径 1 の円の面積の何倍になるかを整数で出力せよ 

入力例 12


出力例 14

半径 2 の円の面積は半径 1 の円の面積の 4 倍です 
4 0 などの形式で出力すると不正解になることに注意してください 

入力例 2100


出力例 210000

Problem StatementGiven is an integer r 
How many times is the area of a circle of radius r larger than the area of a circle of radius 1 
It can be proved that the answer is always an integer under the constraints given 

Constraints
1  leq r  leq 100
All values in input are integers 


InputInput is given from Standard Input in the following format 
r


OutputPrint the area of a circle of radius r  divided by the area of a circle of radius 1  as an integer 

Sample Input 12


Sample Output 14

The area of a circle of radius 2 is 4 times larger than the area of a circle of radius 1 
Note that output must be an integer   for example  4 0 will not be accepted 

Sample Input 2100


Sample Output 210000"
Echo,https://atcoder.jp/contests/abc145/tasks/abc145_b,"問題文正整数 N 及び 長さ N の英小文字から成る文字列 S が与えられます 
この文字列が ある文字列を二度繰り返したものであるかを判定してください 
則ち 文字列 T であって  S   T   T となるものが存在するかを判定してください 

制約
1   N   100
S は英小文字から成る
 S    N


入力入力は以下の形式で標準入力から与えられる 
N
S


出力S が文字列を二度繰り返したものであるならば Yes と そうでないならば No と出力せよ 

入力例 16
abcabc


出力例 1Yes

T    abc とおくと  S   T   T となります 

入力例 26
abcadc


出力例 2No


入力例 31
z


出力例 3No

Problem StatementGiven are a positive integer N and a string S of length N consisting of lowercase English letters 
Determine whether the string is a concatenation of two copies of some string 
That is  determine whether there is a string T such that S   T   T 

Constraints
1  leq N  leq 100
S consists of lowercase English letters 
 S    N


InputInput is given from Standard Input in the following format 
N
S


OutputIf S is a concatenation of two copies of some string  print Yes  otherwise  print No 

Sample Input 16
abcabc


Sample Output 1Yes

Let T    abc  and S   T   T 

Sample Input 26
abcadc


Sample Output 2No


Sample Input 31
z


Sample Output 3No"
Average Length,https://atcoder.jp/contests/abc145/tasks/abc145_c,"問題文座標平面上に N 個の町があります 町 i は 座標   x i   y i   に位置しています 町 i と町 j の間の距離は  sqrt  left x i x j right  2  left y i y j right  2  です 
これらの町を全て 1 回ずつ訪れるとき 町を訪れる経路は全部で N  通りあります 1 番目に訪れる町から出発し 2 番目に訪れる町 3 番目に訪れる町  ldots を経由し N 番目に訪れる町に到着するまでの移動距離  町から町への移動は直線移動とします  を その経路の長さとします これらの N  通りの経路の長さの平均値を計算してください 

制約
2   N   8
 1000   x i   1000
 1000   y i   1000
 left x i  y i right   neq  left x j  y j right    i  neq j のとき 
 21 12 追記  入力中の値はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N
x 1 y 1
 
x N y N


出力経路の長さの平均値を出力せよ 
出力は ジャッジの出力との絶対誤差または相対誤差が 10   6  以下のとき正解と判定される 

入力例 13
0 0
1 0
0 1


出力例 12 2761423749

町を訪れる経路は 1   2   3   1   3   2   2   1   3   2   3   1   3   1   2   3   2   1 の 6 通りです 
このうち 経路 1   2   3 の長さは  sqrt  left 0 1 right  2  left 0 0 right  2     sqrt  left 1 0 right  2  left 0 1 right  2    1  sqrt 2  となります 
同様に他の経路についても長さを計算すると 経路の長さの平均値は 
 frac  left 1  sqrt 2  right   left 1  sqrt 2  right   left 2 right   left 1  sqrt 2  right   left 2 right   left 1  sqrt 2  right   6    2 276142   
であると分かります 

入力例 22
 879 981
 866 890


出力例 291 9238815543

町を訪れる経路は 1   2   2   1 の 2 通りありますが これらの経路の長さは一致します 

入力例 38
 406 10
512 859
494 362
 955  475
128 553
 986  885
763 77
449 310


出力例 37641 9817824387

Problem StatementThere are N towns in a coordinate plane  Town i is located at coordinates  x i  y i   The distance between Town i and Town j is  sqrt  left x i x j right  2  left y i y j right  2  
There are N  possible paths to visit all of these towns once  Let the length of a path be the distance covered when we start at the first town in the path  visit the second  third   dots  towns  and arrive at the last town  assume that we travel in a straight line from a town to another   Compute the average length of these N  paths 

Constraints
2  leq N  leq 8
 1000  leq x i  leq 1000
 1000  leq y i  leq 1000
 left x i  y i right   neq  left x j  y j right   if i  neq j 
 Added 21 12 JST  All values in input are integers 


InputInput is given from Standard Input in the following format 
N
x 1 y 1
 
x N y N


OutputPrint the average length of the paths 
Your output will be judges as correct when the absolute difference from the judge s output is at most 10   6  

Sample Input 13
0 0
1 0
0 1


Sample Output 12 2761423749

There are six paths to visit the towns  1   2   3  1   3   2  2   1   3  2   3   1  3   1   2  and 3   2   1 
The length of the path 1   2   3 is  sqrt  left 0 1 right  2  left 0 0 right  2     sqrt  left 1 0 right  2  left 0 1 right  2    1  sqrt 2  
By calculating the lengths of the other paths in this way  we see that the average length of all routes is 
 frac  left 1  sqrt 2  right   left 1  sqrt 2  right   left 2 right   left 1  sqrt 2  right   left 2 right   left 1  sqrt 2  right   6    2 276142   

Sample Input 22
 879 981
 866 890


Sample Output 291 9238815543

There are two paths to visit the towns  1   2 and 2   1  These paths have the same length 

Sample Input 38
 406 10
512 859
494 362
 955  475
128 553
 986  885
763 77
449 310


Sample Output 37641 9817824387"
Knight,https://atcoder.jp/contests/abc145/tasks/abc145_d,"問題文二次元グリッドの原点  0 0  にチェスのナイトの駒があります 
ナイトの駒はマス  i j  にあるとき  i 1 j 2  か  i 2  j 1  のどちらかのマスにのみ動かすことができます 
ナイトの駒をマス  X Y  まで移動させる方法は何通りありますか 
10 9 7 で割った余りを求めてください 

制約
1  leq X  leq 10 6
1  leq Y  leq 10 6
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
X Y


出力ナイトの駒を  0 0  から  X Y  まで移動させる方法の数を 10 9 7 で割った余りを出力せよ 

入力例 13 3


出力例 12

 0 0   to  1 2   to  3 3  と  0 0   to  2 1   to  3 3  の 2 通りが考えられます 

入力例 22 2


出力例 20

 2 2  にナイトの駒を移動させることはできません 

入力例 3999999 999999


出力例 3151840682

方法の数を 10 9 7 で割った余りを出力してください 
Problem StatementThere is a knight   the chess piece   at the origin  0  0  of a two dimensional grid 
When the knight is at the square  i  j   it can be moved to either  i 1 j 2  or  i 2  j 1  
In how many ways can the knight reach the square  X  Y  
Find the number of ways modulo 10 9   7 

Constraints
1  leq X  leq 10 6
1  leq Y  leq 10 6
All values in input are integers 


InputInput is given from Standard Input in the following format 
X Y


OutputPrint the number of ways for the knight to reach  X  Y  from  0  0   modulo 10 9   7 

Sample Input 13 3


Sample Output 12

There are two ways   0 0   to  1 2   to  3 3  and  0 0   to  2 1   to  3 3  

Sample Input 22 2


Sample Output 20

The knight cannot reach  2 2  

Sample Input 3999999 999999


Sample Output 3151840682

Print the number of ways modulo 10 9   7"
All you can eat,https://atcoder.jp/contests/abc145/tasks/abc145_e,"問題文高橋君は食べ放題のお店に来ました 
N 種類の料理があり i 番目の料理は 食べるために A i 分必要で 美味しさは B i です 
この店のルールは以下の通りです 


1 度に 1 つの料理のみを注文することができます 注文した料理は即座に提供され 食べ始めることができます 


同じ種類の料理を 2 度以上注文することはできません 


提供済みの料理を食べ終わるまで次の料理を注文することはできません 


最初の注文から T 0 5 分後以降に注文することはできませんが 提供済みの料理を食べることはできます 


高橋君の満足度を この来店で高橋君が食べる料理の美味しさの合計とします 
高橋君が適切に行動したとき 満足度は最大でいくらになるでしょうか 

制約
2  leq N  leq 3000
1  leq T  leq 3000
1  leq A i  leq 3000
1  leq B i  leq 3000
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
N T
A 1 B 1
 
A N B N


出力高橋君が適切に行動したときの 満足度の最大値を出力せよ 

入力例 12 60
10 10
100 100


出力例 1110

1 番目 2 番目の順に料理を注文することで 満足度は 110 になります 
注文が時間内に間に合えば 食べるのにどれだけ時間がかかっても良いことに注意してください 

入力例 23 60
10 10
10 20
10 30


出力例 260

60 分以内に全ての料理を食べることができます 

入力例 33 60
30 10
30 20
30 30


出力例 350

2 番目 3 番目の順に料理に注文することで 満足度を 50 にできます 
どのような順に料理を注文しても 料理を 3 つ注文することはできません 

入力例 410 100
15 23
20 18
13 17
24 12
18 29
19 27
23 21
18 20
27 15
22 25


出力例 4145

Problem StatementTakahashi is at an all you can eat restaurant 
The restaurant offers N kinds of dishes  It takes A i minutes to eat the i th dish  whose deliciousness is B i 
The restaurant has the following rules 

You can only order one dish at a time  The dish ordered will be immediately served and ready to eat 
You cannot order the same kind of dish more than once 
Until you finish eating the dish already served  you cannot order a new dish 
After T 0 5 minutes from the first order  you can no longer place a new order  but you can continue eating the dish already served 

Let Takahashi s happiness be the sum of the deliciousness of the dishes he eats in this restaurant 
What is the maximum possible happiness achieved by making optimal choices 

Constraints
2  leq N  leq 3000
1  leq T  leq 3000
1  leq A i  leq 3000
1  leq B i  leq 3000
All values in input are integers 


InputInput is given from Standard Input in the following format 
N T
A 1 B 1
 
A N B N


OutputPrint the maximum possible happiness Takahashi can achieve 

Sample Input 12 60
10 10
100 100


Sample Output 1110

By ordering the first and second dishes in this order  Takahashi s happiness will be 110 
Note that  if we manage to order a dish in time  we can spend any amount of time to eat it 

Sample Input 23 60
10 10
10 20
10 30


Sample Output 260

Takahashi can eat all the dishes within 60 minutes 

Sample Input 33 60
30 10
30 20
30 30


Sample Output 350

By ordering the second and third dishes in this order  Takahashi s happiness will be 50 
We cannot order three dishes  in whatever order we place them 

Sample Input 410 100
15 23
20 18
13 17
24 12
18 29
19 27
23 21
18 20
27 15
22 25


Sample Output 4145"
Laminate,https://atcoder.jp/contests/abc145/tasks/abc145_f,"問題文10 9 行 N 列の白色グリッドのいくつかのマスを黒く塗って アートを製作します 
現時点では 左から i 列目については下から H i 個のマスを黒く塗り その列の残りのマスは塗らない予定です 
アートの製作を開始する前に あなたは K 個以下の列  0 個でもよい  を選び それらの列に対する H i の値を 0 以上 10 9 以下の好きな整数に変更できます 
変更後の値は列ごとに個別に選べます 
その後 あなたは次の操作を繰り返すことで変更後のアートを製作します 

ある行の連続する 1 マス以上のマスを選んで黒く塗る  すでに黒く塗られたマスを再び塗ってもよいが 塗らないことにしたマスを塗ってはならない  

この操作を最小で何回行う必要があるか求めてください 

制約
1  leq N  leq 300
0  leq K  leq N
1  leq H i  leq 10 9
入力はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N K
H 1 H 2     H N


出力必要な最小の操作回数を出力せよ 

入力例 14 1
2 3 4 1


出力例 13

例えば H 3 の値を 2 に変更した上で以下のような操作を行うと 3 回の操作で変更後のアートを製作することができます 

下から 1 行目の左から 1 列目から 4 列目までのマスを黒く塗る 
下から 2 行目の左から 1 列目から 3 列目までのマスを黒く塗る 
下から 3 行目の左から 2 列目のマスを黒く塗る 


入力例 26 2
8 6 9 1 2 1


出力例 27


入力例 310 0
1 1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000


出力例 34999999996

Problem StatementWe will create an artwork by painting black some squares in a white square grid with 10 9 rows and N columns 
The current plan is as follows  for the i th column from the left  we will paint the H i bottommost squares and will not paint the other squares in that column 
Before starting to work  you can choose at most K columns  possibly zero  and change the values of H i for these columns to any integers of your choice between 0 and 10 9  inclusive  
Different values can be chosen for different columns 
Then  you will create the modified artwork by repeating the following operation 

Choose one or more consecutive squares in one row and paint them black   Squares already painted black can be painted again  but squares not to be painted according to the modified plan should not be painted  

Find the minimum number of times you need to perform this operation 

Constraints
1  leq N  leq 300
0  leq K  leq N
0  leq H i  leq 10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
N K
H 1 H 2     H N


OutputPrint the minimum number of operations required 

Sample Input 14 1
2 3 4 1


Sample Output 13

For example  by changing the value of H 3 to 2  you can create the modified artwork by the following three operations 

Paint black the 1 st through 4 th squares from the left in the 1 st row from the bottom 
Paint black the 1 st through 3 rd squares from the left in the 2 nd row from the bottom 
Paint black the 2 nd square from the left in the 3 rd row from the bottom 


Sample Input 26 2
8 6 9 1 2 1


Sample Output 27


Sample Input 310 0
1 1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000


Sample Output 34999999996"
Can't Wait for Holiday,https://atcoder.jp/contests/abc146/tasks/abc146_a,"問題文今日の曜日を表す文字列 S が与えられます 
S は SUN MON TUE WED THU FRI SAT のいずれかであり それぞれ日曜日 月曜日 火曜日 水曜日 木曜日 金曜日 土曜日を表します 
次の日曜日  あす以降  が何日後か求めてください 

制約
S は SUN MON TUE WED THU FRI SAT のいずれか


入力入力は以下の形式で標準入力から与えられる 
S


出力次の日曜日が何日後か出力せよ 

入力例 1SAT


出力例 11

今日は土曜日です よって 次の日曜日は 1 日後です 

入力例 2SUN


出力例 27

今日は日曜日です よって 次の日曜日は 7 日後です 
Problem StatementGiven is a string S representing the day of the week today 
S is SUN  MON  TUE  WED  THU  FRI  or SAT  for Sunday  Monday  Tuesday  Wednesday  Thursday  Friday  and Saturday  respectively 
After how many days is the next Sunday  tomorrow or later  

Constraints
S is SUN  MON  TUE  WED  THU  FRI  or SAT 


InputInput is given from Standard Input in the following format 
S


OutputPrint the number of days before the next Sunday 

Sample Input 1SAT


Sample Output 11

It is Saturday today  and tomorrow will be Sunday 

Sample Input 2SUN


Sample Output 27

It is Sunday today  and seven days later  it will be Sunday again"
ROT N,https://atcoder.jp/contests/abc146/tasks/abc146_b,"問題文英大文字のみからなる文字列 S があります また 整数 N が与えられます 
S の各文字を アルファベット順で N 個後の文字に置き換えた文字列を出力してください 
ただしアルファベット順で Z の 1 個後の文字は A とみなします 

制約
0  leq N  leq 26
1  leq  S   leq 10 4
S は英大文字のみからなる


入力入力は以下の形式で標準入力から与えられる 
N
S


出力S の各文字を アルファベット順で N 個後の文字に置き換えた文字列を出力せよ 

入力例 12
ABCXYZ


出力例 1CDEZAB

アルファベット順で Z の 1 個後の文字は A であることに注意してください 

入力例 20
ABCXYZ


出力例 2ABCXYZ


入力例 313
ABCDEFGHIJKLMNOPQRSTUVWXYZ


出力例 3NOPQRSTUVWXYZABCDEFGHIJKLM

Problem StatementWe have a string S consisting of uppercase English letters  Additionally  an integer N will be given 
Shift each character of S by N in alphabetical order  see below   and print the resulting string 
We assume that A follows Z  For example  shifting A by 2 results in C  A  to B  to C   and shifting Y by 3 results in B  Y  to Z  to A  to B  

Constraints
0  leq N  leq 26
1  leq  S   leq 10 4
S consists of uppercase English letters 


InputInput is given from Standard Input in the following format 
N
S


OutputPrint the string resulting from shifting each character of S by N in alphabetical order 

Sample Input 12
ABCXYZ


Sample Output 1CDEZAB

Note that A follows Z 

Sample Input 20
ABCXYZ


Sample Output 2ABCXYZ


Sample Input 313
ABCDEFGHIJKLMNOPQRSTUVWXYZ


Sample Output 3NOPQRSTUVWXYZABCDEFGHIJKLM"
Buy an Integer,https://atcoder.jp/contests/abc146/tasks/abc146_c,"問題文高橋くんは整数を 1 つ買いに整数屋さんに行きました 
整数屋さんには 1 以上 10 9 以下の整数が売られていて 整数 N を買うためには A  times N   B  times d N  円が必要です ここで d N  は N の十進表記での桁数です 
高橋くんの所持金が X 円のとき 高橋くんの買うことのできる最も大きい整数を求めてください ただし 買うことのできる整数が 1 つもない場合は 0 を出力してください 

制約
入力は全て整数である 
1  leq A  leq 10 9
1  leq B  leq 10 9
1  leq X  leq 10  18 


入力入力は以下の形式で標準入力から与えられる 
A B X


出力高橋くんの買うことのできる最も大きい整数を出力せよ ただし 買うことのできる整数が 1 つもない場合は 0 を出力せよ 

入力例 110 7 100


出力例 19

9 の値段は 10  times 9   7  times 1   97 円で これが買うことのできる最大の整数です 
他の整数の値段の例をいくつかあげると

10  10  times 10   7  times 2   114 円
100  10  times 100   7  times 3   1021 円
12345  10  times 12345   7  times 5   123485 円

です 

入力例 22 1 100000000000


出力例 21000000000

お店に売られている最大の整数を買うことができます 入力が 32 bit整数型に収まらないことがあることに注意してください 

入力例 31000000000 1000000000 100


出力例 30


入力例 41234 56789 314159265


出力例 4254309

Problem StatementTakahashi has come to an integer shop to buy an integer 
The shop sells the integers from 1 through 10 9  The integer N is sold for A  times N   B  times d N  yen  the currency of Japan   where d N  is the number of digits in the decimal notation of N 
Find the largest integer that Takahashi can buy when he has X yen  If no integer can be bought  print 0 

Constraints
All values in input are integers 
1  leq A  leq 10 9
1  leq B  leq 10 9
1  leq X  leq 10  18 


InputInput is given from Standard Input in the following format 
A B X


OutputPrint the greatest integer that Takahashi can buy  If no integer can be bought  print 0 

Sample Input 110 7 100


Sample Output 19

The integer 9 is sold for 10  times 9   7  times 1   97 yen  and this is the greatest integer that can be bought 
Some of the other integers are sold for the following prices 

10  10  times 10   7  times 2   114 yen
100  10  times 100   7  times 3   1021 yen
12345  10  times 12345   7  times 5   123485 yen


Sample Input 22 1 100000000000


Sample Output 21000000000

He can buy the largest integer that is sold  Note that input may not fit into a 32 bit integer type 

Sample Input 31000000000 1000000000 100


Sample Output 30


Sample Input 41234 56789 314159265


Sample Output 4254309"
Coloring Edges on Tree,https://atcoder.jp/contests/abc146/tasks/abc146_d,"問題文
N 頂点の木 G が与えられます 
頂点には 1 から N までの番号がついており i 本目の辺は頂点 a i と頂点 b i を結んでいます 
G の辺を何色かで塗り分けることを考えます 
このとき 各頂点について その頂点を端点に持つ辺の色がすべて相異なるようにしたいです 
上記の条件を満たす塗り分けの中で 使用する色の数が最小であるようなものを 1 つ構築してください 

制約

 2  le N  le 10 5 
 1  le a i  lt b i  le N 
入力はすべて整数
与えられるグラフは木である


入力
入力は以下の形式で標準入力から与えられる 
N
a 1 b 1
a 2 b 2
 vdots
a  N 1  b  N 1 


出力
出力は N 行からなる 
1 行目に使用する色の数 K を出力せよ 
i 1 行目  1  le i  le N 1  に i 番目の辺の色を表す整数 c i を出力せよ ここで 1  le c i  le K でなければならない 
問題文中の条件を満たし 使用する色の数が最小であるような塗り分けが複数存在するときは そのうちのどれを出力しても構わない 

入力例 13
1 2
2 3


出力例 12
1
2


入力例 28
1 2
2 3
2 4
2 5
4 7
5 6
6 8


出力例 24
1
2
3
4
1
1
2


入力例 36
1 2
1 3
1 4
1 5
1 6


出力例 35
1
2
3
4
5

Problem Statement
Given is a tree G with N vertices 
The vertices are numbered 1 through N  and the i th edge connects Vertex a i and Vertex b i 
Consider painting the edges in G with some number of colors 
We want to paint them so that  for each vertex  the colors of the edges incident to that vertex are all different 
Among the colorings satisfying the condition above  construct one that uses the minimum number of colors 

Constraints

 2  le N  le 10 5
 1  le a i  lt b i  le N
All values in input are integers 
The given graph is a tree 


Input
Input is given from Standard Input in the following format 
N
a 1 b 1
a 2 b 2
 vdots
a  N 1  b  N 1 


Output
Print N lines 
The first line should contain K  the number of colors used 
The  i 1  th line  1  le i  le N 1  should contain c i  the integer representing the color of the i th edge  where 1  le c i  le K must hold 
If there are multiple colorings with the minimum number of colors that satisfy the condition  printing any of them will be accepted 

Sample Input 13
1 2
2 3


Sample Output 12
1
2


Sample Input 28
1 2
2 3
2 4
2 5
4 7
5 6
6 8


Sample Output 24
1
2
3
4
1
1
2


Sample Input 36
1 2
1 3
1 4
1 5
1 6


Sample Output 35
1
2
3
4
5"
Rem of Sum is Num,https://atcoder.jp/contests/abc146/tasks/abc146_e,"問題文長さ N の正整数列 A 1  A 2   ldots   A N と正の整数 K が与えられます 
A の空でない連続する部分列であって 要素の和を K で割った余りが要素の数と等しくなるものの数を求めてください ただし 2 つの部分列が列として同じでも 取り出す位置が異なるならば区別するものとします 

制約
入力は全て整数である 
1  leq N  leq 2 times 10 5
1  leq K  leq 10 9
1  leq A i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N K
A 1 A 2  cdots A N


出力条件をみたす部分列の個数を出力してください 

入力例 15 4
1 4 2 3 5


出力例 14

 1    4 2    1 4 2    5  の 4 つが条件をみたす部分列です 

入力例 28 4
4 2 4 2 4 2 4 2


出力例 27

 4 2  が 4 回  2 4  が 3 回数えられています 

入力例 310 7
14 15 92 65 35 89 79 32 38 46


出力例 38

Problem StatementGiven are a sequence of N positive integers A 1  A 2   ldots  A N  and a positive integer K 
Find the number of non empty contiguous subsequences in A such that the remainder when dividing the sum of its elements by K is equal to the number of its elements  We consider two subsequences different if they are taken from different positions  even if they are equal sequences 

Constraints
All values in input are integers 
1  leq N  leq 2 times 10 5
1  leq K  leq 10 9
1  leq A i  leq 10 9


InputInput is given from Standard Input in the following format 
N K
A 1 A 2  cdots A N


OutputPrint the number of subsequences that satisfy the condition 

Sample Input 15 4
1 4 2 3 5


Sample Output 14

Four sequences satisfy the condition   1    4 2    1 4 2   and  5  

Sample Input 28 4
4 2 4 2 4 2 4 2


Sample Output 27

 4 2  is counted four times  and  2 4  is counted three times 

Sample Input 310 7
14 15 92 65 35 89 79 32 38 46


Sample Output 38"
Sugoroku,https://atcoder.jp/contests/abc146/tasks/abc146_f,"問題文高橋君は双六で遊んでいます 
この双六には 0 から N までの番号がついた N   1 個のマスがあります 高橋君はマス 0 からスタートし ゴールするにはマス N にちょうど止まらなければなりません 
この双六では 1 から M までの M 種類の目が出るルーレットを使います 各手番で 高橋君はルーレットを回して出た目の数だけ進みます この結果マス N を越えて進むことになる場合 ゲームオーバーとなります 
また いくつかのマスは ゲームオーバーマス であり それらのマスに止まってもゲームオーバーとなります マスの情報は長さ N   1 の文字列 S で与えられます 各 i  0  leq i  leq N  について S i    1 のときマス i はゲームオーバーマスであり S i    0 のときマス i はゲームオーバーマスではありません 
高橋君がゲームオーバーとならずに最短手数でゴールするときの出目を順に答えてください そのような目の出方が複数存在するときは そのうち出目の列が辞書順で最小であるものを出力してください ゲームオーバーとならずにゴールすることが不可能である場合は   1 を出力してください 

制約
1   N   10 5
1   M   10 5
 S    N   1
S は0と1から成る
S 0    0
S N    0


入力入力は以下の形式で標準入力から与えられる 
N M
S


出力ゴールすることが可能である場合 そのような最短の出目の列のうち辞書順で最小のものを出力せよ ゴールすることが不可能である場合  1 を出力せよ 

入力例 19 3
0001000100


出力例 11 3 2 3

1   3   2   3 の順に目を出すと 高橋君はマス 1   4   6 を経由してマス 9 に到達することが出来ます 高橋君が 3 手以内にマス 9 に到達することは不可能であり また 4 手でマス 9 に到達するような出目の列の中ではこれが辞書順で最小です 

入力例 25 4
011110


出力例 2 1

高橋君はマス 5 に到達することが出来ません 

入力例 36 6
0101010


出力例 36

Problem StatementTakahashi is playing a board game called Sugoroku 
On the board  there are N   1 squares numbered 0 to N  Takahashi starts at Square 0  and he has to stop exactly at Square N to win the game 
The game uses a roulette with the M numbers from 1 to M  In each turn  Takahashi spins the roulette  If the number x comes up when he is at Square s  he moves to Square s x  If this makes him go beyond Square N  he loses the game 
Additionally  some of the squares are Game Over Squares  He also loses the game if he stops at one of those squares  You are given a string S of length N   1  representing which squares are Game Over Squares  For each i  0  leq i  leq N   Square i is a Game Over Square if S i    1 and not if S i    0 
Find the sequence of numbers coming up in the roulette in which Takahashi can win the game in the fewest number of turns possible  If there are multiple such sequences  find the lexicographically smallest such sequence  If Takahashi cannot win the game  print  1 

Constraints
1  leq N  leq 10 5
1  leq M  leq 10 5
 S    N   1
S consists of 0 and 1 
S 0    0
S N    0


InputInput is given from Standard Input in the following format 
N M
S


OutputIf Takahashi can win the game  print the lexicographically smallest sequence among the shortest sequences of numbers coming up in the roulette in which Takahashi can win the game  with spaces in between 
If Takahashi cannot win the game  print  1 

Sample Input 19 3
0001000100


Sample Output 11 3 2 3

If the numbers 1  3  2  3 come up in this order  Takahashi can reach Square 9 via Square 1  4  and 6  He cannot reach Square 9 in three or fewer turns  and this is the lexicographically smallest sequence in which he reaches Square 9 in four turns 

Sample Input 25 4
011110


Sample Output 2 1

Takahashi cannot reach Square 5 

Sample Input 36 6
0101010


Sample Output 36"
Blackjack,https://atcoder.jp/contests/abc147/tasks/abc147_a,"問題文3 個の整数 A 1  A 2  A 3 が与えられます 
A 1 A 2 A 3 が 22 以上なら bust 21 以下なら win を出力してください 

制約
1  leq A i  leq 13      i 1 2 3 
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
A 1 A 2 A 3


出力A 1 A 2 A 3 が 22 以上なら bust 21 以下なら win を出力せよ 

入力例 15 7 9


出力例 1win

5 7 9 21 なので win を出力します 

入力例 213 7 2


出力例 2bust

13 7 2 22 なので bust を出力します 
Problem StatementGiven are three integers A 1  A 2  and A 3 
If A 1 A 2 A 3 is greater than or equal to 22  print bust  otherwise  print win 

Constraints
1  leq A i  leq 13      i 1 2 3 
All values in input are integers 


InputInput is given from Standard Input in the following format 
A 1 A 2 A 3


OutputIf A 1 A 2 A 3 is greater than or equal to 22  print bust  otherwise  print win 

Sample Input 15 7 9


Sample Output 1win

5 7 9 21  so print win 

Sample Input 213 7 2


Sample Output 2bust

13 7 2 22  so print bust"
Palindrome philia,https://atcoder.jp/contests/abc147/tasks/abc147_b,"問題文
高八士君は回文が大好きで 回文でない文字列が許せません 高八士君は文字列を 1 回ハグするごとに 文字列から 1 文字を選んで任意の文字に変えることができます 
文字列 S が与えられます S を回文にするために必要なハグの最小回数を答えてください 

制約

S は半角英小文字のみから成る文字列
S の長さは 1 以上 100 以下


入力
入力は以下の形式で標準入力から与えられます 
S


出力
S を回文にするために必要なハグの最小回数を出力してください 

入力例 1redcoder


出力例 11

たとえば 4 文字目を o に変えて redooder にすることで回文になります 

入力例 2vvvvvv


出力例 20

一度も文字を変えなくてよい場合もあります 

入力例 3abcdabc


出力例 32

Problem Statement
Takahashi loves palindromes  Non palindromic strings are unacceptable to him  Each time he hugs a string  he can change one of its characters to any character of his choice 
Given is a string S  Find the minimum number of hugs needed to make S palindromic 

Constraints

S is a string consisting of lowercase English letters 
The length of S is between 1 and 100  inclusive  


Input
Input is given from Standard Input in the following format 
S


Output
Print the minimum number of hugs needed to make S palindromic 

Sample Input 1redcoder


Sample Output 11

For example  we can change the fourth character to o and get a palindrome redooder 

Sample Input 2vvvvvv


Sample Output 20

We might need no hugs at all 

Sample Input 3abcdabc


Sample Output 32"
HonestOrUnkind2,https://atcoder.jp/contests/abc147/tasks/abc147_c,"問題文1 から N までの番号がついた N 人の人がいます 彼らはみな 必ず正しい証言を行う 正直者 か 真偽不明の証言を行う 不親切な人 のいずれかです 
人 i は A i 個の証言を行っています 人 i の j 個目の証言は 2 つの整数 x  ij    y  ij  で表され y  ij    1 のときは 人 x  ij  は正直者である という証言であり y  ij    0 のときは 人 x  ij  は不親切な人である という証言です 
この N 人の中には最大で何人の正直者が存在し得るでしょうか 

制約
入力は全て整数
1   N   15
0  leq A i  leq N   1
1  leq x  ij   leq N
x  ij   neq i
x  ij 1   neq x  ij 2   j 1  neq j 2 
y  ij    0  1


入力入力は以下の形式で標準入力から与えられる 
N
A 1
x  11  y  11 
x  12  y  12 
 
x  1A 1  y  1A 1 
A 2
x  21  y  21 
x  22  y  22 
 
x  2A 2  y  2A 2 
 
A N
x  N1  y  N1 
x  N2  y  N2 
 
x  NA N  y  NA N 


出力存在し得る正直者の最大人数を出力せよ 

入力例 13
1
2 1
1
1 1
1
2 0


出力例 12

人 1 と人 2 が正直者であり 人 3 が不親切な人であると仮定すると 正直者は 2 人であり 矛盾が生じません これが存在し得る正直者の最大人数です 

入力例 23
2
2 1
3 0
2
3 1
1 0
2
1 1
2 0


出力例 20

1 人でも正直者が存在すると仮定すると 直ちに矛盾します 

入力例 32
1
2 0
1
1 0


出力例 31

Problem StatementThere are N people numbered 1 to N  Each of them is either an honest person whose testimonies are always correct or an unkind person whose testimonies may be correct or not 
Person i gives A i testimonies  The j th testimony by Person i is represented by two integers x  ij  and y  ij   If y  ij    1  the testimony says Person x  ij  is honest  if y  ij    0  it says Person x  ij  is unkind 
How many honest persons can be among those N people at most 

Constraints
All values in input are integers 
1  leq N  leq 15
0  leq A i  leq N   1
1  leq x  ij   leq N
x  ij   neq i
x  ij 1   neq x  ij 2   j 1  neq j 2 
y  ij    0  1


InputInput is given from Standard Input in the following format 
N
A 1
x  11  y  11 
x  12  y  12 
 
x  1A 1  y  1A 1 
A 2
x  21  y  21 
x  22  y  22 
 
x  2A 2  y  2A 2 
 
A N
x  N1  y  N1 
x  N2  y  N2 
 
x  NA N  y  NA N 


OutputPrint the maximum possible number of honest persons among the N people 

Sample Input 13
1
2 1
1
1 1
1
2 0


Sample Output 12

If Person 1 and Person 2 are honest and Person 3 is unkind  we have two honest persons without inconsistencies  which is the maximum possible number of honest persons 

Sample Input 23
2
2 1
3 0
2
3 1
1 0
2
1 1
2 0


Sample Output 20

Assuming that one or more of them are honest immediately leads to a contradiction 

Sample Input 32
1
2 0
1
1 0


Sample Output 31"
Xor Sum 4,https://atcoder.jp/contests/abc147/tasks/abc147_d,"問題文N 個の整数があり i 番目の整数は A i です 
 sum  i 1   N 1  sum  j i 1   N   A i  text  XOR   A j  を 10 9 7 で割った余りを求めてください 

 text  XOR   とは

整数 A  B のビットごとの排他的論理和 a  text  XOR   b は 以下のように定義されます 

 a  text  XOR   b を二進表記した際の 2 k  k  geq 0  の位の数は A  B を二進表記した際の 2 k の位の数のうち一方のみが 1 であれば 1 そうでなければ 0 である 

例えば 3  text  XOR   5   6 となります  二進表記すると  011  text  XOR   101   110  



制約
2  leq N  leq 3  times 10 5
0  leq A i   2  60 
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
N
A 1 A 2     A N


出力 sum  i 1   N 1  sum  j i 1   N   A i  text  XOR   A j  を 10 9 7 で割った余りを出力せよ 

入力例 13
1 2 3


出力例 16

 1 text  XOR   2   1 text  XOR   3   2 text  XOR   3  3 2 1 6 となります 

入力例 210
3 1 4 1 5 9 2 6 5 3


出力例 2237


入力例 310
3 14 159 2653 58979 323846 2643383 27950288 419716939 9375105820


出力例 3103715602

和を 10 9 7 で割った余りを出力してください 
Problem StatementWe have N integers  The i th integer is A i 
Find  sum  i 1   N 1  sum  j i 1   N   A i  text  XOR   A j   modulo  10 9 7  

What is  text  XOR   

The XOR of integers A and B  A  text  XOR   B  is defined as follows 

When A  text  XOR   B is written in base two  the digit in the 2 k s place  k  geq 0  is 1 if either A or B  but not both  has 1 in the 2 k s place  and 0 otherwise 

For example  3  text  XOR   5   6   In base two  011  text  XOR   101   110  



Constraints
2  leq N  leq 3  times 10 5
0  leq A i   2  60 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
A 1 A 2     A N


OutputPrint the value  sum  i 1   N 1  sum  j i 1   N   A i  text  XOR   A j   modulo  10 9 7  

Sample Input 13
1 2 3


Sample Output 16

We have  1 text  XOR   2   1 text  XOR   3   2 text  XOR   3  3 2 1 6 

Sample Input 210
3 1 4 1 5 9 2 6 5 3


Sample Output 2237


Sample Input 310
3 14 159 2653 58979 323846 2643383 27950288 419716939 9375105820


Sample Output 3103715602

Print the sum modulo  10 9 7"
Balanced Path,https://atcoder.jp/contests/abc147/tasks/abc147_e,"問題文縦 H マス 横 W マスのグリッドがあります 上から i 行目 左から j 列目のマスをマス  i j  と呼びます 
マス  i j  には 2 つの数 A  ij   B  ij  が書かれています 
高橋君はまず各マスについて 2 つの数の一方を赤く もう一方を青く塗ります 
そのあと マス  1 1  からマス  H W  まで移動します 高橋君は 1 回の行動でマス  i j  からマス  i 1 j  またはマス  i j 1  に動くことができます グリッドからはみ出すような移動はできません 
このときの移動経路  マス  1 1  とマス  H W  を含む  について  経路上のマスの赤く塗られた数の和 と 経路上のマスの青く塗られた数の和 の差の絶対値を 偏り と呼ぶことにします 
高橋君は 色の塗り方と移動経路を適切に選ぶことで偏りを小さくしたいです 
偏りの最小値を求めてください 

制約
2  leq H  leq 80
2  leq W  leq 80
0  leq A  ij   leq 80
0  leq B  ij   leq 80
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
H W
A  11  A  12   ldots A  1W 
 
A  H1  A  H2   ldots A  HW 
B  11  B  12   ldots B  1W 
 
B  H1  B  H2   ldots B  HW 


出力偏りの最小値を求めよ 

入力例 12 2
1 2
3 4
3 4
2 1


出力例 10

次のような塗り分けと移動経路を選択すると 経路上のマスの赤く塗られた数の和は 3 3 1 7 経路上のマスの青く塗られた数の和は 1 2 4 7 となり 偏りを 0 にできます 


入力例 22 3
1 10 80
80 10 1
1 2 3
4 5 6


出力例 22

Problem StatementWe have a grid with H horizontal rows and W vertical columns  Let  i j  denote the square at the i th row from the top and the j th column from the left 
The square  i  j  has two numbers A  ij  and B  ij  written on it 
First  for each square  Takahashi paints one of the written numbers red and the other blue 
Then  he travels from the square  1  1  to the square  H  W   In one move  he can move from a square  i  j  to the square  i 1  j  or the square  i  j 1   He must not leave the grid 
Let the unbalancedness be the absolute difference of the sum of red numbers and the sum of blue numbers written on the squares along Takahashi s path  including the squares  1  1  and  H  W  
Takahashi wants to make the unbalancedness as small as possible by appropriately painting the grid and traveling on it 
Find the minimum unbalancedness possible 

Constraints
2  leq H  leq 80
2  leq W  leq 80
0  leq A  ij   leq 80
0  leq B  ij   leq 80
All values in input are integers 


InputInput is given from Standard Input in the following format 
H W
A  11  A  12   ldots A  1W 
 
A  H1  A  H2   ldots A  HW 
B  11  B  12   ldots B  1W 
 
B  H1  B  H2   ldots B  HW 


OutputPrint the minimum unbalancedness possible 

Sample Input 12 2
1 2
3 4
3 4
2 1


Sample Output 10

By painting the grid and traveling on it as shown in the figure below  the sum of red numbers and the sum of blue numbers are 3 3 1 7 and 1 2 4 7  respectively  for the unbalancedness of 0 


Sample Input 22 3
1 10 80
80 10 1
1 2 3
4 5 6


Sample Output 22"
Sum Difference,https://atcoder.jp/contests/abc147/tasks/abc147_f,"問題文長さ N の整数列 A があり A 1   X  A  i 1    A i   D  1  leq  i   N   が成り立っています 
高橋君はこの整数列の要素をいくつか選んで取り 残り全てを青木君が取ります 2 人のどちらかが全てを取ることになっても構いません 
高橋君の取った数の和を S  青木君の取った数の和を T としたとき S   T として考えられる値は何通りあるでしょうか 

制約
 10 8  leq X  D  leq 10 8
1  leq N  leq 2  times 10 5
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N X D


出力S   T として考えられる値の種類数を出力せよ 

入力例 13 4 2


出力例 18

A は  4  6  8  です 
 高橋君  青木君  の取り方は        4  6  8      4    6  8      6    4  8      8    4  6       4  6    8       4  8    6       6  8    4       4  6  8      
の 8 通りあります 
S   T はそれぞれ  18   10   6   2  2  6  10  18 であるので 値の種類数は 8 です 

入力例 22 3  3


出力例 22

A は  3  0  であり S   T として考えられる値は  3  3 で 種類数は 2 です  

入力例 3100 14 20


出力例 349805

Problem StatementWe have an integer sequence A of length N  where A 1   X  A  i 1    A i   D  1  leq  i   N   holds 
Takahashi will take some  possibly all or none  of the elements in this sequence  and Aoki will take all of the others 
Let S and T be the sum of the numbers taken by Takahashi and Aoki  respectively  How many possible values of S   T are there 

Constraints
 10 8  leq X  D  leq 10 8
1  leq N  leq 2  times 10 5
All values in input are integers 


InputInput is given from Standard Input in the following format 
N X D


OutputPrint the number of possible values of S   T 

Sample Input 13 4 2


Sample Output 18

A is  4  6  8  
There are eight ways for  Takahashi  Aoki  to take the elements        4  6  8      4    6  8      6    4  8      8    4  6       4  6    8       4  8    6       6  8    4     and   4  6  8       
The values of S   T in these ways are  18   10   6   2  2  6  10  and 18  respectively  so there are eight possible values of S   T 

Sample Input 22 3  3


Sample Output 22

A is  3  0   There are two possible values of S   T   3 and 3 

Sample Input 3100 14 20


Sample Output 349805"
Round One,https://atcoder.jp/contests/abc148/tasks/abc148_a,"問題文
高橋君はペーパークイズを解いています 高橋君はすらすらと解いていき 残すは最終問題のみとなりました 
この問題は 答えが 1 2 3 のいずれかである 3 択問題です 
高橋君は超能力によって A と B が誤答であることがわかりました 
この問題の答えを出力してください 

制約

A B は 1 2 3 のいずれか
A と B は異なる


入力
入力は以下の形式で標準入力から与えられる 
A
B


出力
答えを出力せよ 

入力例 13
1


出力例 12

1 2 3 のうち 3 でも 1 でもないのは 2 です 

入力例 21
2


出力例 23

Problem Statement
Takahashi is solving quizzes  He has easily solved all but the last one 
The last quiz has three choices  1  2  and 3 
With his supernatural power  Takahashi has found out that the choices A and B are both wrong 
Print the correct choice for this problem 

Constraints

Each of the numbers A and B is 1  2  or 3 
A and B are different 


Input
Input is given from Standard Input in the following format 
A
B


Output
Print the correct choice 

Sample Input 13
1


Sample Output 12

When we know 3 and 1 are both wrong  the correct choice is 2 

Sample Input 21
2


Sample Output 23"
Strings with the Same Length,https://atcoder.jp/contests/abc148/tasks/abc148_b,"問題文英小文字のみからなる長さ N の文字列 S  T が与えられます 
S の 1 文字目 T の 1 文字目 S の 2 文字目 T の2 文字目 S の 3 文字目     S のN 文字目 T のN 文字目というように 
S の各文字と T の各文字を先頭から順に交互に文字を並べ 新しい文字列を作ります この新しくできた文字列を出力してください 

制約
1   N   100
 S     T    N
S  T は英小文字のみからなる文字列


入力入力は以下の形式で標準入力から与えられる 
N
S T


出力新しくできた文字列を出力せよ 

入力例 12
ip cc


出力例 1icpc


入力例 28
hmhmnknk uuuuuuuu


出力例 2humuhumunukunuku


入力例 35
aaaaa aaaaa


出力例 3aaaaaaaaaa

Problem StatementGiven are strings s and t of length N each  both consisting of lowercase English letters 
Let us form a new string by alternating the characters of S and the characters of T  as follows  the first character of S  the first character of T  the second character of S  the second character of T       the N th character of S  the N th character of T  Print this new string 

Constraints
1  leq N  leq 100
 S     T    N
S and T are strings consisting of lowercase English letters 


InputInput is given from Standard Input in the following format 
N
S T


OutputPrint the string formed 

Sample Input 12
ip cc


Sample Output 1icpc


Sample Input 28
hmhmnknk uuuuuuuu


Sample Output 2humuhumunukunuku


Sample Input 35
aaaaa aaaaa


Sample Output 3aaaaaaaaaa"
Snack,https://atcoder.jp/contests/abc148/tasks/abc148_c,"問題文
高橋君はパーティを企画しています 
パーティーでは参加者に 1 人 1 個以上のお菓子を配る予定です 
高橋君は参加者の人数が A 人か B 人のどちらかになるだろうという予想を立てました 
どちらの場合でも均等に配りきることができるようなお菓子の個数の最小値を求めてください 
ただし  1 個のお菓子を分割して複数人で分けることはできないものとします 

制約

 1  le A  B  le 10 5 
 A  neq B 
入力はすべて整数


入力
入力は以下の形式で標準入力から与えられる 
A B


出力
参加者の人数が A 人の場合でも B 人の場合でも均等に配りきることができるようなお菓子の個数の最小値を出力せよ 

入力例 12 3


出力例 16

6 個のお菓子があるとき 参加者が 2 人の場合は 3 個ずつ  3 人の場合は 2 個ずつ配ることができます 

入力例 2123 456


出力例 218696


入力例 3100000 99999


出力例 39999900000

Problem Statement
Takahashi is organizing a party 
At the party  each guest will receive one or more snack pieces 
Takahashi predicts that the number of guests at this party will be A or B 
Find the minimum number of pieces that can be evenly distributed to the guests in both of the cases predicted 
We assume that a piece cannot be divided and distributed to multiple guests 

Constraints

1  leq A  B  leq 10 5
A  neq B
All values in input are integers 


Input
Input is given from Standard Input in the following format 
A B


Output
Print the minimum number of pieces that can be evenly distributed to the guests in both of the cases with A guests and B guests 

Sample Input 12 3


Sample Output 16

When we have six snack pieces  each guest can take three pieces if we have two guests  and each guest can take two if we have three guests 

Sample Input 2123 456


Sample Output 218696


Sample Input 3100000 99999


Sample Output 39999900000"
Brick Break,https://atcoder.jp/contests/abc148/tasks/abc148_d,"問題文N 個のレンガが横一列に並んでいます 
左から i  1  leq i  leq N  番目のレンガには 整数 a i が書かれています 
あなたはこのうち N   1 個以下の任意のレンガを選んで砕くことができます 
その結果 K 個のレンガが残っているとします このとき 任意の整数 i  1  leq i  leq K  について 残っているレンガの中で左から i 番目のものに書かれた整数が i であるとき すぬけさんは満足します 
すぬけさんが満足するために砕く必要のあるレンガの最小個数を出力してください もし どのように砕いてもそれが不可能な場合 代わりに  1 を出力してください 

制約
入力は全て整数である 
1  leq N  leq 200000
1  leq a i  leq N


入力入力は以下の形式で標準入力から与えられる 
N
a 1 a 2     a N


出力すぬけさんが満足するために砕く必要のあるレンガの最小個数を出力せよ もし どのように砕いてもそれが不可能な場合 代わりに  1 を出力せよ 

入力例 13
2 1 2


出力例 11

一番左のレンガ 1 個を砕くと 残ったレンガに書かれた整数は左から 1  2 となります 
このとき すぬけさんは満足します 

入力例 23
2 2 2


出力例 2 1

この場合 すぬけさんが満足するレンガの砕き方は存在しません 

入力例 310
3 1 4 1 5 9 2 6 5 3


出力例 37


入力例 41
1


出力例 40

レンガを 1 つも砕かなくていい場合もあります 
Problem StatementWe have N bricks arranged in a row from left to right 
The i th brick from the left  1  leq i  leq N  has an integer a i written on it 
Among them  you can break at most N 1 bricks of your choice 
Let us say there are K bricks remaining  Snuke will be satisfied if  for each integer i  1  leq i  leq K   the i th of those brick from the left has the integer i written on it 
Find the minimum number of bricks you need to break to satisfy Snuke s desire  If his desire is unsatisfiable  print  1 instead 

Constraints
All values in input are integers 
1  leq N  leq 200000
1  leq a i  leq N


InputInput is given from Standard Input in the following format 
N
a 1 a 2     a N


OutputPrint the minimum number of bricks that need to be broken to satisfy Snuke s desire  or print  1 if his desire is unsatisfiable 

Sample Input 13
2 1 2


Sample Output 11

If we break the leftmost brick  the remaining bricks have integers 1 and 2 written on them from left to right  in which case Snuke will be satisfied 

Sample Input 23
2 2 2


Sample Output 2 1

In this case  there is no way to break some of the bricks to satisfy Snuke s desire 

Sample Input 310
3 1 4 1 5 9 2 6 5 3


Sample Output 37


Sample Input 41
1


Sample Output 40

There may be no need to break the bricks at all"
Double Factorial,https://atcoder.jp/contests/abc148/tasks/abc148_e,"問題文0 以上の整数 n に対し  f n  を次のように定義します 

f n    1  n   2 のとき 
f n    n f n 2   n   2 のとき 

整数 N が与えられます f N  を 10 進法で表記した時に末尾に何個の 0 が続くかを求めてください 

制約
0   N   10  18 


入力入力は以下の形式で標準入力から与えられる 
N


出力f N  を 10 進法で表記した時の末尾の 0 の個数を出力せよ 

入力例 112


出力例 11

f 12    12   10   8   6   4   2   46080 なので 末尾の 0 の個数は 1 個です 

入力例 25


出力例 20

f 5    5   3   1   15 なので 末尾の 0 の個数は 0 個です 

入力例 31000000000000000000


出力例 3124999999999999995

Problem StatementFor an integer n not less than 0  let us define f n  as follows 

f n    1  if n   2 
f n    n f n 2   if n  geq 2 

Given is an integer N  Find the number of trailing zeros in the decimal notation of f N  

Constraints
0  leq N  leq 10  18 


InputInput is given from Standard Input in the following format 
N


OutputPrint the number of trailing zeros in the decimal notation of f N  

Sample Input 112


Sample Output 11

f 12    12   10   8   6   4   2   46080  which has one trailing zero 

Sample Input 25


Sample Output 20

f 5    5   3   1   15  which has no trailing zeros 

Sample Input 31000000000000000000


Sample Output 3124999999999999995"
Playing Tag on Tree,https://atcoder.jp/contests/abc148/tasks/abc148_f,"問題文N 頂点の木があります i 番目の辺は頂点 A i と B i を双方向に結んでいます 
この木の頂点 u に高橋君が 頂点 v に青木君がいます 
2 人は次のような手順で鬼ごっこをします 


1  高橋君と青木君が同じ頂点にいるときゲームを終了する そうでないとき 高橋君は隣接する頂点を 1 つ選んでその頂点に移動する 


2  高橋君と青木君が同じ頂点にいるときゲームを終了する そうでないとき 青木君は隣接する頂点を 1 つ選んでその頂点に移動する 


3  1 に戻る 


高橋君はできるだけ遅くゲームが終了するように移動し 青木君はできるだけ早くゲームが終了するように移動します 
高橋君と青木君が常に互いの位置と戦略を把握し最適に移動するとき ゲームが終了するまでに青木君が移動する回数を求めてください 
なお ゲームは必ず終了することが証明できます 

制約
2  leq N  leq 10 5
1  leq u v  leq N
u  neq v
1  leq A i B i  leq N
与えられるグラフは木である


入力入力は以下の形式で標準入力から与えられる 
N u v
A 1 B 1
 
A  N 1  B  N 1 


出力ゲームが終了するまでに青木君が移動する回数を出力せよ 

入力例 15 4 1
1 2
2 3
3 4
3 5


出力例 12

互いに最適に移動した場合 ゲームは次のように進行します 

高橋君が頂点 3 に移動
青木君が頂点 2 に移動
高橋君が頂点 5 に移動
青木君が頂点 3 に移動
高橋君が頂点 3 に移動

このとき ゲームが終了するまでの青木君の移動回数は 2 回です 
各手番で同じ頂点にとどまることは出来ないことに注意してください 

入力例 25 4 5
1 2
1 3
1 4
1 5


出力例 21


入力例 32 1 2
1 2


出力例 30


入力例 49 6 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9


出力例 45

Problem StatementWe have a tree with N vertices  The i th edge connects Vertex A i and B i bidirectionally 
Takahashi is standing at Vertex u  and Aoki is standing at Vertex v 
Now  they will play a game of tag as follows 


1  If Takahashi and Aoki are standing at the same vertex  the game ends  Otherwise  Takahashi moves to a vertex of his choice that is adjacent to his current vertex 


2  If Takahashi and Aoki are standing at the same vertex  the game ends  Otherwise  Aoki moves to a vertex of his choice that is adjacent to his current vertex 


3  Go back to step 1 


Takahashi performs his moves so that the game ends as late as possible  while Aoki performs his moves so that the game ends as early as possible 
Find the number of moves Aoki will perform before the end of the game if both Takahashi and Aoki know each other s position and strategy 
It can be proved that the game is bound to end 

Constraints
2  leq N  leq 10 5
1  leq u v  leq N
u  neq v
1  leq A i B i  leq N
The given graph is a tree 


InputInput is given from Standard Input in the following format 
N u v
A 1 B 1
 
A  N 1  B  N 1 


OutputPrint the number of moves Aoki will perform before the end of the game 

Sample Input 15 4 1
1 2
2 3
3 4
3 5


Sample Output 12

If both players play optimally  the game will progress as follows 

Takahashi moves to Vertex 3 
Aoki moves to Vertex 2 
Takahashi moves to Vertex 5 
Aoki moves to Vertex 3 
Takahashi moves to Vertex 3 

Here  Aoki performs two moves 
Note that  in each move  it is prohibited to stay at the current vertex 

Sample Input 25 4 5
1 2
1 3
1 4
1 5


Sample Output 21


Sample Input 32 1 2
1 2


Sample Output 30


Sample Input 49 6 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9


Sample Output 45"
Strings,https://atcoder.jp/contests/abc149/tasks/abc149_a,"問題文英小文字のみからなる 2 つの文字列 S  T が与えられます これらの文字列を T  S の順に空白を空けずに連結し できる文字列を出力してください 

制約
S  T は英小文字のみからなる文字列
S  T の長さは 1 以上 100 以下


入力入力は以下の形式で標準入力から与えられる 
S T


出力できる文字列を出力せよ 

入力例 1oder atc


出力例 1atcoder

S    oder  T    atc のとき T  S の順に連結してできる文字列は atcoder です 

入力例 2humu humu


出力例 2humuhumu

Problem StatementGiven are two strings S and T consisting of lowercase English letters  Concatenate T and S in this order  without space in between  and print the resulting string 

Constraints
S and T are strings consisting of lowercase English letters 
The lengths of S and T are between 1 and 100  inclusive  


InputInput is given from Standard Input in the following format 
S T


OutputPrint the resulting string 

Sample Input 1oder atc


Sample Output 1atcoder

When S    oder and T    atc  concatenating T and S in this order results in atcoder 

Sample Input 2humu humu


Sample Output 2humuhumu"
Greedy Takahashi,https://atcoder.jp/contests/abc149/tasks/abc149_b,"問題文高橋君は A 枚 青木君は B 枚のクッキーを持っています 
高橋君は以下の行動を K 回繰り返します 

もし高橋君がクッキーを 1 枚以上持っているなら 高橋君のクッキーを 1 枚食べる 
そうでなく もし青木君がクッキーを 1 枚以上持っているなら 青木君のクッキーを 1 枚食べる 
高橋君も青木君もクッキーを持っていないなら 何もしない 

高橋君と青木君が最終的に持っているクッキーの枚数をそれぞれ求めてください 

制約
0  leq A  leq 10  12 
0  leq B  leq 10  12 
0  leq K  leq 10  12 
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
A B K


出力高橋君と青木君のそれぞれが最終的に持っているクッキーの枚数を出力せよ 

入力例 12 3 3


出力例 10 2

高橋君は次のように行動します 

高橋君はクッキーを 2 枚持っているので 自分のクッキーを 1 枚食べる 
高橋君はクッキーを 1 枚持っているので 自分のクッキーを 1 枚食べる 
高橋君はクッキーを持っておらず 青木君はクッキーを 3 枚持っているので 青木君のクッキーを 1 枚食べる 

したがって 最終的に持っているクッキーの枚数は 高橋君が 0 枚 青木君が 2 枚になります 

入力例 2500000000000 500000000000 1000000000000


出力例 20 0

オーバーフローに注意してください 
Problem StatementTakahashi has A cookies  and Aoki has B cookies 
Takahashi will do the following action K times 

If Takahashi has one or more cookies  eat one of his cookies 
Otherwise  if Aoki has one or more cookies  eat one of Aoki s cookies 
If they both have no cookies  do nothing 

In the end  how many cookies will Takahashi and Aoki have  respectively 

Constraints
0  leq A  leq 10  12 
0  leq B  leq 10  12 
0  leq K  leq 10  12 
All values in input are integers 


InputInput is given from Standard Input in the following format 
A B K


OutputPrint the numbers of Takahashi s and Aoki s cookies after K actions 

Sample Input 12 3 3


Sample Output 10 2

Takahashi will do the following 

He has two cookies  so he eats one of them 
Now he has one cookie left  and he eats it 
Now he has no cookies left  but Aoki has three  so Takahashi eats one of them 

Thus  in the end  Takahashi will have 0 cookies  and Aoki will have 2 

Sample Input 2500000000000 500000000000 1000000000000


Sample Output 20 0

Watch out for overflows"
Next Prime,https://atcoder.jp/contests/abc149/tasks/abc149_c,"問題文
X 以上の素数のうち 最小のものを求めよ 

注記
素数とは 2 以上の整数であって 1 と自分自身を除くどの正の整数でも割り切れないようなもののことです 
例えば 2  3  5 は素数ですが 4  6 は素数ではありません 

制約

 2  le X  le 10 5 
入力はすべて整数


入力
入力は以下の形式で標準入力から与えられる 
X


出力
X 以上の素数のうち 最小のものを出力せよ 

入力例 120


出力例 123

20 以上の素数のうち 最小のものは 23 です 

入力例 22


出力例 22

X が素数である場合もあります 

入力例 399992


出力例 3100003

Problem Statement
Find the minimum prime number greater than or equal to X 

Notes
A prime number is an integer greater than 1 that cannot be evenly divided by any positive integer except 1 and itself 
For example  2  3  and 5 are prime numbers  while 4 and 6 are not 

Constraints

 2  le X  le 10 5 
All values in input are integers 


Input
Input is given from Standard Input in the following format 
X


Output
Print the minimum prime number greater than or equal to X 

Sample Input 120


Sample Output 123

The minimum prime number greater than or equal to 20 is 23 

Sample Input 22


Sample Output 22

X itself can be a prime number 

Sample Input 399992


Sample Output 3100003"
Prediction and Restriction,https://atcoder.jp/contests/abc149/tasks/abc149_d,"問題文高橋君は ゲームセンターで じゃんけんバトル というゲームをプレイすることにしました このゲームのルールは以下の通りです 

プレイヤーは筐体と N 回じゃんけんを行う  あいこの場合も 1 回のジャンケンと数える  
プレイヤーがじゃんけんで勝った場合 プレイヤーは出した手に応じて以下のスコアを得る  あいこや負けは 0 点  
グーで勝った場合  R 点
チョキで勝った場合  S 点
パーで勝った場合  P 点


ただし ちょうど K 回前のじゃんけんで出した手と同じ手を出すことはできない   K 回目までのじゃんけんでは好きな手を出せる  

筐体は 各回のジャンケンで出す手をゲーム開始前に決定します 能力者である高橋君は ゲーム開始前にこれをすべて読み取りました 
高橋君が読み取った情報は文字列 T として与えられます T の i 1  leq i  leq N  文字目が r のときは i 回目のじゃんけんで筐体がグーを出すことを s のときはチョキを出すことを p のときはパーを出すことを表します 
高橋君が N 回のじゃんけんで出す手を最適に選んだとき ゲーム終了までに最大で合計何点を得られるでしょうか 

制約
2  leq N  leq 10 5
1  leq K  leq N 1
1  leq R S P  leq 10 4
N K R S P は全て整数である 
 T    N
T に含まれる文字は r   s   p のいずれかである 


入力入力は以下の形式で標準入力から与えられる 
N K
R S P
T


出力得られる最大の合計スコアを出力せよ 

入力例 15 2
8 7 6
rsrpr


出力例 127

筐体は  グー チョキ グー パー グー  と手を出します 
これに対して 例えば  パー グー グー チョキ パー  と出せば 27 点を獲得できます 
これより大きい点は獲得できないので 27 を出力します 

入力例 27 1
100 10 1
ssssppr


出力例 2211


入力例 330 5
325 234 123
rspsspspsrpspsppprpsprpssprpsr


出力例 34996

Problem StatementAt an arcade  Takahashi is playing a game called RPS Battle  which is played as follows 

The player plays N rounds of Rock Paper Scissors against the machine   See Notes for the description of Rock Paper Scissors  A draw also counts as a round  
Each time the player wins a round  depending on which hand he she uses  he she earns the following score  no points for a draw or a loss  
R points for winning with Rock 
S points for winning with Scissors 
P points for winning with Paper 


However  in the i th round  the player cannot use the hand he she used in the  i K  th round   In the first K rounds  the player can use any hand  

Before the start of the game  the machine decides the hand it will play in each round  With supernatural power  Takahashi managed to read all of those hands 
The information Takahashi obtained is given as a string T  If the i th character of T  1  leq i  leq N  is r  the machine will play Rock in the i th round  Similarly  p and s stand for Paper and Scissors  respectively 
What is the maximum total score earned in the game by adequately choosing the hand to play in each round 

NotesIn this problem  Rock Paper Scissors can be thought of as a two player game  in which each player simultaneously forms Rock  Paper  or Scissors with a hand 

If a player chooses Rock and the other chooses Scissors  the player choosing Rock wins 
if a player chooses Scissors and the other chooses Paper  the player choosing Scissors wins 
if a player chooses Paper and the other chooses Rock  the player choosing Paper wins 
if both players play the same hand  it is a draw 


Constraints
2  leq N  leq 10 5
1  leq K  leq N 1
1  leq R S P  leq 10 4
N K R S  and P are all integers 
 T    N
T consists of r  p  and s 


InputInput is given from Standard Input in the following format 
N K
R S P
T


OutputPrint the maximum total score earned in the game 

Sample Input 15 2
8 7 6
rsrpr


Sample Output 127

The machine will play  Rock  Scissors  Rock  Paper  Rock  
We can  for example  play  Paper  Rock  Rock  Scissors  Paper  against it to earn 27 points 
We cannot earn more points  so the answer is 27 

Sample Input 27 1
100 10 1
ssssppr


Sample Output 2211


Sample Input 330 5
325 234 123
rspsspspsrpspsppprpsprpssprpsr


Sample Output 34996"
Handshake,https://atcoder.jp/contests/abc149/tasks/abc149_e,"問題文高橋君は あるパーティに特別ゲストとしてやってきました 
そこには一般ゲストが N 人おり 一般ゲスト i  1  leq i  leq N  の パワー は A i です 
高橋君は 握手 を M 回行うことで パーティ全体の 幸福度 を上げることにしました 握手開始前の幸福度を 0 とします  
握手は 以下の手順によって行われます 

高橋君が左手で手を握る  一般  ゲスト x と右手で手を握るゲスト y を決める  両手で同じゲストの手を握っても良い  
高橋君が実際にこれら二本の手を握ることで 幸福度が A x A y 上がる 

ただし 全く同じ握手を二回以上行ってはいけません 厳密には 次の条件を満たす必要があります 

k 回目の握手で 左手でゲスト x k と 右手でゲスト y k と手を握ったとする このとき   x p y p   x q y q  を満たすような p q 1  leq p   q  leq M  が存在しない 

M 回の握手を行った後 最終的な幸福度は最大でいくらにできるでしょうか 

制約
1  leq N  leq 10 5
1  leq M  leq N 2
1  leq A i  leq 10 5
入力は全て整数である 


入力入力は以下の形式で標準入力から与えられる 
N M
A 1 A 2     A N


出力M 回の握手を行った後の最終的な幸福度の最大値を出力せよ 

入力例 15 3
10 14 19 34 33


出力例 1202

例えば 

1 回目の握手で左手でゲスト 4 右手でゲスト 4 と握手し 
2 回目の握手で左手でゲスト 4 右手でゲスト 5 と握手し 
3 回目の握手で左手でゲスト 5 右手でゲスト 4 と握手する

ことで 幸福度を  34 34   34 33   33 34  202 とすることができます 
幸福度を 203 以上にはできないので 答えは 202 となります 

入力例 29 14
1 3 5 110 24 21 34 5 3


出力例 21837


入力例 39 73
67597 52981 5828 66249 75177 64141 40773 79105 16076


出力例 38128170

Problem StatementTakahashi has come to a party as a special guest 
There are N ordinary guests at the party  The i th ordinary guest has a power of A i 
Takahashi has decided to perform M handshakes to increase the happiness of the party  let the current happiness be 0  
A handshake will be performed as follows 

Takahashi chooses one  ordinary  guest x for his left hand and another guest y for his right hand  x and y can be the same  
Then  he shakes the left hand of Guest x and the right hand of Guest y simultaneously to increase the happiness by A x A y 

However  Takahashi should not perform the same handshake more than once  Formally  the following condition must hold 

Assume that  in the k th handshake  Takahashi shakes the left hand of Guest x k and the right hand of Guest y k  Then  there is no pair p  q  1  leq p   q  leq M  such that  x p y p   x q y q  

What is the maximum possible happiness after M handshakes 

Constraints
1  leq N  leq 10 5
1  leq M  leq N 2
1  leq A i  leq 10 5
All values in input are integers 


InputInput is given from Standard Input in the following format 
N M
A 1 A 2     A N


OutputPrint the maximum possible happiness after M handshakes 

Sample Input 15 3
10 14 19 34 33


Sample Output 1202

Let us say that Takahashi performs the following handshakes 

In the first handshake  Takahashi shakes the left hand of Guest 4 and the right hand of Guest 4 
In the second handshake  Takahashi shakes the left hand of Guest 4 and the right hand of Guest 5 
In the third handshake  Takahashi shakes the left hand of Guest 5 and the right hand of Guest 4 

Then  we will have the happiness of  34 34   34 33   33 34  202 
We cannot achieve the happiness of 203 or greater  so the answer is 202 

Sample Input 29 14
1 3 5 110 24 21 34 5 3


Sample Output 21837


Sample Input 39 73
67597 52981 5828 66249 75177 64141 40773 79105 16076


Sample Output 38128170"
Surrounded Nodes,https://atcoder.jp/contests/abc149/tasks/abc149_f,"問題文N 頂点の木 T が与えられます i 番目の辺は頂点 A i と B i  1  leq A i B i  leq N  を結びます 
T の各頂点を それぞれ独立に確率 1 2 で黒く 確率 1 2 で白く塗り 黒く塗られた頂点を全て含むような T の最小の部分木  連結な部分グラフ  を S とします  黒く塗られた頂点がないときは S は空グラフとします  
S の穴あき度を S に含まれる白く塗られた頂点の個数とします S の穴あき度の期待値を求めてください 
答えは有理数となるので 注記で述べるように  bmod 10 9 7 で出力してください 

注記有理数を出力する際は まずその有理数を分数  frac y  x  として表してください ここで x y は整数であり 
x は 10 9 7 で割り切れてはなりません  この問題の制約下で そのような表現は必ず可能です  
そして xz  equiv y  pmod 10 9 7  を満たすような 0 以上 10 9 6 以下の唯一の整数 z を出力してください 

制約
2  leq N  leq 2  times 10 5
1  leq A i B i  leq N
与えられるグラフは木である


入力入力は以下の形式で標準入力から与えられる 
N
A 1 B 1
 
A  N 1  B  N 1 


出力S の穴あき度の期待値を  bmod 10 9 7 で出力せよ 

入力例 13
1 2
2 3


出力例 1125000001

頂点 1 2 3 の色がそれぞれ 黒 白 黒 となったとき S の穴あき度は 1 です 
それ以外の塗り方では S の穴あき度は 0 であるため 穴あき度の期待値は 1 8 です 
8  times 125000001  equiv 1  pmod 10 9 7  より 125000001 を出力します 

入力例 24
1 2
2 3
3 4


出力例 2375000003

期待値は 3 8 です 
8  times 375000003  equiv 3  pmod 10 9 7  より 375000003 を出力します 

入力例 34
1 2
1 3
1 4


出力例 3250000002

期待値は 1 4 です 

入力例 47
4 7
3 1
2 6
5 2
7 1
2 7


出力例 4570312505

Problem StatementGiven is a tree T with N vertices  The i th edge connects Vertex A i and B i  1  leq A i B i  leq N  
Now  each vertex is painted black with probability 1 2 and white with probability 1 2  which is chosen independently from other vertices  Then  let S be the smallest subtree  connected subgraph  of T containing all the vertices painted black   If no vertex is painted black  S is the empty graph  
Let the holeyness of S be the number of white vertices contained in S  Find the expected holeyness of S 
Since the answer is a rational number  we ask you to print it  bmod 10 9 7  as described in Notes 

NotesWhen you print a rational number  first write it as a fraction  frac y  x   where x  y are integers  and x is not divisible by 10 9   7
 under the constraints of the problem  such representation is always possible  
Then  you need to print the only integer z between 0 and 10 9   6  inclusive  that satisfies xz  equiv y  pmod 10 9   7  

Constraints
2  leq N  leq 2  times 10 5
1  leq A i B i  leq N
The given graph is a tree 


InputInput is given from Standard Input in the following format 
N
A 1 B 1
 
A  N 1  B  N 1 


OutputPrint the expected holeyness of S   bmod 10 9 7 

Sample Input 13
1 2
2 3


Sample Output 1125000001

If the vertices 1  2  3 are painted black  white  black  respectively  the holeyness of S is 1 
Otherwise  the holeyness is 0  so the expected holeyness is 1 8 
Since 8  times 125000001  equiv 1  pmod 10 9 7   we should print 125000001 

Sample Input 24
1 2
2 3
3 4


Sample Output 2375000003

The expected holeyness is 3 8 
Since 8  times 375000003  equiv 3  pmod 10 9 7   we should print 375000003 

Sample Input 34
1 2
1 3
1 4


Sample Output 3250000002

The expected holeyness is 1 4 

Sample Input 47
4 7
3 1
2 6
5 2
7 1
2 7


Sample Output 4570312505"
500 Yen Coins,https://atcoder.jp/contests/abc150/tasks/abc150_a,"問題文高橋君は 500 円玉を K 枚持っています 
これらの総額が X 円以上である場合は Yes を そうでない場合は No を出力してください 

制約
1   K   100
1   X   10 5


入力入力は以下の形式で標準入力から与えられる 
K X


出力総額が X 円以上である場合は Yes を そうでない場合は No を出力せよ 

入力例 12 900


出力例 1Yes

500 円玉が 2 枚なので総額は 1000 円であり これは X   900 円以上です 

入力例 21 501


出力例 2No

500 円玉が 1 枚なので総額は 500 円であり これは X   501 円未満です 

入力例 34 2000


出力例 3Yes

500 円玉が 4 枚なので総額は 2000 円であり これは X   2000 円以上です 
Problem StatementTakahashi has K 500 yen coins   Yen is the currency of Japan  
If these coins add up to X yen or more  print Yes  otherwise  print No 

Constraints
1  leq K  leq 100
1  leq X  leq 10 5


InputInput is given from Standard Input in the following format 
K X


OutputIf the coins add up to X yen or more  print Yes  otherwise  print No 

Sample Input 12 900


Sample Output 1Yes

Two 500 yen coins add up to 1000 yen  which is not less than X   900 yen 

Sample Input 21 501


Sample Output 2No

One 500 yen coin is worth 500 yen  which is less than X   501 yen 

Sample Input 34 2000


Sample Output 3Yes

Four 500 yen coins add up to 2000 yen  which is not less than X   2000 yen"
Count ABC,https://atcoder.jp/contests/abc150/tasks/abc150_b,"問題文英大文字のみからなる長さ N の文字列 S があります 
S の連続する部分列  入出力例をご覧ください  として ABC がいくつ含まれるかを求めてください 

制約
3  leq N  leq 50
S は英大文字のみからなる 


入力入力は以下の形式で標準入力から与えられる 
N
S


出力S が連続する部分列として含む ABC の個数を出力せよ 

入力例 110
ZABCDBABCQ


出力例 12

S の 2 文字目から 4 文字目 および 7 文字目から 9 文字目の 2 箇所の連続する部分列が ABC に一致しています 

入力例 219
THREEONEFOURONEFIVE


出力例 20

S は ABC に一致する連続する部分列を含みません 

入力例 333
ABCCABCBABCCABACBCBBABCBCBCBCABCB


出力例 35

Problem StatementWe have a string S of length N consisting of uppercase English letters 
How many times does ABC occur in S as contiguous subsequences  see Sample Inputs and Outputs  

Constraints
3  leq N  leq 50
S consists of uppercase English letters 


InputInput is given from Standard Input in the following format 
N
S


OutputPrint number of occurrences of ABC in S as contiguous subsequences 

Sample Input 110
ZABCDBABCQ


Sample Output 12

Two contiguous subsequences of S are equal to ABC  the 2 nd through 4 th characters  and the 7 th through 9 th characters 

Sample Input 219
THREEONEFOURONEFIVE


Sample Output 20

No contiguous subsequences of S are equal to ABC 

Sample Input 333
ABCCABCBABCCABACBCBBABCBCBCBCABCB


Sample Output 35"
Count Order,https://atcoder.jp/contests/abc150/tasks/abc150_c,"問題文大きさ N の順列   1  2       N  を並び替えてできる数列  P  Q があります 
大きさ N の順列は N  通り考えられます このうち P が辞書順で a 番目に小さく Q が辞書順で b 番目に小さいとして  a   b  を求めてください 

注記2 つの数列 X  Y について ある整数 k が存在して X i   Y i  1  leq i   k  かつ X k   Y k が成り立つとき X は Y より辞書順で小さいと定義されます 

制約
2  leq N  leq 8
P  Q は大きさ N の順列である 
入力は全て整数である 


入力入力は以下の形式で標準入力から与えられる 
N
P 1 P 2     P N
Q 1 Q 2     Q N


出力 a   b  を出力せよ 

入力例 13
1 3 2
3 1 2


出力例 13

大きさ 3 の順列は  1  2  3   1  3  2   2  1  3   2  3  1   3  1  2   3  2  1  の 6 個あります このうち  1  3  2  は辞書順で 2 番目  3  1  2  は辞書順で 5 番目なので 答えは  2   5    3 です 

入力例 28
7 3 5 4 2 1 6 8
3 8 2 5 4 6 7 1


出力例 217517


入力例 33
1 2 3
1 2 3


出力例 30

Problem StatementWe have two permutations P and Q of size N  that is  P and Q are both rearrangements of  1  2       N   
There are N  possible permutations of size N  Among them  let P and Q be the a th and b th lexicographically smallest permutations  respectively  Find  a   b  

NotesFor two sequences X and Y  X is said to be lexicographically smaller than Y if and only if there exists an integer k such that X i   Y i  1  leq i   k  and X k   Y k 

Constraints
2  leq N  leq 8
P and Q are permutations of size N 


InputInput is given from Standard Input in the following format 
N
P 1 P 2     P N
Q 1 Q 2     Q N


OutputPrint  a   b  

Sample Input 13
1 3 2
3 1 2


Sample Output 13

There are 6 permutations of size 3   1  2  3    1  3  2    2  1  3    2  3  1    3  1  2   and  3  2  1   Among them   1  3  2  and  3  1  2  come 2 nd and 5 th in lexicographical order  so the answer is  2   5    3 

Sample Input 28
7 3 5 4 2 1 6 8
3 8 2 5 4 6 7 1


Sample Output 217517


Sample Input 33
1 2 3
1 2 3


Sample Output 30"
Semi Common Multiple,https://atcoder.jp/contests/abc150/tasks/abc150_d,"問題文長さ N の偶数からなる正の整数列 A   a 1 a 2     a N  と 整数 M が与えられます 
任意の k 1  leq k  leq N  に対して以下の条件を満たす正の整数 X を A の 半公倍数 と定義します 

X  a k  times  p 0 5  を満たす負でない整数 p が存在する 

1 以上 M 以下の整数のうちの A の半公倍数の個数を求めてください 

制約
1  leq N  leq 10 5
1  leq M  leq 10 9
2  leq a i  leq 10 9
a i は偶数である 
入力は全て整数である 


入力入力は以下の形式で標準入力から与えられる 
N M
a 1 a 2     a N


出力1 以上 M 以下の整数のうちの A の半公倍数の個数を出力せよ 

入力例 12 50
6 10


出力例 12


15   6   times 2 5 
15   10  times 1 5 
45   6   times 7 5 
45   10  times 4 5 

より 15 45 は A の半公倍数です 1 以上 50 以下の整数に他に A の半公倍数はないので 答えは 2 となります 

入力例 23 100
14 22 40


出力例 20

答えが 0 の場合もあります 

入力例 35 1000000000
6 6 2 6 2


出力例 3166666667

Problem StatementGiven are a sequence A   a 1 a 2       a N  of N positive even numbers  and an integer M 
Let a semi common multiple of A be a positive integer X that satisfies the following condition for every k  1  leq k  leq N  

There exists a non negative integer p such that X  a k  times  p 0 5  

Find the number of semi common multiples of A among the integers between 1 and M  inclusive  

Constraints
1  leq N  leq 10 5
1  leq M  leq 10 9
2  leq a i  leq 10 9
a i is an even number 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N M
a 1 a 2     a N


OutputPrint the number of semi common multiples of A among the integers between 1 and M  inclusive  

Sample Input 12 50
6 10


Sample Output 12


15   6   times 2 5 
15   10  times 1 5 
45   6   times 7 5 
45   10  times 4 5 

Thus  15 and 45 are semi common multiples of A  There are no other semi common multiples of A between 1 and 50  so the answer is 2 

Sample Input 23 100
14 22 40


Sample Output 20

The answer can be 0 

Sample Input 35 1000000000
6 6 2 6 2


Sample Output 3166666667"
Change a Little Bit,https://atcoder.jp/contests/abc150/tasks/abc150_e,"問題文0  1 からなる長さ N の異なる 2 つの数列 S  T に対し 関数 f S  T  を以下のように定めます 


S に対し以下の操作を繰り返して T と等しくすることを考える このとき行う操作のコストの和として考えられる最小の値が f S  T  である 

S i を  0 から 1 もしくは 1 から 0 に  変更する この操作のコストは 変更の直前に S j  neq T j  1  leq j  leq N  であったような整数 j の個数を D として D  times C i である 



0  1 からなる長さ N の異なる 2 つの数列の組  S  T  は 2 N  times  2 N   1  通り考えられます これらすべてに対する f S  T  の和を 10 9 7 で割った余りを計算してください 

制約
1  leq N  leq 2  times 10 5
1  leq C i  leq 10 9
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N
C 1 C 2  cdots C N


出力f S  T  の和を 10 9 7 で割った余りを出力せよ 

入力例 11
1000000000


出力例 1999999993

0  1 からなる長さ 1 の異なる 2 つの数列の組  S  T  は以下の 2 通りが考えられます 


S    0   T    1   S 1 を 1 に変更することでコスト 1000000000 で S   T とできるため f S  T    1000000000 です 


S    1   T    0   S 1 を 0 に変更することでコスト 1000000000 で S   T とできるため f S  T    1000000000 です 


これらの和は 2000000000 であり これを 10 9 7 で割った余りは 999999993 です 

入力例 22
5 8


出力例 2124

0  1 からなる長さ 2 の異なる 2 つの数列の組  S  T  は 12 通り存在し 例えば以下のものが考えられます 

S    0  1   T    1  0 　

この場合 1 回目の操作で S 1 を 1 に変更し 2 回目の操作で S 2 を 0 に変更するとき 操作のコストの和は 5  times 2   8   18 です これより小さいコストで S   T とすることはできないので f S  T    18 です 

入力例 35
52 67 72 25 79


出力例 3269312

Problem StatementFor two sequences S and T of length N consisting of 0 and 1  let us define f S  T  as follows 


Consider repeating the following operation on S so that S will be equal to T  f S  T  is the minimum possible total cost of those operations 

Change S i  from 0 to 1 or vice versa   The cost of this operation is D  times C i  where D is the number of integers j such that S j  neq T j  1  leq j  leq N  just before this change 



There are 2 N  times  2 N   1  pairs  S  T  of different sequences of length N consisting of 0 and 1  Compute the sum of f S  T  over all of those pairs  modulo  10 9 7  

Constraints
1  leq N  leq 2  times 10 5
1  leq C i  leq 10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
C 1 C 2  cdots C N


OutputPrint the sum of f S  T   modulo  10 9 7  

Sample Input 11
1000000000


Sample Output 1999999993

There are two pairs  S  T  of different sequences of length 2 consisting of 0 and 1  as follows 

S    0   T    1   by changing S 1 to 1  we can have S   T at the cost of 1000000000  so f S  T    1000000000 
S    1   T    0   by changing S 1 to 0  we can have S   T at the cost of 1000000000  so f S  T    1000000000 

The sum of these is 2000000000  and we should print it modulo  10 9 7   that is  999999993 

Sample Input 22
5 8


Sample Output 2124

There are 12 pairs  S  T  of different sequences of length 3 consisting of 0 and 1  which include 

S    0  1   T    1  0 

In this case  if we first change S 1 to 1 then change S 2 to 0  the total cost is 5  times 2   8   18  We cannot have S   T at a smaller cost  so f S  T    18 

Sample Input 35
52 67 72 25 79


Sample Output 3269312"
Xor Shift,https://atcoder.jp/contests/abc150/tasks/abc150_f,"問題文非負整数からなる長さ N の数列 a   a 0  ldots a  N 1    と b   b 0  ldots b  N 1    が与えられます 
すぬけ君は 0  leq k   N を満たす整数 k と 0 以上の整数 x を決めて 新しく長さ N の数列 a    a 0   ldots a  N 1     を次のようにして作ります 

a i   a  i k  mod N   XOR   x

a  が b と等しくなるような  k x  の組を全て求めてください 

 text  XOR   とは

整数 A  B のビットごとの排他的論理和 a  text  XOR   b は 以下のように定義されます 

 A  text  XOR   B を二進表記した際の 2 k  k  geq 0  の位の数は A  B を二進表記した際の 2 k の位の数のうち一方のみが 1 であれば 1 そうでなければ 0 である 

例えば 3  text  XOR   5   6 となります  二進表記すると  011  text  XOR   101   110   



制約
1  leq N  leq 2  times 10 5
0  leq a i b i   2  30 
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
N
a 0 a 1     a  N 1 
b 0 b 1     b  N 1 


出力a  と b が等しくなるような  k x  の組を 1 行に 1 組ずつ k の昇順  k が等しいものは x の昇順  にすべて出力せよ 
このような組が存在しない場合の出力は空でよい 

入力例 13
0 2 1
1 2 3


出力例 11 3

 k x   1 3  のとき 


a 0   a 1  XOR   3  1


a 1   a 2  XOR   3  2


a 2   a 0  XOR   3  3


となり a  は b と等しくなります 

入力例 25
0 0 0 0 0
2 2 2 2 2


出力例 20 2
1 2
2 2
3 2
4 2


入力例 36
0 1 3 7 6 4
1 5 4 6 2 3


出力例 32 2
5 5


入力例 42
1 2
0 0


出力例 4
条件を満たすような組が存在しないこともあります 
Problem StatementGiven are two sequences a   a 0  ldots a  N 1    and b   b 0  ldots b  N 1    of N non negative integers each 
Snuke will choose an integer k such that 0  leq k   N and an integer x not less than 0  to make a new sequence of length N  a    a 0   ldots a  N 1      as follows 

a i   a  i k  mod N   XOR   x

Find all pairs  k x  such that a  will be equal to b 

What is  text  XOR   

The XOR of integers A and B  A  text  XOR   B  is defined as follows 

When A  text  XOR   B is written in base two  the digit in the 2 k s place  k  geq 0  is 1 if either A or B  but not both  has 1 in the 2 k s place  and 0 otherwise 

For example  3  text  XOR   5   6   In base two  011  text  XOR   101   110  



Constraints
1  leq N  leq 2  times 10 5
0  leq a i b i   2  30 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
a 0 a 1     a  N 1 
b 0 b 1     b  N 1 


OutputPrint all pairs  k  x  such that a  and b will be equal  using one line for each pair  in ascending order of k  ascending order of x for pairs with the same k  
If there are no such pairs  the output should be empty 

Sample Input 13
0 2 1
1 2 3


Sample Output 11 3

If  k x   1 3  


a 0   a 1  XOR   3  1


a 1   a 2  XOR   3  2


a 2   a 0  XOR   3  3


and we have a    b 

Sample Input 25
0 0 0 0 0
2 2 2 2 2


Sample Output 20 2
1 2
2 2
3 2
4 2


Sample Input 36
0 1 3 7 6 4
1 5 4 6 2 3


Sample Output 32 2
5 5


Sample Input 42
1 2
0 0


Sample Output 4
No pairs may satisfy the condition"
Next Alphabet,https://atcoder.jp/contests/abc151/tasks/abc151_a,"問題文z でない英小文字 C が与えられます アルファベット順で C の次の文字を出力してください 

制約
C は z でない英小文字


入力入力は以下の形式で標準入力から与えられる 
C


出力アルファベット順で C の次の文字を出力せよ 

入力例 1a


出力例 1b

a の次は b です 

入力例 2y


出力例 2z

y の次は z です 
Problem StatementGiven is a lowercase English letter C that is not z  Print the letter that follows C in alphabetical order 

Constraints
C is a lowercase English letter that is not z 


InputInput is given from Standard Input in the following format 
C


OutputPrint the letter that follows C in alphabetical order 

Sample Input 1a


Sample Output 1b

a is followed by b 

Sample Input 2y


Sample Output 2z

y is followed by z"
Achieve the Goal,https://atcoder.jp/contests/abc151/tasks/abc151_b,"問題文高橋君は N 科目のテストを受けます 各テストは K 点満点であり 点数はそれぞれ 0 以上の整数です 
高橋君は N 1 科目のテストを既に受けており i 番目の科目のテストの点数は A i 点でした 
高橋君の目標は N 科目のテストの平均点を M 点以上にすることです 
高橋君が目標を達成するためには 最後のテストで最低何点取る必要があるか出力してください 
達成不可能である場合は 代わりに  1 を出力してください 

制約
2  leq N  leq 100
1  leq K  leq 100
1  leq M  leq K
0  leq A i  leq K
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
N K M
A 1 A 2     A  N 1 


出力最後のテストでの必要最低点または  1 を出力せよ 

入力例 15 10 7
8 10 3 6


出力例 18

最後のテストで 8 点を取ると  8 10 3 6 8  5   7 より平均点は 7 点となり目標を達成できます 

入力例 24 100 60
100 100 100


出力例 20

最後のテストで 0 点を取っても目標を達成できます 

入力例 34 100 60
0 0 0


出力例 3 1

もはや挽回は不可能です 
Problem StatementTakahashi is taking exams on N subjects  The score on each subject will be an integer between 0 and K  inclusive  
He has already taken exams on N 1 subjects and scored A i points on the i th subject 
His goal is to achieve the average score of M points or above on the N subjects 
Print the minimum number of points Takahashi needs on the final subject to achieve his goal 
If the goal is unachievable  print  1 instead 

Constraints
2  leq N  leq 100
1  leq K  leq 100
1  leq M  leq K
0  leq A i  leq K
All values in input are integers 


InputInput is given from Standard Input in the following format 
N K M
A 1 A 2     A  N 1 


OutputPrint the minimum number of points required on the final subject  or  1 

Sample Input 15 10 7
8 10 3 6


Sample Output 18

If he scores 8 points on the final subject  his average score will be  8 10 3 6 8  5   7 points  which meets the goal 

Sample Input 24 100 60
100 100 100


Sample Output 20

Scoring 0 points on the final subject still meets the goal 

Sample Input 34 100 60
0 0 0


Sample Output 3 1

He can no longer meet the goal"
Welcome to AtCoder,https://atcoder.jp/contests/abc151/tasks/abc151_c,"問題文高橋君は AtCoder のコンテストに参加しています 
このコンテストでは  N 問の問題が出題されます 
高橋君はコンテスト中に M 回の提出を行いました 
i 回目の提出は p i 番目の問題への提出であり 結果は S i  AC または WA  でした 
高橋君の正答数は AC を 1 回以上出した問題の数です 
高橋君のペナルティ数は 高橋君が AC を 1 回以上出した各問題において 初めて AC を出すまでに出した WA の数の総和です 
高橋君の正答数とペナルティ数を答えてください 

制約
N   M   p i は整数
1   N   10 5
0   M   10 5
1  leq p i  leq N
S i は AC か WA のいずれか


入力入力は以下の形式で標準入力から与えられる 
N M
p 1 S 1
 
p M S M


出力高橋君の正答数とペナルティ数を出力せよ 

入力例 12 5
1 WA
1 AC
2 WA
2 AC
2 WA


出力例 12 2

高橋君が 1 番目の問題に初めて AC を出したのは 2 回目の提出であり これまでに 1 番目の問題で 1 回 WA を出しています 
高橋君が 2 番目の問題に初めて AC を出したのは 4 回目の提出であり これまでに 2 番目の問題で 1 回 WA を出しています 
以上より 高橋君の正答数は 2 であり ペナルティ数も 2 です 

入力例 2100000 3
7777 AC
7777 AC
7777 AC


出力例 21 0

同じ問題で何度 AC を出しても無意味であることに注意してください 

入力例 36 0


出力例 30 0

Problem StatementTakahashi participated in a contest on AtCoder 
The contest had N problems 
Takahashi made M submissions during the contest 
The i th submission was made for the p i th problem and received the verdict S i  AC or WA  
The number of Takahashi s correct answers is the number of problems on which he received an AC once or more 
The number of Takahashi s penalties is the sum of the following count for the problems on which he received an AC once or more  the number of WAs received before receiving an AC for the first time on that problem 
Find the numbers of Takahashi s correct answers and penalties 

Constraints
N  M  and p i are integers 
1  leq N  leq 10 5
0  leq M  leq 10 5
1  leq p i  leq N
S i is AC or WA 


InputInput is given from Standard Input in the following format 
N M
p 1 S 1
 
p M S M


OutputPrint the number of Takahashi s correct answers and the number of Takahashi s penalties 

Sample Input 12 5
1 WA
1 AC
2 WA
2 AC
2 WA


Sample Output 12 2

In his second submission  he received an AC on the first problem for the first time  Before this  he received one WA on this problem 
In his fourth submission  he received an AC on the second problem for the first time  Before this  he received one WA on this problem 
Thus  he has two correct answers and two penalties 

Sample Input 2100000 3
7777 AC
7777 AC
7777 AC


Sample Output 21 0

Note that it is pointless to get an AC more than once on the same problem 

Sample Input 36 0


Sample Output 30 0"
Maze Master,https://atcoder.jp/contests/abc151/tasks/abc151_d,"問題文高橋君は 縦 H マス 横 W マスの H  times W マスからなる迷路を持っています 
上から i 行目 左から j 列目のマス  i j  は  S  ij  が   のとき壁であり   のとき道です 
道のマスからは 上下左右に隣接する道のマスに移動することができます 
迷路の外に移動すること 壁のマスへ移動すること 斜めに移動することはできません 
高橋君は 道のマスからスタートとゴールを自由に決め 迷路を青木君に渡します 
青木君は 移動回数が最小になるようにしてスタートからゴールまで移動します 
高橋君がスタートとゴールの位置を適切に定めたとき 青木君の移動回数は最大で何回になるでしょうか 

制約
1  leq H W  leq 20
S  ij  は   か  
S は   を 2 つ以上含む
任意の道のマスから任意の道のマスまで 0 回以上の移動で到達できる


入力入力は以下の形式で標準入力から与えられる 
H W
S  11    S  1W 
 
S  H1    S  HW 


出力青木君の移動回数の最大値を出力せよ 

入力例 13 3
   
   
   


出力例 14

高橋君が左上のマスをスタート 右下のマスをゴールにした場合 青木君の移動回数は 4 回になります 

入力例 23 5
     
     
     


出力例 210

高橋君が左下のマスをスタート 右上のマスをゴールにした場合 青木君の移動回数は 10 回になります 
Problem StatementTakahashi has a maze  which is a grid of H  times W squares with H horizontal rows and W vertical columns 
The square at the i th row from the top and the j th column is a  wall  square if S  ij  is    and a  road  square if S  ij  is   
From a road square  you can move to a horizontally or vertically adjacent road square 
You cannot move out of the maze  move to a wall square  or move diagonally 
Takahashi will choose a starting square and a goal square  which can be any road squares  and give the maze to Aoki 
Aoki will then travel from the starting square to the goal square  in the minimum number of moves required 
In this situation  find the maximum possible number of moves Aoki has to make 

Constraints
1  leq H W  leq 20
S  ij  is   or   
S contains at least two occurrences of   
Any road square can be reached from any road square in zero or more moves 


InputInput is given from Standard Input in the following format 
H W
S  11    S  1W 
 
S  H1    S  HW 


OutputPrint the maximum possible number of moves Aoki has to make 

Sample Input 13 3
   
   
   


Sample Output 14

If Takahashi chooses the top left square as the starting square and the bottom right square as the goal square  Aoki has to make four moves 

Sample Input 23 5
     
     
     


Sample Output 210

If Takahashi chooses the bottom left square as the starting square and the top right square as the goal square  Aoki has to make ten moves"
Max Min Sums,https://atcoder.jp/contests/abc151/tasks/abc151_e,"問題文有限個の整数からなる集合 X に対し f X   max X    min X と定義します 
N 個の整数 A 1     A N が与えられます 
このうち K 個を選び それらからなる集合を S とします 同じ値であっても添字が異なる要素を区別すると そのような選び方は    N C K 通りありますが その全てについての f S  の合計を求めてください 
答えは非常に大きくなる可能性があるので  bmod 10 9 7 で出力してください 

制約
1  leq N  leq 10 5
1  leq K  leq N
 A i   leq 10 9


入力入力は以下の形式で標準入力から与えられる 
N K
A 1     A N


出力答えを  bmod 10 9 7 で出力せよ 

入力例 14 2
1 1 3 4


出力例 111

S の選び方は   1 1     1 3     1 4     1 3     1 4     3 4   の 6 通りあり  ふたつの 1 は区別します  f S  はそれぞれ 0 2 3 2 3 1 となるので 合計は 11 です 

入力例 26 3
10 10 10  10  10  10


出力例 2360

S の選び方は 20 通りあり そのうち 18 通りで f S  20 2 通りで f S  0 となります 

入力例 33 1
1 1 1


出力例 30


入力例 410 6
1000000000 1000000000 1000000000 1000000000 1000000000 0 0 0 0 0


出力例 4999998537

合計は  bmod 10 9 7 で出力してください 
Problem StatementFor a finite set of integers X  let f X   max X    min X 
Given are N integers A 1     A N 
We will choose K of them and let S be the set of the integers chosen  If we distinguish elements with different indices even when their values are the same  there are    N C K ways to make this choice  Find the sum of f S  over all those ways 
Since the answer can be enormous  print it  bmod  10 9 7  

Constraints
1  leq N  leq 10 5
1  leq K  leq N
 A i   leq 10 9


InputInput is given from Standard Input in the following format 
N K
A 1     A N


OutputPrint the answer  bmod  10 9 7  

Sample Input 14 2
1 1 3 4


Sample Output 111

There are six ways to choose S    1 1     1 3     1 4     1 3     1 4      3 4    we distinguish the two 1s   The value of f S  for these choices are 0 2 3 2 3 1  respectively  for the total of 11 

Sample Input 26 3
10 10 10  10  10  10


Sample Output 2360

There are 20 ways to choose S  In 18 of them  f S  20  and in 2 of them  f S  0 

Sample Input 33 1
1 1 1


Sample Output 30


Sample Input 410 6
1000000000 1000000000 1000000000 1000000000 1000000000 0 0 0 0 0


Sample Output 4999998537

Print the sum  bmod  10 9 7"
Enclose All,https://atcoder.jp/contests/abc151/tasks/abc151_f,"問題文平面上の N 個の点  x i  y i  が与えられます 
これら全てを内部または周上に含む円の半径の最小値を求めてください 

制約
2   N   50
0   x i   1000
0   y i   1000
与えられる N 点は全て異なる
入力で与えられる値は全て整数


入力入力は以下の形式で標準入力から与えられる 
N
x 1 y 1
 
x N y N


出力N 個全ての点を内部または周上に含む円の半径の最小値を出力せよ 
なお 想定解答との絶対誤差または相対誤差が 10   6  以下であれば正解として扱われる 

入力例 12
0 0
1 0


出力例 10 500000000000000000

2 つの点は中心  0 5 0   半径 0 5 の円に含まれます 

入力例 23
0 0
0 1
1 0


出力例 20 707106781186497524


入力例 310
10 9
5 9
2 0
0 0
2 7
3 3
2 5
10 0
3 7
1 9


出力例 36 726812023536805158

想定解答との絶対誤差または相対誤差が 10   6  以下であれば正解として扱われます 
Problem StatementGiven are N points  x i  y i  in a two dimensional plane 
Find the minimum radius of a circle such that all the points are inside or on it 

Constraints
2  leq N  leq 50
0  leq x i  leq 1000
0  leq y i  leq 1000
The given N points are all different 
The values in input are all integers 


InputInput is given from Standard Input in the following format 
N
x 1 y 1
 
x N y N


OutputPrint the minimum radius of a circle such that all the N points are inside or on it 
Your output will be considered correct if the absolute or relative error from our answer is at most 10   6  

Sample Input 12
0 0
1 0


Sample Output 10 500000000000000000

Both points are contained in the circle centered at  0 5 0  with a radius of 0 5 

Sample Input 23
0 0
0 1
1 0


Sample Output 20 707106781186497524


Sample Input 310
10 9
5 9
2 0
0 0
2 7
3 3
2 5
10 0
3 7
1 9


Sample Output 36 726812023536805158

If the absolute or relative error from our answer is at most 10   6   the output will be considered correct"
AC or WA,https://atcoder.jp/contests/abc152/tasks/abc152_a,"問題文
高橋君は プログラミングコンテスト AXC001 に参加しており 問題 A にコードを提出しました 
この問題には N 個のテストケースがあり すべてのテストケースに正解した場合のみ提出は AC となります 
高橋君の提出は N 個のテストケースのうち M 個のテストケースに正解しました 
高橋君の提出が AC となるか判定してください   

制約

1  leq N  leq 100
0  leq M  leq N
入力はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
N M


出力
高橋君の提出が AC となる場合は Yes  そうでない場合は No と出力せよ 

入力例 13 3


出力例 1Yes

3 つのテストケースすべてに正解したので AC となります   

入力例 23 2


出力例 2No

3 つのテストケース中 2 つしか正解できなかったので AC となりません 

入力例 31 1


出力例 3Yes

Problem Statement
Takahashi is participating in a programming contest  AXC001  He has just submitted his code to Problem A 
The problem has N test cases  all of which must be passed to get an AC verdict 
Takahashi s submission has passed M cases out of the N test cases 
Determine whether Takahashi s submission gets an AC 

Constraints

1  leq N  leq 100
0  leq M  leq N
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N M


Output
If Takahashi s submission gets an AC  print Yes  otherwise  print No 

Sample Input 13 3


Sample Output 1Yes

All three test cases have been passed  so his submission gets an AC 

Sample Input 23 2


Sample Output 2No

Only two out of the three test cases have been passed  so his submission does not get an AC 

Sample Input 31 1


Sample Output 3Yes"
Comparing Strings,https://atcoder.jp/contests/abc152/tasks/abc152_b,"問題文1 桁の正整数 a  b が与えられます 整数 a を b 回繰り返してできる文字列と
整数 b を a 回繰り返してできる文字列のうち 辞書順で小さい方を答えてください 

制約
1   a   9
1   b   9
a b は整数


入力入力は以下の形式で標準入力から与えられる 
a b


出力2 つの文字列のうち辞書順で小さい方を出力せよ  2 つの文字列が等しいときは そのうちどちらかを出力せよ  

入力例 14 3


出力例 13333

できる 2 つの文字列は 444 と 3333 です このうち辞書順で小さい文字列は 3333 です 

入力例 27 7


出力例 27777777

Problem StatementGiven are 1 digit positive integers a and b  Consider these two strings  the concatenation of b copies of the digit a  and the concatenation of a copies of the digit b  Which of these is lexicographically smaller 

Constraints
1  leq a  leq 9
1  leq b  leq 9
a and b are integers 


InputInput is given from Standard Input in the following format 
a b


OutputPrint the lexicographically smaller of the two strings   If the two strings are equal  print one of them  

Sample Input 14 3


Sample Output 13333

We have two strings 444 and 3333  Between them  3333 is the lexicographically smaller 

Sample Input 27 7


Sample Output 27777777"
Low Elements,https://atcoder.jp/contests/abc152/tasks/abc152_c,"問題文
1   ldots  N の順列 P 1   ldots  P N が与えられます 
次の条件を満たす整数 i 1  leq i  leq N  の個数を数えてください   

任意の整数 j 1  leq j  leq i  に対して  P i  leq P j


制約

1  leq N  leq 2  times 10 5
P 1   ldots  P N は 1   ldots  N の順列である   
入力はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
N
P 1     P N


出力
条件を満たす整数 i の個数を出力せよ 

入力例 15
4 2 5 1 3


出力例 13

i 1 2 4 が条件を満たします 
i 3 は条件を満たしません 
例えば  j 1 とすると  P i   P j となります 
同様に  i 5 も条件を満たしません 
したがって 条件を満たす整数 i の個数は 3 となります   

入力例 24
4 3 2 1


出力例 24

すべての整数 i 1  leq i  leq N  が条件を満たします   

入力例 36
1 2 3 4 5 6


出力例 31

i 1 のみが条件を満たします   

入力例 48
5 7 4 2 6 8 1 3


出力例 44


入力例 51
1


出力例 51

Problem Statement
Given is a permutation P 1   ldots  P N of 1   ldots  N 
Find the number of integers i  1  leq i  leq N  that satisfy the following condition   

For any integer j  1  leq j  leq i   P i  leq P j 


Constraints

1  leq N  leq 2  times 10 5
P 1   ldots  P N is a permutation of 1   ldots  N   
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N
P 1     P N


Output
Print the number of integers i that satisfy the condition 

Sample Input 15
4 2 5 1 3


Sample Output 13

i 1  2  and 4 satisfy the condition  but i 3 does not   for example  P i   P j holds for j   1 
Similarly  i 5 does not satisfy the condition  either  Thus  there are three integers that satisfy the condition 

Sample Input 24
4 3 2 1


Sample Output 24

All integers i  1  leq i  leq N  satisfy the condition 

Sample Input 36
1 2 3 4 5 6


Sample Output 31

Only i 1 satisfies the condition 

Sample Input 48
5 7 4 2 6 8 1 3


Sample Output 44


Sample Input 51
1


Sample Output 51"
Handstand 2,https://atcoder.jp/contests/abc152/tasks/abc152_d,"問題文
正の整数 N が与えられます 
N 以下の正の整数の組  A B  であって 次の条件を満たすものの個数を求めてください   

A B を先頭に 0 のつかない 10 進数表記で表したときに  A の末尾の桁が B の先頭の桁に等しく  A の先頭の桁が B の末尾の桁に等しい


制約

1  leq N  leq 2  times 10 5
入力はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
N


出力
答えを出力せよ 

入力例 125


出力例 117

条件を満たす正の整数の組  A B  は 
 1 1    1 11    2 2    2 22    3 3    4 4    5 5    6 6    7 7    8 8    9 9    11 1    11 11    12 21    21 12    22 2    22 22 
の 17 個あります 

入力例 21


出力例 21


入力例 3100


出力例 3108


入力例 42020


出力例 440812


入力例 5200000


出力例 5400000008

Problem Statement
Given is a positive integer N 
Find the number of pairs  A  B  of positive integers not greater than N that satisfy the following condition 

When A and B are written in base ten without leading zeros  the last digit of A is equal to the first digit of B  and the first digit of A is equal to the last digit of B 


Constraints

1  leq N  leq 2  times 10 5
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N


Output
Print the answer 

Sample Input 125


Sample Output 117

The following 17 pairs satisfy the condition   1 1    1 11    2 2    2 22    3 3    4 4    5 5    6 6    7 7    8 8    9 9    11 1    11 11    12 21    21 12    22 2   and  22 22  

Sample Input 21


Sample Output 21


Sample Input 3100


Sample Output 3108


Sample Input 42020


Sample Output 440812


Sample Input 5200000


Sample Output 5400000008"
Flatten,https://atcoder.jp/contests/abc152/tasks/abc152_e,"問題文N 個の正整数 A 1     A N が与えられます 
次の条件を満たすような正整数 B 1     B N を考えます 
条件 1  leq i   j  leq N を満たすどのような i j についても A i B i   A j B j が成り立つ 
このような B 1     B N における B 1         B N の最小値を求めてください 
ただし 答えは非常に大きくなる可能性があるため  10 9  7  で割ったあまりを出力してください 

制約
1  leq N  leq 10 4
1  leq A i  leq 10 6
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
N
A 1     A N


出力条件を満たすような B 1     B N における B 1         B N の最小値を  10 9  7  で割ったあまりを出力せよ 

入力例 13
2 3 4


出力例 113

B 1 6  B 2 4  B 3 3 とすると条件を満たします 

入力例 25
12 12 12 12 12


出力例 25

全ての B i を 1 とすればよいです 

入力例 33
1000000 999999 999998


出力例 3996989508

和を  10 9 7  で割った余りを出力してください 
Problem StatementGiven are N positive integers A 1     A N 
Consider positive integers B 1       B N that satisfy the following condition 
Condition  For any i  j such that 1  leq i   j  leq N  A i B i   A j B j holds 
Find the minimum possible value of B 1         B N for such B 1     B N 
Since the answer can be enormous  print the sum modulo  10 9  7  

Constraints
1  leq N  leq 10 4
1  leq A i  leq 10 6
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
A 1     A N


OutputPrint the minimum possible value of B 1         B N for B 1     B N that satisfy the condition  modulo  10 9  7  

Sample Input 13
2 3 4


Sample Output 113

Let B 1 6  B 2 4  and B 3 3  and the condition will be satisfied 

Sample Input 25
12 12 12 12 12


Sample Output 25

We can let all B i be 1 

Sample Input 33
1000000 999999 999998


Sample Output 3996989508

Print the sum modulo  10 9 7"
Tree and Constraints,https://atcoder.jp/contests/abc152/tasks/abc152_f,"問題文
1 から N までの番号がつけられた N 個の頂点を持つ木があります 
この木の i 番目の辺は頂点 a i と頂点 b i を結んでいます 
この木の各辺に それぞれ白か黒の色を塗ることを考えます このような塗り方は 2  N 1  通り考えられますが そのうち以下の M 個の制約をすべて満たすものの個数を求めてください   

i 1  leq i  leq M  番目の制約は  2 つの整数 u i と v i によって表される これは 頂点 u i と頂点 v i を結ぶパスに含まれる辺のうち 黒く塗られているものが 1 つ以上存在しなければならないことを意味する 


制約

2  leq N  leq 50
1  leq a i b i  leq N
入力で与えられるグラフは木である 
1  leq M  leq  min 20  frac N N 1   2  
1  leq u i   v i  leq N
i  not  j なら u i  not u j または v i not v j
入力はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
N
a 1 b 1
 
a  N 1  b  N 1 
M
u 1 v 1
 
u M v M


出力
M 個の制約をすべて満たす塗り方の個数を出力せよ 

入力例 13
1 2
2 3
1
1 3


出力例 13

この入力中の木は以下のようなものです 





辺 1 と辺 2 をそれぞれ  白 黒    黒 白    黒 黒  で塗った場合に M 個の制約をすべて満たすことができます 
したがって答えは 3 です 

入力例 22
1 2
1
1 2


出力例 21

この入力中の木は以下のようなものです 





辺 1 を黒く塗った場合のみ  M 個の制約をすべて満たすことができます   
したがって答えは 1 です 

入力例 35
1 2
3 2
3 4
5 3
3
1 3
2 4
2 5


出力例 39

この入力中の木は以下のようなものです 






入力例 48
1 2
2 3
4 3
2 5
6 3
6 7
8 6
5
2 7
3 5
1 6
2 8
7 8


出力例 462

この入力中の木は以下のようなものです 





Problem Statement
We have a tree with N vertices numbered 1 to N 
The i th edge in this tree connects Vertex a i and Vertex b i 
Consider painting each of these edges white or black  There are 2  N 1  such ways to paint the edges  Among them  how many satisfy all of the following M restrictions   

The i th  1  leq i  leq M  restriction is represented by two integers u i and v i  which mean that the path connecting Vertex u i and Vertex v i must contain at least one edge painted black 


Constraints

2  leq N  leq 50
1  leq a i b i  leq N
The graph given in input is a tree 
1  leq M  leq  min 20  frac N N 1   2  
1  leq u i   v i  leq N
If i  not  j  either u i  not u j or v i not v j
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N
a 1 b 1
 
a  N 1  b  N 1 
M
u 1 v 1
 
u M v M


Output
Print the number of ways to paint the edges that satisfy all of the M conditions 

Sample Input 13
1 2
2 3
1
1 3


Sample Output 13

The tree in this input is shown below 





All of the M restrictions will be satisfied if Edge 1 and 2 are respectively painted  white  black    black  white   or  black  black   so the answer is 3 

Sample Input 22
1 2
1
1 2


Sample Output 21

The tree in this input is shown below 





All of the M restrictions will be satisfied only if Edge 1 is painted black  so the answer is 1 

Sample Input 35
1 2
3 2
3 4
5 3
3
1 3
2 4
2 5


Sample Output 39

The tree in this input is shown below 






Sample Input 48
1 2
2 3
4 3
2 5
6 3
6 7
8 6
5
2 7
3 5
1 6
2 8
7 8


Sample Output 462

The tree in this input is shown below"
Serval vs Monster,https://atcoder.jp/contests/abc153/tasks/abc153_a,"問題文サーバルはモンスターと戦っています 
モンスターの体力は H です 
サーバルが攻撃を 1 回行うとモンスターの体力を A 減らすことができます 
攻撃以外の方法でモンスターの体力を減らすことはできません 
モンスターの体力を 0 以下にすればサーバルの勝ちです 
サーバルがモンスターに勝つために必要な攻撃の回数を求めてください 

制約
1  leq H  leq 10 4
1  leq A  leq 10 4
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
H A


出力サーバルがモンスターに勝つために必要な攻撃の回数を出力せよ 

入力例 110 4


出力例 13


1 回目の攻撃の後のモンスターの体力は 6 です 
2 回目の攻撃の後のモンスターの体力は 2 です 
3 回目の攻撃の後のモンスターの体力は  2 です 

よって 3 回の攻撃でモンスターに勝つことができます 

入力例 21 10000


出力例 21


入力例 310000 1


出力例 310000

Problem StatementServal is fighting with a monster 
The health of the monster is H 
In one attack  Serval can decrease the monster s health by A 
There is no other way to decrease the monster s health 
Serval wins when the monster s health becomes 0 or below 
Find the number of attacks Serval needs to make before winning 

Constraints
1  leq H  leq 10 4
1  leq A  leq 10 4
All values in input are integers 


InputInput is given from Standard Input in the following format 
H A


OutputPrint the number of attacks Serval needs to make before winning 

Sample Input 110 4


Sample Output 13


After one attack  the monster s health will be 6 
After two attacks  the monster s health will be 2 
After three attacks  the monster s health will be  2 

Thus  Serval needs to make three attacks to win 

Sample Input 21 10000


Sample Output 21


Sample Input 310000 1


Sample Output 310000"
Common Raccoon vs Monster,https://atcoder.jp/contests/abc153/tasks/abc153_b,"問題文アライグマはモンスターと戦っています 
モンスターの体力は H です 
アライグマは N 種類の必殺技を使うことができ i 番目の必殺技を使うとモンスターの体力を A i 減らすことができます 
必殺技を使う以外の方法でモンスターの体力を減らすことはできません 
モンスターの体力を 0 以下にすればアライグマの勝ちです 
アライグマが同じ必殺技を 2 度以上使うことなくモンスターに勝つことができるなら Yes を できないなら No を出力してください 

制約
1  leq H  leq 10 9
1  leq N  leq 10 5
1  leq A i  leq 10 4
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
H N
A 1 A 2     A N


出力アライグマが同じ必殺技を 2 度以上使うことなくモンスターに勝つことができるなら Yes を できないなら No を出力せよ 

入力例 110 3
4 5 6


出力例 1Yes

例えば 2 番目と 3 番目の必殺技を使うことで モンスターの体力を 0 以下にできます 

入力例 220 3
4 5 6


出力例 2No


入力例 3210 5
31 41 59 26 53


出力例 3Yes


入力例 4211 5
31 41 59 26 53


出力例 4No

Problem StatementRaccoon is fighting with a monster 
The health of the monster is H 
Raccoon can use N kinds of special moves  Using the i th move decreases the monster s health by A i 
There is no other way to decrease the monster s health 
Raccoon wins when the monster s health becomes 0 or below 
If Raccoon can win without using the same move twice or more  print Yes  otherwise  print No 

Constraints
1  leq H  leq 10 9
1  leq N  leq 10 5
1  leq A i  leq 10 4
All values in input are integers 


InputInput is given from Standard Input in the following format 
H N
A 1 A 2     A N


OutputIf Raccoon can win without using the same move twice or more  print Yes  otherwise  print No 

Sample Input 110 3
4 5 6


Sample Output 1Yes

The monster s health will become 0 or below after  for example  using the second and third moves 

Sample Input 220 3
4 5 6


Sample Output 2No


Sample Input 3210 5
31 41 59 26 53


Sample Output 3Yes


Sample Input 4211 5
31 41 59 26 53


Sample Output 4No"
Fennec vs Monster,https://atcoder.jp/contests/abc153/tasks/abc153_c,"問題文フェネックは N 体のモンスターと戦っています 
i 番目のモンスターの体力は H i です 
フェネックは次の 2 種類の行動を行うことができます 

攻撃 モンスターを 1 体選んで攻撃することで そのモンスターの体力を 1 減らす
必殺技 モンスターを 1 体選んで必殺技を使うことで そのモンスターの体力を 0 にする

攻撃と必殺技以外の方法でモンスターの体力を減らすことはできません 
全てのモンスターの体力を 0 以下にすればフェネックの勝ちです 
フェネックが K 回まで必殺技を使えるとき モンスターに勝つまでに行う攻撃の回数  必殺技は数えません  の最小値を求めてください 

制約
1  leq N  leq 2  times 10 5
0  leq K  leq 2  times 10 5
1  leq H i  leq 10 9
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
N K
H 1     H N


出力フェネックがモンスターに勝つまでに行う攻撃の回数  必殺技は数えない  の最小値を出力せよ 

入力例 13 1
4 1 5


出力例 15

3 番目のモンスターに必殺技を使い 1 番目のモンスターに 4 回 2 番目のモンスターに 1 回攻撃を行うことで 攻撃の回数を 5 回にできます 

入力例 28 9
7 9 3 2 3 8 4 6


出力例 20

全てのモンスターに必殺技を使うことができます 

入力例 33 0
1000000000 1000000000 1000000000


出力例 33000000000

オーバーフローに注意してください 
Problem StatementFennec is fighting with N monsters 
The health of the i th monster is H i 
Fennec can do the following two actions 

Attack  Fennec chooses one monster  That monster s health will decrease by 1 
Special Move  Fennec chooses one monster  That monster s health will become 0 

There is no way other than Attack and Special Move to decrease the monsters  health 
Fennec wins when all the monsters  healths become 0 or below 
Find the minimum number of times Fennec needs to do Attack  not counting Special Move  before winning when she can use Special Move at most K times 

Constraints
1  leq N  leq 2  times 10 5
0  leq K  leq 2  times 10 5
1  leq H i  leq 10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
N K
H 1     H N


OutputPrint the minimum number of times Fennec needs to do Attack  not counting Special Move  before winning 

Sample Input 13 1
4 1 5


Sample Output 15

By using Special Move on the third monster  and doing Attack four times on the first monster and once on the second monster  Fennec can win with five Attacks 

Sample Input 28 9
7 9 3 2 3 8 4 6


Sample Output 20

She can use Special Move on all the monsters 

Sample Input 33 0
1000000000 1000000000 1000000000


Sample Output 33000000000

Watch out for overflow"
Caracal vs Monster,https://atcoder.jp/contests/abc153/tasks/abc153_d,"問題文カラカルはモンスターと戦っています 
モンスターの体力は H です 
カラカルはモンスターを 1 体選んで攻撃することができます モンスターを攻撃したとき 攻撃対象のモンスターの体力に応じて 次のどちらかが起こります 

モンスターの体力が 1 なら そのモンスターの体力は 0 になる
モンスターの体力が X  1 なら そのモンスターは消滅し 体力が  lfloor X 2  rfloor のモンスターが新たに 2 体現れる

  lfloor r  rfloor は r を超えない最大の整数を表す 
全てのモンスターの体力を 0 以下にすればカラカルの勝ちです 
カラカルがモンスターに勝つまでに行う攻撃の回数の最小値を求めてください 

制約
1  leq H  leq 10  12 
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
H


出力カラカルがモンスターに勝つまでに行う攻撃の回数の最小値を出力せよ 

入力例 12


出力例 13

モンスターを攻撃すると 元のモンスターは消滅し 体力 1 のモンスターが 2 体現れます 
この 2 体のモンスターをそれぞれ 1 回ずつ攻撃し 合計 3 回の攻撃で勝つことができます 

入力例 24


出力例 27


入力例 31000000000000


出力例 31099511627775

Problem StatementCaracal is fighting with a monster 
The health of the monster is H 
Caracal can attack by choosing one monster  When a monster is attacked  depending on that monster s health  the following happens 

If the monster s health is 1  it drops to 0 
If the monster s health  X  is greater than 1  that monster disappears  Then  two new monsters appear  each with the health of  lfloor X 2  rfloor 

  lfloor r  rfloor denotes the greatest integer not exceeding r  
Caracal wins when the healths of all existing monsters become 0 or below 
Find the minimum number of attacks Caracal needs to make before winning 

Constraints
1  leq H  leq 10  12 
All values in input are integers 


InputInput is given from Standard Input in the following format 
H


OutputFind the minimum number of attacks Caracal needs to make before winning 

Sample Input 12


Sample Output 13

When Caracal attacks the initial monster  it disappears  and two monsters appear  each with the health of 1 
Then  Caracal can attack each of these new monsters once and win with a total of three attacks 

Sample Input 24


Sample Output 27


Sample Input 31000000000000


Sample Output 31099511627775"
Crested Ibis vs Monster,https://atcoder.jp/contests/abc153/tasks/abc153_e,"問題文トキはモンスターと戦っています 
モンスターの体力は H です 
トキは N 種類の魔法が使え i 番目の魔法を使うと モンスターの体力を A i 減らすことができますが トキの魔力を B i 消耗します 
同じ魔法は何度でも使うことができます 魔法以外の方法でモンスターの体力を減らすことはできません 
モンスターの体力を 0 以下にすればトキの勝ちです 
トキがモンスターに勝つまでに消耗する魔力の合計の最小値を求めてください 

制約
1  leq H  leq 10 4
1  leq N  leq 10 3
1  leq A i  leq 10 4
1  leq B i  leq 10 4
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
H N
A 1 B 1
 
A N B N


出力トキがモンスターに勝つまでに消耗する魔力の最小値を出力せよ 

入力例 19 3
8 3
4 2
2 1


出力例 14

最初に 1 番目の魔法を使い トキの魔力を 3 消耗して モンスターの体力を 8 減らします モンスターの体力は 1 になります 
次に 3 番目の魔法を使い トキの魔力を 1 消耗して モンスターの体力を 2 減らします モンスターの体力は  1 になります 
これにより トキが消耗した魔力の合計は 4 になります 

入力例 2100 6
1 1
2 3
3 9
4 27
5 81
6 243


出力例 2100

1 番目の魔法を 100 回使うのが最適です 

入力例 39999 10
540 7550
691 9680
700 9790
510 7150
415 5818
551 7712
587 8227
619 8671
588 8228
176 2461


出力例 3139815

Problem StatementIbis is fighting with a monster 
The health of the monster is H 
Ibis can cast N kinds of spells  Casting the i th spell decreases the monster s health by A i  at the cost of B i Magic Points 
The same spell can be cast multiple times  There is no way other than spells to decrease the monster s health 
Ibis wins when the health of the monster becomes 0 or below 
Find the minimum total Magic Points that have to be consumed before winning 

Constraints
1  leq H  leq 10 4
1  leq N  leq 10 3
1  leq A i  leq 10 4
1  leq B i  leq 10 4
All values in input are integers 


InputInput is given from Standard Input in the following format 
H N
A 1 B 1
 
A N B N


OutputPrint the minimum total Magic Points that have to be consumed before winning 

Sample Input 19 3
8 3
4 2
2 1


Sample Output 14

First  let us cast the first spell to decrease the monster s health by 8  at the cost of 3 Magic Points  The monster s health is now 1 
Then  cast the third spell to decrease the monster s health by 2  at the cost of 1 Magic Point  The monster s health is now  1 
In this way  we can win at the total cost of 4 Magic Points 

Sample Input 2100 6
1 1
2 3
3 9
4 27
5 81
6 243


Sample Output 2100

It is optimal to cast the first spell 100 times 

Sample Input 39999 10
540 7550
691 9680
700 9790
510 7150
415 5818
551 7712
587 8227
619 8671
588 8228
176 2461


Sample Output 3139815"
Silver Fox vs Monster,https://atcoder.jp/contests/abc153/tasks/abc153_f,"問題文ギンギツネは N 体のモンスターと戦っています 
モンスターは 1 列に並んでおり 数直線上にいるとみなすことができます i 番目のモンスターは座標 X i にいて 体力は H i です 
ギンギツネは爆弾を使ってモンスターを攻撃することができます 
座標 x で爆弾を使うと 座標が x D 以上 x D 以下の範囲にいる全てのモンスターの体力を A 減らすことができます 
爆弾を使う以外の方法でモンスターの体力を減らすことはできません 
全てのモンスターの体力を 0 以下にすればギンギツネの勝ちです 
ギンギツネがモンスターに勝つまでに爆弾を使う回数の最小値を求めてください 

制約
1  leq N  leq 2  times 10 5
0  leq D  leq 10 9
1  leq A  leq 10 9
0  leq X i  leq 10 9
1  leq H i  leq 10 9
X i は相異なる 
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
N D A
X 1 H 1
 
X N H N


出力ギンギツネがモンスターに勝つまでに爆弾を使う回数の最小値を出力せよ 

入力例 13 3 2
1 2
5 4
9 2


出力例 12

最初に座標 4 で爆弾を使うことで 1 番目と 2 番目のモンスターの体力を 2 減らせます 
次に座標 6 で爆弾を使うことで 2 番目と 3 番目のモンスターの体力を 2 減らせます 
この 2 回で全てのモンスターの体力を 0 にできました 1 回で全てのモンスターの体力を 0 以下にすることはできません 

入力例 29 4 1
1 5
2 4
3 3
4 2
5 1
6 2
7 3
8 4
9 5


出力例 25

座標 5 で爆弾を 5 回使います 

入力例 33 0 1
300000000 1000000000
100000000 1000000000
200000000 1000000000


出力例 33000000000

オーバーフローに注意してください 
Problem StatementSilver Fox is fighting with N monsters 
The monsters are standing in a row  and we can assume them to be standing on a number line  The i th monster  standing at the coordinate X i  has the health of H i 
Silver Fox can use bombs to attack the monsters 
Using a bomb at the coordinate x decreases the healths of all monsters between the coordinates x D and x D  inclusive  by A 
There is no way other than bombs to decrease the monster s health 
Silver Fox wins when all the monsters  healths become 0 or below 
Find the minimum number of bombs needed to win 

Constraints
1  leq N  leq 2  times 10 5
0  leq D  leq 10 9
1  leq A  leq 10 9
0  leq X i  leq 10 9
1  leq H i  leq 10 9
X i are distinct 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N D A
X 1 H 1
 
X N H N


OutputPrint the minimum number of bombs needed to win 

Sample Input 13 3 2
1 2
5 4
9 2


Sample Output 12

First  let us use a bomb at the coordinate 4 to decrease the first and second monsters  health by 2 
Then  use a bomb at the coordinate 6 to decrease the second and third monsters  health by 2 
Now  all the monsters  healths are 0 
We cannot make all the monsters  health drop to 0 or below with just one bomb 

Sample Input 29 4 1
1 5
2 4
3 3
4 2
5 1
6 2
7 3
8 4
9 5


Sample Output 25

We should use five bombs at the coordinate 5 

Sample Input 33 0 1
300000000 1000000000
100000000 1000000000
200000000 1000000000


Sample Output 33000000000

Watch out for overflow"
Remaining Balls,https://atcoder.jp/contests/abc154/tasks/abc154_a,"問題文
文字列 S の書かれたボールが A 個 文字列 T の書かれたボールが B 個あります 
高橋君は 文字列 U の書かれたボールを 1 個選んで捨てました 
文字列 S T の書かれたボールがそれぞれ何個残っているか求めてください 

制約

S T U は英小文字のみからなる文字列
S T の長さは 1 以上 10 以下
S  not  T
S U または T U
1  leq A B  leq 10
A B は整数


入力
入力は以下の形式で標準入力から与えられる   
S T
A B
U


出力
答えを空白区切りで出力せよ 

入力例 1red blue
3 4
red


出力例 12 4

高橋君は red が書かれたボールを 1 つ選んで捨てました 
文字列 S T が書かれたボールは それぞれ 2 4 個残っています 

入力例 2red blue
5 5
blue


出力例 25 4

高橋君は blue が書かれたボールを 1 つ選んで捨てました 
文字列 S T が書かれたボールは それぞれ 5 4 個残っています 
Problem Statement
We have A balls with the string S written on each of them and B balls with the string T written on each of them 
From these balls  Takahashi chooses one with the string U written on it and throws it away 
Find the number of balls with the string S and balls with the string T that we have now 

Constraints

S  T  and U are strings consisting of lowercase English letters 
The lengths of S and T are each between 1 and 10  inclusive  
S  not  T
S U or T U 
1  leq A B  leq 10
A and B are integers 


Input
Input is given from Standard Input in the following format 
S T
A B
U


Output
Print the answer  with space in between 

Sample Input 1red blue
3 4
red


Sample Output 12 4

Takahashi chose a ball with red written on it and threw it away 
Now we have two balls with the string S and four balls with the string T 

Sample Input 2red blue
5 5
blue


Sample Output 25 4

Takahashi chose a ball with blue written on it and threw it away 
Now we have five balls with the string S and four balls with the string T"
I miss you...,https://atcoder.jp/contests/abc154/tasks/abc154_b,"問題文
文字列 S が与えられます S のすべての文字を x で置き換えて出力してください 

制約

S は英小文字のみからなる文字列
S の長さは 1 以上 100 以下


入力
入力は以下の形式で標準入力から与えられる 
S


出力
S のすべての文字を x で置き換えて出力せよ 

入力例 1sardine


出力例 1xxxxxxx

sardine のすべての文字を x で置き換えると xxxxxxx となります 

入力例 2xxxx


出力例 2xxxx


入力例 3gone


出力例 3xxxx

Problem Statement
Given is a string S  Replace every character in S with x and print the result 

Constraints

S is a string consisting of lowercase English letters 
The length of S is between 1 and 100  inclusive  


Input
Input is given from Standard Input in the following format 
S


Output
Replace every character in S with x and print the result 

Sample Input 1sardine


Sample Output 1xxxxxxx

Replacing every character in S with x results in xxxxxxx 

Sample Input 2xxxx


Sample Output 2xxxx


Sample Input 3gone


Sample Output 3xxxx"
Distinct or Not,https://atcoder.jp/contests/abc154/tasks/abc154_c,"問題文整数列 A 1  A 2       A N が与えられます 
この整数列のどの 2 つの要素も互いに異なるならば YES を そうでないなら NO を出力してください 

制約
2   N   200000
1   A i   10 9
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N
A 1     A N


出力整数列のどの 2 つの要素も互いに異なるならば YES を そうでないなら NO を出力せよ 

入力例 15
2 6 1 4 5


出力例 1YES

どの 2 つの要素も互いに異なります 

入力例 26
4 1 3 1 6 2


出力例 2NO

2 番目の要素と 4 番目の要素が同じです 

入力例 32
10000000 10000000


出力例 3NO

Problem StatementGiven is a sequence of integers A 1  A 2       A N 
If its elements are pairwise distinct  print YES  otherwise  print NO 

Constraints
2   N   200000
1   A i   10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
A 1     A N


OutputIf the elements of the sequence are pairwise distinct  print YES  otherwise  print NO 

Sample Input 15
2 6 1 4 5


Sample Output 1YES

The elements are pairwise distinct 

Sample Input 26
4 1 3 1 6 2


Sample Output 2NO

The second and fourth elements are identical 

Sample Input 32
10000000 10000000


Sample Output 3NO"
Dice in Line,https://atcoder.jp/contests/abc154/tasks/abc154_d,"問題文N 個のサイコロが左から右に一列に並べてあります 左から i 番目のサイコロは 1 から p i までの p i 種類の目がそれぞれ等確率で出ます 
隣接する K 個のサイコロを選んでそれぞれ独立に振ったとき 出る目の合計の期待値の最大値を求めてください 

制約
1   K   N   200000
1   p i   1000
入力で与えられる値は全て整数


入力入力は以下の形式で標準入力から与えられる 
N K
p 1     p N


出力隣接する K 個のサイコロを選んで振ったときに出る目の合計の期待値の最大値を出力せよ 
なお 想定解答との絶対誤差または相対誤差が 10   6  以下であれば正解として扱われる 

入力例 15 3
1 2 2 4 5


出力例 17 000000000000

左から 3 番目 4 番目 5 番目のサイコロを振った時 出る目の合計の期待値は 7 となり これが最大です 

入力例 24 1
6 6 6 6


出力例 23 500000000000

どのサイコロを選んで振っても 出る目の期待値は 3 5 です 

入力例 310 4
17 13 13 12 15 20 10 13 17 11


出力例 332 000000000000

Problem StatementWe have N dice arranged in a line from left to right  The i th die from the left shows p i numbers from 1 to p i with equal probability when thrown 
We will choose K adjacent dice  throw each of them independently  and compute the sum of the numbers shown  Find the maximum possible value of the expected value of this sum 

Constraints
1   K   N   200000
1   p i   1000
All values in input are integers 


InputInput is given from Standard Input in the following format 
N K
p 1     p N


OutputPrint the maximum possible value of the expected value of the sum of the numbers shown 
Your output will be considered correct when its absolute or relative error from our answer is at most 10   6  

Sample Input 15 3
1 2 2 4 5


Sample Output 17 000000000000

When we throw the third  fourth  and fifth dice from the left  the expected value of the sum of the numbers shown is 7  This is the maximum value we can achieve 

Sample Input 24 1
6 6 6 6


Sample Output 23 500000000000

Regardless of which die we choose  the expected value of the number shown is 3 5 

Sample Input 310 4
17 13 13 12 15 20 10 13 17 11


Sample Output 332 000000000000"
Almost Everywhere Zero,https://atcoder.jp/contests/abc154/tasks/abc154_e,"問題文1 以上 N 以下の整数であって  10 進法で表したときに 0 でない数字がちょうど K 個あるようなものの個数を求めてください 

制約
1  leq N   10  100 
1  leq K  leq 3


入力入力は以下の形式で標準入力から与えられる 
N
K


出力条件を満たす数の個数を出力せよ 

入力例 1100
1


出力例 119

条件を満たす数は次の 19 個です 

1 2 3 4 5 6 7 8 9 10 20 30 40 50 60 70 80 90 100


入力例 225
2


出力例 214

条件を満たす数は次の 14 個です 

11 12 13 14 15 16 17 18 19 21 22 23 24 25


入力例 3314159
2


出力例 3937


入力例 49999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
3


出力例 4117879300

Problem StatementFind the number of integers between 1 and N  inclusive  that contains exactly K non zero digits when written in base ten 

Constraints
1  leq N   10  100 
1  leq K  leq 3


InputInput is given from Standard Input in the following format 
N
K


OutputPrint the count 

Sample Input 1100
1


Sample Output 119

The following 19 integers satisfy the condition 

1 2 3 4 5 6 7 8 9 10 20 30 40 50 60 70 80 90 100


Sample Input 225
2


Sample Output 214

The following 14 integers satisfy the condition 

11 12 13 14 15 16 17 18 19 21 22 23 24 25


Sample Input 3314159
2


Sample Output 3937


Sample Input 49999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
3


Sample Output 4117879300"
Many Many Paths,https://atcoder.jp/contests/abc154/tasks/abc154_f,"問題文2 次元平面があります この平面上に立っているすぬけ君は 一回の操作で x 軸正の方向に 1 もしくは y 軸正の方向に 1
移動することができます 
また 以下のように関数 f r c  を定義します 

f r c       すぬけ君が点  0 0  から点  r c  まで上記の操作を繰り返して到達する経路の個数 

整数 r 1  r 2  c 1  c 2 が与えられます 
r 1   i   r 2 かつ c 1   j   c 2 を満たす全ての整数の組  i j  に対する f i j  の
総和を求め   10 9 7  で割った余りを計算してください 

制約
1   r 1   r 2   10 6
1   c 1   c 2   10 6
入力はすべて整数


入力入力は以下の形式で標準入力から与えられる 
r 1 c 1 r 2 c 2


出力f i j  の総和を  10 9 7  で割った余りを出力せよ 

入力例 11 1 2 2


出力例 114

例えば 点  0 0  から点  1 1  までの経路は  0 0     0 1     1 1  と
 0 0     1 0     1 1  の 2 通りあるので  f 1 1  2 です 
同様に f 1 2  3  f 2 1  3  f 2 2  6 なので 求める総和は 14 です 

入力例 2314 159 2653 589


出力例 2602215194

Problem StatementSnuke is standing on a two dimensional plane  In one operation  he can move by 1 in the positive x direction  or move by 1 in the positive y direction 
Let us define a function f r  c  as follows 

f r c       The number of paths from the point  0  0  to the point  r  c  that Snuke can trace by repeating the operation above 

Given are integers r 1  r 2  c 1  and c 2 
Find the sum of f i  j  over all pair of integers  i  j  such that r 1   i   r 2 and c 1   j   c 2  and compute this value modulo  10 9 7  

Constraints
1   r 1   r 2   10 6
1   c 1   c 2   10 6
All values in input are integers 


InputInput is given from Standard Input in the following format 
r 1 c 1 r 2 c 2


OutputPrint the sum of f i  j  modulo  10 9 7  

Sample Input 11 1 2 2


Sample Output 114

For example  there are two paths from the point  0  0  to the point  1  1    0 0     0 1     1 1  and  0 0     1 0     1 1   so f 1 1  2 
Similarly  f 1 2  3  f 2 1  3  and f 2 2  6  Thus  the sum is 14 

Sample Input 2314 159 2653 589


Sample Output 2602215194"
Poor,https://atcoder.jp/contests/abc155/tasks/abc155_a,"問題文
3 つ組の数について ある 2 つが等しく 残りの 1 つがそれらと異なるとき その 3 つ組を かわいそう であるといいます 
3 つの整数 A  B  C が与えられるので この 3 つ組がかわいそうであれば Yes を そうでなければ No を出力してください 

制約

A  B  C はいずれも 1 以上 9 以下の整数


入力
入力は以下の形式で標準入力から与えられる 
A B C


出力
与えられる 3 つ組がかわいそうであれば Yes を そうでなければ No を出力せよ 

入力例 15 7 5


出力例 1Yes

A と C が等しく B がそれらと異なるので この 3 つ組はかわいそうです 

入力例 24 4 4


出力例 2No

A  B  C がいずれも等しいので この 3 つ組はかわいそうではありません 

入力例 34 9 6


出力例 3No


入力例 43 3 4


出力例 4Yes

Problem Statement
A triple of numbers is said to be poor when two of those numbers are equal but the other number is different from those two numbers 
You will be given three integers A  B  and C  If this triple is poor  print Yes  otherwise  print No 

Constraints

A  B  and C are all integers between 1 and 9  inclusive  


Input
Input is given from Standard Input in the following format 
A B C


Output
If the given triple is poor  print Yes  otherwise  print No 

Sample Input 15 7 5


Sample Output 1Yes

A and C are equal  but B is different from those two numbers  so this triple is poor 

Sample Input 24 4 4


Sample Output 2No

A  B  and C are all equal  so this triple is not poor 

Sample Input 34 9 6


Sample Output 3No


Sample Input 43 3 4


Sample Output 4Yes"
"Papers, Please",https://atcoder.jp/contests/abc155/tasks/abc155_b,"問題文
あなたは AtCoder 王国の入国審査官です 入国者の書類にはいくつかの整数が書かれており あなたの仕事はこれらが条件を満たすか判定することです 
規約では 次の条件を満たすとき またその時に限り 入国を承認することになっています 

書類に書かれている整数のうち 偶数であるものは全て 3 または 5 で割り切れる 

上の規約に従うとき 書類に N 個の整数 A 1  A 2   dots  A N が書かれた入国者を承認するならば APPROVED を しないならば DENIED を出力してください 

注記

問題文中の条件は  x が書類に書かれている整数のうち 偶数であるものならば x は 3 または 5 で割り切れる   と言い換えられます 
ここで  または   ならば  は論理学における意味です 


制約

入力はすべて整数
1  leq N  leq 100
1  leq A i  leq 1000


入力
入力は以下の形式で標準入力から与えられる 
N
A 1 A 2  dots A N


出力
規約に従うとき 入国者を承認するならば APPROVED を しないならば DENIED を出力せよ 

入力例 15
6 7 9 10 31


出力例 1APPROVED

書類に書かれている整数のうち 偶数であるものは 6  10 です 
これらは全て 3 または 5 で割り切れるので この入国者は承認します 

入力例 23
28 27 24


出力例 2DENIED

28 が条件を満たさないので この入国者は承認しません 
Problem Statement
You are an immigration officer in the Kingdom of AtCoder  The document carried by an immigrant has some number of integers written on it  and you need to check whether they meet certain criteria 
According to the regulation  the immigrant should be allowed entry to the kingdom if and only if the following condition is satisfied 

All even numbers written on the document are divisible by 3 or 5 

If the immigrant should be allowed entry according to the regulation  output APPROVED  otherwise  print DENIED 

Notes

The condition in the statement can be rephrased as  If x is an even number written on the document  x is divisible by 3 or 5  
Here  if  and  or  are logical terms 


Constraints

All values in input are integers 
1  leq N  leq 100
1  leq A i  leq 1000


Input
Input is given from Standard Input in the following format 
N
A 1 A 2  dots A N


Output
If the immigrant should be allowed entry according to the regulation  print APPROVED  otherwise  print DENIED 

Sample Input 15
6 7 9 10 31


Sample Output 1APPROVED

The even numbers written on the document are 6 and 10 
All of them are divisible by 3 or 5  so the immigrant should be allowed entry 

Sample Input 23
28 27 24


Sample Output 2DENIED

28 violates the condition  so the immigrant should not be allowed entry"
Poll,https://atcoder.jp/contests/abc155/tasks/abc155_c,"問題文
N 枚の投票用紙があり i   1  leq i  leq N  枚目には文字列 S i が書かれています 
書かれた回数が最も多い文字列を全て 辞書順で小さい順に出力してください 

制約

1  leq N  leq 2  times 10 5
S i は英小文字のみからなる文字列  1  leq i  leq N 
S i の長さは 1 以上 10 以下  1  leq i  leq N 


入力
入力は以下の形式で標準入力から与えられる 
N
S 1
 
S N


出力
あてはまる文字列を全て辞書順で小さい順に 改行区切りで出力せよ 

入力例 17
beat
vet
beet
bed
vet
bet
beet


出力例 1beet
vet

書かれた回数は beet と vet が 2 回 beat と bed と bet が 1 回です したがって 2 回書かれた beet と vet を出力します 

入力例 28
buffalo
buffalo
buffalo
buffalo
buffalo
buffalo
buffalo
buffalo


出力例 2buffalo


入力例 37
bass
bass
kick
kick
bass
kick
kick


出力例 3kick


入力例 44
ushi
tapu
nichia
kun


出力例 4kun
nichia
tapu
ushi

Problem Statement
We have N voting papers  The i th vote  1  leq i  leq N  has the string S i written on it 
Print all strings that are written on the most number of votes  in lexicographical order 

Constraints

1  leq N  leq 2  times 10 5
S i  1  leq i  leq N  are strings consisting of lowercase English letters 
The length of S i  1  leq i  leq N  is between 1 and 10  inclusive  


Input
Input is given from Standard Input in the following format 
N
S 1
 
S N


Output
Print all strings in question in lexicographical order 

Sample Input 17
beat
vet
beet
bed
vet
bet
beet


Sample Output 1beet
vet

beet and vet are written on two sheets each  while beat  bed  and bet are written on one vote each  Thus  we should print the strings beet and vet 

Sample Input 28
buffalo
buffalo
buffalo
buffalo
buffalo
buffalo
buffalo
buffalo


Sample Output 2buffalo


Sample Input 37
bass
bass
kick
kick
bass
kick
kick


Sample Output 3kick


Sample Input 44
ushi
tapu
nichia
kun


Sample Output 4kun
nichia
tapu
ushi"
Pairs,https://atcoder.jp/contests/abc155/tasks/abc155_d,"問題文
N 個の整数 A 1  A 2       A N があります 
このうち 2 つを選んでペアにする方法は  frac N N 1   2  通りありますが それぞれのペアについて積を求め 小さい順に並べ替えたとき K 番目にくる数は何になるでしょう 

制約

入力はすべて整数
2  leq N  leq 2  times 10 5
1  leq K  leq  frac N N 1   2 
 10 9  leq A i  leq 10 9   1  leq i  leq N 


入力
入力は以下の形式で標準入力から与えられる 
N K
A 1 A 2  dots A N


出力
答えを出力せよ 

入力例 14 3
3 3  4  2


出力例 1 6

ペアの組み方は 6 通りあり それぞれの積は 9   12   6   12   6  8 です 
小さい順に並べ替えると  12   12   6   6  8  9 となり 3 番目にくる数は  6 です 

入力例 210 40
5 4 3 2  1 0 0 0 0 0


出力例 26


入力例 330 413
 170202098  268409015 537203564 983211703 21608710  443999067  937727165  97596546  372334013 398994917  972141167 798607104  949068442  959948616 37909651 0 886627544  20098238 0  948955241 0  214720580 277222296  18897162 834475626 0  425610555 110117526 663621752 0


出力例 3448283280358331064

Problem Statement
We have N integers A 1  A 2       A N 
There are  frac N N 1   2  ways to choose two of them and form a pair  If we compute the product of each of those pairs and sort the results in ascending order  what will be the K th number in that list 

Constraints

All values in input are integers 
2  leq N  leq 2  times 10 5
1  leq K  leq  frac N N 1   2 
 10 9  leq A i  leq 10 9   1  leq i  leq N 


Input
Input is given from Standard Input in the following format 
N K
A 1 A 2  dots A N


Output
Print the answer 

Sample Input 14 3
3 3  4  2


Sample Output 1 6

There are six ways to form a pair  The products of those pairs are 9   12   6   12   6  8 
Sorting those numbers in ascending order  we have  12   12   6   6  8  9  The third number in this list is  6 

Sample Input 210 40
5 4 3 2  1 0 0 0 0 0


Sample Output 26


Sample Input 330 413
 170202098  268409015 537203564 983211703 21608710  443999067  937727165  97596546  372334013 398994917  972141167 798607104  949068442  959948616 37909651 0 886627544  20098238 0  948955241 0  214720580 277222296  18897162 834475626 0  425610555 110117526 663621752 0


Sample Output 3448283280358331064"
Payment,https://atcoder.jp/contests/abc155/tasks/abc155_e,"問題文
AtCoder 王国の通貨は 10  100  1 種類の紙幣のみであり 価値はそれぞれ 1  10  10 2  10 3   dots  10   10  100    です あなたは商店街で 価値 N のたこ焼き器を 1 つ買おうとしています 
あなたは N 以上の金額を決めて支払います その後 支払額よりちょうど N だけ少ない金額を 店員がお釣りとして支払います 
あなたと店員が使う紙幣の組合せを適切に設定するとき 両者の使う紙幣の枚数の合計は最小で何枚になるでしょう 
なお あなたも店員も任意の紙幣を十分多く持っているとします 

制約

N は 1 以上 10  1 000 000  以下の整数


入力
入力は以下の形式で標準入力から与えられる 
N


出力
支払う紙幣の枚数とお釣りとして受け取る紙幣の枚数の合計の最小値を出力せよ 

入力例 136


出力例 18

あなたが価値 10 の紙幣 4 枚を支払い 店員が価値 1 の紙幣 4 枚をお釣りに渡すと 使う紙幣の枚数は合計で 8 枚になります 
8 枚より少ない合計枚数を達成することはできないので 答えは 8 です 

入力例 291


出力例 23

あなたが価値 100 の紙幣 1 枚と価値 1 の紙幣 1 枚を支払い 店員が価値 10 の紙幣 1 枚をお釣りに渡すと 使う紙幣の枚数は合計で 3 枚になります 

入力例 3314159265358979323846264338327950288419716939937551058209749445923078164062862089986280348253421170


出力例 3243

Problem Statement
In the Kingdom of AtCoder  only banknotes are used as currency  There are 10  100  1 kinds of banknotes  with the values of 1  10  10 2  10 3   dots  10   10  100     You have come shopping at a mall and are now buying a takoyaki machine with a value of N   Takoyaki is the name of a Japanese snack  
To make the payment  you will choose some amount of money which is at least N and give it to the clerk  Then  the clerk gives you back the change  which is the amount of money you give minus N 
What will be the minimum possible number of total banknotes used by you and the clerk  when both choose the combination of banknotes to minimize this count 
Assume that you have sufficient numbers of banknotes  and so does the clerk 

Constraints

N is an integer between 1 and 10  1 000 000   inclusive  


Input
Input is given from Standard Input in the following format 
N


Output
Print the minimum possible number of total banknotes used by you and the clerk 

Sample Input 136


Sample Output 18

If you give four banknotes of value 10 each  and the clerk gives you back four banknotes of value 1 each  a total of eight banknotes are used 
The payment cannot be made with less than eight banknotes in total  so the answer is 8 

Sample Input 291


Sample Output 23

If you give two banknotes of value 100  1  and the clerk gives you back one banknote of value 10  a total of three banknotes are used 

Sample Input 3314159265358979323846264338327950288419716939937551058209749445923078164062862089986280348253421170


Sample Output 3243"
Perils in Parallel,https://atcoder.jp/contests/abc155/tasks/abc155_f,"問題文
AlDebaran 王国の侵攻によって AtCoder 王国の各地に爆弾が仕掛けられてしまいました 
幸いにも AtCoder 王国 ABC 隊の健闘により制御装置の一部が手に入ったので あなたはこれを使って解除を試みることにしました 
仕掛けられた爆弾は N 個あり 1 から N の番号がついています 爆弾 i は座標 A i にあり 電源は B i 1 のときオンに B i 0 のときオフになっています 
制御装置には M 本のコードがあり 1 から M の番号がついています コード j を切ると 座標が L j 以上 R j 以下の全ての爆弾の電源のオン オフが切り替わります 
切るコードをうまく選ぶことで全ての爆弾の電源をオフにできるか判定し できるならばそのようなコードの組合せを 1 つ出力してください 

制約

入力はすべて整数
1  leq N  leq 10 5
1  leq A i  leq 10 9   1  leq i  leq N 
A i は互いに相異なる
B i は 0 か 1 のいずれか  1  leq i  leq N 
1  leq M  leq 2  times 10 5
1  leq L j  leq R j  leq 10 9   1  leq j  leq M 


入力
入力は以下の形式で標準入力から与えられる 
N M
A 1 B 1
 
A N B N
L 1 R 1
 
L M R M


出力
全ての爆弾の電源をオフにすることが不可能であれば  1 と出力せよ 可能であれば それを達成するコードの組合せを次のように出力せよ 
k
c 1 c 2  dots c k

ここで k は切るコードの本数  0 でもよい  である 
また c 1  c 2   dots  c k は切るコードの番号であり 1  leq c 1   c 2    dots   c k  leq M を満たす必要がある 

入力例 13 4
5 1
10 1
8 0
1 10
4 5
6 7
8 9


出力例 12
1 4

座標 5  10 に電源がオンの爆弾が 座標 8 に電源がオフの爆弾があります 
コード 1 を切ると座標 1 以上 10 以下にある爆弾 つまり全ての爆弾の電源が切り替わります 
コード 4 を切ると座標 8 以上 9 以下にある爆弾 つまり爆弾 3 のみの電源が切り替わります 
したがって コード 1  4 の 2 本を切ることで全ての爆弾の電源がオフになります 

入力例 24 2
2 0
3 1
5 1
7 0
1 4
4 7


出力例 2 1

切るコードをどう選んでも 全ての爆弾の電源をオフにすることは不可能です 

入力例 33 2
5 0
10 0
8 0
6 9
66 99


出力例 30


はじめから全ての爆弾の電源がオフなので コードを切る必要はありません 

入力例 412 20
536130100 1
150049660 1
79245447 1
132551741 0
89484841 1
328129089 0
623467741 0
248785745 0
421631475 0
498966877 0
43768791 1
112237273 0
21499042 142460201
58176487 384985131
88563042 144788076
120198276 497115965
134867387 563350571
211946499 458996604
233934566 297258009
335674184 555985828
414601661 520203502
101135608 501051309
90972258 300372385
255474956 630621190
436210625 517850028
145652401 192476406
377607297 520655694
244404406 304034433
112237273 359737255
392593015 463983307
150586788 504362212
54772353 83124235


出力例 45
1 7 8 9 11

条件を満たすコードの組合せが複数あり得る場合 どれを出力しても構いません 
Problem Statement
After being invaded by the Kingdom of AlDebaran  bombs are planted throughout our country  AtCoder Kingdom 
Fortunately  our military team called ABC has managed to obtain a device that is a part of the system controlling the bombs 
There are N bombs  numbered 1 to N  planted in our country  Bomb i is planted at the coordinate A i  It is currently activated if B i 1  and deactivated if B i 0 
The device has M cords numbered 1 to M  If we cut Cord j  the states of all the bombs planted between the coordinates L j and R j  inclusive  will be switched   from activated to deactivated  and vice versa 
Determine whether it is possible to deactivate all the bombs at the same time  If the answer is yes  output a set of cords that should be cut 

Constraints

All values in input are integers 
1  leq N  leq 10 5
1  leq A i  leq 10 9   1  leq i  leq N 
A i are pairwise distinct 
B i is 0 or 1   1  leq i  leq N 
1  leq M  leq 2  times 10 5
1  leq L j  leq R j  leq 10 9   1  leq j  leq M 


Input
Input is given from Standard Input in the following format 
N M
A 1 B 1
 
A N B N
L 1 R 1
 
L M R M


Output
If it is impossible to deactivate all the bombs at the same time  print  1  If it is possible to do so  print a set of cords that should be cut  as follows 
k
c 1 c 2  dots c k

Here  k is the number of cords  possibly 0   and c 1  c 2   dots  c k represent the cords that should be cut  1  leq c 1   c 2    dots   c k  leq M must hold 

Sample Input 13 4
5 1
10 1
8 0
1 10
4 5
6 7
8 9


Sample Output 12
1 4

There are two activated bombs at the coordinates 5  10  and one deactivated bomb at the coordinate 8 
Cutting Cord 1 switches the states of all the bombs planted between the coordinates 1 and 10  that is  all of the three bombs 
Cutting Cord 4 switches the states of all the bombs planted between the coordinates 8 and 9  that is  Bomb 3 
Thus  we can deactivate all the bombs by cutting Cord 1 and Cord 4 

Sample Input 24 2
2 0
3 1
5 1
7 0
1 4
4 7


Sample Output 2 1

Cutting any set of cords will not deactivate all the bombs at the same time 

Sample Input 33 2
5 0
10 0
8 0
6 9
66 99


Sample Output 30


All the bombs are already deactivated  so we do not need to cut any cord 

Sample Input 412 20
536130100 1
150049660 1
79245447 1
132551741 0
89484841 1
328129089 0
623467741 0
248785745 0
421631475 0
498966877 0
43768791 1
112237273 0
21499042 142460201
58176487 384985131
88563042 144788076
120198276 497115965
134867387 563350571
211946499 458996604
233934566 297258009
335674184 555985828
414601661 520203502
101135608 501051309
90972258 300372385
255474956 630621190
436210625 517850028
145652401 192476406
377607297 520655694
244404406 304034433
112237273 359737255
392593015 463983307
150586788 504362212
54772353 83124235


Sample Output 45
1 7 8 9 11

If there are multiple sets of cords that deactivate all the bombs when cut  any of them can be printed"
Beginner,https://atcoder.jp/contests/abc156/tasks/abc156_a,"問題文高橋君はプログラミングコンテストサイト ButCoder の会員です 
ButCoder の会員には 2 つのレーティング 内部レーティング と 表示レーティング が割り当てられています 
表示レーティングは その会員のコンテスト参加回数が 10 以上のときは内部レーティングに等しく そうでないときは 会員のコンテスト参加回数を K として 内部レーティングから 100  times  10   K  を引いたものになります 
高橋君のコンテスト参加回数が N で表示レーティングが R であるとき 高橋君の内部レーティングを求めてください 

制約
入力は全て整数である
1  leq N  leq 100
0  leq R  leq 4111


入力入力は以下の形式で標準入力から与えられる 
N R


出力高橋君の内部レーティングを出力せよ 

入力例 12 2919


出力例 13719

コンテスト参加回数が 10 より少ない 2 であるため 内部レーティングから 100  times  10   2    800 を引いたものが高橋君の表示レーティングになっています 
よって高橋君の内部レーティングは 2919   800   3719 となります 

入力例 222 3051


出力例 23051

Problem StatementTakahashi is a member of a programming competition site  ButCoder 
Each member of ButCoder is assigned two values  Inner Rating and Displayed Rating 
The Displayed Rating of a member is equal to their Inner Rating if the member has participated in 10 or more contests  Otherwise  the Displayed Rating will be their Inner Rating minus 100  times  10   K  when the member has participated in K contests 
Takahashi has participated in N contests  and his Displayed Rating is R  Find his Inner Rating 

Constraints
All values in input are integers 
1  leq N  leq 100
0  leq R  leq 4111


InputInput is given from Standard Input in the following format 
N R


OutputPrint his Inner Rating 

Sample Input 12 2919


Sample Output 13719

Takahashi has participated in 2 contests  which is less than 10  so his Displayed Rating is his Inner Rating minus 100  times  10   2    800 
Thus  Takahashi s Inner Rating is 2919   800   3719 

Sample Input 222 3051


Sample Output 23051"
Digits,https://atcoder.jp/contests/abc156/tasks/abc156_b,"問題文整数 N を K 進数で表したとき 何桁になるかを求めてください 

注記K 進表記については Wikipedia 位取り記数法 を参照してください 

制約
入力は全て整数である 
1  leq N  leq 10 9
2  leq K  leq 10


入力入力は以下の形式で標準入力から与えられる 
N K


出力整数 N を K 進数で表したとき 何桁になるかを出力せよ 

入力例 111 2


出力例 14

11 を 2 進数で表記すると 1011 です 

入力例 21010101 10


出力例 27


入力例 3314159265 3


出力例 318

Problem StatementGiven is an integer N  Find the number of digits that N has in base K 

NotesFor information on base K representation  see Positional notation   Wikipedia 

Constraints
All values in input are integers 
1  leq N  leq 10 9
2  leq K  leq 10


InputInput is given from Standard Input in the following format 
N K


OutputPrint the number of digits that N has in base K 

Sample Input 111 2


Sample Output 14

In binary  11 is represented as 1011 

Sample Input 21010101 10


Sample Output 27


Sample Input 3314159265 3


Sample Output 318"
Rally,https://atcoder.jp/contests/abc156/tasks/abc156_c,"問題文数直線上に N 人の人が住んでいます 
i 番目の人が住んでいるのは座標 X i です 
あなたは N 人全員が参加する集会を開くことを考えています 
集会は数直線上の任意の 整数値の座標 で開くことができ 座標 P で集会を開くとき i 番目の人は集会に参加するために  X i   P  2 の体力を消費します 
N 人が消費する体力の総和としてありえる値の最小値を求めてください 

制約
入力は全て整数である 
1  leq N  leq 100
1  leq X i  leq 100


入力入力は以下の形式で標準入力から与えられる 
N
X 1 X 2     X N


出力N 人が消費する体力の総和としてありえる値の最小値を出力せよ 

入力例 12
1 4


出力例 15

座標 2 で集会を開くとき 1 番目の人が消費する体力は  1   2  2   1 
2 番目の人が消費する体力は  4   2  2   4 よってその総和は 5 です 
これが 2 人が消費する体力の総和としてありえる値の最小値です 
集会を開くことができるのは整数値の座標だけであることに注意してください 

入力例 27
14 14 2 13 56 2 37


出力例 22354

Problem StatementThere are N people living on a number line 
The i th person lives at coordinate X i 
You are going to hold a meeting that all N people have to attend 
The meeting can be held at any integer coordinate  If you choose to hold the meeting at coordinate P  the i th person will spend  X i   P  2 points of stamina to attend the meeting 
Find the minimum total points of stamina the N people have to spend 

Constraints
All values in input are integers 
1  leq N  leq 100
1  leq X i  leq 100


InputInput is given from Standard Input in the following format 
N
X 1 X 2     X N


OutputPrint the minimum total stamina the N people have to spend 

Sample Input 12
1 4


Sample Output 15

Assume the meeting is held at coordinate 2  In this case  the first person will spend  1   2  2 points of stamina  and the second person will spend  4   2  2   4 points of stamina  for a total of 5 points of stamina  This is the minimum total stamina that the 2 people have to spend 
Note that you can hold the meeting only at an integer coordinate 

Sample Input 27
14 14 2 13 56 2 37


Sample Output 22354"
Bouquet,https://atcoder.jp/contests/abc156/tasks/abc156_d,"問題文あかりさんは n 種類の花を 1 本ずつ持っています 
あかりさんは これらの花から 1 本以上を選び 花束を作ろうとしています 
ただし あかりさんは a と b の 2 つの数を苦手としていて いずれかと一致するような本数の花からなる花束は作ることができません 
あかりさんが作ることのできる花束は何種類あるでしょうか 
 10 9   7  で割った余りを求めてください 
ここで 2 つの花束は 一方では使われているが 
もう一方では使われていない種類の花があるとき 別の種類の花束であるとみなします 

制約
入力は全て整数である 
2  leq n  leq 10 9
1  leq a   b  leq  textrm min  n  2  times 10 5 


入力入力は以下の形式で標準入力から与えられる 
n a b


出力あかりさんが作ることのできる花束の種類数を  10 9   7  で割った余りを出力せよ  そのような花束がないときは 0 と出力せよ  

入力例 14 1 3


出力例 17

この場合 あかりさんは 2 本または 4 本の花を選んで花束を作ることができます 
4 本ある花の中から 2 本を選ぶ方法は 6 通り 4 本を選ぶ方法は 1 通りあるので 
あかりさんが作ることができる花束の種類数は合わせて 7 通りです 

入力例 21000000000 141421 173205


出力例 234076506

 10 9   7  で割った余りを出力してください 
Problem StatementAkari has n kinds of flowers  one of each kind 
She is going to choose one or more of these flowers to make a bouquet 
However  she hates two numbers a and b  so the number of flowers in the bouquet cannot be a or b 
How many different bouquets are there that Akari can make 
Find the count modulo  10 9   7  
Here  two bouquets are considered different when there is a flower that is used in one of the bouquets but not in the other bouquet 

Constraints
All values in input are integers 
2  leq n  leq 10 9
1  leq a   b  leq  textrm min  n  2  times 10 5 


InputInput is given from Standard Input in the following format 
n a b


OutputPrint the number of bouquets that Akari can make  modulo  10 9   7    If there are no such bouquets  print 0  

Sample Input 14 1 3


Sample Output 17

In this case  Akari can choose 2 or 4 flowers to make the bouquet 
There are 6 ways to choose 2 out of the 4 flowers  and 1 way to choose 4  so there are a total of 7 different bouquets that Akari can make 

Sample Input 21000000000 141421 173205


Sample Output 234076506

Print the count modulo  10 9   7"
Roaming,https://atcoder.jp/contests/abc156/tasks/abc156_e,"問題文n 個の部屋がある建物があります 
部屋には 1 から n までの番号が付いています 
建物の各部屋から 他の任意の部屋に移ることが可能です 
ここで 建物のある部屋 i にいる人が 別の部屋 j   i  neq j  に移ることを 人の移動 と呼ぶことにします 
最初 建物の各部屋には人が 1 人いました 
このあと現在までに 人の移動がちょうど k 回起きたことが分かっています 
現在 建物の各部屋にいる人の数の組合せとして ありえるものは何通りでしょうか 
 10 9   7  で割った余りを求めてください 

制約
入力は全て整数である 
3  leq n  leq 2  times 10 5
2  leq k  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
n k


出力現在 建物の各部屋にいる人の数の組合せとして ありえるものの個数を  10 9   7  で割った余りを出力せよ 

入力例 13 2


出力例 110

現在 部屋 1 にいる人の数を c 1 部屋 2 にいる人の数を c 2 部屋 3 にいる人の数を c 3 と
すると  c 1  c 2  c 3  としてありえるものは 

 0  0  3 
 0  1  2 
 0  2  1 
 0  3  0 
 1  0  2 
 1  1  1 
 1  2  0 
 2  0  1 
 2  1  0 
 3  0  0 

の 10 通りです 
例えば まず部屋 1 にいる人が部屋 2 に移動し 
次に部屋 2 にいる誰かが部屋 3 に移動した場合を考えると 
 c 1  c 2  c 3  は  0  1  2  になります 

入力例 2200000 1000000000


出力例 2607923868

個数を  10 9   7  で割った余りを出力してください 

入力例 315 6


出力例 322583772

Problem StatementThere is a building with n rooms  numbered 1 to n 
We can move from any room to any other room in the building 
Let us call the following event a move  a person in some room i goes to another room j   i  neq j  
Initially  there was one person in each room in the building 
After that  we know that there were exactly k moves happened up to now 
We are interested in the number of people in each of the n rooms now  How many combinations of numbers of people in the n rooms are possible 
Find the count modulo  10 9   7  

Constraints
All values in input are integers 
3  leq n  leq 2  times 10 5
2  leq k  leq 10 9


InputInput is given from Standard Input in the following format 
n k


OutputPrint the number of possible combinations of numbers of people in the n rooms now  modulo  10 9   7  

Sample Input 13 2


Sample Output 110

Let c 1  c 2  and c 3 be the number of people in Room 1  2  and 3 now  respectively  There are 10 possible combination of  c 1  c 2  c 3  

 0  0  3 
 0  1  2 
 0  2  1 
 0  3  0 
 1  0  2 
 1  1  1 
 1  2  0 
 2  0  1 
 2  1  0 
 3  0  0 

For example   c 1  c 2  c 3  will be  0  1  2  if the person in Room 1 goes to Room 2 and then one of the persons in Room 2 goes to Room 3 

Sample Input 2200000 1000000000


Sample Output 2607923868

Print the count modulo  10 9   7  

Sample Input 315 6


Sample Output 322583772"
Modularness,https://atcoder.jp/contests/abc156/tasks/abc156_f,"問題文長さ k の数列 d 0 d 1     d  k   1  があります 
以下のクエリ q 個を順に処理してください 

i 番目のクエリは 3 つの整数 n i x i m i からなる 
長さ n i の数列 a 0 a 1     a  n i   1  を 
    begin aligned  a j     begin cases     x i     j   0         a  j   1    d   j   1   textrm mod  k      0   j  leq n i   1     end cases  end aligned     と定める 
 a j  textrm mod  m i     a  j   1   textrm mod  m i  であるような j  0  leq j   n i   1  の個数を出力する 

ここで 2 つの整数 y  z  z   0  について  y  textrm mod  z  は y を z で割った余りを表します 

制約
入力は全て整数である 
1  leq k  q  leq 5000
0  leq d i  leq 10 9
2  leq n i  leq 10 9
0  leq x i  leq 10 9
2  leq m i  leq 10 9


入力入力は以下の形式で標準入力から与えられる 
k q
d 0 d 1     d  k   1 
n 1 x 1 m 1
n 2 x 2 m 2
 
n q x q m q


出力q 行出力せよ 
i 行目には i 番目のクエリに対する答えを出力せよ 

入力例 13 1
3 1 4
5 3 2


出力例 11

1 つ目のクエリについて 問題文で示した数列  a j  は 3 6 7 11 14 になります 

 a 0  textrm mod  2     a 1  textrm mod  2 
 a 1  textrm mod  2     a 2  textrm mod  2 
 a 2  textrm mod  2     a 3  textrm mod  2 
 a 3  textrm mod  2     a 4  textrm mod  2 

であるため このクエリに対する答えは 1 です 

入力例 27 3
27 18 28 18 28 46 1000000000
1000000000 1 7
1000000000 2 10
1000000000 3 12


出力例 2224489796
214285714
559523809

Problem StatementWe have a sequence of k numbers  d 0 d 1     d  k   1  
Process the following q queries in order 

The i th query contains three integers n i  x i  and m i 
Let a 0 a 1     a  n i   1  be the following sequence of n i numbers      begin aligned  a j     begin cases     x i     j   0         a  j   1    d   j   1   textrm mod  k      0   j  leq n i   1     end cases  end aligned    
Print the number of j  0  leq j   n i   1  such that  a j  textrm mod  m i     a  j   1   textrm mod  m i  

Here  y  textrm mod  z  denotes the remainder of y divided by z  for two integers y and z  z   0  

Constraints
All values in input are integers 
1  leq k  q  leq 5000
0  leq d i  leq 10 9
2  leq n i  leq 10 9
0  leq x i  leq 10 9
2  leq m i  leq 10 9


InputInput is given from Standard Input in the following format 
k q
d 0 d 1     d  k   1 
n 1 x 1 m 1
n 2 x 2 m 2
 
n q x q m q


OutputPrint q lines 
The i th line should contain the response to the i th query 

Sample Input 13 1
3 1 4
5 3 2


Sample Output 11

For the first query  the sequence  a j  will be 3 6 7 11 14 

 a 0  textrm mod  2     a 1  textrm mod  2 
 a 1  textrm mod  2     a 2  textrm mod  2 
 a 2  textrm mod  2     a 3  textrm mod  2 
 a 3  textrm mod  2     a 4  textrm mod  2 

Thus  the response to this query should be 1 

Sample Input 27 3
27 18 28 18 28 46 1000000000
1000000000 1 7
1000000000 2 10
1000000000 3 12


Sample Output 2224489796
214285714
559523809"
Duplex Printing,https://atcoder.jp/contests/abc157/tasks/abc157_a,"問題文高橋君は 全 N ページから成る書類を両面印刷します 両面印刷では 1 枚の紙に 2 ページ分のデータを印刷することが出来ます 
最小で何枚の紙が必要か求めてください 

制約
N は整数
1  leq N  leq 100


入力入力は以下の形式で標準入力から与えられる 
N


出力答えを出力せよ 

入力例 15


出力例 13

1 枚目の紙に 1  2 ページ目のデータを印刷し  2 枚目の紙に 3  4 ページ目のデータを印刷し  3 枚目の紙に 5 ページ目のデータを印刷すれば  3枚の紙に全てのデータを印刷することが出来ます 

入力例 22


出力例 21


入力例 3100


出力例 350

Problem StatementTakahashi wants to print a document with N pages double sided  where two pages of data can be printed on one sheet of paper 
At least how many sheets of paper does he need 

Constraints
N is an integer 
1  leq N  leq 100


InputInput is given from Standard Input in the following format 
N


OutputPrint the answer 

Sample Input 15


Sample Output 13

By printing the 1 st  2 nd pages on the 1 st sheet  3 rd and 4 th pages on the 2 nd sheet  and 5 th page on the 3 rd sheet  we can print all the data on 3 sheets of paper 

Sample Input 22


Sample Output 21


Sample Input 3100


Sample Output 350"
Bingo,https://atcoder.jp/contests/abc157/tasks/abc157_b,"問題文3 times3 のサイズのビンゴカードがあります 上から i 行目 左から j 列目の数は A  i  j  です 
続けて  N 個の数 b 1  b 2   cdots  b N が選ばれます 選ばれた数がビンゴカードの中にあった場合 ビンゴカードのその数に印を付けます 
N 個の数字が選ばれた時点でビンゴが達成されているか 則ち 縦 横 斜めのいずれか 1 列に並んだ 3 つの数の組であって 全てに印の付いているものが存在するかどうかを判定してください 

制約
入力は全て整数
1  leq A  i  j   leq 100
A  i 1  j 1   neq A  i 2  j 2    i 1  j 1   neq  i 2  j 2  
1  leq N  leq 10
1  leq b i  leq 100
b i  neq b j  i  neq j 


入力入力は以下の形式で標準入力から与えられる 
A  1  1  A  1  2  A  1  3 
A  2  1  A  2  2  A  2  3 
A  3  1  A  3  2  A  3  3 
N
b 1
 vdots
b N


出力ビンゴが達成されているならば Yes と そうでないならば No と出力せよ 

入力例 184 97 66
79 89 11
61 59 7
7
89
7
87
79
24
84
30


出力例 1Yes

A  1  1   A  2  1   A  2  2   A  3  3  に印が付けられます このとき 左上から右下にかけて斜めに 3 個の印が並び ビンゴが成立しています 

入力例 241 7 46
26 89 2
78 92 8
5
6
45
16
57
17


出力例 2No

印は 1 つも付いていません 

入力例 360 88 34
92 41 43
65 73 48
10
60
43
88
11
48
73
65
41
92
34


出力例 3Yes

全てのマスに印が付いています 
Problem StatementWe have a bingo card with a 3 times3 grid  The square at the i th row from the top and the j th column from the left contains the number A  i  j  
The MC will choose N numbers  b 1  b 2   cdots  b N  If our bingo sheet contains some of those numbers  we will mark them on our sheet 
Determine whether we will have a bingo when the N numbers are chosen  that is  the sheet will contain three marked numbers in a row  column  or diagonal 

Constraints
All values in input are integers 
1  leq A  i  j   leq 100
A  i 1  j 1   neq A  i 2  j 2    i 1  j 1   neq  i 2  j 2  
1  leq N  leq 10
1  leq b i  leq 100
b i  neq b j  i  neq j 


InputInput is given from Standard Input in the following format 
A  1  1  A  1  2  A  1  3 
A  2  1  A  2  2  A  2  3 
A  3  1  A  3  2  A  3  3 
N
b 1
 vdots
b N


OutputIf we will have a bingo  print Yes  otherwise  print No 

Sample Input 184 97 66
79 89 11
61 59 7
7
89
7
87
79
24
84
30


Sample Output 1Yes

We will mark A  1  1   A  2  1   A  2  2   A  3  3   and complete the diagonal from the top left to the bottom right 

Sample Input 241 7 46
26 89 2
78 92 8
5
6
45
16
57
17


Sample Output 2No

We will mark nothing 

Sample Input 360 88 34
92 41 43
65 73 48
10
60
43
88
11
48
73
65
41
92
34


Sample Output 3Yes

We will mark all the squares"
Guess The Number,https://atcoder.jp/contests/abc157/tasks/abc157_c,"問題文以下の条件を満たす 0 以上の整数が存在すれば それらのうち最小のものを出力してください そのような整数が存在しなければ   1と出力してください 

十進表記で丁度 N 桁である  0 は 1 桁の整数とする その他の整数については 先頭に 0 をつけた表記は認めない  
左から数えて s i 桁目は c i である  left i   1  2   cdots  M right 


制約
入力は全て整数
1  leq N  leq 3
0  leq M  leq 5
1  leq s i  leq N
0  leq c i  leq 9


入力入力は以下の形式で標準入力から与えられる 
N M
s 1 c 1
 vdots
s M c M


出力答えを出力せよ 

入力例 13 3
1 7
3 2
1 7


出力例 1702

702 の左から 1 桁目は 7 であり  3 桁目は 2 ですから  702 は問の条件を満たします また  701 以下の非負整数は問の条件を満たしません 

入力例 23 2
2 1
2 3


出力例 2 1


入力例 33 1
1 0


出力例 3 1

Problem StatementIf there is an integer not less than 0 satisfying the following conditions  print the smallest such integer  otherwise  print  1 

The integer has exactly N digits in base ten   We assume 0 to be a 1 digit integer  For other integers  leading zeros are not allowed  
The s i th digit from the left is c i   left i   1  2   cdots  M right 


Constraints
All values in input are integers 
1  leq N  leq 3
0  leq M  leq 5
1  leq s i  leq N
0  leq c i  leq 9


InputInput is given from Standard Input in the following format 
N M
s 1 c 1
 vdots
s M c M


OutputPrint the answer 

Sample Input 13 3
1 7
3 2
1 7


Sample Output 1702

702 satisfies the conditions   its 1 st and 3 rd digits are 7 and 2  respectively   while no non negative integer less than 702 satisfies them 

Sample Input 23 2
2 1
2 3


Sample Output 2 1


Sample Input 33 1
1 0


Sample Output 3 1"
Friend Suggestions,https://atcoder.jp/contests/abc157/tasks/abc157_d,"問題文とあるSNSに 人 1  人 2   cdots 人 N が登録しています 
この N 人の間には  M 組の 友達関係 と  K 組の ブロック関係 が存在します 
i   1  2   cdots  M について 人 A i と人 B i は友達関係にあります この関係は双方向的です 
i   1  2   cdots  K について 人 C i と人 D i はブロック関係にあります この関係は双方向的です 
以下の 4 つの条件が満たされるとき 人 a は人 b の 友達候補 であると定義します 

a  neq b である 
人 a と人 b はブロック関係に無い 
人 a と人 b は友達関係に無い 
1 以上 N 以下の整数から成るある数列 c 0  c 1  c 2   cdots  c L が存在し c 0   a であり  c L   b であり  i   0  1   cdots  L   1 について 人 c i と人 c  i 1  は友達関係にある 

人 i   1  2      N について 友達候補の数を答えてください 

制約
入力は全て整数
2   N   10 5
0  leq M  leq 10 5
0  leq K  leq 10 5
1  leq A i  B i  leq N
A i  neq B i
1  leq C i  D i  leq N
C i  neq D i
 A i  B i   neq  A j  B j   i  neq j 
 A i  B i   neq  B j  A j 
 C i  D i   neq  C j  D j   i  neq j 
 C i  D i   neq  D j  C j 
 A i  B i   neq  C j  D j 
 A i  B i   neq  D j  C j 


入力入力は以下の形式で標準入力から与えられる 
N M K
A 1 B 1
 vdots
A M B M
C 1 D 1
 vdots
C K D K


出力答えを空白区切りで順に出力せよ 

入力例 14 4 1
2 1
1 3
3 2
3 4
4 1


出力例 10 1 0 1

人 2 と人 3 は友達関係にあり  人 3 と人 4 は友達関係にあり  かつ人 2 と人 4 は友達関係にもブロック関係にもありませんから  人 4 は人 2の友達候補です 
人 1 と人 3 は人 2 の友達候補ではありませんから  人 2 の友達候補は 1 人です 

入力例 25 10 0
1 2
1 3
1 4
1 5
3 2
2 4
2 5
4 3
5 3
4 5


出力例 20 0 0 0 0

全ての人は他の全ての人と友達関係にありますが 友達候補は 0 人です 

入力例 310 9 3
10 1
6 7
8 2
2 5
8 4
7 3
10 9
6 4
5 8
2 6
7 5
3 1


出力例 31 3 5 4 3 3 3 3 1 0

Problem StatementAn SNS has N users   User 1  User 2   cdots  User N 
Between these N users  there are some relationships   M friendships and K blockships 
For each i   1  2   cdots  M  there is a bidirectional friendship between User A i and User B i 
For each i   1  2   cdots  K  there is a bidirectional blockship between User C i and User D i 
We define User a to be a friend candidate for User b when all of the following four conditions are satisfied 

a  neq b 
There is not a friendship between User a and User b 
There is not a blockship between User a and User b 
There exists a sequence c 0  c 1  c 2   cdots  c L consisting of integers between 1 and N  inclusive  such that c 0   a  c L   b  and there is a friendship between User c i and c  i 1  for each i   0  1   cdots  L   1 

For each user i   1  2      N  how many friend candidates does it have 

Constraints
All values in input are integers 
2   N   10 5
0  leq M  leq 10 5
0  leq K  leq 10 5
1  leq A i  B i  leq N
A i  neq B i
1  leq C i  D i  leq N
C i  neq D i
 A i  B i   neq  A j  B j   i  neq j 
 A i  B i   neq  B j  A j 
 C i  D i   neq  C j  D j   i  neq j 
 C i  D i   neq  D j  C j 
 A i  B i   neq  C j  D j 
 A i  B i   neq  D j  C j 


InputInput is given from Standard Input in the following format 
N M K
A 1 B 1
 vdots
A M B M
C 1 D 1
 vdots
C K D K


OutputPrint the answers in order  with space in between 

Sample Input 14 4 1
2 1
1 3
3 2
3 4
4 1


Sample Output 10 1 0 1

There is a friendship between User 2 and 3  and between 3 and 4  Also  there is no friendship or blockship between User 2 and 4  Thus  User 4 is a friend candidate for User 2 
However  neither User 1 or 3 is a friend candidate for User 2  so User 2 has one friend candidate 

Sample Input 25 10 0
1 2
1 3
1 4
1 5
3 2
2 4
2 5
4 3
5 3
4 5


Sample Output 20 0 0 0 0

Everyone is a friend of everyone else and has no friend candidate 

Sample Input 310 9 3
10 1
6 7
8 2
2 5
8 4
7 3
10 9
6 4
5 8
2 6
7 5
3 1


Sample Output 31 3 5 4 3 3 3 3 1 0"
Simple String Queries,https://atcoder.jp/contests/abc157/tasks/abc157_e,"問題文長さ N の英小文字から成る文字列 S が与えられます 
Q 個のクエリを処理してください 各クエリは以下の 2 種類のいずれかです 

type 1   S の i q 文字目を c q に変更してください 元々 S の i q 文字目が c q である場合は 何もしないでください 
type 2   S の l q 文字目から r q 文字目まで  両端含む  から成る部分文字列に表れる文字が何種類あるかを答えてください 


制約
N  Q  i q  l q  r q は整数
S は英小文字列
c q は英小文字
1  leq N  leq 500000
1  leq Q  leq 20000
 S    N
1  leq i q  leq N
1  leq l q  leq r q  leq N
各テストケースに type 2 のクエリは 1 つ以上存在する


入力入力は以下の形式で標準入力から与えられる 
N
S
Q
Query 1
 vdots
Query Q

4 行目から Q 3 行目の Query iは 以下の 2 つのいずれかである 
1 i q c q

2 l q r q


出力type 2 の各クエリについて答えを改行区切りで出力せよ 

入力例 17
abcdbbd
6
2 3 6
1 5 z
2 1 1
1 4 a
1 7 d
2 1 7


出力例 13
1
5

1 つ目のクエリでは  cdbb には b   c   d の 3 種類の文字が含まれますから  3 を出力します 
2 つ目のクエリで  S が abcdzbd に変更されます 
3 つ目のクエリでは  a には a の 1 種類の文字が含まれますから  1 を出力します 
4 つ目のクエリで  S が abcazbd に変更されます 
5 つ目のクエリでは  S は変わらず abcazbd のままです 
6 つ目のクエリでは  abcazbd にはa  b  c  d  z の 5 種類の文字が含まれますから  5 を出力します 
Problem StatementYou are given a string S of length N consisting of lowercase English letters 
Process Q queries of the following two types 

Type 1  change the i q th character of S to c q   Do nothing if the i q th character is already c q  
Type 2  answer the number of different characters occurring in the substring of S between the l q th and r q th characters  inclusive  


Constraints
N  Q  i q  l q  and r q are integers 
S is a string consisting of lowercase English letters 
c q is a lowercase English letter 
1  leq N  leq 500000
1  leq Q  leq 20000
 S    N
1  leq i q  leq N
1  leq l q  leq r q  leq N
There is at least one query of type 2 in each testcase 


InputInput is given from Standard Input in the following format 
N
S
Q
Query 1
 vdots
Query Q

Here  Query i in the 4 th through  Q 3  th lines is one of the following 
1 i q c q

2 l q r q


OutputFor each query of type 2  print a line containing the answer 

Sample Input 17
abcdbbd
6
2 3 6
1 5 z
2 1 1
1 4 a
1 7 d
2 1 7


Sample Output 13
1
5

In the first query  cdbb contains three kinds of letters  b   c   and d  so we print 3 
In the second query  S is modified to abcdzbd 
In the third query  a contains one kind of letter  a  so we print 1 
In the fourth query  S is modified to abcazbd 
In the fifth query  S does not change and is still abcazbd 
In the sixth query  abcazbd contains five kinds of letters  a  b  c  d  and z  so we print 5"
Yakiniku Optimization Problem,https://atcoder.jp/contests/abc157/tasks/abc157_f,"問題文高橋君は二次元平面である網の上で N 枚の肉を焼こうとしています  i 枚目の肉の位置は  left x i  y i right であり 火の通りにくさは c i です 
高橋君は熱源を 1 つ持っています 熱源を位置   left X  Y right   X  Yは実数 に置くと  i枚目の肉は  焼けるまでに c i  times  sqrt  left X   x i right  2    left Y y i right  2  秒掛かります 
高橋君は肉を K 枚食べたいと考えています  K 枚以上の肉が焼けるまでに掛かる時間を最小化するように高橋君が熱源を配置したとき その所要時間を求めてください 

制約
入力は全て整数
1  leq N  leq 60
1  leq K  leq N
 1000  leq x i   y i  leq 1000
 left x i  y i right   neq  left x j  y j right   left i  neq j  right 
1  leq c i  leq 100


入力入力は以下の形式で標準入力から与えられる 
N K
x 1 y 1 c 1
 vdots
x N y N c N


出力答えを出力せよ 
なお 想定解答との絶対誤差または相対誤差が 10   6  以下であれば正解として扱われる 

入力例 14 3
 1 0 3
0 0 3
1 0 2
1 1 40


出力例 12 4

熱源を  left  0 2  0 right に置くと  2 4 秒後までに 1  2  3 枚目の肉が焼けます これが最適な熱源の置き方です 

入力例 210 5
 879 981 26
890  406 81
512 859 97
362  955 25
128 553 17
 885 763 2
449 310 57
 656  204 11
 270 76 40
184 170 16


出力例 27411 2252

Problem StatementTakahashi wants to grill N pieces of meat on a grilling net  which can be seen as a two dimensional plane  The coordinates of the i th piece of meat are  left x i  y i right   and its hardness is c i 
Takahashi can use one heat source to grill the meat  If he puts the heat source at coordinates  left X  Y right   where X and Y are real numbers  the i th piece of meat will be ready to eat in c i  times  sqrt  left X   x i right  2    left Y y i right  2  seconds 
Takahashi wants to eat K pieces of meat  Find the time required to have K or more pieces of meat ready if he put the heat source to minimize this time 

Constraints
All values in input are integers 
1  leq N  leq 60
1  leq K  leq N
 1000  leq x i   y i  leq 1000
 left x i  y i right   neq  left x j  y j right   left i  neq j  right 
1  leq c i  leq 100


InputInput is given from Standard Input in the following format 
N K
x 1 y 1 c 1
 vdots
x N y N c N


OutputPrint the answer 
It will be considered correct if its absolute or relative error from our answer is at most 10   6  

Sample Input 14 3
 1 0 3
0 0 3
1 0 2
1 1 40


Sample Output 12 4

If we put the heat source at  left  0 2  0 right   the 1 st  2 nd  and 3 rd pieces of meat will be ready to eat within 2 4 seconds  This is the optimal place to put the heat source 

Sample Input 210 5
 879 981 26
890  406 81
512 859 97
362  955 25
128 553 17
 885 763 2
449 310 57
 656  204 11
 270 76 40
184 170 16


Sample Output 27411 2252"
Station and Bus,https://atcoder.jp/contests/abc158/tasks/abc158_a,"問題文AtCoder 市には 3 つの駅があり 1  2  3 の番号がつけられています 
これらの駅は それぞれ鉄道会社A  Bのいずれかが管理しています 管理状況は長さ 3 の文字列 S で表され 駅 i は S i が A のとき鉄道会社 A が B のとき鉄道会社 B が管理しています 
鉄道会社 A が管理している駅と 鉄道会社 B が管理している駅の間には 交通の便のためにバスを運行することになりました 
実際にバスが運行することになる駅の組み合わせが存在するかどうかを判定してください 

制約
S は A または B から成る
 S    3


入力入力は以下の形式で標準入力から与えられる 
S


出力バスが運行することになる駅の組み合わせが存在する場合は Yes を 存在しない場合は No を出力せよ 

入力例 1ABA


出力例 1Yes

駅 1  3 は鉄道会社 A が 駅 2 は鉄道会社 B が管理しています 
駅 1  2 間と駅 2  3 間でバスが運行するので Yes を出力してください 

入力例 2BBA


出力例 2Yes

駅 1  2 は鉄道会社 B が 駅 3 は鉄道会社 A が管理しています 
駅 1  3 間と駅 2  3 間でバスが運行するので Yes を出力してください 

入力例 3BBB


出力例 3No

駅は全て鉄道会社 B が管理しているので バスは運行しません よって No を出力してください 
Problem StatementIn AtCoder City  there are three stations numbered 1  2  and 3 
Each of these stations is operated by one of the two railway companies  A and B  A string S of length 3 represents which company operates each station  If S i is A  Company A operates Station i  if S i is B  Company B operates Station i 
To improve the transportation condition  for each pair of a station operated by Company A and one operated by Company B  there will be a bus service connecting them 
Determine if there is a pair of stations that will be connected by a bus service 

Constraints
Each character of S is A or B 
 S    3


InputInput is given from Standard Input in the following format 
S


OutputIf there is a pair of stations that will be connected by a bus service  print Yes  otherwise  print No 

Sample Input 1ABA


Sample Output 1Yes

Company A operates Station 1 and 3  while Company B operates Station 2 
There will be a bus service between Station 1 and 2  and between Station 2 and 3  so print Yes 

Sample Input 2BBA


Sample Output 2Yes

Company B operates Station 1 and 2  while Company A operates Station 3 
There will be a bus service between Station 1 and 3  and between Station 2 and 3  so print Yes 

Sample Input 3BBB


Sample Output 3No

Company B operates all the stations  Thus  there will be no bus service  so print No"
Count Balls,https://atcoder.jp/contests/abc158/tasks/abc158_b,"問題文高橋君は青と赤の 2 色のボールを持っており これらを一列に並べようとしています 
初め 列にボールはありません 
根気のある高橋君は 次の操作を 10  100  回繰り返します 

列の末尾に A 個の青いボールを加える その後 列の末尾に B 個の赤いボールを加える 

こうしてできる列の先頭から N 個のボールのうち 青いボールの個数はいくつでしょうか 

制約
1  leq N  leq 10  18 
A  B  geq 0
0   A   B  leq 10  18 
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N A B


出力列の先頭から N 個のボールのうち 青いボールの個数を出力せよ 

入力例 18 3 4


出力例 14

青いボールをb 赤いボールを rで表すと 列の先頭から 8 個のボールは bbbrrrrb であるので このうち青いボールは 4 個です 

入力例 28 0 4


出力例 20

そもそも赤いボールしか並んでいません 

入力例 36 2 4


出力例 32

bbrrrr のうち青いボールは 2 個です 
Problem StatementTakahashi has many red balls and blue balls  Now  he will place them in a row 
Initially  there is no ball placed 
Takahashi  who is very patient  will do the following operation 10  100  times 

Place A blue balls at the end of the row of balls already placed  Then  place B red balls at the end of the row 

How many blue balls will be there among the first N balls in the row of balls made this way 

Constraints
1  leq N  leq 10  18 
A  B  geq 0
0   A   B  leq 10  18 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N A B


OutputPrint the number of blue balls that will be there among the first N balls in the row of balls 

Sample Input 18 3 4


Sample Output 14

Let b denote a blue ball  and r denote a red ball  The first eight balls in the row will be bbbrrrrb  among which there are four blue balls 

Sample Input 28 0 4


Sample Output 20

He placed only red balls from the beginning 

Sample Input 36 2 4


Sample Output 32

Among bbrrrr  there are two blue balls"
Tax Increase,https://atcoder.jp/contests/abc158/tasks/abc158_c,"問題文消費税率が 8  のとき A 円 10  のとき B 円の消費税が課されるような商品の税抜き価格を求めてください 
ただし 税抜き価格は正の整数でなければならないものとし 消費税の計算において小数点以下は切り捨てて計算するものとします 
条件を満たす税抜き価格が複数存在する場合は最も小さい金額を出力してください また 条件を満たす税抜き価格が存在しない場合は  1 と出力してください 

制約
1  leq A  leq B  leq 100
A  B は整数である


入力入力は以下の形式で標準入力から与えられる 
A B


出力条件を満たす税抜き価格が存在する場合は最小の金額を表す整数を 存在しない場合は  1 を出力せよ 

入力例 12 2


出力例 125

税抜き価格が 25 円の場合 


消費税率が 8  のとき消費税は  lfloor 25  times 0 08  rfloor    lfloor 2  rfloor   2 円です 


消費税率が 10  のとき消費税は  lfloor 25  times 0 1  rfloor    lfloor 2 5  rfloor   2 円です 


よって 25 円は条件を満たし また 26 円のときなども条件を満たしますが これが最小であるので 25 を出力してください 

入力例 28 10


出力例 2100

税抜き価格が 100 円の場合 


消費税率が 8  のとき消費税は  lfloor 100  times 0 08  rfloor   8 円です 


消費税率が 10  のとき消費税は  lfloor 100  times 0 1  rfloor   10 円です 



入力例 319 99


出力例 3 1

条件を満たす税抜き価格は存在しないので  1 を出力してください 
Problem StatementFind the price of a product before tax such that  when the consumption tax rate is 8 percent and 10 percent  the amount of consumption tax levied on it is A yen and B yen  respectively   Yen is the currency of Japan  
Here  the price before tax must be a positive integer  and the amount of consumption tax is rounded down to the nearest integer 
If multiple prices satisfy the condition  print the lowest such price  if no price satisfies the condition  print  1 

Constraints
1  leq A  leq B  leq 100
A and B are integers 


InputInput is given from Standard Input in the following format 
A B


OutputIf there is a price that satisfies the condition  print an integer representing the lowest such price  otherwise  print  1 

Sample Input 12 2


Sample Output 125

If the price of a product before tax is 25 yen  the amount of consumption tax levied on it is 

When the consumption tax rate is 8 percent   lfloor 25  times 0 08  rfloor    lfloor 2  rfloor   2 yen 
When the consumption tax rate is 10 percent   lfloor 25  times 0 1  rfloor    lfloor 2 5  rfloor   2 yen 

Thus  the price of 25 yen satisfies the condition  There are other possible prices  such as 26 yen  but print the minimum such price  25 

Sample Input 28 10


Sample Output 2100

If the price of a product before tax is 100 yen  the amount of consumption tax levied on it is 

When the consumption tax rate is 8 percent   lfloor 100  times 0 08  rfloor   8 yen 
When the consumption tax rate is 10 percent   lfloor 100  times 0 1  rfloor   10 yen 


Sample Input 319 99


Sample Output 3 1

There is no price before tax satisfying this condition  so print  1"
String Formation,https://atcoder.jp/contests/abc158/tasks/abc158_d,"問題文高橋君は 英小文字から成る文字列 S を持っています 
この S から始めて ある与えられた手順に従って文字列を作ることにしました 
手順は Q 回の操作から成ります 操作 i 1  leq i  leq Q  では まず整数 T i が与えられます 


T i   1 のとき   文字列 S の前後を反転する 


T i   2 のとき   追加で整数 F i と英小文字 C i が与えられる 

F i   1 のとき   文字列 S の先頭に C i を追加する 
F i   2 のとき   文字列 S の末尾に C i を追加する 



高橋君のために 手順の後に最終的にできる文字列を求めてあげてください 

制約
1  leq  S   leq 10 5
S は英小文字から成る
1  leq Q  leq 2  times 10 5
T i   1 または 2
F i   1 または 2
C i は英小文字である


入力入力は以下の形式で標準入力から与えられる 
S
Q
Query 1
 
Query Q

3 行目から Q   2 行目の Query i は 以下の 2 つのいずれかである 
1

T i   1 として操作を行うことを表す 
2 F i C i

T i   2 として操作を行うことを表す 

出力手順の後に最終的にできる文字列を出力せよ 

入力例 1a
4
2 1 p
1
2 2 c
1


出力例 1cpa

Q   4 回の操作を行います 初め S は a です 


操作 1   S の先頭に p を追加する S は pa となる 


操作 2   S の前後を反転する S は ap となる 


操作 3   S の末尾に c を追加する S は apc となる 


操作 4   S の前後を反転する S は cpa となる 


よって最終的にできる文字列は cpa となります 

入力例 2a
6
2 2 a
2 1 b
1
2 2 c
1
1


出力例 2aabc

Q   6 回の操作を行います 初め S は a です 


操作 1   S は aa となる 


操作 2   S は baa となる 


操作 3   S は aab となる 


操作 4   S は aabc となる 


操作 5   S は cbaa となる 


操作 6   S は aabc となる 


よって最終的にできる文字列は aabc となります 

入力例 3y
1
2 1 x


出力例 3xy

Problem StatementTakahashi has a string S consisting of lowercase English letters 
Starting with this string  he will produce a new one in the procedure given as follows 
The procedure consists of Q operations  In Operation i  1  leq i  leq Q   an integer T i is provided  which means the following 


If T i   1  reverse the string S 


If T i   2  An integer F i and a lowercase English letter C i are additionally provided 

If F i   1   Add C i to the beginning of the string S 
If F i   2   Add C i to the end of the string S 



Help Takahashi by finding the final string that results from the procedure 

Constraints
1  leq  S   leq 10 5
S consists of lowercase English letters 
1  leq Q  leq 2  times 10 5
T i   1 or 2 
F i   1 or 2  if provided 
C i is a lowercase English letter  if provided 


InputInput is given from Standard Input in the following format 
S
Q
Query 1
 
Query Q

In the 3 rd through the  Q 2  th lines  Query i is one of the following 
1

which means T i   1  and 
2 F i C i

which means T i   2 

OutputPrint the resulting string 

Sample Input 1a
4
2 1 p
1
2 2 c
1


Sample Output 1cpa

There will be Q   4 operations  Initially  S is a 


Operation 1  Add p at the beginning of S  S becomes pa 


Operation 2  Reverse S  S becomes ap 


Operation 3  Add c at the end of S  S becomes apc 


Operation 4  Reverse S  S becomes cpa 


Thus  the resulting string is cpa 

Sample Input 2a
6
2 2 a
2 1 b
1
2 2 c
1
1


Sample Output 2aabc

There will be Q   6 operations  Initially  S is a 


Operation 1  S becomes aa 


Operation 2  S becomes baa 


Operation 3  S becomes aab 


Operation 4  S becomes aabc 


Operation 5  S becomes cbaa 


Operation 6  S becomes aabc 


Thus  the resulting string is aabc 

Sample Input 3y
1
2 1 x


Sample Output 3xy"
Divisible Substring,https://atcoder.jp/contests/abc158/tasks/abc158_e,"問題文高橋君は 0 から 9 までの数字から成る長さ N の文字列 S を持っています 
素数 P が好きな高橋君は S の空でない連続する部分文字列 N  times  N   1    2 個のうち 十進表記の整数と見なした際に P で割り切れるものの個数を知りたくなりました 
ただし部分文字列は先頭が 0 であっても良いものとし 文字列として等しい場合や 整数と見なした際に等しい場合も 部分文字列の S 内の位置で区別します 
高橋君のためにこの個数を計算してください 

制約
1  leq N  leq 2  times 10 5
S は数字から成る
 S    N
2  leq P  leq 10000
P は素数である


入力入力は以下の形式で標準入力から与えられる 
N P
S


出力S の空でない連続する部分文字列であって 十進表記の整数と見なした際に P で割り切れるものの個数を出力せよ 

入力例 14 3
3543


出力例 16

S   3543 です S の空でない連続する部分文字列は次の 10 個があります 


3 は 3 で割り切れる 


35 は 3 で割り切れない 


354 は 3 で割り切れる 


3543 は 3 で割り切れる 


5 は 3 で割り切れない 


54 は 3 で割り切れる 


543 は 3 で割り切れる 


4 は 3 で割り切れない 


43 は 3 で割り切れない 


3 は 3 で割り切れる 


このうち 3 で割り切れるものは 6 個であるので 6 を出力してください 

入力例 24 2
2020


出力例 210

S   2020 です S の空でない連続する部分文字列は 10 個ありますが その全てが 2 で割り切れるので 10 を出力してください 
先頭が 0 である部分文字列も許容されることに注意してください 

入力例 320 11
33883322005544116655


出力例 368

Problem StatementTakahashi has a string S of length N consisting of digits from 0 through 9 
He loves the prime number P  He wants to know how many non empty  contiguous  substrings of S   there are N  times  N   1    2 of them   are divisible by P when regarded as integers written in base ten 
Here substrings starting with a 0 also count  and substrings originated from different positions in S are distinguished  even if they are equal as strings or integers 
Compute this count to help Takahashi 

Constraints
1  leq N  leq 2  times 10 5
S consists of digits 
 S    N
2  leq P  leq 10000
P is a prime number 


InputInput is given from Standard Input in the following format 
N P
S


OutputPrint the number of non empty  contiguous  substrings of S that are divisible by P when regarded as an integer written in base ten 

Sample Input 14 3
3543


Sample Output 16

Here S   3543  There are ten non empty  contiguous  substrings of S 


3  divisible by 3 


35  not divisible by 3 


354  divisible by 3 


3543  divisible by 3 


5  not divisible by 3 


54  divisible by 3 


543  divisible by 3 


4  not divisible by 3 


43  not divisible by 3 


3  divisible by 3 


Six of these are divisible by 3  so print 6 

Sample Input 24 2
2020


Sample Output 210

Here S   2020  There are ten non empty  contiguous  substrings of S  all of which are divisible by 2  so print 10 
Note that substrings beginning with a 0 also count 

Sample Input 320 11
33883322005544116655


Sample Output 368"
Removing Robots,https://atcoder.jp/contests/abc158/tasks/abc158_f,"問題文数直線上に 1 から N の番号のついた N 個のロボットが置かれています ロボット i は座標 X i に存在し 起動すると D i だけ正の方向に移動し 移動を終えると同時に数直線上から取り除かれます 全てのロボットの移動速度は同じで 大きさは無視できます 
イタズラ好きの高橋君は 数直線上にロボットが残っている限り 好きなだけ以下の操作を行うことができます  1 回も行わないことも可能です 

ロボットを 1 つ選び起動する 移動中のロボットが存在するときは行えない 

ロボット i が移動する過程で 数直線上の座標 X i 以上 X i   D i 未満の範囲に残っている別のロボット j と接触したら ロボット j も起動されて移動を開始します この処理は再帰的に繰り返されます 
高橋君が操作を繰り返した後 数直線上に残っているロボットの組み合わせとして考えられるものは何通り存在するでしょうか 答えは非常に大きくなる場合があるので 998244353 で割った余りを出力してください 

制約
1  leq N  leq 2  times 10 5
 10 9  leq X i  leq 10 9
1  leq D i  leq 10 9
X i  neq X j  i  neq j 
入力は全て整数である


入力入力は以下の形式で標準入力から与えられる 
N
X 1 D 1
 
X N D N


出力数直線上に残っているロボットの組み合わせとして考えられるものの個数を 998244353 で割った余りを出力せよ 

入力例 12
1 5
3 3


出力例 13

数直線上に残っているロボットの組み合わせとしては   1  2      1         の 3 通りが考えられます 
これらは次のように操作すると実現されます 


高橋君はロボットを起動しない このとき ロボット   1  2   が残ります 


高橋君がロボット 1 を起動する このとき ロボット 1 が移動する過程でロボット 2 を起動します 最終的にロボットは 1 つも残っていません もしくは 高橋君がロボット 2 を起動した後ロボット 1 を起動しても ロボットが残っていない状態にすることができます 


高橋君がロボット 2 を起動し 操作を終了する このとき ロボット   1   が残ります 



入力例 23
6 5
 1 10
3 3


出力例 25

数直線上に残っているロボットの組み合わせとしては   1  2  3      1  2      2      2  3         の 5 通りが考えられます 

入力例 34
7 10
 10 3
4 3
 4 3


出力例 316

どのロボットも他のロボットに影響しません 

入力例 420
 8 1
26 4
0 5
9 1
19 4
22 20
28 27
11 8
 3 20
 25 17
10 4
 18 27
24 28
 11 19
2 27
 2 18
 1 12
 24 29
31 29
29 7


出力例 4110

組み合わせとして考えられるものの個数を 998244353 で割った余りを出力することに注意してください 
Problem StatementThere are N robots numbered 1 to N placed on a number line  Robot i is placed at coordinate X i  When activated  it will travel the distance of D i in the positive direction  and then it will be removed from the number line  All the robots move at the same speed  and their sizes are ignorable 
Takahashi  who is a mischievous boy  can do the following operation any number of times  possibly zero  as long as there is a robot remaining on the number line 

Choose a robot and activate it  This operation cannot be done when there is a robot moving 

While Robot i is moving  if it touches another robot j that is remaining in the range  X i  X i   D i  on the number line  Robot j also gets activated and starts moving  This process is repeated recursively 
How many possible sets of robots remaining on the number line are there after Takahashi does the operation some number of times  Compute this count modulo 998244353  since it can be enormous 

Constraints
1  leq N  leq 2  times 10 5
 10 9  leq X i  leq 10 9
1  leq D i  leq 10 9
X i  neq X j  i  neq j 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
X 1 D 1
 
X N D N


OutputPrint the number of possible sets of robots remaining on the number line  modulo 998244353 

Sample Input 12
1 5
3 3


Sample Output 13

There are three possible sets of robots remaining on the number line    1  2      1    and      
These can be achieved as follows 


If Takahashi activates nothing  the robots   1  2   will remain 


If Takahashi activates Robot 1  it will activate Robot 2 while moving  after which there will be no robots on the number line  This state can also be reached by activating Robot 2 and then Robot 1 


If Takahashi activates Robot 2 and finishes doing the operation  the robot   1   will remain 



Sample Input 23
6 5
 1 10
3 3


Sample Output 25

There are five possible sets of robots remaining on the number line    1  2  3      1  2      2      2  3    and      

Sample Input 34
7 10
 10 3
4 3
 4 3


Sample Output 316

None of the robots influences others 

Sample Input 420
 8 1
26 4
0 5
9 1
19 4
22 20
28 27
11 8
 3 20
 25 17
10 4
 18 27
24 28
 11 19
2 27
 2 18
 1 12
 24 29
31 29
29 7


Sample Output 4110

Remember to print the count modulo 998244353"
The Number of Even Pairs,https://atcoder.jp/contests/abc159/tasks/abc159_a,"問題文
N M 個のボールがあります 各ボールには整数が 1 つ書かれています 
これらのボールに書かれている数について   

N 個のボールに書かれている数は偶数
M 個のボールに書かれている数は奇数

であることがわかっています   
これらの N M 個のボールの中から 2 つ選んで 書かれた数の和が偶数になる方法の数を求めてください 選ぶ順序は考慮しません   
なお この方法の数はボールに書かれている整数の実際の値によらないことが示せます   

制約

0  leq N M  leq 100
2  leq N M
入力はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
N M


出力
答えを出力せよ 

入力例 12 1


出力例 11

例えば 3 つのボールに書かれている数がそれぞれ 1 2 4 であるとすると   

1 が書かれたボールと 2 が書かれたボールを選ぶと 和は奇数
1 が書かれたボールと 4 が書かれたボールを選ぶと 和は奇数
2 が書かれたボールと 4 が書かれたボールを選ぶと 和は偶数

であるので 答えは 1 です 

入力例 24 3


出力例 29


入力例 31 1


出力例 30


入力例 413 3


出力例 481


入力例 50 3


出力例 53

Problem Statement
We have N M balls  each of which has an integer written on it 
It is known that   

The numbers written on N of the balls are even 
The numbers written on M of the balls are odd 

Find the number of ways to choose two of the N M balls  disregarding order  so that the sum of the numbers written on them is even 
It can be shown that this count does not depend on the actual values written on the balls 

Constraints

0  leq N M  leq 100
2  leq N M
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N M


Output
Print the answer 

Sample Input 12 1


Sample Output 11

For example  let us assume that the numbers written on the three balls are 1 2 4 

If we choose the two balls with 1 and 2  the sum is odd 
If we choose the two balls with 1 and 4  the sum is odd 
If we choose the two balls with 2 and 4  the sum is even 

Thus  the answer is 1 

Sample Input 24 3


Sample Output 29


Sample Input 31 1


Sample Output 30


Sample Input 413 3


Sample Output 481


Sample Input 50 3


Sample Output 53"
String Palindrome,https://atcoder.jp/contests/abc159/tasks/abc159_b,"問題文長さが奇数である文字列 S が以下の条件をすべて満たすとき S は 強い回文 であるといいます 

S は回文である 
N を S の長さとするとき S の 1 文字目から  N 1  2 文字目まで 両端含む からなる文字列は回文である 
S の  N 3  2 文字目から N 文字目まで 両端含む からなる文字列は回文である 

S が強い回文かどうかを判定してください 

制約
S は英小文字のみからなる
S の長さは 3 以上 99 以下の奇数


入力入力は以下の形式で標準入力から与えられる 
S


出力S が強い回文ならば Yes  
強い回文でないならば No と出力せよ 

入力例 1akasaka


出力例 1Yes


S は akasaka
S の 1 文字目から 3 文字目までからなる文字列は aka
S の 5 文字目から 7 文字目までからなる文字列は aka

これらはすべて回文であるため S は強い回文です 

入力例 2level


出力例 2No


入力例 3atcoder


出力例 3No

Problem StatementA string S of an odd length is said to be a strong palindrome if and only if all of the following conditions are satisfied 

S is a palindrome 
Let N be the length of S  The string formed by the 1 st through   N 1  2  th characters of S is a palindrome 
The string consisting of the  N 3  2 st through N th characters of S is a palindrome 

Determine whether S is a strong palindrome 

Constraints
S consists of lowercase English letters 
The length of S is an odd number between 3 and 99  inclusive  


InputInput is given from Standard Input in the following format 
S


OutputIf S is a strong palindrome  print Yes 
otherwise  print No 

Sample Input 1akasaka


Sample Output 1Yes


S is akasaka 
The string formed by the 1 st through the 3 rd characters is aka 
The string formed by the 5 th through the 7 th characters is aka 
All of these are palindromes  so S is a strong palindrome 


Sample Input 2level


Sample Output 2No


Sample Input 3atcoder


Sample Output 3No"
Maximum Volume,https://atcoder.jp/contests/abc159/tasks/abc159_c,"問題文正の整数 L が与えられます 
縦 横 高さの長さ  それぞれ 整数でなくてもかまいません  の合計が L の直方体としてありうる体積の最大値を求めてください 

制約
1   L   1000
L は整数


入力入力は以下の形式で標準入力から与えられる 
L


出力縦 横 高さの長さの合計が L の直方体としてありうる体積の最大値を出力せよ 
なお 想定解答との絶対誤差または相対誤差が 10   6  以下であれば正解として扱われる 

入力例 13


出力例 11 000000000000

例えば 縦 0 8  横 1  高さ 1 2 の直方体の体積は 0 96 です 
一方 縦 1  横 1  高さ 1 とすると直方体の体積は 1 で より体積が大きいです 

入力例 2999


出力例 236926037 000000000000

Problem StatementGiven is a positive integer L 
Find the maximum possible volume of a rectangular cuboid whose sum of the dimensions  not necessarily integers  is L 

Constraints
1   L   1000
L is an integer 


InputInput is given from Standard Input in the following format 
L


OutputPrint the maximum possible volume of a rectangular cuboid whose sum of the dimensions  not necessarily integers  is L 
Your output is considered correct if its absolute or relative error from our answer is at most 10   6  

Sample Input 13


Sample Output 11 000000000000

For example  a rectangular cuboid whose dimensions are 0 8  1  and 1 2 has a volume of 0 96 
On the other hand  if the dimensions are 1  1  and 1  the volume of the rectangular cuboid is 1  which is greater 

Sample Input 2999


Sample Output 236926037 000000000000"
Banned K,https://atcoder.jp/contests/abc159/tasks/abc159_d,"問題文
ボールが N 個あり  i 番目のボールには整数 A i が書かれています 
k 1 2     N に対して以下の問題を解いて 答えをそれぞれ出力してください   

k 番目のボールを除いた N 1 個のボールから 書かれている整数が等しいような異なる 2 つのボールを選び出す方法の数を求めてください 選ぶ順序は考慮しません 


制約

3  leq N  leq 2  times 10 5
1  leq A i  leq N
入力はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
N
A 1 A 2     A N


出力
k 1 2     N に対する答えを順番に一行ずつ出力せよ 

入力例 15
1 1 2 1 2


出力例 12
2
3
2
3

例えば k 1 のとき 残りのボールに書かれている数はそれぞれ  1 2 1 2  です 
この中から書かれている数が等しいような異なる 2 つのボールを選び出す方法は 2 通りあります 
したがって  k 1 に対する問題の答えは 2 です 

入力例 24
1 2 3 4


出力例 20
0
0
0

どの 2 つのボールを選び出しても 書かれている数は等しくありません 

入力例 35
3 3 3 3 3


出力例 36
6
6
6
6

どの 2 つのボールを選び出しても 書かれている数が等しいです 

入力例 48
1 2 1 4 2 1 4 1


出力例 45
7
5
7
7
5
7
5

Problem Statement
We have N balls  The i th ball has an integer A i written on it 
For each k 1  2       N  solve the following problem and print the answer   

Find the number of ways to choose two distinct balls  disregarding order  from the N 1 balls other than the k th ball so that the integers written on them are equal 


Constraints

3  leq N  leq 2  times 10 5
1  leq A i  leq N
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N
A 1 A 2     A N


Output
For each k 1 2     N  print a line containing the answer 

Sample Input 15
1 1 2 1 2


Sample Output 12
2
3
2
3

Consider the case k 1 for example  The numbers written on the remaining balls are 1 2 1 2 
From these balls  there are two ways to choose two distinct balls so that the integers written on them are equal 
Thus  the answer for k 1 is 2 

Sample Input 24
1 2 3 4


Sample Output 20
0
0
0

No two balls have equal numbers written on them 

Sample Input 35
3 3 3 3 3


Sample Output 36
6
6
6
6

Any two balls have equal numbers written on them 

Sample Input 48
1 2 1 4 2 1 4 1


Sample Output 45
7
5
7
7
5
7
5"
Dividing Chocolate,https://atcoder.jp/contests/abc159/tasks/abc159_e,nan
Knapsack for All Segments,https://atcoder.jp/contests/abc159/tasks/abc159_f,"問題文長さ N の整数列 A 1  A 2   ldots  A N と正の整数 S が与えられます 
1 leq L  leq R  leq N をみたす整数  L  R  の組について f L  R  を以下のように定めます 

L  leq x 1   x 2    cdots   x k  leq R かつ A  x 1  A  x 2   cdots  A  x k    S を満たすような整数列  x 1  x 2   ldots   x k  の個数

1 leq L  leq R leq N を満たす整数  L  R  の組すべてに対する f L  R  の和を求めてください ただし 答えは非常に大きくなることがあるので 998244353 で割ったあまりを出力してください 

制約
入力は全て整数である 
1  leq N  leq 3000
1  leq S  leq 3000
1  leq A i  leq 3000


入力入力は以下の形式で標準入力から与えられる 
N S
A 1 A 2     A N


出力f L  R  の和を 998244353 で割ったあまりを出力せよ 

入力例 13 4
2 2 4


出力例 15

それぞれ以下のように計算できて その和は 5 です 

f 1 1    0
f 1 2    1   1  2  の 1 つ 
f 1 3    2   1  2  と  3  の 2 つ 
f 2 2    0
f 2 3    1   3  の 1 つ 
f 3 3    1   3  の 1 つ 


入力例 25 8
9 9 9 9 9


出力例 20


入力例 310 10
3 1 4 1 5 9 2 6 5 3


出力例 3152

Problem StatementGiven are a sequence of N integers A 1  A 2   ldots  A N and a positive integer S 
For a pair of integers  L  R  such that 1 leq L  leq R  leq N  let us define f L  R  as follows 

f L  R  is the number of sequences of integers  x 1  x 2   ldots   x k  such that L  leq x 1   x 2    cdots   x k  leq R and A  x 1  A  x 2   cdots  A  x k    S 

Find the sum of f L  R  over all pairs of integers  L  R  such that 1 leq L  leq R leq N  Since this sum can be enormous  print it modulo 998244353 

Constraints
All values in input are integers 
1  leq N  leq 3000
1  leq S  leq 3000
1  leq A i  leq 3000


InputInput is given from Standard Input in the following format 
N S
A 1 A 2     A N


OutputPrint the sum of f L  R   modulo 998244353 

Sample Input 13 4
2 2 4


Sample Output 15

The value of f L  R  for each pair is as follows  for a total of 5 

f 1 1    0
f 1 2    1  for the sequence  1  2  
f 1 3    2  for  1  2  and  3  
f 2 2    0
f 2 3    1  for  3  
f 3 3    1  for  3  


Sample Input 25 8
9 9 9 9 9


Sample Output 20


Sample Input 310 10
3 1 4 1 5 9 2 6 5 3


Sample Output 3152"
Coffee,https://atcoder.jp/contests/abc160/tasks/abc160_a,"問題文ある長さ 6 の英小文字からなる文字列がcoffeeに似ているとは 3 文字目と 4 文字目が等しく 5 文字目と 6 文字目も等しいことを言います 
与えられる文字列 S がcoffeeに似ているか判定してください 

制約
S は長さ 6 の英小文字からなる文字列である 


入力入力は以下の形式で標準入力から与えられる 
S


出力S がcoffeeに似ている場合 Yes を そうでない場合 Noを出力せよ 

入力例 1sippuu


出力例 1Yes

sippuu は 3 文字目と 4 文字目が等しく 5 文字目と 6 文字目も等しいです 

入力例 2iphone


出力例 2No


入力例 3coffee


出力例 3Yes

Problem StatementA string of length 6 consisting of lowercase English letters is said to be coffee like if and only if its 3 rd and 4 th characters are equal and its 5 th and 6 th characters are also equal 
Given a string S  determine whether it is coffee like 

Constraints
S is a string of length 6 consisting of lowercase English letters 


InputInput is given from Standard Input in the following format 
S


OutputIf S is coffee like  print Yes  otherwise  print No 

Sample Input 1sippuu


Sample Output 1Yes

In sippuu  the 3 rd and 4 th characters are equal  and the 5 th and 6 th characters are also equal 

Sample Input 2iphone


Sample Output 2No


Sample Input 3coffee


Sample Output 3Yes"
Golden Coins,https://atcoder.jp/contests/abc160/tasks/abc160_b,"問題文高橋君は金色の硬貨が好きです 自分が持っている 500 円硬貨 1 枚につき 1000 5 円硬貨 1 枚につき 5 の 嬉しさ を得ます 
高橋君は X 円を持っています これを高橋君の嬉しさが最大になるように両替したとき 高橋君の嬉しさはいくらになりますか 
 なお 利用できる硬貨は 500 円玉 100 円玉 50 円玉 10 円玉 5 円玉 1 円玉の 6 種類とします  

制約
0  leq X  leq 10 9
X は整数


入力入力は以下の形式で標準入力から与えられる 
X


出力嬉しさの最大値を出力せよ 

入力例 11024


出力例 12020

500 円硬貨 2 枚 5 円硬貨 4 枚を含むように両替することで 2020 の嬉しさを得ます これが嬉しさの最大です 

入力例 20


出力例 20

高橋君は一文無しです 

入力例 31000000000


出力例 32000000000

高橋君は大富豪です 
Problem StatementTakahashi loves gold coins  He gains 1000 happiness points for each 500 yen coin he has and gains 5 happiness points for each 5 yen coin he has   Yen is the currency of Japan  
Takahashi has X yen  If he exchanges his money so that he will gain the most happiness points  how many happiness points will he earn 
 We assume that there are six kinds of coins available  500 yen  100 yen  50 yen  10 yen  5 yen  and 1 yen coins  

Constraints
0  leq X  leq 10 9
X is an integer 


InputInput is given from Standard Input in the following format 
X


OutputPrint the maximum number of happiness points that can be earned 

Sample Input 11024


Sample Output 12020

By exchanging his money so that he gets two 500 yen coins and four 5 yen coins  he gains 2020 happiness points  which is the maximum number of happiness points that can be earned 

Sample Input 20


Sample Output 20

He is penniless   or yenless 

Sample Input 31000000000


Sample Output 32000000000

He is a billionaire   in yen"
Traveling Salesman around Lake,https://atcoder.jp/contests/abc160/tasks/abc160_c,"問題文1 周 K メートルの円形の湖があり その周りに N 軒の家があります 
i 番目の家は 湖の北端から時計回りに A i メートルの位置にあります 
家の間の移動は 湖の周りに沿ってのみ行えます 
いずれかの家から出発して N 軒すべての家を訪ねるための最短移動距離を求めてください 

制約
2  leq K  leq 10 6
2  leq N  leq 2  times 10 5
0  leq A 1         A N   K
入力中のすべての値は整数である 


入力入力は以下の形式で標準入力から与えられる 
K N
A 1 A 2     A N


出力いずれかの家から出発して N 軒すべての家を訪ねるための最短移動距離を出力せよ 

入力例 120 3
5 10 15


出力例 110

1 番目の家から出発し 2 番目 3 番目の家へ順に移動すると移動距離が 10 になります 

入力例 220 3
0 5 15


出力例 210

2 番目の家から出発し 1 番目 3 番目の家へ順に移動すると移動距離が 10 になります 
Problem StatementThere is a circular pond with a perimeter of K meters  and N houses around them 
The i th house is built at a distance of A i meters from the northmost point of the pond  measured clockwise around the pond 
When traveling between these houses  you can only go around the pond 
Find the minimum distance that needs to be traveled when you start at one of the houses and visit all the N houses 

Constraints
2  leq K  leq 10 6
2  leq N  leq 2  times 10 5
0  leq A 1         A N   K
All values in input are integers 


InputInput is given from Standard Input in the following format 
K N
A 1 A 2     A N


OutputPrint the minimum distance that needs to be traveled when you start at one of the houses and visit all the N houses 

Sample Input 120 3
5 10 15


Sample Output 110

If you start at the 1 st house and go to the 2 nd and 3 rd houses in this order  the total distance traveled will be 10 

Sample Input 220 3
0 5 15


Sample Output 210

If you start at the 2 nd house and go to the 1 st and 3 rd houses in this order  the total distance traveled will be 10"
Line++,https://atcoder.jp/contests/abc160/tasks/abc160_d,"問題文
1 から N までの番号がつけられた N 個の頂点を持つ無向グラフ G があります  G には 以下のように合計 N 本の辺があります 

i 1 2     N 1 について 頂点 i と頂点 i 1 の間に辺があります
頂点 X と頂点 Y の間に辺があります

k 1 2     N 1 について 以下の問題を解いてください   

整数の組  i j   1  leq i   j  leq N  であって  G において頂点 i と頂点 j の最短距離が k であるようなものの数を求めてください


制約

3  leq N  leq 2  times 10 3
1  leq X Y  leq N
X 1   Y
入力はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
N X Y


出力
k 1 2     N 1 に対する問題の答えを 順番に一行に出力せよ 

入力例 15 2 4


出力例 15
4
1
0

この入力中のグラフは以下のようなものです 





頂点 i と 頂点 j の距離が 1 になるような整数の組  i j   1  leq i   j  leq N  は 
 1 2     2 3     2 4     3 4     4 5  の 5 つです 

頂点 i と 頂点 j の距離が 2 になるような整数の組  i j   1  leq i   j  leq N  は 
 1 3     1 4     2 5     3 5  の 4 つです 

頂点 i と 頂点 j の距離が 3 になるような整数の組  i j   1  leq i   j  leq N  は 
 1 5  の 1 つだけです 

頂点 i と 頂点 j の距離が 4 になるような整数の組  i j   1  leq i   j  leq N  はありません 

入力例 23 1 3


出力例 23
0

この入力中のグラフは以下のようなものです 






入力例 37 3 7


出力例 37
8
4
2
0
0


入力例 410 4 8


出力例 410
12
10
8
4
1
0
0
0

Problem Statement
We have an undirected graph G with N vertices numbered 1 to N and N edges as follows 

For each i 1 2     N 1  there is an edge between Vertex i and Vertex i 1 
There is an edge between Vertex X and Vertex Y 

For each k 1 2     N 1  solve the problem below 

Find the number of pairs of integers  i j   1  leq i   j  leq N  such that the shortest distance between Vertex i and Vertex j in G is k 


Constraints

3  leq N  leq 2  times 10 3
1  leq X Y  leq N
X 1   Y
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N X Y


Output
For each k 1  2       N 1 in this order  print a line containing the answer to the problem 

Sample Input 15 2 4


Sample Output 15
4
1
0

The graph in this input is as follows 





There are five pairs  i j   1  leq i   j  leq N  such that the shortest distance between Vertex i and Vertex j is 1   1 2     2 3     2 4     3 4     4 5  

There are four pairs  i j   1  leq i   j  leq N  such that the shortest distance between Vertex i and Vertex j is 2   1 3     1 4     2 5     3 5  

There is one pair  i j   1  leq i   j  leq N  such that the shortest distance between Vertex i and Vertex j is 3   1 5  

There are no pairs  i j   1  leq i   j  leq N  such that the shortest distance between Vertex i and Vertex j is 4 

Sample Input 23 1 3


Sample Output 23
0

The graph in this input is as follows 






Sample Input 37 3 7


Sample Output 37
8
4
2
0
0


Sample Input 410 4 8


Sample Output 410
12
10
8
4
1
0
0
0"
Red and Green Apples,https://atcoder.jp/contests/abc160/tasks/abc160_e,"問題文あなたは X 個の赤色のリンゴと Y 個の緑色のリンゴを食べようとしています 
あなたは A 個の赤色のリンゴを持っており 美味しさはそれぞれ p 1 p 2   dots  p A です 
あなたは B 個の緑色のリンゴを持っており 美味しさはそれぞれ q 1 q 2   dots  q B です 
あなたは C 個の無色のリンゴを持っており 美味しさはそれぞれ r 1 r 2   dots  r C です 
無色のリンゴは食べる前に着色することで 赤色のリンゴもしくは緑色のリンゴと見なすことができます 
以上のリンゴの中から できるだけ美味しさの総和が大きくなるように食べるリンゴを選びます 
0 個以上の無色のリンゴに適切に着色したとき 食べる X Y 個のリンゴの美味しさの総和が最大でいくつになるか求めてください 

制約
1  leq X  leq A  leq 10 5
1  leq Y  leq B  leq 10 5
1  leq C  leq 10 5
1  leq p i  leq 10 9
1  leq q i  leq 10 9
1  leq r i  leq 10 9
入力はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
X Y A B C
p 1 p 2     p A
q 1 q 2     q B
r 1 r 2     r C


出力リンゴの美味しさの総和の最大値を出力せよ 

入力例 11 2 2 2 1
2 4
5 1
3


出力例 112

以下のようにすることで 食べるリンゴの美味しさの総和を最大にすることができます 

2 番目の赤色のリンゴを食べる 
1 番目の緑色のリンゴを食べる 
1 番目の無色のリンゴを緑色に着色し 食べる 


入力例 22 2 2 2 2
8 6
9 1
2 1


出力例 225


入力例 32 2 4 4 4
11 12 13 14
21 22 23 24
1 2 3 4


出力例 374

Problem StatementYou are going to eat X red apples and Y green apples 
You have A red apples of deliciousness p 1 p 2   dots  p A  B green apples of deliciousness q 1 q 2   dots  q B  and C colorless apples of deliciousness r 1 r 2   dots  r C 
Before eating a colorless apple  you can paint it red or green  and it will count as a red or green apple  respectively 
From the apples above  you will choose the apples to eat while making the sum of the deliciousness of the eaten apples as large as possible 
Find the maximum possible sum of the deliciousness of the eaten apples that can be achieved when optimally coloring zero or more colorless apples 

Constraints
1  leq X  leq A  leq 10 5
1  leq Y  leq B  leq 10 5
1  leq C  leq 10 5
1  leq p i  leq 10 9
1  leq q i  leq 10 9
1  leq r i  leq 10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
X Y A B C
p 1 p 2     p A
q 1 q 2     q B
r 1 r 2     r C


OutputPrint the maximum possible sum of the deliciousness of the eaten apples 

Sample Input 11 2 2 2 1
2 4
5 1
3


Sample Output 112

The maximum possible sum of the deliciousness of the eaten apples can be achieved as follows 

Eat the 2 nd red apple 
Eat the 1 st green apple 
Paint the 1 st colorless apple green and eat it 


Sample Input 22 2 2 2 2
8 6
9 1
2 1


Sample Output 225


Sample Input 32 2 4 4 4
11 12 13 14
21 22 23 24
1 2 3 4


Sample Output 374"
Distributing Integers,https://atcoder.jp/contests/abc160/tasks/abc160_f,"問題文
1 から N までの番号が付けられた N 個の頂点を持つ木があります この木の i 番目の辺は頂点 a i と頂点 b i を結んでいます 
k 1     N に対して 以下の問題を解いてください   

以下の手順に従って 木の各頂点に整数を書くことを考える 
まず 頂点 k に 1 を書く 
2     N を順番に頂点に書く 書き込む頂点は 次のように決める 
まだ整数が書かれていない頂点であって 整数が書かれた頂点に隣接しているものを選ぶ このような頂点が複数存在する場合は その中からランダムに選ぶ 




整数の書き方として考えられるものの数を 10 9 7 で割ったあまりを求めよ 


制約

2  leq N  leq 2  times 10 5
1  leq a i b i  leq N
与えられるグラフは木である


入力
入力は以下の形式で標準入力から与えられる   
N
a 1 b 1
 
a  N 1  b  N 1 


出力
k 1 2     N に対する問題の答えを 順番に一行に出力せよ 

入力例 13
1 2
1 3


出力例 12
1
1

この入力中のグラフは以下のようなものです 

k 1 に対する問題において 以下のように 2 通りの整数の書き方が考えられます 

頂点 1 2 3 に それぞれ 1 2 3 を書く
頂点 1 2 3 に それぞれ 1 3 2 を書く


入力例 22
1 2


出力例 21
1

この入力中のグラフは以下のようなものです 


入力例 35
1 2
2 3
3 4
3 5


出力例 32
8
12
3
3

この入力中のグラフは以下のようなものです 


入力例 48
1 2
2 3
3 4
3 5
3 6
6 7
6 8


出力例 440
280
840
120
120
504
72
72

この入力中のグラフは以下のようなものです 

Problem Statement
We have a tree with N vertices numbered 1 to N  The i th edge in this tree connects Vertex a i and b i 
For each k 1       N  solve the problem below 

Consider writing a number on each vertex in the tree in the following manner 
First  write 1 on Vertex k 
Then  for each of the numbers 2       N in this order  write the number on the vertex chosen as follows 
Choose a vertex that still does not have a number written on it and is adjacent to a vertex with a number already written on it  If there are multiple such vertices  choose one of them at random 




Find the number of ways in which we can write the numbers on the vertices  modulo  10 9 7  


Constraints

2  leq N  leq 2  times 10 5
1  leq a i b i  leq N
The given graph is a tree 


Input
Input is given from Standard Input in the following format 
N
a 1 b 1
 
a  N 1  b  N 1 


Output
For each k 1  2       N in this order  print a line containing the answer to the problem 

Sample Input 13
1 2
1 3


Sample Output 12
1
1

The graph in this input is as follows 

For k 1  there are two ways in which we can write the numbers on the vertices  as follows 

Writing 1  2  3 on Vertex 1  2  3  respectively
Writing 1  3  2 on Vertex 1  2  3  respectively


Sample Input 22
1 2


Sample Output 21
1

The graph in this input is as follows 


Sample Input 35
1 2
2 3
3 4
3 5


Sample Output 32
8
12
3
3

The graph in this input is as follows 


Sample Input 48
1 2
2 3
3 4
3 5
3 6
6 7
6 8


Sample Output 440
280
840
120
120
504
72
72

The graph in this input is as follows"
ABC Swap,https://atcoder.jp/contests/abc161/tasks/abc161_a,"問題文
3 つの箱 A B C があります それぞれの箱には 整数が 1 つ入っています 
現在 箱 A B C に入っている整数はそれぞれ X Y Z です 
これらの箱に対して以下の操作を順に行った後の それぞれの箱に入っている整数を求めてください 

箱 A と箱 B の中身を入れ替える
箱 A と箱 C の中身を入れ替える


制約

1  leq X Y Z  leq 100
入力はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
X Y Z


出力
箱 A B C に入っている整数を 順番に空白区切りで出力せよ 

入力例 11 2 3


出力例 13 1 2

箱 A と箱 B の中身を入れ替えた後 箱 A B C に入っている整数はそれぞれ 2 1 3 です 
箱 A と箱 C の中身を入れ替えた後 箱 A B C に入っている整数はそれぞれ 3 1 2 です   

入力例 2100 100 100


出力例 2100 100 100


入力例 341 59 31


出力例 331 41 59

Problem Statement
We have three boxes A  B  and C  each of which contains an integer 
Currently  the boxes A  B  and C contain the integers X  Y  and Z  respectively 
We will now do the operations below in order  Find the content of each box afterward   

Swap the contents of the boxes A and B
Swap the contents of the boxes A and C


Constraints

1  leq X Y Z  leq 100
All values in input are integers 


Input
Input is given from Standard Input in the following format 
X Y Z


Output
Print the integers contained in the boxes A  B  and C  in this order  with space in between 

Sample Input 11 2 3


Sample Output 13 1 2

After the contents of the boxes A and B are swapped  A  B  and C contain 2  1  and 3  respectively 
Then  after the contents of A and C are swapped  A  B  and C contain 3  1  and 2  respectively   

Sample Input 2100 100 100


Sample Output 2100 100 100


Sample Input 341 59 31


Sample Output 331 41 59"
Popular Vote,https://atcoder.jp/contests/abc161/tasks/abc161_b,"問題文N 種類の商品に対して人気投票を行いました 商品 i は A i 票を得ています 
この中から人気商品 M 個を選びます ただし 得票数が総投票数の  dfrac 1  4M  未満であるような商品は選べません 
人気商品 M 個を選べるなら Yes 選べないなら No を出力してください 

制約
1  leq M  leq N  leq 100
1  leq A i  leq 1000
A i は相異なる
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N M
A 1     A N


出力人気商品 M 個を選べるなら Yes 選べないなら No を出力せよ 

入力例 14 1
5 4 2 1


出力例 1Yes

総投票数は 12 です 1 位の得票数は 5 なので これを選ぶことができます 

入力例 23 2
380 19 1


出力例 2No

総投票数は 400 です 2 3 位の得票数は総得票数の  dfrac 1  4 times 2  未満なので これらを選ぶことはできず 人気商品 2 個を選べません 

入力例 312 3
4 56 78 901 2 345 67 890 123 45 6 789


出力例 3Yes

Problem StatementWe have held a popularity poll for N items on sale  Item i received A i votes 
From these N items  we will select M as popular items  However  we cannot select an item with less than  dfrac 1  4M  of the total number of votes 
If M popular items can be selected  print Yes  otherwise  print No 

Constraints
1  leq M  leq N  leq 100
1  leq A i  leq 1000
A i are distinct 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N M
A 1     A N


OutputIf M popular items can be selected  print Yes  otherwise  print No 

Sample Input 14 1
5 4 2 1


Sample Output 1Yes

There were 12 votes in total  The most popular item received 5 votes  and we can select it 

Sample Input 23 2
380 19 1


Sample Output 2No

There were 400 votes in total  The second and third most popular items received less than  dfrac 1  4 times 2  of the total number of votes  so we cannot select them  Thus  we cannot select two popular items 

Sample Input 312 3
4 56 78 901 2 345 67 890 123 45 6 789


Sample Output 3Yes"
Replacing Integer,https://atcoder.jp/contests/abc161/tasks/abc161_c,"問題文青木君は任意の整数 x に対し 以下の操作を行うことができます 
操作  x を x と K の差の絶対値で置き換える 
整数 N の初期値が与えられます この整数に上記の操作を 0 回以上好きな回数行った時にとりうる N の最小値を求めてください 

制約
0   N   10  18 
1   K   10  18 
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N K


出力操作を 0 回以上好きな回数行った時にとりうる N の最小値を出力せよ 

入力例 17 4


出力例 11

最初  N 7 です 
1 回操作を行うと N は  7 4    3 となります 
2 回操作を行うと N は  3 4  1 となり これが最小です 

入力例 22 6


出力例 22

1 回も操作を行わなかった場合の N 2 が最小です 

入力例 31000000000000000000 1


出力例 30

Problem StatementGiven any integer x  Aoki can do the operation below 
Operation  Replace x with the absolute difference of x and K 
You are given the initial value of an integer N  Find the minimum possible value taken by N after Aoki does the operation zero or more times 

Constraints
0   N   10  18 
1   K   10  18 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N K


OutputPrint the minimum possible value taken by N after Aoki does the operation zero or more times 

Sample Input 17 4


Sample Output 11

Initially  N 7 
After one operation  N becomes  7 4    3 
After two operations  N becomes  3 4    1  which is the minimum value taken by N 

Sample Input 22 6


Sample Output 22

N 2 after zero operations is the minimum 

Sample Input 31000000000000000000 1


Sample Output 30"
Lunlun Number,https://atcoder.jp/contests/abc161/tasks/abc161_d,"問題文
正の整数 X が以下の条件を満たすとき  X はルンルン数であると言います   

X を leading zeroなしで 十進数表記した際に 隣り合うどの 2 つの桁の値についても 差の絶対値が 1 以下

例えば  1234   1   334 などはルンルン数ですが  31415   119   13579 などはルンルン数ではありません   
正の整数 K が与えられます 小さい方から K 番目のルンルン数を求めてください 

制約

1  leq K  leq 10 5
入力はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
K


出力
答えを出力せよ 

入力例 115


出力例 123

小さい方から 15 番目までのルンルン数を順に並べると 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
21 
22 
23
ですので 答えは 23 です 

入力例 21


出力例 21


入力例 313


出力例 321


入力例 4100000


出力例 43234566667

答えが 32 ビット符号付き整数の範囲に収まらない可能性があるので注意してください 
Problem Statement
A positive integer X is said to be a lunlun number if and only if the following condition is satisfied 

In the base ten representation of X  without leading zeros   for every pair of two adjacent digits  the absolute difference of those digits is at most 1 

For example  1234  1  and 334 are lunlun numbers  while none of 31415  119  or 13579 is 
You are given a positive integer K  Find the K th smallest lunlun number 

Constraints

1  leq K  leq 10 5
All values in input are integers 


Input
Input is given from Standard Input in the following format 
K


Output
Print the answer 

Sample Input 115


Sample Output 123

We will list the 15 smallest lunlun numbers in ascending order 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
21 
22 
23 
Thus  the answer is 23 

Sample Input 21


Sample Output 21


Sample Input 313


Sample Output 321


Sample Input 4100000


Sample Output 43234566667

Note that the answer may not fit into the 32 bit signed integer type"
Yutori,https://atcoder.jp/contests/abc161/tasks/abc161_e,"問題文高橋君は明日からの N 日間のうち K 日を選んで働くことにしました 
整数 C と文字列 S が与えられるので 次の 2 つの条件を満たすようにして働く日を選びます 

ある日働いたら その直後の C 日間は働かない
S の i 文字目が x のとき 今日から i 日後には働かない

高橋君が必ず働く日をすべて求めてください 

制約
1  leq N  leq 2  times 10 5
1  leq K  leq N
0  leq C  leq N
S の長さは N
S の各文字は o か x
問題文中の条件を満たすように働く日を選ぶことが可能


入力入力は以下の形式で標準入力から与えられる 
N K C
S


出力高橋君が必ず働く日を昇順に改行区切りですべて出力せよ 

入力例 111 3 2
ooxxxoxxxoo


出力例 16

高橋君は 11 日間のうち 3 日働こうとしています ある日働いたらその後 2 日間は働きません 
働く日としてありえる組み合わせは 1 6 10 日目  1 6 11 日目  2 6 10 日目  2 6 11 日目 の 4 通りです 
したがって 6 日目に必ず働きます 

入力例 25 2 3
ooxoo


出力例 21
5

働く日としてありえる組み合わせは 1 5 日目 のみです 

入力例 35 1 0
ooooo


出力例 3
必ず働く日が存在しないこともあります 

入力例 416 4 3
ooxxoxoxxxoxoxxo


出力例 411
16

Problem StatementTakahashi has decided to work on K days of his choice from the N days starting with tomorrow 
You are given an integer C and a string S  Takahashi will choose his workdays as follows 

After working for a day  he will refrain from working on the subsequent C days 
If the i th character of S is x  he will not work on Day i  where Day 1 is tomorrow  Day 2 is the day after tomorrow  and so on 

Find all days on which Takahashi is bound to work 

Constraints
1  leq N  leq 2  times 10 5
1  leq K  leq N
0  leq C  leq N
The length of S is N 
Each character of S is o or x 
Takahashi can choose his workdays so that the conditions in Problem Statement are satisfied 


InputInput is given from Standard Input in the following format 
N K C
S


OutputPrint all days on which Takahashi is bound to work in ascending order  one per line 

Sample Input 111 3 2
ooxxxoxxxoo


Sample Output 16

Takahashi is going to work on 3 days out of the 11 days  After working for a day  he will refrain from working on the subsequent 2 days 
There are four possible choices for his workdays  Day 1 6 10  Day 1 6 11  Day 2 6 10  and Day 2 6 11 
Thus  he is bound to work on Day 6 

Sample Input 25 2 3
ooxoo


Sample Output 21
5

There is only one possible choice for his workdays  Day 1 5 

Sample Input 35 1 0
ooooo


Sample Output 3
There may be no days on which he is bound to work 

Sample Input 416 4 3
ooxxoxoxxxoxoxxo


Sample Output 411
16"
Division or Subtraction,https://atcoder.jp/contests/abc161/tasks/abc161_f,"問題文正整数 N が与えられます 
2 以上 N 以下の整数 K を決めて N が K 未満になるまで次の操作を繰り返し行います 

操作 N が K で割り切れるとき N を N K に置き換える そうでないとき N を N K に置き換える 

最終的に N が 1 になるような K の決め方は何通りありますか 

制約
2  leq N  leq 10  12 
N は整数


入力入力は以下の形式で標準入力から与えられる 
N


出力最終的に N が 1 になるような K の決め方が何通りあるか出力せよ 

入力例 16


出力例 13

最終的に N が 1 になるような K は 2 5 6 の 3 通りです 
それぞれのとき N は次のように変化します 

K 2 のとき 6  to 3  to 1
K 5 のとき 6  to 1
K 6 のとき 6  to 1


入力例 23141


出力例 213


入力例 3314159265358


出力例 39

Problem StatementGiven is a positive integer N 
We will choose an integer K between 2 and N  inclusive   then we will repeat the operation below until N becomes less than K 

Operation  if K divides N  replace N with N K  otherwise  replace N with N K 

In how many choices of K will N become 1 in the end 

Constraints
2  leq N  leq 10  12 
N is an integer 


InputInput is given from Standard Input in the following format 
N


OutputPrint the number of choices of K in which N becomes 1 in the end 

Sample Input 16


Sample Output 13

There are three choices of K in which N becomes 1 in the end  2  5  and 6 
In each of these choices  N will change as follows 

When K 2  6  to 3  to 1
When K 5  6  to 1
When K 6  6  to 1


Sample Input 23141


Sample Output 213


Sample Input 3314159265358


Sample Output 39"
Lucky 7,https://atcoder.jp/contests/abc162/tasks/abc162_a,"問題文3 桁の整数 N が与えられます N のいずれかの桁に数字の 7 は含まれますか 
含まれるなら Yes を 含まれないなら No を出力してください 

制約
100  leq N  leq 999


入力入力は以下の形式で標準入力から与えられる 
N


出力N のいずれかの桁に 7 が含まれるなら Yes を 含まれないなら No を出力せよ 

入力例 1117


出力例 1Yes

117 は 1 の位が 7 です 

入力例 2123


出力例 2No

123 は 7 を含みません 

入力例 3777


出力例 3Yes

Problem StatementGiven is a three digit integer N  Does N contain the digit 7 
If so  print Yes  otherwise  print No 

Constraints
100  leq N  leq 999


InputInput is given from Standard Input in the following format 
N


OutputIf N contains the digit 7  print Yes  otherwise  print No 

Sample Input 1117


Sample Output 1Yes

117 contains 7 as its last digit 

Sample Input 2123


Sample Output 2No

123 does not contain the digit 7 

Sample Input 3777


Sample Output 3Yes"
FizzBuzz Sum,https://atcoder.jp/contests/abc162/tasks/abc162_b,"問題文 FizzBuzz列  a 1 a 2     を次のように定めます 

i が 3 でも 5 でも割り切れるなら a i  text FizzBuzz 
そうではなく i が 3 で割り切れるなら a i  text Fizz 
そうではなく i が 5 で割り切れるなら a i  text Buzz 
そうではないなら a i i

FizzBuzz列の N 項目までに含まれる数の和を求めてください 

制約
1  leq N  leq 10 6


入力入力は以下の形式で標準入力から与えられる 
N


出力FizzBuzz列の N 項目までに含まれる数の和を出力せよ 

入力例 115


出力例 160

FizzBuzz列の 15 項目までは次の通りです 
1 2  text Fizz  4  text Buzz   text Fizz  7 8  text Fizz   text Buzz  11  text Fizz  13 14  text FizzBuzz 
15 項目までには 1 2 4 7 8 11 13 14 が含まれ これらの和は 60 です 

入力例 21000000


出力例 2266666333332

オーバーフローに注意してください 
Problem StatementLet us define the FizzBuzz sequence a 1 a 2     as follows 

If both 3 and 5 divides i  a i  text FizzBuzz  
If the above does not hold but 3 divides i  a i  text Fizz  
If none of the above holds but 5 divides i  a i  text Buzz  
If none of the above holds  a i i 

Find the sum of all numbers among the first N terms of the FizzBuzz sequence 

Constraints
1  leq N  leq 10 6


InputInput is given from Standard Input in the following format 
N


OutputPrint the sum of all numbers among the first N terms of the FizzBuzz sequence 

Sample Input 115


Sample Output 160

The first 15 terms of the FizzBuzz sequence are 
1 2  text Fizz  4  text Buzz   text Fizz  7 8  text Fizz   text Buzz  11  text Fizz  13 14  text FizzBuzz 
Among them  numbers are 1 2 4 7 8 11 13 14  and the sum of them is 60 

Sample Input 21000000


Sample Output 2266666333332

Watch out for overflow"
Sum of gcd of Tuples (Easy),https://atcoder.jp/contests/abc162/tasks/abc162_c,"問題文 displaystyle  sum  a 1   K  sum  b 1   K  sum  c 1   K   gcd a b c   を求めてください 
ただし  gcd a b c  は a b c の最大公約数を表します 

制約
1  leq K  leq 200
K は整数


入力入力は以下の形式で標準入力から与えられる 
K


出力 displaystyle  sum  a 1   K  sum  b 1   K  sum  c 1   K   gcd a b c   の値を出力せよ 

入力例 12


出力例 19

 gcd 1 1 1   gcd 1 1 2   gcd 1 2 1   gcd 1 2 2 
  gcd 2 1 1   gcd 2 1 2   gcd 2 2 1   gcd 2 2 2 
 1 1 1 1 1 1 1 2 9
となるため 答えは 9 です 

入力例 2200


出力例 210813692

Problem StatementFind  displaystyle  sum  a 1   K  sum  b 1   K  sum  c 1   K   gcd a b c   
Here  gcd a b c  denotes the greatest common divisor of a  b  and c 

Constraints
1  leq K  leq 200
K is an integer 


InputInput is given from Standard Input in the following format 
K


OutputPrint the value of  displaystyle  sum  a 1   K  sum  b 1   K  sum  c 1   K   gcd a b c   

Sample Input 12


Sample Output 19

 gcd 1 1 1   gcd 1 1 2   gcd 1 2 1   gcd 1 2 2 
  gcd 2 1 1   gcd 2 1 2   gcd 2 2 1   gcd 2 2 2 
 1 1 1 1 1 1 1 2 9
Thus  the answer is 9 

Sample Input 2200


Sample Output 210813692"
RGB Triplets,https://atcoder.jp/contests/abc162/tasks/abc162_d,"問題文R  G  B のみからなる 長さ N の文字列 S があります 
以下の 2 つの条件をともに満たす組  i  j  k   1  leq i   j   k  leq N  の数を求めてください 

S i  neq S j かつ S i  neq S k かつ S j  neq S k である
j   i  neq k   j である


制約
1  leq N  leq 4000
S は R  G  B のみからなる 長さ N の文字列である


入力入力は以下の形式で標準入力から与えられる 
N
S


出力題意を満たす組の数を出力せよ 

入力例 14
RRGB


出力例 11

組  1  3  4  だけが 2 つの条件をともに満たします 組  2  3  4  は 1 つ目の条件は満たしますが 2 つ目の条件を満たさないので不適です 

入力例 239
RBRBGRBGGBBRRGBBRRRBGGBRBGBRBGBRBBBGBBB


出力例 21800

Problem StatementWe have a string S of length N consisting of R  G  and B 
Find the number of triples  i  j  k   1  leq i   j   k  leq N  that satisfy both of the following conditions 

S i  neq S j  S i  neq S k  and S j  neq S k 
j   i  neq k   j 


Constraints
1  leq N  leq 4000
S is a string of length N consisting of R  G  and B 


InputInput is given from Standard Input in the following format 
N
S


OutputPrint the number of triplets in question 

Sample Input 14
RRGB


Sample Output 11

Only the triplet  1  3  4  satisfies both conditions  The triplet  2  3  4  satisfies the first condition but not the second  so it does not count 

Sample Input 239
RBRBGRBGGBBRRGBBRRRBGGBRBGBRBGBRBBBGBBB


Sample Output 21800"
Sum of gcd of Tuples (Hard),https://atcoder.jp/contests/abc162/tasks/abc162_e,"問題文1 以上 K 以下の整数からなる長さ N の数列   A 1     A N   を考えます 
そのようなものは K N 個ありますが その全てについての  gcd A 1     A N  の和を求めてください 
ただし 答えは非常に大きくなる可能性があるため 和を  10 9 7  で割ったあまりを出力してください 
なお  gcd A 1     A N  は A 1     A N の最大公約数を表します 

制約
2  leq N  leq 10 5
1  leq K  leq 10 5
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N K


出力K N 個の数列全てについての  gcd A 1     A N  の和を  10 9 7  で割ったあまりを出力せよ 

入力例 13 2


出力例 19

 gcd 1 1 1   gcd 1 1 2   gcd 1 2 1   gcd 1 2 2 
  gcd 2 1 1   gcd 2 1 2   gcd 2 2 1   gcd 2 2 2 
 1 1 1 1 1 1 1 2 9
となるため 答えは 9 です 

入力例 23 200


出力例 210813692


入力例 3100000 100000


出力例 3742202979

和を 10 9 7 で割った余りを出力してください 
Problem StatementConsider sequences   A 1     A N   of length N consisting of integers between 1 and K  inclusive  
There are K N such sequences  Find the sum of  gcd A 1       A N  over all of them 
Since this sum can be enormous  print the value modulo  10 9 7  
Here  gcd A 1       A N  denotes the greatest common divisor of A 1       A N 

Constraints
2  leq N  leq 10 5
1  leq K  leq 10 5
All values in input are integers 


InputInput is given from Standard Input in the following format 
N K


OutputPrint the sum of  gcd A 1       A N  over all K N sequences  modulo  10 9 7  

Sample Input 13 2


Sample Output 19

 gcd 1 1 1   gcd 1 1 2   gcd 1 2 1   gcd 1 2 2 
  gcd 2 1 1   gcd 2 1 2   gcd 2 2 1   gcd 2 2 2 
 1 1 1 1 1 1 1 2 9
Thus  the answer is 9 

Sample Input 23 200


Sample Output 210813692


Sample Input 3100000 100000


Sample Output 3742202979

Be sure to print the sum modulo  10 9 7"
Select Half,https://atcoder.jp/contests/abc162/tasks/abc162_f,"問題文長さ N の整数列 A 1     A N が与えられます 
この中からちょうど  left lfloor  frac N  2   right rfloor 個の整数を どの 2 箇所も連続しないように選びます 
選んだ要素の和としてありえる最大値を求めてください 
ここで  lfloor x  rfloor は x を超えない最大の整数を表します 

制約
2  leq N  leq 2 times 10 5
 A i  leq 10 9
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N
A 1     A N


出力選ばれた要素の和としてありえる最大値を出力せよ 

入力例 16
1 2 3 4 5 6


出力例 112

2 4 6 を選ぶと和は 12 となり これが最大です 

入力例 25
 1000  100  10 0 10


出力例 20

 10 10 を選ぶと和は 0 となり これが最大です 

入力例 310
1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000


出力例 35000000000

オーバーフローに注意してください 

入力例 427
18  28 18 28  45 90  45 23  53 60 28  74  71 35  26  62 49  77 57 24  70  93 69  99 59 57  49


出力例 4295

Problem StatementGiven is an integer sequence A 1       A N of length N 
We will choose exactly  left lfloor  frac N  2   right rfloor elements from this sequence so that no two adjacent elements are chosen 
Find the maximum possible sum of the chosen elements 
Here  lfloor x  rfloor denotes the greatest integer not greater than x 

Constraints
2  leq N  leq 2 times 10 5
 A i  leq 10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
A 1     A N


OutputPrint the maximum possible sum of the chosen elements 

Sample Input 16
1 2 3 4 5 6


Sample Output 112

Choosing 2  4  and 6 makes the sum 12  which is the maximum possible value 

Sample Input 25
 1000  100  10 0 10


Sample Output 20

Choosing  10 and 10 makes the sum 0  which is the maximum possible value 

Sample Input 310
1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000


Sample Output 35000000000

Watch out for overflow 

Sample Input 427
18  28 18 28  45 90  45 23  53 60 28  74  71 35  26  62 49  77 57 24  70  93 69  99 59 57  49


Sample Output 4295"
Circle Pond,https://atcoder.jp/contests/abc163/tasks/abc163_a,"問題文半径 R の円の周長を出力してください 

制約
1  leq R  leq 100
入力は全て整数である 


入力入力は以下の形式で標準入力から与えられます 
R


出力円の周長を出力せよ 
なお 想定解答との絶対誤差または相対誤差が 10   2  以下であれば正解として扱われる 

入力例 11


出力例 16 28318530717958623200

10   2  以下の絶対誤差 相対誤差が許容されるので  6 28 も正解になりますが 6 は不正解となります 

入力例 273


出力例 2458 67252742410977361942

Problem StatementPrint the circumference of a circle of radius R 

Constraints
1  leq R  leq 100
All values in input are integers 


InputInput is given from Standard Input in the following format 
R


OutputPrint the circumference of the circle 
Your output is considered correct if and only if its absolute or relative error from our answer is at most 10   2  

Sample Input 11


Sample Output 16 28318530717958623200

Since we accept an absolute or relative error of at most 10   2   6 28 is also an acceptable output  but 6 is not 

Sample Input 273


Sample Output 2458 67252742410977361942"
Homework,https://atcoder.jp/contests/abc163/tasks/abc163_b,"問題文高橋君の夏休みは N 日間です 
夏休みの宿題が M 個出されており i 番目の宿題をやるには A i 日間かかります 
複数の宿題を同じ日にやることはできず また 宿題をやる日には遊ぶことができません 
夏休み中に全ての宿題を終わらせるとき 最大何日間遊ぶことができますか 
ただし 夏休み中に全ての宿題を終わらせることができないときは かわりに  1 を出力してください 

制約
1  leq N  leq 10 6
1  leq M  leq 10 4
1  leq A i  leq 10 4


入力入力は以下の形式で標準入力から与えられる 
N M
A 1     A M


出力高橋君が遊ぶことのできる日数 または  1 を出力せよ 

入力例 141 2
5 6


出力例 130

例えば 最初の 5 日間で 1 番目の宿題をやり その後 30 日間遊んで 最後の 6 日間で 2 番目の宿題をやることで 30 日間遊ぶことができます 

入力例 210 2
5 6


出力例 2 1

宿題を終わらせることができません 

入力例 311 2
5 6


出力例 30

宿題を終わらせることはできますが 遊ぶことはできません 

入力例 4314 15
9 26 5 35 8 9 79 3 23 8 46 2 6 43 3


出力例 49

Problem StatementTakahashi has N days of summer vacation 
His teacher gave him M summer assignments  It will take A i days for him to do the i th assignment 
He cannot do multiple assignments on the same day  or hang out on a day he does an assignment 
What is the maximum number of days Takahashi can hang out during the vacation if he finishes all the assignments during this vacation 
If Takahashi cannot finish all the assignments during the vacation  print  1 instead 

Constraints
1  leq N  leq 10 6
1  leq M  leq 10 4
1  leq A i  leq 10 4


InputInput is given from Standard Input in the following format 
N M
A 1     A M


OutputPrint the maximum number of days Takahashi can hang out during the vacation  or  1 

Sample Input 141 2
5 6


Sample Output 130

For example  he can do the first assignment on the first 5 days  hang out on the next 30 days  and do the second assignment on the last 6 days of the vacation  In this way  he can safely spend 30 days hanging out 

Sample Input 210 2
5 6


Sample Output 2 1

He cannot finish his assignments 

Sample Input 311 2
5 6


Sample Output 30

He can finish his assignments  but he will have no time to hang out 

Sample Input 4314 15
9 26 5 35 8 9 79 3 23 8 46 2 6 43 3


Sample Output 49"
management,https://atcoder.jp/contests/abc163/tasks/abc163_c,"問題文N 人の社員からなる会社があり 各社員には 1     N の社員番号が割り当てられています 
社員番号 1 の社員以外の全ての社員には 自分より社員番号が小さい直属の上司がちょうど 1 人います 
X さんが Y さんの直属の上司であるとき Y さんは X さんの直属の部下であるといいます 
社員番号 i の社員の直属の上司の社員番号が A i であることが与えられます 各社員について直属の部下が何人いるか求めてください 

制約
2  leq N  leq 2  times 10 5
1  leq A i   i


入力入力は以下の形式で標準入力から与えられる 
N
A 2     A N


出力社員番号 1 2     N のそれぞれの社員について 直属の部下が何人いるか 改行区切りで出力せよ 

入力例 15
1 1 2 2


出力例 12
2
0
0
0

社員番号 1 の社員の直属の部下は社員番号 2 3 の 2 人です 
社員番号 2 の社員の直属の部下は社員番号 4 5 の 2 人です 
社員番号 3 4 5 の社員には直属の部下はいません 

入力例 210
1 1 1 1 1 1 1 1 1


出力例 29
0
0
0
0
0
0
0
0
0


入力例 37
1 2 3 4 5 6


出力例 31
1
1
1
1
1
0

Problem StatementA company has N members  who are assigned ID numbers 1       N 
Every member  except the member numbered 1  has exactly one immediate boss with a smaller ID number 
When a person X is the immediate boss of a person Y  the person Y is said to be an immediate subordinate of the person X 
You are given the information that the immediate boss of the member numbered i is the member numbered A i  For each member  find how many immediate subordinates it has 

Constraints
2  leq N  leq 2  times 10 5
1  leq A i   i


InputInput is given from Standard Input in the following format 
N
A 2     A N


OutputFor each of the members numbered 1  2       N  print the number of immediate subordinates it has  in its own line 

Sample Input 15
1 1 2 2


Sample Output 12
2
0
0
0

The member numbered 1 has two immediate subordinates  the members numbered 2 and 3 
The member numbered 2 has two immediate subordinates  the members numbered 4 and 5 
The members numbered 3  4  and 5 do not have immediate subordinates 

Sample Input 210
1 1 1 1 1 1 1 1 1


Sample Output 29
0
0
0
0
0
0
0
0
0


Sample Input 37
1 2 3 4 5 6


Sample Output 31
1
1
1
1
1
0"
Sum of Large Numbers,https://atcoder.jp/contests/abc163/tasks/abc163_d,"問題文10  100   10  100  1       10  100  N の N 1 個の数があります 
この中から K 個以上の数を選ぶとき その和としてあり得るものの個数を  bmod  10 9 7  で求めてください 

制約
1  leq N  leq 2 times 10 5
1  leq K  leq N 1
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
N K


出力和としてあり得るものの個数を  bmod  10 9 7  で出力せよ 

入力例 13 2


出力例 110

以下の 10 通りが考えられます 

 10  100    10  100  1  2 times 10  100  1
 10  100    10  100  2  2 times 10  100  2
 10  100    10  100  3   10  100  1   10  100  2  2 times 10  100  3
 10  100  1   10  100  3  2 times 10  100  4
 10  100  2   10  100  3  2 times 10  100  5
 10  100    10  100  1   10  100  2  3 times 10  100  3
 10  100    10  100  1   10  100  3  3 times 10  100  4
 10  100    10  100  2   10  100  3  3 times 10  100  5
 10  100  1   10  100  2   10  100  3  3 times 10  100  6
 10  100    10  100  1   10  100  2   10  100  3  4 times 10  100  6


入力例 2200000 200001


出力例 21

全てを選ぶしかないので 1 通りです 

入力例 3141421 35623


出力例 3220280457

Problem StatementWe have N 1 integers  10  100   10  100  1       10  100  N 
We will choose K or more of these integers  Find the number of possible values of the sum of the chosen numbers  modulo  10 9 7  

Constraints
1  leq N  leq 2 times 10 5
1  leq K  leq N 1
All values in input are integers 


InputInput is given from Standard Input in the following format 
N K


OutputPrint the number of possible values of the sum  modulo  10 9 7  

Sample Input 13 2


Sample Output 110

The sum can take 10 values  as follows 

 10  100    10  100  1  2 times 10  100  1
 10  100    10  100  2  2 times 10  100  2
 10  100    10  100  3   10  100  1   10  100  2  2 times 10  100  3
 10  100  1   10  100  3  2 times 10  100  4
 10  100  2   10  100  3  2 times 10  100  5
 10  100    10  100  1   10  100  2  3 times 10  100  3
 10  100    10  100  1   10  100  3  3 times 10  100  4
 10  100    10  100  2   10  100  3  3 times 10  100  5
 10  100  1   10  100  2   10  100  3  3 times 10  100  6
 10  100    10  100  1   10  100  2   10  100  3  4 times 10  100  6


Sample Input 2200000 200001


Sample Output 21

We must choose all of the integers  so the sum can take just 1 value 

Sample Input 3141421 35623


Sample Output 3220280457"
Active Infants,https://atcoder.jp/contests/abc163/tasks/abc163_e,"問題文N 人の幼児が左右一列に並んでおり 左から i 番目の幼児の活発度は A i です 
あなたは一回だけ 幼児たちを好きな順番に並び替えさせることができます 
はじめ左から x 番目に並んでいた幼児が左から y 番目に移動するとき うれしさが A x  times  x y  だけ生じます 
幼児のうれしさの合計が最大でいくつになるか求めてください 

制約
2  leq N  leq 2000
1  leq A i  leq 10 9
入力はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N
A 1 A 2     A N


出力幼児のうれしさの合計の最大値を出力せよ 

入力例 14
1 3 4 2


出力例 120

左から 1 番目の幼児を 3 番目に 2 番目の幼児を 4 番目に 3 番目の幼児を 1 番目に 4 番目の幼児を 2 番目に並ばせると うれしさの合計は 1  times  1 3  3  times  2 4  4  times  3 1  2  times  4 2  20 になります 

入力例 26
5 5 6 1 1 1


出力例 258


入力例 36
8 6 9 1 2 1


出力例 385

Problem StatementThere are N children standing in a line from left to right  The activeness of the i th child from the left is A i 
You can rearrange these children just one time in any order you like 
When a child who originally occupies the x th position from the left in the line moves to the y th position from the left  that child earns A x  times  x y  happiness points 
Find the maximum total happiness points the children can earn 

Constraints
2  leq N  leq 2000
1  leq A i  leq 10 9
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
A 1 A 2     A N


OutputPrint the maximum total happiness points the children can earn 

Sample Input 14
1 3 4 2


Sample Output 120

If we move the 1 st child from the left to the 3 rd position from the left  the 2 nd child to the 4 th position  the 3 rd child to the 1 st position  and the 4 th child to the 2 nd position  the children earns 1  times  1 3  3  times  2 4  4  times  3 1  2  times  4 2  20 happiness points in total 

Sample Input 26
5 5 6 1 1 1


Sample Output 258


Sample Input 36
8 6 9 1 2 1


Sample Output 385"
path pass i,https://atcoder.jp/contests/abc163/tasks/abc163_f,nan
Sheep and Wolves,https://atcoder.jp/contests/abc164/tasks/abc164_a,"問題文羊が S 匹 狼が W 匹います 
狼の数が羊の数以上のとき 羊は狼に襲われてしまいます 
羊が狼に襲われるなら unsafe 襲われないなら safe を出力してください 

制約
1  leq S  leq 100
1  leq W  leq 100


入力入力は以下の形式で標準入力から与えられる 
S W


出力羊が狼に襲われるなら unsafe 襲われないなら safe を出力せよ 

入力例 14 5


出力例 1unsafe

羊が 4 匹 狼が 5 匹います 狼の数が羊の数以上なので 羊は狼に襲われてしまいます 

入力例 2100 2


出力例 2safe

多勢に無勢です 

入力例 310 10


出力例 3unsafe

Problem StatementThere are S sheep and W wolves 
If the number of wolves is greater than or equal to that of sheep  the wolves will attack the sheep 
If the wolves will attack the sheep  print unsafe  otherwise  print safe 

Constraints
1  leq S  leq 100
1  leq W  leq 100


InputInput is given from Standard Input in the following format 
S W


OutputIf the wolves will attack the sheep  print unsafe  otherwise  print safe 

Sample Input 14 5


Sample Output 1unsafe

There are four sheep and five wolves  The number of wolves is not less than that of sheep  so they will attack them 

Sample Input 2100 2


Sample Output 2safe

Many a sheep drive away two wolves 

Sample Input 310 10


Sample Output 3unsafe"
Battle,https://atcoder.jp/contests/abc164/tasks/abc164_b,"問題文高橋君と青木君がモンスターを闘わせます 
高橋君のモンスターは体力が A で攻撃力が B です 
青木君のモンスターは体力が C で攻撃力が D です 
高橋君 青木君 高橋君 青木君     の順に攻撃を行います 
攻撃とは 相手のモンスターの体力の値を自分のモンスターの攻撃力のぶんだけ減らすことをいいます 
このことをどちらかのモンスターの体力が 0 以下になるまで続けたとき 
先に自分のモンスターの体力が 0 以下になった方の負け そうでない方の勝ちです 
高橋君が勝つなら Yes 負けるなら No を出力してください 

制約
1  leq A B C D  leq 100
入力はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
A B C D


出力高橋君が勝つなら Yes 負けるなら No を出力せよ 

入力例 110 9 10 10


出力例 1No

はじめに 高橋君の攻撃で青木君のモンスターの体力が 10 9 1 になります 
次に 青木君の攻撃で高橋君のモンスターの体力が 10 10 0 になります 
高橋君のモンスターの体力が先に 0 以下になったため 高橋君の負けです 

入力例 246 4 40 5


出力例 2Yes

Problem StatementTakahashi and Aoki will have a battle using their monsters 
The health and strength of Takahashi s monster are A and B  respectively  and those of Aoki s monster are C and D  respectively 
The two monsters will take turns attacking  in the order Takahashi s  Aoki s  Takahashi s  Aoki s     
Here  an attack decreases the opponent s health by the value equal to the attacker s strength 
The monsters keep attacking until the health of one monster becomes 0 or below  The person with the monster whose health becomes 0 or below loses  and the other person wins 
If Takahashi will win  print Yes  if he will lose  print No 

Constraints
1  leq A B C D  leq 100
All values in input are integers 


InputInput is given from Standard Input in the following format 
A B C D


OutputIf Takahashi will win  print Yes  if he will lose  print No 

Sample Input 110 9 10 10


Sample Output 1No

First  Takahashi s monster attacks Aoki s monster  whose health is now 10 9 1 
Next  Aoki s monster attacks Takahashi s monster  whose health is now 10 10 0 
Takahashi s monster is the first to have 0 or less health  so Takahashi loses 

Sample Input 246 4 40 5


Sample Output 2Yes"
gacha,https://atcoder.jp/contests/abc164/tasks/abc164_c,"問題文くじ引きを N 回行い i 回目には種類が文字列 S i で表される景品を手に入れました 
何種類の景品を手に入れましたか 

制約
1  leq N  leq 2 times 10 5
S i は英小文字のみからなり 長さは 1 以上 10 以下


入力入力は以下の形式で標準入力から与えられる 
N
S 1
 
S N


出力何種類の景品を手に入れたか出力せよ 

入力例 13
apple
orange
apple


出力例 12

apple と orange の 2 種類の景品を手に入れました 

入力例 25
grape
grape
grape
grape
grape


出力例 21


入力例 34
aaaa
a
aaa
aa


出力例 34

Problem StatementYou drew lottery N times  In the i th draw  you got an item of the kind represented by a string S i 
How many kinds of items did you get 

Constraints
1  leq N  leq 2 times 10 5
S i consists of lowercase English letters and has a length between 1 and 10  inclusive  


InputInput is given from Standard Input in the following format 
N
S 1
 
S N


OutputPrint the number of kinds of items you got 

Sample Input 13
apple
orange
apple


Sample Output 12

You got two kinds of items  apple and orange 

Sample Input 25
grape
grape
grape
grape
grape


Sample Output 21


Sample Input 34
aaaa
a
aaa
aa


Sample Output 34"
Multiple of 2019,https://atcoder.jp/contests/abc164/tasks/abc164_d,"問題文1 から 9 までの数字のみからなる文字列 S が与えられます 
次のような条件を満たす整数の組  i j   1   i   j    S   の総数を求めてください 
条件  S の i 文字目から j 文字目までを 10 進法の整数としてみると この整数は 2019 の倍数である 

制約
1    S    200000
S は 1 から 9 までの数字のみからなる文字列


入力入力は以下の形式で標準入力から与えられる 
S


出力条件を満たす整数の組  i j   1   i   j    S   の総数を出力せよ 

入力例 11817181712114


出力例 13

条件を満たすのは  1 5    5 9    9 13  の 3 個です 

入力例 214282668646


出力例 22


入力例 32119


出力例 30

条件を満たす整数の組は存在しません 
Problem StatementGiven is a string S consisting of digits from 1 through 9 
Find the number of pairs of integers  i j   1   i   j    S   that satisfy the following condition 
Condition  In base ten  the i th through j th characters of S form an integer that is a multiple of 2019 

Constraints
1    S    200000
S is a string consisting of digits from 1 through 9 


InputInput is given from Standard Input in the following format 
S


OutputPrint the number of pairs of integers  i j   1   i   j    S   that satisfy the condition 

Sample Input 11817181712114


Sample Output 13

Three pairs    1 5    5 9   and  9 13    satisfy the condition 

Sample Input 214282668646


Sample Output 22


Sample Input 32119


Sample Output 30

No pairs satisfy the condition"
Two Currencies,https://atcoder.jp/contests/abc164/tasks/abc164_e,"問題文
1 から N までの番号がつけられた N 個の都市があります 
これらの都市は M 本の鉄道路線によって結ばれています   
あなたは現在 金貨を 10  100  枚 銀貨を S 枚持った状態で都市 1 にいます 
i 番目の鉄道路線は 都市 U i と都市 V i を双方向に結んでおり 片道の運賃は 銀貨 A i 枚 移動にかかる時間は B i 分です 
運賃を金貨で払うことはできません   
各都市には両替所があり 都市 i の両替所では金貨 1 枚を銀貨 C i 枚と交換することができます 
交換には 金貨 1 枚あたり D i 分かかります 
各交換所では 金貨を何枚でも交換することができます   
t 2     N について 都市 1 から都市 t への移動にかかる最小の時間を求めてください 電車を待つのにかかる時間は無視して構いません   

制約

2  leq N  leq 50
N 1  leq M  leq 100
0  leq S  leq 10 9
1  leq A i  leq 50
1  leq B i C i D i  leq 10 9
1  leq U i   V i  leq N
 U i V i   U j V j  なる i j i  neq j  は存在しない
都市 1 から都市 t 2     N にいくつかの鉄道路線を使って移動することができる 
入力はすべて整数である 


入力
入力は以下の形式で標準入力から与えられる   
N M S
U 1 V 1 A 1 B 1
 
U M V M A M B M
C 1 D 1
 
C N D N


出力
t 2     Nについて 都市 1 から都市 t への移動にかかる最小の時間を順番に一行ずつ出力せよ 

入力例 13 2 1
1 2 1 2
1 3 2 4
1 11
1 2
2 5


出力例 12
14

この入力中の鉄道網は以下のようなものです 
ここで 図中の都市のラベルは

一段目に都市の番号 i
二段目に C i   D i

の形式に従っています 同様に 鉄道路線のラベルは

一段目に鉄道路線の番号 i
二段目に A i   B i

の形式に従っています 

以下のように行動することで  都市 1 から都市 2 へ 2 分で移動できます 

1 番目の鉄道路線を使って 都市 1 から都市 2 へ移動する  所要時間  2 分 


以下のように行動することで  都市 1 から都市 3 へ 14 分で移動できます 

1 番目の鉄道路線を使って 都市 1 から都市 2 へ移動する  所要時間  2 分 
都市 2 の両替所で 金貨 3 枚を銀貨 3 枚と交換する  所要時間  6 分 
1 番目の鉄道路線を使って 都市 2 から都市 1 へ移動する  所要時間  2 分 
2 番目の鉄道路線を使って 都市 1 から都市 3 へ移動する  所要時間  4 分 


入力例 24 4 1
1 2 1 5
1 3 4 4
2 4 2 2
3 4 1 1
3 1
3 1
5 2
6 4


出力例 25
5
7

この入力中の鉄道網は以下のようなものです 

以下のように行動することで  都市 1 から都市 4 へ 7 分で移動できます 

都市 1 の両替所で 金貨 2 枚を銀貨 6 枚と交換する  所要時間  2 分 
2 番目の鉄道路線を使って 都市 1 から都市 3 へ移動する  所要時間  4 分 
4 番目の鉄道路線を使って 都市 3 から都市 4 へ移動する  所要時間  1 分 


入力例 36 5 1
1 2 1 1
1 3 2 1
2 4 5 1
3 5 11 1
1 6 50 1
1 10000
1 3000
1 700
1 100
1 1
100 1


出力例 31
9003
14606
16510
16576

この入力中の鉄道網は以下のようなものです 

以下のように行動することで  都市 1 から都市 6 へ 16576 分で移動できます 

1 番目の鉄道路線を使って 都市 1 から都市 2 へ移動する  所要時間  1 分 
都市 2 の両替所で 金貨 3 枚を銀貨 3 枚と交換する  所要時間  9000 分 
1 番目の鉄道路線を使って 都市 2 から都市 1 へ移動する  所要時間  1 分 
2 番目の鉄道路線を使って 都市 1 から都市 3 へ移動する  所要時間  1 分 
都市 3 の両替所で 金貨 8 枚を銀貨 8 枚と交換する  所要時間  5600 分 
2 番目の鉄道路線を使って 都市 3 から都市 1 へ移動する  所要時間  1 分 
1 番目の鉄道路線を使って 都市 1 から都市 2 へ移動する  所要時間  1 分 
3 番目の鉄道路線を使って 都市 2 から都市 4 へ移動する  所要時間  1 分 
都市 4 の両替所で 金貨 19 枚を銀貨 19 枚と交換する  所要時間  1900 分 
3 番目の鉄道路線を使って 都市 4 から都市 2 へ移動する  所要時間  1 分 
1 番目の鉄道路線を使って 都市 2 から都市 1 へ移動する  所要時間  1 分 
2 番目の鉄道路線を使って 都市 1 から都市 3 へ移動する  所要時間  1 分 
4 番目の鉄道路線を使って 都市 3 から都市 5 へ移動する  所要時間  1 分 
都市 5 の両替所で 金貨 63 枚を銀貨 63 枚と交換する  所要時間  63 分 
4 番目の鉄道路線を使って 都市 5 から都市 3 へ移動する  所要時間  1 分 
2 番目の鉄道路線を使って 都市 3 から都市 1 へ移動する  所要時間  1 分 
5 番目の鉄道路線を使って 都市 1 から都市 6 へ移動する  所要時間  1 分 


入力例 44 6 1000000000
1 2 50 1
1 3 50 5
1 4 50 7
2 3 50 2
2 4 50 4
3 4 50 3
10 2
4 4
5 5
7 7


出力例 41
3
5

この入力中の鉄道網は以下のようなものです 


入力例 52 1 0
1 2 1 1
1 1000000000
1 1


出力例 51000000001

この入力中の鉄道網は以下のようなものです 

以下のように行動することで  都市 1 から都市 2 へ 1000000001 分で移動できます 

都市 1 の両替所で 金貨 1 枚を銀貨 1 枚と交換する  所要時間  1000000000 分 
1 番目の鉄道路線を使って 都市 1 から都市 2 へ移動する  所要時間  1 分 

Problem Statement
There are N cities numbered 1 to N  connected by M railroads 
You are now at City 1  with 10  100  gold coins and S silver coins in your pocket 
The i th railroad connects City U i and City V i bidirectionally  and a one way trip costs A i silver coins and takes B i minutes 
You cannot use gold coins to pay the fare 
There is an exchange counter in each city  At the exchange counter in City i  you can get C i silver coins for 1 gold coin 
The transaction takes D i minutes for each gold coin you give 
You can exchange any number of gold coins at each exchange counter 
For each t 2       N  find the minimum time needed to travel from City 1 to City t  You can ignore the time spent waiting for trains 

Constraints

2  leq N  leq 50
N 1  leq M  leq 100
0  leq S  leq 10 9
1  leq A i  leq 50
1  leq B i C i D i  leq 10 9
1  leq U i   V i  leq N
There is no pair i  j i  neq j  such that  U i V i   U j V j  
Each city t 2     N can be reached from City 1 with some number of railroads 
All values in input are integers 


Input
Input is given from Standard Input in the following format 
N M S
U 1 V 1 A 1 B 1
 
U M V M A M B M
C 1 D 1
 
C N D N


Output
For each t 2       N in this order  print a line containing the minimum time needed to travel from City 1 to City t 

Sample Input 13 2 1
1 2 1 2
1 3 2 4
1 11
1 2
2 5


Sample Output 12
14

The railway network in this input is shown in the figure below 
In this figure  each city is labeled as follows 

The first line  the ID number i of the city  i for City i 
The second line  C i   D i

Similarly  each railroad is labeled as follows 

The first line  the ID number i of the railroad  i for the i th railroad in input 
The second line  A i   B i


You can travel from City 1 to City 2 in 2 minutes  as follows 

Use the 1 st railroad to move from City 1 to City 2 in 2 minutes 


You can travel from City 1 to City 3 in 14 minutes  as follows 

Use the 1 st railroad to move from City 1 to City 2 in 2 minutes 
At the exchange counter in City 2  exchange 3 gold coins for 3 silver coins in 6 minutes 
Use the 1 st railroad to move from City 2 to City 1 in 2 minutes 
Use the 2 nd railroad to move from City 1 to City 3 in 4 minutes 


Sample Input 24 4 1
1 2 1 5
1 3 4 4
2 4 2 2
3 4 1 1
3 1
3 1
5 2
6 4


Sample Output 25
5
7

The railway network in this input is shown in the figure below 

You can travel from City 1 to City 4 in 7 minutes  as follows 

At the exchange counter in City 1  exchange 2 gold coins for 6 silver coins in 2 minutes 
Use the 2 nd railroad to move from City 1 to City 3 in 4 minutes 
Use the 4 th railroad to move from City 3 to City 4 in 1 minutes 


Sample Input 36 5 1
1 2 1 1
1 3 2 1
2 4 5 1
3 5 11 1
1 6 50 1
1 10000
1 3000
1 700
1 100
1 1
100 1


Sample Output 31
9003
14606
16510
16576

The railway network in this input is shown in the figure below 

You can travel from City 1 to City 6 in 16576 minutes  as follows 

Use the 1 st railroad to move from City 1 to City 2 in 1 minute 
At the exchange counter in City 2  exchange 3 gold coins for 3 silver coins in 9000 minutes 
Use the 1 st railroad to move from City 2 to City 1 in 1 minute 
Use the 2 nd railroad to move from City 1 to City 3 in 1 minute 
At the exchange counter in City 3  exchange 8 gold coins for 8 silver coins in 5600 minutes 
Use the 2 nd railroad to move from City 3 to City 1 in 1 minute 
Use the 1 st railroad to move from City 1 to City 2 in 1 minute 
Use the 3 rd railroad to move from City 2 to City 4 in 1 minute 
At the exchange counter in City 4  exchange 19 gold coins for 19 silver coins in 1900 minutes 
Use the 3 rd railroad to move from City 4 to City 2 in 1 minute 
Use the 1 st railroad to move from City 2 to City 1 in 1 minute 
Use the 2 nd railroad to move from City 1 to City 3 in 1 minute 
Use the 4 th railroad to move from City 3 to City 5 in 1 minute 
At the exchange counter in City 5  exchange 63 gold coins for 63 silver coins in 63 minutes 
Use the 4 th railroad to move from City 5 to City 3 in 1 minute 
Use the 2 nd railroad to move from City 3 to City 1 in 1 minute 
Use the 5 th railroad to move from City 1 to City 6 in 1 minute 


Sample Input 44 6 1000000000
1 2 50 1
1 3 50 5
1 4 50 7
2 3 50 2
2 4 50 4
3 4 50 3
10 2
4 4
5 5
7 7


Sample Output 41
3
5

The railway network in this input is shown in the figure below 


Sample Input 52 1 0
1 2 1 1
1 1000000000
1 1


Sample Output 51000000001

The railway network in this input is shown in the figure below 

You can travel from City 1 to City 2 in 1000000001 minutes  as follows 

At the exchange counter in City 1  exchange 1 gold coin for 1 silver coin in 1000000000 minutes 
Use the 1 st railroad to move from City 1 to City 2 in 1 minute"
I hate Matrix Construction,https://atcoder.jp/contests/abc164/tasks/abc164_f,"問題文整数 N 及び長さ N の配列
 S   T   U    V が与えられます 
以下の条件を満たすような N N の行列  a をどれか 1 つ構築してください 

a  i j  は整数である 
0  leq a  i j    lt 2  64 
S  i    0 のとき  i 行目の要素のビットごとの論理積は U  i  である 
S  i    1 のとき  i 行目の要素のビットごとの論理和は U  i  である 
T  i    0 のとき  i 列目の要素のビットごとの論理積は V  i  である 
T  i    1 のとき  i 列目の要素のビットごとの論理和は V  i  である 

ただし 条件を満たす行列が存在しない場合もあるかもしれません 

制約
入力は全て整数
 1  leq N  leq 500 
 0  leq S  i   leq 1 
 0  leq T  i   leq 1  
 0  leq U  i   lt 2  64   
 0  leq V  i   lt 2  64   


入力入力は以下の形式で標準入力から与えられる 
N
S  1  S  2       S  N 
T  1  T  2       T  N 
U  1  U  2       U  N 
V  1  V  2       V  N 


出力条件を満たす行列が存在する場合は そのような行列 1 つを以下の形式で出力せよ 
a  1 1       a  1 N 
 
a  N 1       a  N N 

条件を満たす行列なら何を出力してもいいことに注意せよ 
条件を満たす行列が存在しない場合は   1  を出力せよ 

入力例 12
0 1
1 0
1 1
1 0


出力例 11 1
1 0

入力例 1 では

1 行目の要素のビットごとの論理積が 1
2 行目の要素のビットごとの論理和が 1
1 列目の要素のビットごとの論理和が 1
2 列目の要素のビットごとの論理積が 0

の条件を満たす行列を見つける必要があります 

入力例 22
1 1
1 0
15 15
15 11


出力例 215 11
15 11

Problem StatementGiven are an integer N and arrays S  T  U  and V  each of length N 
Construct an N N matrix a that satisfy the following conditions 

a  i j  is an integer 
0  leq a  i j    lt 2  64  
If S  i    0  the bitwise AND of the elements in the i th row is U  i  
If S  i    1  the bitwise OR of the elements in the i th row is U  i  
If T  i    0  the bitwise AND of the elements in the i th column is V  i  
If T  i    1  the bitwise OR of the elements in the i th column is V  i  

However  there may be cases where no matrix satisfies the conditions 

Constraints
All values in input are integers 
 1  leq N  leq 500 
 0  leq S  i   leq 1 
 0  leq T  i   leq 1  
 0  leq U  i   lt 2  64   
 0  leq V  i   lt 2  64   


InputInput is given from Standard Input in the following format 
N
S  1  S  2       S  N 
T  1  T  2       T  N 
U  1  U  2       U  N 
V  1  V  2       V  N 


OutputIf there exists a matrix that satisfies the conditions  print one such matrix in the following format 
a  1 1       a  1 N 
 
a  N 1       a  N N 

Note that any matrix satisfying the conditions is accepted 
If no matrix satisfies the conditions  print  1 

Sample Input 12
0 1
1 0
1 1
1 0


Sample Output 11 1
1 0

In Sample Input 1  we need to find a matrix such that 

the bitwise AND of the elements in the 1 st row is 1 
the bitwise OR of the elements in the 2 nd row is 1 
the bitwise OR of the elements in the 1 st column is 1 
the bitwise AND of the elements in the 2 nd column is 0 


Sample Input 22
1 1
1 0
15 15
15 11


Sample Output 215 11
15 11"
We Love Golf,https://atcoder.jp/contests/abc165/tasks/abc165_a,"問題文
ジャンボ高橋君はゴルフの練習をすることにしました 
ジャンボ高橋君の目標は飛距離を K の倍数にすることですが ジャンボ高橋君の出せる飛距離の範囲は A 以上 B 以下です 
目標の達成が可能であれば OK と 不可能であれば NG と出力してください 

制約

入力はすべて整数
1  leq A  leq B  leq 1000
1  leq K  leq 1000


入力
入力は以下の形式で標準入力から与えられる 
K
A B


出力
目標の達成が可能であれば OK と 不可能であれば NG と出力せよ 

入力例 17
500 600


出力例 1OK

7 の倍数のうち たとえば 567 が 500 以上 600 以下の範囲にあります 

入力例 24
5 7


出力例 2NG

どんな 4 の倍数も 5 以上 7 以下の範囲にはありません 

入力例 31
11 11


出力例 3OK

Problem Statement
Takahashi the Jumbo will practice golf 
His objective is to get a carry distance that is a multiple of K  while he can only make a carry distance of between A and B  inclusive  
If he can achieve the objective  print OK  if he cannot  print NG 

Constraints

All values in input are integers 
1  leq A  leq B  leq 1000
1  leq K  leq 1000


Input
Input is given from Standard Input in the following format 
K
A B


Output
If he can achieve the objective  print OK  if he cannot  print NG 

Sample Input 17
500 600


Sample Output 1OK

Among the multiples of 7  for example  567 lies between 500 and 600 

Sample Input 24
5 7


Sample Output 2NG

No multiple of 4 lies between 5 and 7 

Sample Input 31
11 11


Sample Output 3OK"
1%,https://atcoder.jp/contests/abc165/tasks/abc165_b,"問題文
高橋くんはAtCoder銀行に 100 円を預けています 
AtCoder銀行では 毎年預金額の 1   の利子がつきます 複利 小数点以下切り捨て  
利子以外の要因で預金額が変化することはないと仮定したとき 高橋くんの預金額が初めて X 円以上になるのは何年後でしょうか 

制約

 101  le X  le 10  18  
入力はすべて整数


入力
入力は以下の形式で標準入力から与えられる 
X


出力
高橋くんの預金額が初めて X 円以上になるのは何年後かを出力せよ 

入力例 1103


出力例 13


1 年後の預金額は 101 円です 
2 年後の預金額は 102 円です 
3 年後の預金額は 103 円です 

したがって 預金額が初めて 103 円以上になるのは 3 年後です 

入力例 21000000000000000000


出力例 23760


入力例 31333333333


出力例 31706

Problem Statement
Takahashi has a deposit of 100 yen  the currency of Japan  in AtCoder Bank 
The bank pays an annual interest rate of 1   compounded annually   A fraction of less than one yen is discarded  
Assuming that nothing other than the interest affects Takahashi s balance  in how many years does the balance reach X yen or above for the first time 

Constraints

 101  le X  le 10  18  
All values in input are integers 


Input
Input is given from Standard Input in the following format 
X


Output
Print the number of years it takes for Takahashi s balance to reach X yen or above for the first time 

Sample Input 1103


Sample Output 13


The balance after one year is 101 yen 
The balance after two years is 102 yen 
The balance after three years is 103 yen 

Thus  it takes three years for the balance to reach 103 yen or above 

Sample Input 21000000000000000000


Sample Output 23760


Sample Input 31333333333


Sample Output 31706"
Many Requirements,https://atcoder.jp/contests/abc165/tasks/abc165_c,"問題文正整数 N   M   Q と 4 つの整数の組   a i   b i   c i   d i   Q 組が与えられます 
以下の条件を満たす数列 A を考えます 

A は 長さ N の正整数列である 
1  leq A 1  leq A 2  le  cdots  leq A N  leq M

この数列の得点を 以下のように定めます 

A  b i    A  a i    c i を満たすような i についての  d i の総和  そのような i が存在しないときは 0 

A の得点の最大値を求めてください 

制約
入力は全て整数
2   N   10
1  leq M  leq 10
1  leq Q  leq 50
1  leq a i   b i  leq N   i   1  2       Q  
0  leq c i  leq M   1   i   1  2       Q  
 a i  b i  c i   neq  a j  b j  c j    i  neq j のとき 
1  leq d i  leq 10 5   i   1  2       Q  


入力入力は以下の形式で標準入力から与えられる 
N M Q
a 1 b 1 c 1 d 1
 
a Q b Q c Q d Q


出力A の得点の最大値を出力せよ 

入力例 13 4 3
1 3 3 100
1 2 2 10
2 3 2 10


出力例 1110

A     1  3  4   のとき この数列の得点は 110 となります この条件の下では 110 より高い得点を持つ数列は存在しませんから 答えは 110 です 

入力例 24 6 10
2 4 1 86568
1 4 0 90629
2 3 0 90310
3 4 1 29211
3 4 3 78537
3 4 2 8580
1 2 1 96263
1 4 2 2156
1 2 0 94325
1 4 3 94328


出力例 2357500


入力例 310 10 1
1 10 9 1


出力例 31

Problem StatementGiven are positive integers N  M  Q  and Q quadruples of integers   a i   b i   c i   d i   
Consider a sequence A satisfying the following conditions 

A is a sequence of N positive integers 
1  leq A 1  leq A 2  le  cdots  leq A N  leq M 

Let us define a score of this sequence as follows 

The score is the sum of d i over all indices i such that A  b i    A  a i    c i   If there is no such i  the score is 0  

Find the maximum possible score of A 

Constraints
All values in input are integers 
2   N   10
1  leq M  leq 10
1  leq Q  leq 50
1  leq a i   b i  leq N   i   1  2       Q  
0  leq c i  leq M   1   i   1  2       Q  
 a i  b i  c i   neq  a j  b j  c j   where i  neq j 
1  leq d i  leq 10 5   i   1  2       Q  


InputInput is given from Standard Input in the following format 
N M Q
a 1 b 1 c 1 d 1
 
a Q b Q c Q d Q


OutputPrint the maximum possible score of A 

Sample Input 13 4 3
1 3 3 100
1 2 2 10
2 3 2 10


Sample Output 1110

When A     1  3  4    its score is 110  Under these conditions  no sequence has a score greater than 110  so the answer is 110 

Sample Input 24 6 10
2 4 1 86568
1 4 0 90629
2 3 0 90310
3 4 1 29211
3 4 3 78537
3 4 2 8580
1 2 1 96263
1 4 2 2156
1 2 0 94325
1 4 3 94328


Sample Output 2357500


Sample Input 310 10 1
1 10 9 1


Sample Output 31"
Floor Function,https://atcoder.jp/contests/abc165/tasks/abc165_d,"問題文整数 A  B  N が与えられます 
N 以下の非負整数 x に対する floor Ax B    A   floor x B  の最大値を求めてください 
ただし floor t  とは 実数 t 以下の最大の整数のことを表します 

制約
1   A   10  6 
1   B   10  12 
1   N   10  12 
入力は全て整数


入力入力は以下の形式で標準入力から与えられる 
A B N


出力N 以下の非負整数 x に対する floor Ax B    A   floor x B  の最大値を整数として出力せよ 

入力例 15 7 4


出力例 12

x 3 のとき floor Ax B  A floor x B    floor 15 7    5 floor 3 7    2 となり これが最大です 

入力例 211 10 9


出力例 29

Problem StatementGiven are integers A  B  and N 
Find the maximum possible value of floor Ax B    A   floor x B  for a non negative integer x not greater than N 
Here floor t  denotes the greatest integer not greater than the real number t 

Constraints
1   A   10  6 
1   B   10  12 
1   N   10  12 
All values in input are integers 


InputInput is given from Standard Input in the following format 
A B N


OutputPrint the maximum possible value of floor Ax B    A   floor x B  for a non negative integer x not greater than N  as an integer 

Sample Input 15 7 4


Sample Output 12

When x 3  floor Ax B  A floor x B    floor 15 7    5 floor 3 7    2  This is the maximum value possible 

Sample Input 211 10 9


Sample Output 29"
Rotation Matching,https://atcoder.jp/contests/abc165/tasks/abc165_e,"問題文あなたは AtCoderじゃんけん という一対一のゲームの大会を主催することになりました 
大会の参加者は N 人で それぞれには 1 から N の相異なる番号が割り振られています 
アリーナには二人が入ることのできる対戦場が M 個用意されており あなたはそれぞれの対戦場に二つの相異なる 1 以上 N 以下の整数を割り当てなければいけません 
複数の対戦場に同じ整数を割り当てることはできません 
大会は N ラウンドによって構成され それぞれのラウンドは以下のようにして取り行われます 

それぞれの参加者は 自分の番号が割り当てられた対戦場が存在するならそこに行き そこに来たもう一方の相手と対戦する 
その後 それぞれの参加者が 自分の番号に 1 を足す もし 1 を足した後の番号が N 1 であるなら その値を 1 に変更する 

N 回のラウンドを通じて 二回以上同じ参加者と対戦するような参加者が存在しないようにしたいです 
このような条件を満たす対戦場への整数の割り当てをひとつ出力してください 
ただし 与えられる制約のもとでそのような割り当てが必ず存在することが示せます 

制約
1  leq M
M  times 2  1  leq N  leq 200000


入力入力は以下の形式で標準入力から与えられる 
N M


出力以下の形式で M 行に出力せよ 
i 行目には i 個目の対戦場に割り当てる二つの整数を出力せよ 
a 1 b 1
a 2 b 2
 
a M b M


入力例 14 1


出力例 12 3

参加者 4 人を A B C D とし はじめ A には 1 Bには 2 Cには 3 Dには 4 が割り振られているとします 


1 回目のラウンドでは 2 の割り振られた B と 3 の割り振られた C が対戦し A の番号が 2  B の番号が 3 Cの番号が 4 D の番号が 1となります 


2 回目のラウンドでは 2 の割り振られた A と 3 の割り振られた B が対戦し A の番号が 3  B の番号が 4 C の番号が 1 D の番号が 2 となります 


3 回目のラウンドでは 2 の割り振られた D と 3 の割り振られた A が対戦し A の番号が 4  B の番号が 1 C の番号が 2 D の番号が 3 となります 


4 回目のラウンドでは 2 の割り振られた C と 3 の割り振られた D が対戦し A の番号が 1  B の番号が 2 C の番号が 3 D の番号が 4 となります 


4 回のラウンドを通じて二回以上同じ参加者と対戦するような参加者が存在しないため この出力は正解となります 

入力例 27 3


出力例 21 6
2 5
3 4

Problem StatementYou are going to hold a competition of one to one game called AtCoder Janken   Janken is the Japanese name for Rock paper scissors  
N players will participate in this competition  and they are given distinct integers from 1 through N 
The arena has M playing fields for two players  You need to assign each playing field two distinct integers between 1 and N  inclusive  
You cannot assign the same integer to multiple playing fields 
The competition consists of N rounds  each of which proceeds as follows 

For each player  if there is a playing field that is assigned the player s integer  the player goes to that field and fight the other player who comes there 
Then  each player adds 1 to its integer  If it becomes N 1  change it to 1 

You want to ensure that no player fights the same opponent more than once during the N rounds 
Print an assignment of integers to the playing fields satisfying this condition 
It can be proved that such an assignment always exists under the constraints given 

Constraints
1  leq M
M  times 2  1  leq N  leq 200000


InputInput is given from Standard Input in the following format 
N M


OutputPrint M lines in the format below 
The i th line should contain the two integers a i and b i assigned to the i th playing field 
a 1 b 1
a 2 b 2
 
a M b M


Sample Input 14 1


Sample Output 12 3

Let us call the four players A  B  C  and D  and assume that they are initially given the integers 1  2  3  and 4  respectively 


The 1 st round is fought by B and C  who has the integers 2 and 3  respectively  After this round  A  B  C  and D have the integers 2  3  4  and 1  respectively 


The 2 nd round is fought by A and B  who has the integers 2 and 3  respectively  After this round  A  B  C  and D have the integers 3  4  1  and 2  respectively 


The 3 rd round is fought by D and A  who has the integers 2 and 3  respectively  After this round  A  B  C  and D have the integers 4  1  2  and 3  respectively 


The 4 th round is fought by C and D  who has the integers 2 and 3  respectively  After this round  A  B  C  and D have the integers 1  2  3  and 4  respectively 


No player fights the same opponent more than once during the four rounds  so this solution will be accepted 

Sample Input 27 3


Sample Output 21 6
2 5
3 4"
LIS on Tree,https://atcoder.jp/contests/abc165/tasks/abc165_f,"問題文N 頂点の木があり i 番目の辺は頂点 u i と頂点 v i を結んでいます 
また 頂点 i には整数 a i が書かれています 
1 以上 N 以下のすべての整数 k に対して 次の問題を解いてください 

頂点 1 から頂点 k までの最短パス上の頂点に書かれている整数を頂点 1 に近い方から順に並べた数列の最長増加部分列の長さはいくつか 

なお 長さ L の数列 A の最長増加部分列とは 1  leq i 1   i 2         i M  leq L かつ
A  i 1    A  i 2          A  i M  を満たす部分列 A  i 1    A  i 2          A  i M  の中で 最も M が大きいものをいいます 

制約
2  leq N  leq 2  times 10 5
1  leq a i  leq 10 9
1  leq u i   v i  leq N
u i  neq v i
与えられるグラフは木である 
入力はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N
a 1 a 2     a N
u 1 v 1
u 2 v 2
 
u  N 1  v  N 1 


出力N 行出力せよ k 行目には 頂点 1 から頂点 k までの最短パス上の頂点に書かれている整数を頂点 1 に近い方から順に並べた数列の最長増加部分列の長さを出力せよ 

入力例 110
1 2 5 3 4 6 7 3 2 4
1 2
2 3
3 4
4 5
3 6
6 7
1 8
8 9
9 10


出力例 11
2
3
3
4
4
5
2
2
3

例えば 頂点 1 から頂点 5 までの最短パス上の頂点に書かれている整数を頂点 1 に近い方から順に並べた数列 A は 1 2 5 3 4 です この数列の最長増加部分列は A 1   A 2   A 4   A 5 であり この長さは 4 です 
Problem StatementWe have a tree with N vertices  whose i th edge connects Vertex u i and Vertex v i 
Vertex i has an integer a i written on it 
For every integer k from 1 through N  solve the following problem 

We will make a sequence by lining up the integers written on the vertices along the shortest path from Vertex 1 to Vertex k  in the order they appear  Find the length of the longest increasing subsequence of this sequence 

Here  the longest increasing subsequence of a sequence A of length L is the subsequence A  i 1    A  i 2          A  i M  with the greatest possible value of M such that 1  leq i 1   i 2         i M  leq L and A  i 1    A  i 2          A  i M  

Constraints
2  leq N  leq 2  times 10 5
1  leq a i  leq 10 9
1  leq u i   v i  leq N
u i  neq v i
The given graph is a tree 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N
a 1 a 2     a N
u 1 v 1
u 2 v 2
 
u  N 1  v  N 1 


OutputPrint N lines  The k th line  print the length of the longest increasing subsequence of the sequence obtained from the shortest path from Vertex 1 to Vertex k 

Sample Input 110
1 2 5 3 4 6 7 3 2 4
1 2
2 3
3 4
4 5
3 6
6 7
1 8
8 9
9 10


Sample Output 11
2
3
3
4
4
5
2
2
3

For example  the sequence A obtained from the shortest path from Vertex 1 to Vertex 5 is 1 2 5 3 4  Its longest increasing subsequence is A 1  A 2  A 4  A 5  with the length of 4"
A?C,https://atcoder.jp/contests/abc166/tasks/abc166_a,"問題文AtCoder 社は 毎週土曜日にコンテストを開催しています 
コンテストには ABC と ARC の 2 つの種類があり 毎週どちらか一方が開催されます 
ABC が開催された次の週には ARC が開催され ARC が行われた次の週には ABC が開催されます 
先週開催されたコンテストを表す文字列 S が与えられるので 今週開催されるコンテストを表す文字列を出力してください 

制約
S は ABC または ARC


入力入力は以下の形式で標準入力から与えられる 
S


出力今週開催されるコンテストを表す文字列を出力せよ 

入力例 1ABC


出力例 1ARC

先週開催されたコンテストは ABC なので 今週は ARC が開催されます 
Problem StatementAtCoder Inc  holds a contest every Saturday 
There are two types of contests called ABC and ARC  and just one of them is held at a time 
The company holds these two types of contests alternately  an ARC follows an ABC and vice versa 
Given a string S representing the type of the contest held last week  print the string representing the type of the contest held this week 

Constraints
S is ABC or ARC 


InputInput is given from Standard Input in the following format 
S


OutputPrint the string representing the type of the contest held this week 

Sample Input 1ABC


Sample Output 1ARC

They held an ABC last week  so they will hold an ARC this week"
Trick or Treat,https://atcoder.jp/contests/abc166/tasks/abc166_b,"問題文ある街に N 人のすぬけ君 すぬけ君 1  すぬけ君 2        すぬけ君 N  が住んでいます 
この街には  K 種類のお菓子 お菓子 1   お菓子 2       お菓子 K  が売られています お菓子 i を持っているのは すぬけ君 A  i  1   A  i  2    cdots  A  i   d i   の計 d i 人です 
高橋君は今からこの街を回り お菓子を 1 つも持っていないすぬけ君にいたずらをします このとき 何人のすぬけ君がいたずらを受けるでしょうか 

制約
入力は全て整数
1  leq N  leq 100
1  leq K  leq 100
1  leq d i  leq N
1  leq A  i  1     cdots   A  i  d i   leq N


入力入力は以下の形式で標準入力から与えられる 
N K
d 1
A  1  1   cdots A  1  d 1 
 vdots
d K
A  K  1   cdots A  K  d K 


出力答えを出力せよ 

入力例 13 2
2
1 3
1
3


出力例 11



すぬけ君 1 はお菓子 1 を持っています 


すぬけ君 2 はお菓子を持っていません 


すぬけ君 3 はお菓子 1  2 を持っています 


以上より いたずらを受けるのはすぬけ君 2 の一人です 

入力例 23 3
1
3
1
3
1
3


出力例 22

Problem StatementN Snukes called Snuke 1  Snuke 2       Snuke N live in a town 
There are K kinds of snacks sold in this town  called Snack 1  Snack 2       Snack K  The following d i Snukes have Snack i  Snuke A  i  1   A  i  2    cdots  A  i   d i   
Takahashi will walk around this town and make mischief on the Snukes who have no snacks  How many Snukes will fall victim to Takahashi s mischief 

Constraints
All values in input are integers 
1  leq N  leq 100
1  leq K  leq 100
1  leq d i  leq N
1  leq A  i  1     cdots   A  i  d i   leq N


InputInput is given from Standard Input in the following format 
N K
d 1
A  1  1   cdots A  1  d 1 
 vdots
d K
A  K  1   cdots A  K  d K 


OutputPrint the answer 

Sample Input 13 2
2
1 3
1
3


Sample Output 11


Snuke 1 has Snack 1 
Snuke 2 has no snacks 
Snuke 3 has Snack 1 and 2 

Thus  there will be one victim  Snuke 2 

Sample Input 23 3
1
3
1
3
1
3


Sample Output 22"
Peaks,https://atcoder.jp/contests/abc166/tasks/abc166_c,"問題文AtCoder丘陵には N 個の展望台があり 展望台 i の標高は H i です 
また 異なる展望台どうしを結ぶ M 本の道があり 道 j は展望台 A j と展望台 B j を結んでいます 
展望台 i が良い展望台であるとは 展望台 i から一本の道を使って辿り着けるどの展望台よりも展望台 i の方が標高が高いことをいいます 
展望台 i から一本の道を使って辿り着ける展望台が存在しない場合も 展望台 i は良い展望台であるといいます 
良い展望台がいくつあるか求めてください 

制約
2  leq N  leq 10 5
1  leq M  leq 10 5
1  leq H i  leq 10 9
1  leq A i B i  leq N
A i  neq B i
同じ展望台の組を結ぶ道が複数あることもある 
入力中の値はすべて整数である 


入力入力は以下の形式で標準入力から与えられる 
N M
H 1 H 2     H N
A 1 B 1
A 2 B 2
 
A M B M


出力良い展望台の数を出力せよ 

入力例 14 3
1 2 3 4
1 3
2 3
2 4


出力例 12



展望台 1 から一本の道を使って辿り着ける展望台は展望台 3 ですが 展望台 1 の標高は展望台 3 の標高より高くないため 展望台 1 は良い展望台ではありません 


展望台 2 から一本の道を使って辿り着ける展望台は展望台 3 と展望台 4 ですが 展望台 2 の標高は展望台 3 の標高より高くないため 展望台 2 は良い展望台ではありません 


展望台 3 から一本の道を使って辿り着ける展望台は展望台 1 と展望台 2 ですが 展望台 3 の標高は展望台 1 の標高より高く かつ展望台 2 の標高より高いため 展望台 3 は良い展望台です 


展望台 4 から一本の道を使って辿り着ける展望台は展望台 2 ですが 展望台 4 の標高は展望台 2 の標高より高いため 展望台 4 は良い展望台です 


展望台 3 と展望台 4 が良い展望台なので 良い展望台の数は 2 です 

入力例 26 5
8 6 9 1 2 1
1 3
4 2
4 3
4 6
4 6


出力例 23

Problem StatementThere are N observatories in AtCoder Hill  called Obs  1  Obs  2       Obs  N  The elevation of Obs  i is H i 
There are also M roads  each connecting two different observatories  Road j connects Obs  A j and Obs  B j 
Obs  i is said to be good when its elevation is higher than those of all observatories that can be reached from Obs  i using just one road 
Note that Obs  i is also good when no observatory can be reached from Obs  i using just one road 
How many good observatories are there 

Constraints
2  leq N  leq 10 5
1  leq M  leq 10 5
1  leq H i  leq 10 9
1  leq A i B i  leq N
A i  neq B i
Multiple roads may connect the same pair of observatories 
All values in input are integers 


InputInput is given from Standard Input in the following format 
N M
H 1 H 2     H N
A 1 B 1
A 2 B 2
 
A M B M


OutputPrint the number of good observatories 

Sample Input 14 3
1 2 3 4
1 3
2 3
2 4


Sample Output 12



From Obs  1  you can reach Obs  3 using just one road  The elevation of Obs  1 is not higher than that of Obs  3  so Obs  1 is not good 


From Obs  2  you can reach Obs  3 and 4 using just one road  The elevation of Obs  2 is not higher than that of Obs  3  so Obs  2 is not good 


From Obs  3  you can reach Obs  1 and 2 using just one road  The elevation of Obs  3 is higher than those of Obs  1 and 2  so Obs  3 is good 


From Obs  4  you can reach Obs  2 using just one road  The elevation of Obs  4 is higher than that of Obs  2  so Obs  4 is good 


Thus  the good observatories are Obs  3 and 4  so there are two good observatories 

Sample Input 26 5
8 6 9 1 2 1
1 3
4 2
4 3
4 6
4 6


Sample Output 23"
I hate Factorization,https://atcoder.jp/contests/abc166/tasks/abc166_d,"問題文A 5 B 5   X を満たす整数の組  A B  をひとつ示してください 
ただし 与えられる X に対して 条件を満たす整数の組  A B  が存在することが保証されています 

制約
1  leq X  leq 10 9
X は整数である 
条件を満たす整数の組  A B  が存在する 


入力入力は以下の形式で標準入力から与えられる 
X


出力A と B を空白区切りで出力せよ 条件を満たす整数の組  A B  が複数存在する場合 どれを出力してもかまわない 
A B


入力例 133


出力例 12  1

A 2 B  1 のとき A 5 B 5 の値は 33 になります 

入力例 21


出力例 20  1

Problem StatementGive a pair of integers  A  B  such that A 5 B 5   X 
It is guaranteed that there exists such a pair for the given integer X 

Constraints
1  leq X  leq 10 9
X is an integer 
There exists a pair of integers  A  B  satisfying the condition in Problem Statement 


InputInput is given from Standard Input in the following format 
X


OutputPrint A and B  with space in between 
If there are multiple pairs of integers  A  B  satisfying the condition  you may print any of them 
A B


Sample Input 133


Sample Output 12  1

For A 2 and B  1  A 5 B 5   33 

Sample Input 21


Sample Output 20  1"
This Message Will Self Destruct in 5s,https://atcoder.jp/contests/abc166/tasks/abc166_e,"問題文
AtCoder 王国の優秀なエージェントであるあなたは 盗まれた極秘情報が AlDebaran 王国の手に渡ることを阻止するため 取引現場であるパーティに潜入しました 
パーティには N 人の参加者がおり それぞれ 1 から N までの番号がついています 参加者 i の身長は A i です 
あなたは事前の尋問によって 極秘情報を取引するのは以下の条件を満たす 2 人組であることを知っています 

2 人の持つ番号の差の絶対値が 2 人の身長の和に等しい 

N 人の参加者のうちから 2 人を選んでペアにする方法は  frac N N 1   2  通りありますが このうち上の条件を満たすペアは何通りあるでしょう 
なお 極秘情報の内容が何であるかはあなたの知るところではありません 

制約

入力はすべて整数
2  leq N  leq 2  times 10 5
1  leq A i  leq 10 9   1  leq i  leq N 


入力
入力は以下の形式で標準入力から与えられる 
N
A 1 A 2  dots A N


出力
条件を満たすペアの個数を出力せよ 

入力例 16
2 3 3 1 3 1


出力例 13


A 1   A 4   3 なので 参加者 1  4 のペアは条件を満たします 
A 2   A 6   4 なので 参加者 2  6 のペアは条件を満たします 
A 4   A 6   2 なので 参加者 4  6 のペアは条件を満たします 

その他に作れるペアはいずれも条件を満たさないので 3 を出力します 

入力例 26
5 2 4 2 8 8


出力例 20

条件を満たすペアが存在しないので 0 を出力します 

入力例 332
3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5


出力例 322

Problem Statement
You are the top spy of AtCoder Kingdom  To prevent the stolen secret from being handed to AlDebaran Kingdom  you have sneaked into the party where the transaction happens 
There are N attendees in the party  and they are given attendee numbers from 1 through N  The height of Attendee i is A i 
According to an examination beforehand  you know that a pair of attendees satisfying the condition below will make the transaction 

The absolute difference of their attendee numbers is equal to the sum of their heights 

There are  frac N N 1   2  ways to choose two from the N attendees and make a pair  Among them  how many satisfy the condition above 
P S   We cannot let you know the secret 

Constraints

All values in input are integers 
2  leq N  leq 2  times 10 5
1  leq A i  leq 10 9   1  leq i  leq N 


Input
Input is given from Standard Input in the following format 
N
A 1 A 2  dots A N


Output
Print the number of pairs satisfying the condition 

Sample Input 16
2 3 3 1 3 1


Sample Output 13


A 1   A 4   3  so the pair of Attendee 1 and 4 satisfy the condition 
A 2   A 6   4  so the pair of Attendee 2 and 6 satisfy the condition 
A 4   A 6   2  so the pair of Attendee 4 and 6 satisfy the condition 

No other pair satisfies the condition  so you should print 3 

Sample Input 26
5 2 4 2 8 8


Sample Output 20

No pair satisfies the condition  so you should print 0 

Sample Input 332
3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5


Sample Output 322"
Three Variables Game,https://atcoder.jp/contests/abc166/tasks/abc166_f,"問題文あるゲームでは 3 つの変数があり それぞれ A B C で表されます 
ゲームの進行と共に あなたは N 回の選択に迫られます 
それぞれの選択は文字列 s i によって示され 
s i が AB のとき A と B のどちらかに 1 を足しもう一方から 1 を引くこと 
AC のとき A と C のどちらかに 1 を足しもう一方から 1 を引くこと 
BC のとき B と C のどちらかに 1 を足しもう一方から 1 を引くことを意味します 
いずれの選択の後にも A B C のいずれも負の値になってはいけません 
この条件を満たしつつ N 回すべての選択を終えることが可能であるか判定し 可能であるならそのような選択方法をひとつ示してください 

制約
1  leq N  leq 10 5
0  leq A B C  leq 10 9
N  A  B  C は整数である 
s i は AB  AC  BC のいずれか


入力入力は以下の形式で標準入力から与えられる 
N A B C
s 1
s 2
 
s N


出力条件を満たしつつ N 個すべての選択を終えることが可能である場合は Yes を そうでない場合は No を出力せよ 
加えて 前者の場合は続く N 行に選択方法を示せ i 1 行目には i 回目の選択で 1 を足す変数の名前  A  B  C のいずれか  を出力せよ 

入力例 12 1 3 0
AB
AC


出力例 1Yes
A
C

次のようにすることで 2 回すべての選択を終えることができます 

1 回目の選択では A に 1 を足し B から 1 を引く A の値が 2 に B の値が 2 に変化する 
2 回目の選択では C に 1 を足し A から 1 を引く C の値が 1 に A の値が 1 に変化する 


入力例 23 1 0 0
AB
BC
AB


出力例 2No


入力例 31 0 9 0
AC


出力例 3No


入力例 48 6 9 1
AC
BC
AB
BC
AC
BC
AB
AB


出力例 4Yes
C
B
B
C
C
B
A
A

Problem StatementThere is a game that involves three variables  denoted A  B  and C 
As the game progresses  there will be N events where you are asked to make a choice 
Each of these choices is represented by a string s i  If s i is AB  you must add 1 to A or B then subtract 1 from the other  if s i is AC  you must add 1 to A or C then subtract 1 from the other  if s i is BC  you must add 1 to B or C then subtract 1 from the other 
After each choice  none of A  B  and C should be negative 
Determine whether it is possible to make N choices under this condition  If it is possible  also give one such way to make the choices 

Constraints
1  leq N  leq 10 5
0  leq A B C  leq 10 9
N  A  B  C are integers 
s i is AB  AC  or BC 


InputInput is given from Standard Input in the following format 
N A B C
s 1
s 2
 
s N


OutputIf it is possible to make N choices under the condition  print Yes  otherwise  print No 
Also  in the former case  show one such way to make the choices in the subsequent N lines  The  i 1  th line should contain the name of the variable  A  B  or C  to which you add 1 in the i th choice 

Sample Input 12 1 3 0
AB
AC


Sample Output 1Yes
A
C

You can successfully make two choices  as follows 

In the first choice  add 1 to A and subtract 1 from B  A becomes 2  and B becomes 2 
In the second choice  add 1 to C and subtract 1 from A  C becomes 1  and A becomes 1 


Sample Input 23 1 0 0
AB
BC
AB


Sample Output 2No


Sample Input 31 0 9 0
AC


Sample Output 3No


Sample Input 48 6 9 1
AC
BC
AB
BC
AC
BC
AB
AB


Sample Output 4Yes
C
B
B
C
C
B
A
A"
Registration,https://atcoder.jp/contests/abc167/tasks/abc167_a,"問題文高橋君はとあるWebサービスに会員登録しようとしています 
まずIDを S として登録しようとしました しかし このIDは既に他のユーザーによって使用されていました 
そこで 高橋君は S の末尾に 1 文字追加した文字列をIDとして登録することを考えました 
高橋君は新しくIDを T として登録しようとしています これが前述の条件を満たすか判定してください 

制約
S  T は英小文字列
1  leq  S   leq 10
 T     S    1


入力入力は以下の形式で標準入力から与えられる 
S
T


出力T が問の条件を満たすならば Yes と そうでないならば No と出力せよ 

入力例 1chokudai
chokudaiz


出力例 1Yes

chokudaiz は chokudai の末尾に z を追加して得られる文字列です 

入力例 2snuke
snekee


出力例 2No

snekee は snuke の末尾に英小文字を 1 文字追加して得られる文字列ではありません 

入力例 3a
aa


出力例 3Yes

Problem StatementTakahashi wants to be a member of some web service 
He tried to register himself with the ID S  which turned out to be already used by another user 
Thus  he decides to register using a string obtained by appending one character at the end of S as his ID 
He is now trying to register with the ID T  Determine whether this string satisfies the property above 

Constraints
S and T are strings consisting of lowercase English letters 
1  leq  S   leq 10
 T     S    1


InputInput is given from Standard Input in the following format 
S
T


OutputIf T satisfies the property in Problem Statement  print Yes  otherwise  print No 

Sample Input 1chokudai
chokudaiz


Sample Output 1Yes

chokudaiz can be obtained by appending z at the end of chokudai 

Sample Input 2snuke
snekee


Sample Output 2No

snekee cannot be obtained by appending one character at the end of snuke 

Sample Input 3a
aa


Sample Output 3Yes"
Easy Linear Programming,https://atcoder.jp/contests/abc167/tasks/abc167_b,"問題文1 が書かれたカードが A 枚 0 が書かれたカードが B 枚 
 1 が書かれたカードが C 枚あります 
これらのカードから ちょうど K 枚を選んで取るとき 取ったカードに書かれた数の和として 
ありうる値の最大値はいくつですか 

制約
入力は全て整数である 
0  leq A  B  C
1  leq K  leq A   B   C  leq 2  times 10 9


入力入力は以下の形式で標準入力から与えられる 
A B C K


出力和としてありうる値の最大値を出力せよ 

入力例 12 1 1 3


出力例 12

1 が書かれたカードを 2 枚 0 が書かれたカードを 1 枚取ることを考えます 
このときカードに書かれた数の和は 2 になり 和としてありうる値の最大値になります 

入力例 21 2 3 4


出力例 20


入力例 32000000000 0 0 2000000000


出力例 32000000000

Problem StatementWe have A cards  each of which has an integer 1 written on it  Similarly  we also have B cards with 0s and C cards with  1s 
We will pick up K among these cards  What is the maximum possible sum of the numbers written on the cards chosen 

Constraints
All values in input are integers 
0  leq A  B  C
1  leq K  leq A   B   C  leq 2  times 10 9


InputInput is given from Standard Input in the following format 
A B C K


OutputPrint the maximum possible sum of the numbers written on the cards chosen 

Sample Input 12 1 1 3


Sample Output 12

Consider picking up two cards with 1s and one card with a 0 
In this case  the sum of the numbers written on the cards is 2  which is the maximum possible value 

Sample Input 21 2 3 4


Sample Output 20


Sample Input 32000000000 0 0 2000000000


Sample Output 32000000000"
Skill Up,https://atcoder.jp/contests/abc167/tasks/abc167_c,"問題文競技プログラミングを始めた高橋くんは 学びたいアルゴリズムが M 個あります 
最初 各アルゴリズムの理解度は 0 です 
高橋くんが書店に行くと N 冊の参考書が売っていました i 番目の参考書  1 leq i leq N  は C i 円で売られていて 購入して読むことで 各 j  1 leq j leq M  について j 番目のアルゴリズムの理解度が A  i j  上がります 
また それ以外の方法で理解度を上げることはできません 
高橋くんの目標は M 個すべてのアルゴリズムの理解度を X 以上にすることです 高橋くんが目標を達成することが可能か判定し 可能な場合は目標を達成するのに必要な金額の最小値を計算してください 

制約
入力はすべて整数
1 leq N  M leq 12
1 leq X leq 10 5
1 leq C i  leq 10 5
0 leq A  i  j   leq 10 5


入力入力は以下の形式で標準入力から与えられる 
N M X
C 1 A  1 1  A  1 2   cdots A  1 M 
C 2 A  2 1  A  2 2   cdots A  2 M 
 vdots
C N A  N 1  A  N 2   cdots A  N M 


出力高橋くんが目標を達成できないならば  1 を 
そうでなければ目標を達成するのに必要な金額の最小値を出力せよ 

入力例 13 3 10
60 2 2 4
70 8 7 9
50 2 3 9


出力例 1120

2  3 番目の参考書を購入すると 120 円ですべてのアルゴリズムの理解度を 10 以上にすることができ これが最小値です 

入力例 23 3 10
100 3 1 4
100 1 5 9
100 2 6 5


出力例 2 1

すべての参考書を購入しても 1 つ目のアルゴリズムの理解度が 10 に達しません 

入力例 38 5 22
100 3 7 5 3 1
164 4 5 2 7 8
334 7 2 7 2 9
234 4 7 2 8 2
541 5 4 3 3 6
235 4 8 6 9 7
394 3 6 1 6 2
872 8 4 3 7 2


出力例 31067

ProblemTakahashi  who is a novice in competitive programming  wants to learn M algorithms 
Initially  his understanding level of each of the M algorithms is 0 
Takahashi is visiting a bookstore  where he finds N books on algorithms 
The i th book  1 leq i leq N  is sold for C i yen  the currency of Japan   If he buys and reads it  his understanding level of the j th algorithm will increase by A  i j  for each j  1 leq j leq M  
There is no other way to increase the understanding levels of the algorithms 
Takahashi s objective is to make his understanding levels of all the M algorithms X or higher  Determine whether this objective is achievable  If it is achievable  find the minimum amount of money needed to achieve it 

Constraints
All values in input are integers 
1 leq N  M leq 12
1 leq X leq 10 5
1 leq C i  leq 10 5
0 leq A  i  j   leq 10 5


InputInput is given from Standard Input in the following format 
N M X
C 1 A  1 1  A  1 2   cdots A  1 M 
C 2 A  2 1  A  2 2   cdots A  2 M 
 vdots
C N A  N 1  A  N 2   cdots A  N M 


OutputIf the objective is not achievable  print  1  otherwise  print the minimum amount of money needed to achieve it 

Sample Input 13 3 10
60 2 2 4
70 8 7 9
50 2 3 9


Sample Output 1120

Buying the second and third books makes his understanding levels of all the algorithms 10 or higher  at the minimum cost possible 

Sample Input 23 3 10
100 3 1 4
100 1 5 9
100 2 6 5


Sample Output 2 1

Buying all the books is still not enough to make his understanding levels of all the algorithms 10 or higher 

Sample Input 38 5 22
100 3 7 5 3 1
164 4 5 2 7 8
334 7 2 7 2 9
234 4 7 2 8 2
541 5 4 3 3 6
235 4 8 6 9 7
394 3 6 1 6 2
872 8 4 3 7 2


Sample Output 31067"
Teleporter,https://atcoder.jp/contests/abc167/tasks/abc167_d,"問題文
高橋王国には N 個の町があります 町は 1 から N まで番号が振られています 
それぞれの町にはテレポーターが 1 台ずつ設置されています 町 i  1  leq i  leq N  のテレポーターの転送先は町 A i です 
高橋王は正の整数 K が好きです わがままな高橋王は 町 1 から出発してテレポーターをちょうど K 回使うと どの町に到着するかが知りたいです 
高橋王のために これを求めるプログラムを作成してください 

制約

2  leq N  leq 2  times 10 5
1  leq A i  leq N
1  leq K  leq 10  18 


入力
入力は以下の形式で標準入力から与えられる 
N K
A 1 A 2  dots A N


出力
町 1 から出発してテレポーターをちょうど K 回使ったとき到着する町の番号を出力せよ 

入力例 14 5
3 2 4 1


出力例 14

町 1 から出発してテレポーターを 5 回使うと 1  to 3  to 4  to 1  to 3  to 4 と移動します 

入力例 26 727202214173249351
6 5 2 5 3 2


出力例 22

Problem Statement
The Kingdom of Takahashi has N towns  numbered 1 through N 
There is one teleporter in each town  The teleporter in Town i  1  leq i  leq N  sends you to Town A i 
Takahashi  the king  loves the positive integer K  The selfish king wonders what town he will be in if he starts at Town 1 and uses a teleporter exactly K times from there 
Help the king by writing a program that answers this question 

Constraints

2  leq N  leq 2  times 10 5
1  leq A i  leq N
1  leq K  leq 10  18 


Input
Input is given from Standard Input in the following format 
N K
A 1 A 2  dots A N


Output
Print the integer representing the town the king will be in if he starts at Town 1 and uses a teleporter exactly K times from there 

Sample Input 14 5
3 2 4 1


Sample Output 14

If we start at Town 1 and use the teleporter 5 times  our travel will be as follows  1  to 3  to 4  to 1  to 3  to 4 

Sample Input 26 727202214173249351
6 5 2 5 3 2


Sample Output 22"
Colorful Blocks,https://atcoder.jp/contests/abc167/tasks/abc167_e,"問題文N 個のブロックが横一列に並んでいます このブロック列に色を塗ります 
2 つのブロック列の塗り方が異なるとは あるブロックが存在して そのブロックが異なる色で塗られていることと定義します 
次の条件を満たすブロック列の塗り方が何通りあるか求めてください 

各ブロックを色 1 から色 M までのいずれか一色で塗る 使わない色があってもよい 
隣り合うブロックの組であって同じ色で塗られている組は  K 組以下である 

ただし 答えは非常に大きくなる場合があるので  998244353 で割った余りを出力してください 

制約
入力は全て整数
1  leq N  M  leq 2  times 10 5
0  leq K  leq N   1


入力入力は以下の形式で標準入力から与えられる 
N M K


出力答えを出力せよ 

入力例 13 2 1


出力例 16

ブロック列の塗り方を色を書き並べた文字列で表すと 条件を満たすブロック列の色の塗り方は 112   121  122  211  212  221 です 

入力例 2100 100 0


出力例 273074801


入力例 360522 114575 7559


出力例 3479519525

Problem StatementThere are N blocks arranged in a row  Let us paint these blocks 
We will consider two ways to paint the blocks different if and only if there is a block painted in different colors in those two ways 
Find the number of ways to paint the blocks under the following conditions 

For each block  use one of the M colors  Color 1 through Color M  to paint it  It is not mandatory to use all the colors 
There may be at most K pairs of adjacent blocks that are painted in the same color 

Since the count may be enormous  print it modulo 998244353 

Constraints
All values in input are integers 
1  leq N  M  leq 2  times 10 5
0  leq K  leq N   1


InputInput is given from Standard Input in the following format 
N M K


OutputPrint the answer 

Sample Input 13 2 1


Sample Output 16

The following ways to paint the blocks satisfy the conditions  112  121  122  211  212  and 221  Here  digits represent the colors of the blocks 

Sample Input 2100 100 0


Sample Output 273074801


Sample Input 360522 114575 7559


Sample Output 3479519525"
Bracket Sequencing,https://atcoder.jp/contests/abc167/tasks/abc167_f,"問題文以下のいずれかの条件を満たす文字列を括弧列と定義します 

空文字列
ある括弧列 A が存在して    A    をこの順に連結した文字列
ある空でない括弧列 A  B が存在して A  B をこの順に連結した文字列

N 個の文字列 S i が与えられます S i 全てを好きな順序で連結するとき 括弧列を構成することはできますか 

制約
1  leq N  leq 10 6
S i の文字列長の合計は 10 6 以下
S i は      のみからなる空でない文字列


入力入力は以下の形式で標準入力から与えられる 
N
S 1
 
S N


出力S i を任意の順序で連結するとき 括弧列を構成できるなら Yes できないなら No を出力せよ 

入力例 12
 
   


出力例 1Yes

       の順に連結すると括弧列になります 

入力例 22
  
  


出力例 2No


入力例 34
      
      
      
      


出力例 3Yes


入力例 43
   
 
 


出力例 4No

Problem StatementA bracket sequence is a string that is one of the following 

An empty string 
The concatenation of    A  and   in this order  for some bracket sequence A  
The concatenation of A and B in this order  for some non empty bracket sequences A and B  

Given are N strings S i  Can a bracket sequence be formed by concatenating all the N strings in some order 

Constraints
1  leq N  leq 10 6
The total length of the strings S i is at most 10 6 
S i is a non empty string consisting of   and   


InputInput is given from Standard Input in the following format 
N
S 1
 
S N


OutputIf a bracket sequence can be formed by concatenating all the N strings in some order  print Yes  otherwise  print No 

Sample Input 12
 
   


Sample Output 1Yes

Concatenating     and   in this order forms a bracket sequence 

Sample Input 22
  
  


Sample Output 2No


Sample Input 34
      
      
      
      


Sample Output 3Yes


Sample Input 43
   
 
 


Sample Output 4No"
∴ (Therefore),https://atcoder.jp/contests/abc168/tasks/abc168_a,"問題文
いろはちゃんは 人気の日本製ゲーム ÅtCoder で遊びたい猫のすぬけ君のために日本語を教えることにしました 
日本語で鉛筆を数えるときには 助数詞として数の後ろに 本 がつきます この助数詞はどんな数につくかで異なる読み方をします 具体的には 999 以下の正の整数 N について  N 本 と言うときの 本 の読みは

N の 1 の位が 2  4  5  7  9 のとき hon
N の 1 の位が 0  1  6  8 のとき pon
N の 1 の位が 3 のとき bon

です 
N が与えられるので  N 本 と言うときの 本 の読みを出力してください 

制約

N は 999 以下の正の整数


入力
入力は以下の形式で標準入力から与えられる 
N


出力
答えを出力せよ 

入力例 116


出力例 1pon

16 の 1 の位は 6 なので  本 の読みは pon です 

入力例 22


出力例 2hon


入力例 3183


出力例 3bon

Problem Statement
The cat Snuke wants to play a popular Japanese game called ÅtCoder  so Iroha has decided to teach him Japanese 
When counting pencils in Japanese  the counter word  本  follows the number  The pronunciation of this word varies depending on the number  Specifically  the pronunciation of  本  in the phrase  N 本  for a positive integer N not exceeding 999 is as follows 

hon when the digit in the one s place of N is 2  4  5  7  or 9 
pon when the digit in the one s place of N is 0  1  6 or 8 
bon when the digit in the one s place of N is 3 

Given N  print the pronunciation of  本  in the phrase  N 本  

Constraints

N is a positive integer not exceeding 999 


Input
Input is given from Standard Input in the following format 
N


Output
Print the answer 

Sample Input 116


Sample Output 1pon

The digit in the one s place of 16 is 6  so the  本  in  16 本  is pronounced pon 

Sample Input 22


Sample Output 2hon


Sample Input 3183


Sample Output 3bon"
... (Triple Dots),https://atcoder.jp/contests/abc168/tasks/abc168_b,"問題文
英小文字からなる文字列 S があります 
S の長さが K 以下であれば S をそのまま出力してください 
S の長さが K を上回っているならば 先頭 K 文字だけを切り出し 末尾に     を付加して出力してください 

制約

K は 1 以上 100 以下の整数
S は英小文字からなる文字列
S の長さは 1 以上 100 以下


入力
入力は以下の形式で標準入力から与えられる 
K
S


出力
問題文の通りに出力せよ 

入力例 17
nikoandsolstice


出力例 1nikoand   

nikoandsolstice の長さは 15 であり K 7 を上回っています 
この先頭 7 文字を切り出して末尾に     を付加した文字列 nikoand    を出力します 

入力例 240
ferelibenterhominesidquodvoluntcredunt


出力例 2ferelibenterhominesidquodvoluntcredunt

ガイウス ユリウス カエサルの名言です 
Problem Statement
We have a string S consisting of lowercase English letters 
If the length of S is at most K  print S without change 
If the length of S exceeds K  extract the first K characters in S  append     to the end of them  and print the result 

Constraints

K is an integer between 1 and 100  inclusive  
S is a string consisting of lowercase English letters 
The length of S is between 1 and 100  inclusive  


Input
Input is given from Standard Input in the following format 
K
S


Output
Print a string as stated in Problem Statement 

Sample Input 17
nikoandsolstice


Sample Output 1nikoand   

nikoandsolstice has a length of 15  which exceeds K 7 
We should extract the first 7 characters in this string  append     to the end of them  and print the result nikoand    

Sample Input 240
ferelibenterhominesidquodvoluntcredunt


Sample Output 2ferelibenterhominesidquodvoluntcredunt

The famous quote from Gaius Julius Caesar"
: (Colon),https://atcoder.jp/contests/abc168/tasks/abc168_c,nan
.. (Double Dots),https://atcoder.jp/contests/abc168/tasks/abc168_d,nan
∙ (Bullet),https://atcoder.jp/contests/abc168/tasks/abc168_e,nan
. (Single Dot),https://atcoder.jp/contests/abc168/tasks/abc168_f,nan
Multiplication 1,https://atcoder.jp/contests/abc169/tasks/abc169_a,nan
Multiplication 2,https://atcoder.jp/contests/abc169/tasks/abc169_b,nan
Multiplication 3,https://atcoder.jp/contests/abc169/tasks/abc169_c,nan
Div Game,https://atcoder.jp/contests/abc169/tasks/abc169_d,nan
Count Median,https://atcoder.jp/contests/abc169/tasks/abc169_e,nan
Knapsack for All Subsets,https://atcoder.jp/contests/abc169/tasks/abc169_f,nan
Five Variables,https://atcoder.jp/contests/abc170/tasks/abc170_a,nan
Crane and Turtle,https://atcoder.jp/contests/abc170/tasks/abc170_b,nan
Forbidden List,https://atcoder.jp/contests/abc170/tasks/abc170_c,nan
Not Divisible,https://atcoder.jp/contests/abc170/tasks/abc170_d,nan
Smart Infants,https://atcoder.jp/contests/abc170/tasks/abc170_e,nan
Pond Skater,https://atcoder.jp/contests/abc170/tasks/abc170_f,nan
αlphabet,https://atcoder.jp/contests/abc171/tasks/abc171_a,nan
Mix Juice,https://atcoder.jp/contests/abc171/tasks/abc171_b,nan
One Quadrillion and One Dalmatians,https://atcoder.jp/contests/abc171/tasks/abc171_c,nan
Replacing,https://atcoder.jp/contests/abc171/tasks/abc171_d,nan
Red Scarf,https://atcoder.jp/contests/abc171/tasks/abc171_e,nan
Strivore,https://atcoder.jp/contests/abc171/tasks/abc171_f,nan
Calc,https://atcoder.jp/contests/abc172/tasks/abc172_a,nan
Minor Change,https://atcoder.jp/contests/abc172/tasks/abc172_b,nan
Tsundoku,https://atcoder.jp/contests/abc172/tasks/abc172_c,nan
Sum of Divisors,https://atcoder.jp/contests/abc172/tasks/abc172_d,nan
NEQ,https://atcoder.jp/contests/abc172/tasks/abc172_e,nan
Unfair Nim,https://atcoder.jp/contests/abc172/tasks/abc172_f,nan
Payment,https://atcoder.jp/contests/abc173/tasks/abc173_a,nan
Judge Status Summary,https://atcoder.jp/contests/abc173/tasks/abc173_b,nan
H and V,https://atcoder.jp/contests/abc173/tasks/abc173_c,nan
Chat in a Circle,https://atcoder.jp/contests/abc173/tasks/abc173_d,nan
Multiplication 4,https://atcoder.jp/contests/abc173/tasks/abc173_e,nan
Intervals on Tree,https://atcoder.jp/contests/abc173/tasks/abc173_f,nan
Air Conditioner,https://atcoder.jp/contests/abc174/tasks/abc174_a,nan
Distance,https://atcoder.jp/contests/abc174/tasks/abc174_b,nan
Repsept,https://atcoder.jp/contests/abc174/tasks/abc174_c,nan
Alter Altar,https://atcoder.jp/contests/abc174/tasks/abc174_d,nan
Logs,https://atcoder.jp/contests/abc174/tasks/abc174_e,nan
Range Set Query,https://atcoder.jp/contests/abc174/tasks/abc174_f,nan
Rainy Season,https://atcoder.jp/contests/abc175/tasks/abc175_a,nan
Making Triangle,https://atcoder.jp/contests/abc175/tasks/abc175_b,nan
Walking Takahashi,https://atcoder.jp/contests/abc175/tasks/abc175_c,nan
Moving Piece,https://atcoder.jp/contests/abc175/tasks/abc175_d,nan
Picking Goods,https://atcoder.jp/contests/abc175/tasks/abc175_e,nan
Making Palindrome,https://atcoder.jp/contests/abc175/tasks/abc175_f,nan
Takoyaki,https://atcoder.jp/contests/abc176/tasks/abc176_a,nan
Multiple of 9,https://atcoder.jp/contests/abc176/tasks/abc176_b,nan
Step,https://atcoder.jp/contests/abc176/tasks/abc176_c,nan
Wizard in Maze,https://atcoder.jp/contests/abc176/tasks/abc176_d,nan
Bomber,https://atcoder.jp/contests/abc176/tasks/abc176_e,nan
Brave CHAIN,https://atcoder.jp/contests/abc176/tasks/abc176_f,nan
Don't be late,https://atcoder.jp/contests/abc177/tasks/abc177_a,nan
Substring,https://atcoder.jp/contests/abc177/tasks/abc177_b,nan
Sum of product of pairs,https://atcoder.jp/contests/abc177/tasks/abc177_c,nan
Friends,https://atcoder.jp/contests/abc177/tasks/abc177_d,nan
Coprime,https://atcoder.jp/contests/abc177/tasks/abc177_e,nan
I hate Shortest Path Problem,https://atcoder.jp/contests/abc177/tasks/abc177_f,nan
Not,https://atcoder.jp/contests/abc178/tasks/abc178_a,nan
Product Max,https://atcoder.jp/contests/abc178/tasks/abc178_b,nan
Ubiquity,https://atcoder.jp/contests/abc178/tasks/abc178_c,nan
Redistribution,https://atcoder.jp/contests/abc178/tasks/abc178_d,nan
Dist Max,https://atcoder.jp/contests/abc178/tasks/abc178_e,nan
Contrast,https://atcoder.jp/contests/abc178/tasks/abc178_f,nan
Plural Form,https://atcoder.jp/contests/abc179/tasks/abc179_a,nan
Go to Jail,https://atcoder.jp/contests/abc179/tasks/abc179_b,nan
A x B + C,https://atcoder.jp/contests/abc179/tasks/abc179_c,nan
Leaping Tak,https://atcoder.jp/contests/abc179/tasks/abc179_d,nan
Sequence Sum,https://atcoder.jp/contests/abc179/tasks/abc179_e,nan
Simplified Reversi,https://atcoder.jp/contests/abc179/tasks/abc179_f,nan
box,https://atcoder.jp/contests/abc180/tasks/abc180_a,nan
Various distances,https://atcoder.jp/contests/abc180/tasks/abc180_b,nan
Cream puff,https://atcoder.jp/contests/abc180/tasks/abc180_c,nan
Takahashi Unevolved,https://atcoder.jp/contests/abc180/tasks/abc180_d,nan
Traveling Salesman among Aerial Cities,https://atcoder.jp/contests/abc180/tasks/abc180_e,nan
Unbranched,https://atcoder.jp/contests/abc180/tasks/abc180_f,nan
Heavy Rotation,https://atcoder.jp/contests/abc181/tasks/abc181_a,nan
Trapezoid Sum,https://atcoder.jp/contests/abc181/tasks/abc181_b,nan
Collinearity,https://atcoder.jp/contests/abc181/tasks/abc181_c,nan
Hachi,https://atcoder.jp/contests/abc181/tasks/abc181_d,nan
Transformable Teacher,https://atcoder.jp/contests/abc181/tasks/abc181_e,nan
Silver Woods,https://atcoder.jp/contests/abc181/tasks/abc181_f,nan
twiblr,https://atcoder.jp/contests/abc182/tasks/abc182_a,nan
Almost GCD,https://atcoder.jp/contests/abc182/tasks/abc182_b,nan
To 3,https://atcoder.jp/contests/abc182/tasks/abc182_c,nan
Wandering,https://atcoder.jp/contests/abc182/tasks/abc182_d,nan
Akari,https://atcoder.jp/contests/abc182/tasks/abc182_e,nan
Valid payments,https://atcoder.jp/contests/abc182/tasks/abc182_f,nan
ReLU,https://atcoder.jp/contests/abc183/tasks/abc183_a,nan
Billiards,https://atcoder.jp/contests/abc183/tasks/abc183_b,nan
Travel,https://atcoder.jp/contests/abc183/tasks/abc183_c,nan
Water Heater,https://atcoder.jp/contests/abc183/tasks/abc183_d,nan
Queen on Grid,https://atcoder.jp/contests/abc183/tasks/abc183_e,nan
Confluence,https://atcoder.jp/contests/abc183/tasks/abc183_f,nan
Determinant,https://atcoder.jp/contests/abc184/tasks/abc184_a,nan
Quizzes,https://atcoder.jp/contests/abc184/tasks/abc184_b,nan
Super Ryuma,https://atcoder.jp/contests/abc184/tasks/abc184_c,nan
increment of coins,https://atcoder.jp/contests/abc184/tasks/abc184_d,nan
Third Avenue,https://atcoder.jp/contests/abc184/tasks/abc184_e,nan
Programming Contest,https://atcoder.jp/contests/abc184/tasks/abc184_f,nan
ABC Preparation,https://atcoder.jp/contests/abc185/tasks/abc185_a,nan
Smartphone Addiction,https://atcoder.jp/contests/abc185/tasks/abc185_b,nan
Duodecim Ferra,https://atcoder.jp/contests/abc185/tasks/abc185_c,nan
Stamp,https://atcoder.jp/contests/abc185/tasks/abc185_d,nan
Sequence Matching,https://atcoder.jp/contests/abc185/tasks/abc185_e,nan
Range Xor Query,https://atcoder.jp/contests/abc185/tasks/abc185_f,nan
Brick,https://atcoder.jp/contests/abc186/tasks/abc186_a,nan
Blocks on Grid,https://atcoder.jp/contests/abc186/tasks/abc186_b,nan
Unlucky 7,https://atcoder.jp/contests/abc186/tasks/abc186_c,nan
Sum of difference,https://atcoder.jp/contests/abc186/tasks/abc186_d,nan
Throne,https://atcoder.jp/contests/abc186/tasks/abc186_e,nan
Rook on Grid,https://atcoder.jp/contests/abc186/tasks/abc186_f,nan
Large Digits,https://atcoder.jp/contests/abc187/tasks/abc187_a,nan
Gentle Pairs,https://atcoder.jp/contests/abc187/tasks/abc187_b,nan
1 SAT,https://atcoder.jp/contests/abc187/tasks/abc187_c,nan
Choose Me,https://atcoder.jp/contests/abc187/tasks/abc187_d,nan
Through Path,https://atcoder.jp/contests/abc187/tasks/abc187_e,nan
Close Group,https://atcoder.jp/contests/abc187/tasks/abc187_f,nan
Three Point Shot,https://atcoder.jp/contests/abc188/tasks/abc188_a,nan
Orthogonality,https://atcoder.jp/contests/abc188/tasks/abc188_b,nan
ABC Tournament,https://atcoder.jp/contests/abc188/tasks/abc188_c,nan
Snuke Prime,https://atcoder.jp/contests/abc188/tasks/abc188_d,nan
Peddler,https://atcoder.jp/contests/abc188/tasks/abc188_e,nan
+1 1x2,https://atcoder.jp/contests/abc188/tasks/abc188_f,nan
Slot,https://atcoder.jp/contests/abc189/tasks/abc189_a,nan
Alcoholic,https://atcoder.jp/contests/abc189/tasks/abc189_b,nan
Mandarin Orange,https://atcoder.jp/contests/abc189/tasks/abc189_c,nan
Logical Expression,https://atcoder.jp/contests/abc189/tasks/abc189_d,nan
Rotate and Flip,https://atcoder.jp/contests/abc189/tasks/abc189_e,nan
Sugoroku2,https://atcoder.jp/contests/abc189/tasks/abc189_f,nan
Very Very Primitive Game,https://atcoder.jp/contests/abc190/tasks/abc190_a,nan
Magic 3,https://atcoder.jp/contests/abc190/tasks/abc190_b,nan
Bowls and Dishes,https://atcoder.jp/contests/abc190/tasks/abc190_c,nan
Staircase Sequences,https://atcoder.jp/contests/abc190/tasks/abc190_d,nan
Magical Ornament,https://atcoder.jp/contests/abc190/tasks/abc190_e,nan
Shift and Inversions,https://atcoder.jp/contests/abc190/tasks/abc190_f,nan
Vanishing Pitch,https://atcoder.jp/contests/abc191/tasks/abc191_a,nan
Remove It,https://atcoder.jp/contests/abc191/tasks/abc191_b,nan
Digital Graffiti,https://atcoder.jp/contests/abc191/tasks/abc191_c,nan
Circle Lattice Points,https://atcoder.jp/contests/abc191/tasks/abc191_d,nan
Come Back Quickly,https://atcoder.jp/contests/abc191/tasks/abc191_e,nan
GCD or MIN,https://atcoder.jp/contests/abc191/tasks/abc191_f,nan
Star,https://atcoder.jp/contests/abc192/tasks/abc192_a,nan
uNrEaDaBlE sTrInG,https://atcoder.jp/contests/abc192/tasks/abc192_b,nan
Kaprekar Number,https://atcoder.jp/contests/abc192/tasks/abc192_c,nan
Base n,https://atcoder.jp/contests/abc192/tasks/abc192_d,nan
Train,https://atcoder.jp/contests/abc192/tasks/abc192_e,nan
Potion,https://atcoder.jp/contests/abc192/tasks/abc192_f,nan
Discount,https://atcoder.jp/contests/abc193/tasks/abc193_a,nan
Play Snuke,https://atcoder.jp/contests/abc193/tasks/abc193_b,nan
Unexpressed,https://atcoder.jp/contests/abc193/tasks/abc193_c,nan
Poker,https://atcoder.jp/contests/abc193/tasks/abc193_d,nan
Oversleeping,https://atcoder.jp/contests/abc193/tasks/abc193_e,nan
Zebraness,https://atcoder.jp/contests/abc193/tasks/abc193_f,nan
I Scream,https://atcoder.jp/contests/abc194/tasks/abc194_a,nan
Job Assignment,https://atcoder.jp/contests/abc194/tasks/abc194_b,nan
Squared Error,https://atcoder.jp/contests/abc194/tasks/abc194_c,nan
Journey,https://atcoder.jp/contests/abc194/tasks/abc194_d,nan
Mex Min,https://atcoder.jp/contests/abc194/tasks/abc194_e,nan
Digits Paradise in Hexadecimal,https://atcoder.jp/contests/abc194/tasks/abc194_f,nan
Health M Death,https://atcoder.jp/contests/abc195/tasks/abc195_a,nan
Many Oranges,https://atcoder.jp/contests/abc195/tasks/abc195_b,nan
Comma,https://atcoder.jp/contests/abc195/tasks/abc195_c,nan
Shipping Center,https://atcoder.jp/contests/abc195/tasks/abc195_d,nan
Lucky 7 Battle,https://atcoder.jp/contests/abc195/tasks/abc195_e,nan
Coprime Present,https://atcoder.jp/contests/abc195/tasks/abc195_f,nan
Difference Max,https://atcoder.jp/contests/abc196/tasks/abc196_a,nan
Round Down,https://atcoder.jp/contests/abc196/tasks/abc196_b,nan
Doubled,https://atcoder.jp/contests/abc196/tasks/abc196_c,nan
Hanjo,https://atcoder.jp/contests/abc196/tasks/abc196_d,nan
Filters,https://atcoder.jp/contests/abc196/tasks/abc196_e,nan
Substring 2,https://atcoder.jp/contests/abc196/tasks/abc196_f,nan
Rotate,https://atcoder.jp/contests/abc197/tasks/abc197_a,nan
Visibility,https://atcoder.jp/contests/abc197/tasks/abc197_b,nan
ORXOR,https://atcoder.jp/contests/abc197/tasks/abc197_c,nan
Opposite,https://atcoder.jp/contests/abc197/tasks/abc197_d,nan
Traveler,https://atcoder.jp/contests/abc197/tasks/abc197_e,nan
Construct a Palindrome,https://atcoder.jp/contests/abc197/tasks/abc197_f,nan
Div,https://atcoder.jp/contests/abc198/tasks/abc198_a,nan
Palindrome with leading zeros,https://atcoder.jp/contests/abc198/tasks/abc198_b,nan
Compass Walking,https://atcoder.jp/contests/abc198/tasks/abc198_c,nan
Send More Money,https://atcoder.jp/contests/abc198/tasks/abc198_d,nan
Unique Color,https://atcoder.jp/contests/abc198/tasks/abc198_e,nan
Cube,https://atcoder.jp/contests/abc198/tasks/abc198_f,nan
Square Inequality,https://atcoder.jp/contests/abc199/tasks/abc199_a,nan
Intersection,https://atcoder.jp/contests/abc199/tasks/abc199_b,nan
IPFL,https://atcoder.jp/contests/abc199/tasks/abc199_c,nan
RGB Coloring 2,https://atcoder.jp/contests/abc199/tasks/abc199_d,nan
Permutation,https://atcoder.jp/contests/abc199/tasks/abc199_e,nan
Graph Smoothing,https://atcoder.jp/contests/abc199/tasks/abc199_f,nan
Century,https://atcoder.jp/contests/abc200/tasks/abc200_a,nan
200th ABC 200,https://atcoder.jp/contests/abc200/tasks/abc200_b,nan
Ringo's Favorite Numbers 2,https://atcoder.jp/contests/abc200/tasks/abc200_c,nan
Happy Birthday! 2,https://atcoder.jp/contests/abc200/tasks/abc200_d,nan
Patisserie ABC 2,https://atcoder.jp/contests/abc200/tasks/abc200_e,nan
Minflip Summation,https://atcoder.jp/contests/abc200/tasks/abc200_f,nan
Tiny Arithmetic Sequence,https://atcoder.jp/contests/abc201/tasks/abc201_a,nan
Do you know the second highest mountain?,https://atcoder.jp/contests/abc201/tasks/abc201_b,nan
Secret Number,https://atcoder.jp/contests/abc201/tasks/abc201_c,nan
Game in Momotetsu World,https://atcoder.jp/contests/abc201/tasks/abc201_d,nan
Xor Distances,https://atcoder.jp/contests/abc201/tasks/abc201_e,nan
Insertion Sort,https://atcoder.jp/contests/abc201/tasks/abc201_f,nan
Three Dice,https://atcoder.jp/contests/abc202/tasks/abc202_a,nan
180°,https://atcoder.jp/contests/abc202/tasks/abc202_b,nan
Made Up,https://atcoder.jp/contests/abc202/tasks/abc202_c,nan
aab aba baa,https://atcoder.jp/contests/abc202/tasks/abc202_d,nan
Count Descendants,https://atcoder.jp/contests/abc202/tasks/abc202_e,nan
Integer Convex Hull,https://atcoder.jp/contests/abc202/tasks/abc202_f,nan
Chinchirorin,https://atcoder.jp/contests/abc203/tasks/abc203_a,nan
AtCoder Condominium,https://atcoder.jp/contests/abc203/tasks/abc203_b,nan
Friends and Travel costs,https://atcoder.jp/contests/abc203/tasks/abc203_c,nan
Pond,https://atcoder.jp/contests/abc203/tasks/abc203_d,nan
White Pawn,https://atcoder.jp/contests/abc203/tasks/abc203_e,nan
Weed,https://atcoder.jp/contests/abc203/tasks/abc203_f,nan
Rock paper scissors,https://atcoder.jp/contests/abc204/tasks/abc204_a,nan
Nuts,https://atcoder.jp/contests/abc204/tasks/abc204_b,nan
Tour,https://atcoder.jp/contests/abc204/tasks/abc204_c,nan
Cooking,https://atcoder.jp/contests/abc204/tasks/abc204_d,nan
Rush Hour 2,https://atcoder.jp/contests/abc204/tasks/abc204_e,nan
Hanjo 2,https://atcoder.jp/contests/abc204/tasks/abc204_f,nan
kcal,https://atcoder.jp/contests/abc205/tasks/abc205_a,nan
Permutation Check,https://atcoder.jp/contests/abc205/tasks/abc205_b,nan
POW,https://atcoder.jp/contests/abc205/tasks/abc205_c,nan
Kth Excluded,https://atcoder.jp/contests/abc205/tasks/abc205_d,nan
White and Black Balls,https://atcoder.jp/contests/abc205/tasks/abc205_e,nan
Grid and Tokens,https://atcoder.jp/contests/abc205/tasks/abc205_f,nan
Maxi Buying,https://atcoder.jp/contests/abc206/tasks/abc206_a,nan
Savings,https://atcoder.jp/contests/abc206/tasks/abc206_b,nan
Swappable,https://atcoder.jp/contests/abc206/tasks/abc206_c,nan
KAIBUNsyo,https://atcoder.jp/contests/abc206/tasks/abc206_d,nan
Divide Both,https://atcoder.jp/contests/abc206/tasks/abc206_e,nan
Interval Game 2,https://atcoder.jp/contests/abc206/tasks/abc206_f,nan
Repression,https://atcoder.jp/contests/abc207/tasks/abc207_a,nan
Hydrate,https://atcoder.jp/contests/abc207/tasks/abc207_b,nan
Many Segments,https://atcoder.jp/contests/abc207/tasks/abc207_c,nan
Congruence Points,https://atcoder.jp/contests/abc207/tasks/abc207_d,nan
Mod i,https://atcoder.jp/contests/abc207/tasks/abc207_e,nan
Tree Patrolling,https://atcoder.jp/contests/abc207/tasks/abc207_f,nan
Rolling Dice,https://atcoder.jp/contests/abc208/tasks/abc208_a,nan
Factorial Yen Coin,https://atcoder.jp/contests/abc208/tasks/abc208_b,nan
Fair Candy Distribution,https://atcoder.jp/contests/abc208/tasks/abc208_c,nan
Shortest Path Queries 2,https://atcoder.jp/contests/abc208/tasks/abc208_d,nan
Digit Products,https://atcoder.jp/contests/abc208/tasks/abc208_e,nan
Cumulative Sum,https://atcoder.jp/contests/abc208/tasks/abc208_f,nan
Counting,https://atcoder.jp/contests/abc209/tasks/abc209_a,nan
Can you buy them all?,https://atcoder.jp/contests/abc209/tasks/abc209_b,nan
Not Equal,https://atcoder.jp/contests/abc209/tasks/abc209_c,nan
Collision,https://atcoder.jp/contests/abc209/tasks/abc209_d,nan
Shiritori,https://atcoder.jp/contests/abc209/tasks/abc209_e,nan
Deforestation,https://atcoder.jp/contests/abc209/tasks/abc209_f,nan
Cabbages,https://atcoder.jp/contests/abc210/tasks/abc210_a,nan
Bouzu Mekuri,https://atcoder.jp/contests/abc210/tasks/abc210_b,nan
Colorful Candies,https://atcoder.jp/contests/abc210/tasks/abc210_c,nan
National Railway,https://atcoder.jp/contests/abc210/tasks/abc210_d,nan
Ring MST,https://atcoder.jp/contests/abc210/tasks/abc210_e,nan
Coprime Solitaire,https://atcoder.jp/contests/abc210/tasks/abc210_f,nan
Blood Pressure,https://atcoder.jp/contests/abc211/tasks/abc211_a,nan
Cycle Hit,https://atcoder.jp/contests/abc211/tasks/abc211_b,nan
chokudai,https://atcoder.jp/contests/abc211/tasks/abc211_c,nan
Number of Shortest paths,https://atcoder.jp/contests/abc211/tasks/abc211_d,nan
Red Polyomino,https://atcoder.jp/contests/abc211/tasks/abc211_e,nan
Rectilinear Polygons,https://atcoder.jp/contests/abc211/tasks/abc211_f,nan
Alloy,https://atcoder.jp/contests/abc212/tasks/abc212_a,nan
Weak Password,https://atcoder.jp/contests/abc212/tasks/abc212_b,nan
Min Difference,https://atcoder.jp/contests/abc212/tasks/abc212_c,nan
Querying Multiset,https://atcoder.jp/contests/abc212/tasks/abc212_d,nan
Safety Journey,https://atcoder.jp/contests/abc212/tasks/abc212_e,nan
Greedy Takahashi,https://atcoder.jp/contests/abc212/tasks/abc212_f,nan
Power Pair,https://atcoder.jp/contests/abc212/tasks/abc212_g,nan
Nim Counting,https://atcoder.jp/contests/abc212/tasks/abc212_h,nan
Bitwise Exclusive Or,https://atcoder.jp/contests/abc213/tasks/abc213_a,nan
Booby Prize,https://atcoder.jp/contests/abc213/tasks/abc213_b,nan
Reorder Cards,https://atcoder.jp/contests/abc213/tasks/abc213_c,nan
Takahashi Tour,https://atcoder.jp/contests/abc213/tasks/abc213_d,nan
Stronger Takahashi,https://atcoder.jp/contests/abc213/tasks/abc213_e,nan
Common Prefixes,https://atcoder.jp/contests/abc213/tasks/abc213_f,nan
Connectivity 2,https://atcoder.jp/contests/abc213/tasks/abc213_g,nan
Stroll,https://atcoder.jp/contests/abc213/tasks/abc213_h,nan
New Generation ABC,https://atcoder.jp/contests/abc214/tasks/abc214_a,nan
How many?,https://atcoder.jp/contests/abc214/tasks/abc214_b,nan
Distribution,https://atcoder.jp/contests/abc214/tasks/abc214_c,nan
Sum of Maximum Weights,https://atcoder.jp/contests/abc214/tasks/abc214_d,nan
Packing Under Range Regulations,https://atcoder.jp/contests/abc214/tasks/abc214_e,nan
Substrings,https://atcoder.jp/contests/abc214/tasks/abc214_f,nan
Three Permutations,https://atcoder.jp/contests/abc214/tasks/abc214_g,nan
Collecting,https://atcoder.jp/contests/abc214/tasks/abc214_h,nan
Your First Judge,https://atcoder.jp/contests/abc215/tasks/abc215_a,nan
log2(N),https://atcoder.jp/contests/abc215/tasks/abc215_b,nan
One More aab aba baa,https://atcoder.jp/contests/abc215/tasks/abc215_c,nan
Coprime 2,https://atcoder.jp/contests/abc215/tasks/abc215_d,nan
Chain Contestant,https://atcoder.jp/contests/abc215/tasks/abc215_e,nan
Dist Max 2,https://atcoder.jp/contests/abc215/tasks/abc215_f,nan
Colorful Candies 2,https://atcoder.jp/contests/abc215/tasks/abc215_g,nan
Cabbage Master,https://atcoder.jp/contests/abc215/tasks/abc215_h,nan
Signed Difficulty,https://atcoder.jp/contests/abc216/tasks/abc216_a,nan
Same Name,https://atcoder.jp/contests/abc216/tasks/abc216_b,nan
Many Balls,https://atcoder.jp/contests/abc216/tasks/abc216_c,nan
Pair of Balls,https://atcoder.jp/contests/abc216/tasks/abc216_d,nan
Amusement Park,https://atcoder.jp/contests/abc216/tasks/abc216_e,nan
Max Sum Counting,https://atcoder.jp/contests/abc216/tasks/abc216_f,nan
01Sequence,https://atcoder.jp/contests/abc216/tasks/abc216_g,nan
Random Robots,https://atcoder.jp/contests/abc216/tasks/abc216_h,nan
Lexicographic Order,https://atcoder.jp/contests/abc217/tasks/abc217_a,nan
AtCoder Quiz,https://atcoder.jp/contests/abc217/tasks/abc217_b,nan
Inverse of Permutation,https://atcoder.jp/contests/abc217/tasks/abc217_c,nan
Cutting Woods,https://atcoder.jp/contests/abc217/tasks/abc217_d,nan
Sorting Queries,https://atcoder.jp/contests/abc217/tasks/abc217_e,nan
Make Pair,https://atcoder.jp/contests/abc217/tasks/abc217_f,nan
Groups,https://atcoder.jp/contests/abc217/tasks/abc217_g,nan
Snuketoon,https://atcoder.jp/contests/abc217/tasks/abc217_h,nan
Weather Forecast,https://atcoder.jp/contests/abc218/tasks/abc218_a,nan
qwerty,https://atcoder.jp/contests/abc218/tasks/abc218_b,nan
Shapes,https://atcoder.jp/contests/abc218/tasks/abc218_c,nan
Rectangles,https://atcoder.jp/contests/abc218/tasks/abc218_d,nan
Destruction,https://atcoder.jp/contests/abc218/tasks/abc218_e,nan
Blocked Roads,https://atcoder.jp/contests/abc218/tasks/abc218_f,nan
Game on Tree 2,https://atcoder.jp/contests/abc218/tasks/abc218_g,nan
Red and Blue Lamps,https://atcoder.jp/contests/abc218/tasks/abc218_h,nan
AtCoder Quiz 2,https://atcoder.jp/contests/abc219/tasks/abc219_a,nan
Maritozzo,https://atcoder.jp/contests/abc219/tasks/abc219_b,nan
Neo lexicographic Ordering,https://atcoder.jp/contests/abc219/tasks/abc219_c,nan
Strange Lunchbox,https://atcoder.jp/contests/abc219/tasks/abc219_d,nan
Moat,https://atcoder.jp/contests/abc219/tasks/abc219_e,nan
Cleaning Robot,https://atcoder.jp/contests/abc219/tasks/abc219_f,nan
Propagation,https://atcoder.jp/contests/abc219/tasks/abc219_g,nan
Candles,https://atcoder.jp/contests/abc219/tasks/abc219_h,nan
Find Multiple,https://atcoder.jp/contests/abc220/tasks/abc220_a,nan
Base K,https://atcoder.jp/contests/abc220/tasks/abc220_b,nan
Long Sequence,https://atcoder.jp/contests/abc220/tasks/abc220_c,nan
FG operation,https://atcoder.jp/contests/abc220/tasks/abc220_d,nan
Distance on Large Perfect Binary Tree,https://atcoder.jp/contests/abc220/tasks/abc220_e,nan
Distance Sums 2,https://atcoder.jp/contests/abc220/tasks/abc220_f,nan
Isosceles Trapezium,https://atcoder.jp/contests/abc220/tasks/abc220_g,nan
Security Camera,https://atcoder.jp/contests/abc220/tasks/abc220_h,nan
Seismic magnitude scales,https://atcoder.jp/contests/abc221/tasks/abc221_a,nan
typo,https://atcoder.jp/contests/abc221/tasks/abc221_b,nan
Select Mul,https://atcoder.jp/contests/abc221/tasks/abc221_c,nan
Online games,https://atcoder.jp/contests/abc221/tasks/abc221_d,nan
LEQ,https://atcoder.jp/contests/abc221/tasks/abc221_e,nan
Diameter set,https://atcoder.jp/contests/abc221/tasks/abc221_f,nan
Jumping sequence,https://atcoder.jp/contests/abc221/tasks/abc221_g,nan
Count Multiset,https://atcoder.jp/contests/abc221/tasks/abc221_h,nan
Four Digits,https://atcoder.jp/contests/abc222/tasks/abc222_a,nan
Failing Grade,https://atcoder.jp/contests/abc222/tasks/abc222_b,nan
Swiss System Tournament,https://atcoder.jp/contests/abc222/tasks/abc222_c,nan
Between Two Arrays,https://atcoder.jp/contests/abc222/tasks/abc222_d,nan
Red and Blue Tree,https://atcoder.jp/contests/abc222/tasks/abc222_e,nan
Expensive Expense,https://atcoder.jp/contests/abc222/tasks/abc222_f,nan
222,https://atcoder.jp/contests/abc222/tasks/abc222_g,nan
Beautiful Binary Tree,https://atcoder.jp/contests/abc222/tasks/abc222_h,nan
Exact Price,https://atcoder.jp/contests/abc223/tasks/abc223_a,nan
String Shifting,https://atcoder.jp/contests/abc223/tasks/abc223_b,nan
Doukasen,https://atcoder.jp/contests/abc223/tasks/abc223_c,nan
Restricted Permutation,https://atcoder.jp/contests/abc223/tasks/abc223_d,nan
Placing Rectangles,https://atcoder.jp/contests/abc223/tasks/abc223_e,nan
Parenthesis Checking,https://atcoder.jp/contests/abc223/tasks/abc223_f,nan
Vertex Deletion,https://atcoder.jp/contests/abc223/tasks/abc223_g,nan
Xor Query,https://atcoder.jp/contests/abc223/tasks/abc223_h,nan
Tires,https://atcoder.jp/contests/abc224/tasks/abc224_a,nan
Mongeness,https://atcoder.jp/contests/abc224/tasks/abc224_b,nan
Triangle?,https://atcoder.jp/contests/abc224/tasks/abc224_c,nan
8 Puzzle on Graph,https://atcoder.jp/contests/abc224/tasks/abc224_d,nan
Integers on Grid,https://atcoder.jp/contests/abc224/tasks/abc224_e,nan
Problem where +s Separate Digits,https://atcoder.jp/contests/abc224/tasks/abc224_f,nan
Roll or Increment,https://atcoder.jp/contests/abc224/tasks/abc224_g,nan
Security Camera 2,https://atcoder.jp/contests/abc224/tasks/abc224_h,nan
Distinct Strings,https://atcoder.jp/contests/abc225/tasks/abc225_a,nan
Star or Not,https://atcoder.jp/contests/abc225/tasks/abc225_b,nan
Calendar Validator,https://atcoder.jp/contests/abc225/tasks/abc225_c,nan
Play Train,https://atcoder.jp/contests/abc225/tasks/abc225_d,nan
7,https://atcoder.jp/contests/abc225/tasks/abc225_e,nan
String Cards,https://atcoder.jp/contests/abc225/tasks/abc225_f,nan
X,https://atcoder.jp/contests/abc225/tasks/abc225_g,nan
Social Distance 2,https://atcoder.jp/contests/abc225/tasks/abc225_h,nan
Round decimals,https://atcoder.jp/contests/abc226/tasks/abc226_a,nan
Counting Arrays,https://atcoder.jp/contests/abc226/tasks/abc226_b,nan
Martial artist,https://atcoder.jp/contests/abc226/tasks/abc226_c,nan
Teleportation,https://atcoder.jp/contests/abc226/tasks/abc226_d,nan
Just one,https://atcoder.jp/contests/abc226/tasks/abc226_e,nan
Score of Permutations,https://atcoder.jp/contests/abc226/tasks/abc226_f,nan
The baggage,https://atcoder.jp/contests/abc226/tasks/abc226_g,nan
Random Kth Max,https://atcoder.jp/contests/abc226/tasks/abc226_h,nan
Last Card,https://atcoder.jp/contests/abc227/tasks/abc227_a,nan
KEYENCE building,https://atcoder.jp/contests/abc227/tasks/abc227_b,nan
ABC conjecture,https://atcoder.jp/contests/abc227/tasks/abc227_c,nan
Project Planning,https://atcoder.jp/contests/abc227/tasks/abc227_d,nan
Swap,https://atcoder.jp/contests/abc227/tasks/abc227_e,nan
Treasure Hunting,https://atcoder.jp/contests/abc227/tasks/abc227_f,nan
Divisors of Binomial Coefficient,https://atcoder.jp/contests/abc227/tasks/abc227_g,nan
Eat Them All,https://atcoder.jp/contests/abc227/tasks/abc227_h,nan
On and Off,https://atcoder.jp/contests/abc228/tasks/abc228_a,nan
Takahashi's Secret,https://atcoder.jp/contests/abc228/tasks/abc228_b,nan
Final Day,https://atcoder.jp/contests/abc228/tasks/abc228_c,nan
Linear Probing,https://atcoder.jp/contests/abc228/tasks/abc228_d,nan
Integer Sequence Fair,https://atcoder.jp/contests/abc228/tasks/abc228_e,nan
Stamp Game,https://atcoder.jp/contests/abc228/tasks/abc228_f,nan
Digits on Grid,https://atcoder.jp/contests/abc228/tasks/abc228_g,nan
Histogram,https://atcoder.jp/contests/abc228/tasks/abc228_h,nan
First Grid,https://atcoder.jp/contests/abc229/tasks/abc229_a,nan
Hard Calculation,https://atcoder.jp/contests/abc229/tasks/abc229_b,nan
Cheese,https://atcoder.jp/contests/abc229/tasks/abc229_c,nan
Longest X,https://atcoder.jp/contests/abc229/tasks/abc229_d,nan
Graph Destruction,https://atcoder.jp/contests/abc229/tasks/abc229_e,nan
Make Bipartite,https://atcoder.jp/contests/abc229/tasks/abc229_f,nan
Longest Y,https://atcoder.jp/contests/abc229/tasks/abc229_g,nan
Advance or Eat,https://atcoder.jp/contests/abc229/tasks/abc229_h,nan
AtCoder Quiz 3,https://atcoder.jp/contests/abc230/tasks/abc230_a,nan
Triple Metre,https://atcoder.jp/contests/abc230/tasks/abc230_b,nan
X drawing,https://atcoder.jp/contests/abc230/tasks/abc230_c,nan
Destroyer Takahashi,https://atcoder.jp/contests/abc230/tasks/abc230_d,nan
Fraction Floor Sum,https://atcoder.jp/contests/abc230/tasks/abc230_e,nan
Predilection,https://atcoder.jp/contests/abc230/tasks/abc230_f,nan
GCD Permutation,https://atcoder.jp/contests/abc230/tasks/abc230_g,nan
Bullion,https://atcoder.jp/contests/abc230/tasks/abc230_h,nan
Water Pressure,https://atcoder.jp/contests/abc231/tasks/abc231_a,nan
Election,https://atcoder.jp/contests/abc231/tasks/abc231_b,nan
Counting 2,https://atcoder.jp/contests/abc231/tasks/abc231_c,nan
Neighbors,https://atcoder.jp/contests/abc231/tasks/abc231_d,nan
Minimal payments,https://atcoder.jp/contests/abc231/tasks/abc231_e,nan
Jealous Two,https://atcoder.jp/contests/abc231/tasks/abc231_f,nan
Balls in Boxes,https://atcoder.jp/contests/abc231/tasks/abc231_g,nan
Minimum Coloring,https://atcoder.jp/contests/abc231/tasks/abc231_h,nan
QQ solver,https://atcoder.jp/contests/abc232/tasks/abc232_a,nan
Caesar Cipher,https://atcoder.jp/contests/abc232/tasks/abc232_b,nan
Graph Isomorphism,https://atcoder.jp/contests/abc232/tasks/abc232_c,nan
Weak Takahashi,https://atcoder.jp/contests/abc232/tasks/abc232_d,nan
Rook Path,https://atcoder.jp/contests/abc232/tasks/abc232_e,nan
Simple Operations on Sequence,https://atcoder.jp/contests/abc232/tasks/abc232_f,nan
Modulo Shortest Path,https://atcoder.jp/contests/abc232/tasks/abc232_g,nan
King's Tour,https://atcoder.jp/contests/abc232/tasks/abc232_h,nan
10yen Stamp,https://atcoder.jp/contests/abc233/tasks/abc233_a,nan
A Reverse,https://atcoder.jp/contests/abc233/tasks/abc233_b,nan
Product,https://atcoder.jp/contests/abc233/tasks/abc233_c,nan
Count Interval,https://atcoder.jp/contests/abc233/tasks/abc233_d,nan
Σ[k=0..10^100]floor(X／10^k),https://atcoder.jp/contests/abc233/tasks/abc233_e,nan
Swap and Sort,https://atcoder.jp/contests/abc233/tasks/abc233_f,nan
Strongest Takahashi,https://atcoder.jp/contests/abc233/tasks/abc233_g,nan
Manhattan Christmas Tree,https://atcoder.jp/contests/abc233/tasks/abc233_h,nan
Weird Function,https://atcoder.jp/contests/abc234/tasks/abc234_a,nan
Longest Segment,https://atcoder.jp/contests/abc234/tasks/abc234_b,nan
Happy New Year!,https://atcoder.jp/contests/abc234/tasks/abc234_c,nan
Prefix K th Max,https://atcoder.jp/contests/abc234/tasks/abc234_d,nan
Arithmetic Number,https://atcoder.jp/contests/abc234/tasks/abc234_e,nan
Reordering,https://atcoder.jp/contests/abc234/tasks/abc234_f,nan
Divide a Sequence,https://atcoder.jp/contests/abc234/tasks/abc234_g,nan
Enumerate Pairs,https://atcoder.jp/contests/abc234/tasks/abc234_h,nan
Rotate,https://atcoder.jp/contests/abc235/tasks/abc235_a,nan
Climbing Takahashi,https://atcoder.jp/contests/abc235/tasks/abc235_b,nan
The Kth Time Query,https://atcoder.jp/contests/abc235/tasks/abc235_c,nan
Multiply and Rotate,https://atcoder.jp/contests/abc235/tasks/abc235_d,nan
MST + 1,https://atcoder.jp/contests/abc235/tasks/abc235_e,nan
Variety of Digits,https://atcoder.jp/contests/abc235/tasks/abc235_f,nan
Gardens,https://atcoder.jp/contests/abc235/tasks/abc235_g,nan
Painting Weighted Graph,https://atcoder.jp/contests/abc235/tasks/abc235_h,nan
chukodai,https://atcoder.jp/contests/abc236/tasks/abc236_a,nan
Who is missing?,https://atcoder.jp/contests/abc236/tasks/abc236_b,nan
Route Map,https://atcoder.jp/contests/abc236/tasks/abc236_c,nan
Dance,https://atcoder.jp/contests/abc236/tasks/abc236_d,nan
Average and Median,https://atcoder.jp/contests/abc236/tasks/abc236_e,nan
Spices,https://atcoder.jp/contests/abc236/tasks/abc236_f,nan
Good Vertices,https://atcoder.jp/contests/abc236/tasks/abc236_g,nan
Distinct Multiples,https://atcoder.jp/contests/abc236/tasks/abc236_h,nan
Not Overflow,https://atcoder.jp/contests/abc237/tasks/abc237_a,nan
Matrix Transposition,https://atcoder.jp/contests/abc237/tasks/abc237_b,nan
kasaka,https://atcoder.jp/contests/abc237/tasks/abc237_c,nan
LR insertion,https://atcoder.jp/contests/abc237/tasks/abc237_d,nan
Skiing,https://atcoder.jp/contests/abc237/tasks/abc237_e,nan
|LIS| = 3,https://atcoder.jp/contests/abc237/tasks/abc237_f,nan
Range Sort Query,https://atcoder.jp/contests/abc237/tasks/abc237_g,nan
Hakata,https://atcoder.jp/contests/abc237/tasks/abc237_h,nan
Exponential or Quadratic,https://atcoder.jp/contests/abc238/tasks/abc238_a,nan
Pizza,https://atcoder.jp/contests/abc238/tasks/abc238_b,nan
digitnum,https://atcoder.jp/contests/abc238/tasks/abc238_c,nan
AND and SUM,https://atcoder.jp/contests/abc238/tasks/abc238_d,nan
Range Sums,https://atcoder.jp/contests/abc238/tasks/abc238_e,nan
Two Exams,https://atcoder.jp/contests/abc238/tasks/abc238_f,nan
Cubic?,https://atcoder.jp/contests/abc238/tasks/abc238_g,nan
Removing People,https://atcoder.jp/contests/abc238/tasks/abc238_h,nan
Horizon,https://atcoder.jp/contests/abc239/tasks/abc239_a,nan
Integer Division,https://atcoder.jp/contests/abc239/tasks/abc239_b,nan
Knight Fork,https://atcoder.jp/contests/abc239/tasks/abc239_c,nan
Prime Sum Game,https://atcoder.jp/contests/abc239/tasks/abc239_d,nan
Subtree K th Max,https://atcoder.jp/contests/abc239/tasks/abc239_e,nan
Construct Highway,https://atcoder.jp/contests/abc239/tasks/abc239_f,nan
Builder Takahashi,https://atcoder.jp/contests/abc239/tasks/abc239_g,nan
Dice Product 2,https://atcoder.jp/contests/abc239/tasks/abc239_h,nan
Edge Checker,https://atcoder.jp/contests/abc240/tasks/abc240_a,nan
Count Distinct Integers,https://atcoder.jp/contests/abc240/tasks/abc240_b,nan
Jumping Takahashi,https://atcoder.jp/contests/abc240/tasks/abc240_c,nan
Strange Balls,https://atcoder.jp/contests/abc240/tasks/abc240_d,nan
Ranges on Tree,https://atcoder.jp/contests/abc240/tasks/abc240_e,nan
Sum Sum Max,https://atcoder.jp/contests/abc240/tasks/abc240_f,nan
Teleporting Takahashi,https://atcoder.jp/contests/abc240/tasks/abc240_g,nan
Sequence of Substrings,https://atcoder.jp/contests/abc240/tasks/abc240_h,nan
Digit Machine,https://atcoder.jp/contests/abc241/tasks/abc241_a,nan
Pasta,https://atcoder.jp/contests/abc241/tasks/abc241_b,nan
Connect 6,https://atcoder.jp/contests/abc241/tasks/abc241_c,nan
Sequence Query,https://atcoder.jp/contests/abc241/tasks/abc241_d,nan
Putting Candies,https://atcoder.jp/contests/abc241/tasks/abc241_e,nan
Skate,https://atcoder.jp/contests/abc241/tasks/abc241_f,nan
Round Robin,https://atcoder.jp/contests/abc241/tasks/abc241_g,nan
Card Deck Score,https://atcoder.jp/contests/abc241/tasks/abc241_h,nan
T shirt,https://atcoder.jp/contests/abc242/tasks/abc242_a,nan
Minimize Ordering,https://atcoder.jp/contests/abc242/tasks/abc242_b,nan
1111gal password,https://atcoder.jp/contests/abc242/tasks/abc242_c,nan
ABC Transform,https://atcoder.jp/contests/abc242/tasks/abc242_d,nan
(∀x∀),https://atcoder.jp/contests/abc242/tasks/abc242_e,nan
Black and White Rooks,https://atcoder.jp/contests/abc242/tasks/abc242_f,nan
Range Pairing Query,https://atcoder.jp/contests/abc242/tasks/abc242_g,nan
Random Painting,https://atcoder.jp/contests/abc242/tasks/abc242_h,nan
Shampoo,https://atcoder.jp/contests/abc243/tasks/abc243_a,nan
Hit and Blow,https://atcoder.jp/contests/abc243/tasks/abc243_b,nan
Collision 2,https://atcoder.jp/contests/abc243/tasks/abc243_c,nan
Moves on Binary Tree,https://atcoder.jp/contests/abc243/tasks/abc243_d,nan
Edge Deletion,https://atcoder.jp/contests/abc243/tasks/abc243_e,nan
Lottery,https://atcoder.jp/contests/abc243/tasks/abc243_f,nan
Sqrt,https://atcoder.jp/contests/abc243/tasks/abc243_g,nan
Builder Takahashi (Enhanced version),https://atcoder.jp/contests/abc243/tasks/abc243_h,nan
Last Letter,https://atcoder.jp/contests/abc244/tasks/abc244_a,nan
Go Straight and Turn Right,https://atcoder.jp/contests/abc244/tasks/abc244_b,nan
Yamanote Line Game,https://atcoder.jp/contests/abc244/tasks/abc244_c,nan
Swap Hats,https://atcoder.jp/contests/abc244/tasks/abc244_d,nan
King Bombee,https://atcoder.jp/contests/abc244/tasks/abc244_e,nan
Shortest Good Path,https://atcoder.jp/contests/abc244/tasks/abc244_f,nan
Construct Good Path,https://atcoder.jp/contests/abc244/tasks/abc244_g,nan
Linear Maximization,https://atcoder.jp/contests/abc244/tasks/abc244_h,nan
Good morning,https://atcoder.jp/contests/abc245/tasks/abc245_a,nan
Mex,https://atcoder.jp/contests/abc245/tasks/abc245_b,nan
Choose Elements,https://atcoder.jp/contests/abc245/tasks/abc245_c,nan
Polynomial division,https://atcoder.jp/contests/abc245/tasks/abc245_d,nan
Wrapping Chocolate,https://atcoder.jp/contests/abc245/tasks/abc245_e,nan
Endless Walk,https://atcoder.jp/contests/abc245/tasks/abc245_f,nan
Foreign Friends,https://atcoder.jp/contests/abc245/tasks/abc245_g,nan
Product Modulo 2,https://atcoder.jp/contests/abc245/tasks/abc245_h,nan
Four Points,https://atcoder.jp/contests/abc246/tasks/abc246_a,nan
Get Closer,https://atcoder.jp/contests/abc246/tasks/abc246_b,nan
Coupon,https://atcoder.jp/contests/abc246/tasks/abc246_c,nan
2 variable Function,https://atcoder.jp/contests/abc246/tasks/abc246_d,nan
Bishop 2,https://atcoder.jp/contests/abc246/tasks/abc246_e,nan
typewriter,https://atcoder.jp/contests/abc246/tasks/abc246_f,nan
Game on Tree 3,https://atcoder.jp/contests/abc246/tasks/abc246_g,nan
01? Queries,https://atcoder.jp/contests/abc246/tasks/abc246_h,nan
Move Right,https://atcoder.jp/contests/abc247/tasks/abc247_a,nan
Unique Nicknames,https://atcoder.jp/contests/abc247/tasks/abc247_b,nan
1 2 1 3 1 2 1,https://atcoder.jp/contests/abc247/tasks/abc247_c,nan
Cylinder,https://atcoder.jp/contests/abc247/tasks/abc247_d,nan
Max Min,https://atcoder.jp/contests/abc247/tasks/abc247_e,nan
Cards,https://atcoder.jp/contests/abc247/tasks/abc247_f,nan
Dream Team,https://atcoder.jp/contests/abc247/tasks/abc247_g,nan
Rearranging Problem,https://atcoder.jp/contests/abc247/tasks/abc247_h,nan
Lacked Number,https://atcoder.jp/contests/abc248/tasks/abc248_a,nan
Slimes,https://atcoder.jp/contests/abc248/tasks/abc248_b,nan
Dice Sum,https://atcoder.jp/contests/abc248/tasks/abc248_c,nan
Range Count Query,https://atcoder.jp/contests/abc248/tasks/abc248_d,nan
K colinear Line,https://atcoder.jp/contests/abc248/tasks/abc248_e,nan
Keep Connect,https://atcoder.jp/contests/abc248/tasks/abc248_f,nan
GCD cost on the tree,https://atcoder.jp/contests/abc248/tasks/abc248_g,nan
Beautiful Subsequences,https://atcoder.jp/contests/abc248/tasks/abc248_h,nan
Jogging,https://atcoder.jp/contests/abc249/tasks/abc249_a,nan
Perfect String,https://atcoder.jp/contests/abc249/tasks/abc249_b,nan
Just K,https://atcoder.jp/contests/abc249/tasks/abc249_c,nan
Index Trio,https://atcoder.jp/contests/abc249/tasks/abc249_d,nan
RLE,https://atcoder.jp/contests/abc249/tasks/abc249_e,nan
Ignore Operations,https://atcoder.jp/contests/abc249/tasks/abc249_f,nan
Xor Cards,https://atcoder.jp/contests/abc249/tasks/abc249_g,nan
Dye Color,https://atcoder.jp/contests/abc249/tasks/abc249_h,nan
Adjacent Squares,https://atcoder.jp/contests/abc250/tasks/abc250_a,nan
Enlarged Checker Board,https://atcoder.jp/contests/abc250/tasks/abc250_b,nan
Adjacent Swaps,https://atcoder.jp/contests/abc250/tasks/abc250_c,nan
250 like Number,https://atcoder.jp/contests/abc250/tasks/abc250_d,nan
Prefix Equality,https://atcoder.jp/contests/abc250/tasks/abc250_e,nan
One Fourth,https://atcoder.jp/contests/abc250/tasks/abc250_f,nan
Stonks,https://atcoder.jp/contests/abc250/tasks/abc250_g,nan
Trespassing Takahashi,https://atcoder.jp/contests/abc250/tasks/abc250_h,nan
Six Characters,https://atcoder.jp/contests/abc251/tasks/abc251_a,nan
At Most 3 (Judge ver.),https://atcoder.jp/contests/abc251/tasks/abc251_b,nan
Poem Online Judge,https://atcoder.jp/contests/abc251/tasks/abc251_c,nan
At Most 3 (Contestant ver.),https://atcoder.jp/contests/abc251/tasks/abc251_d,nan
Tahakashi and Animals,https://atcoder.jp/contests/abc251/tasks/abc251_e,nan
Two Spanning Trees,https://atcoder.jp/contests/abc251/tasks/abc251_f,nan
Intersection of Polygons,https://atcoder.jp/contests/abc251/tasks/abc251_g,nan
Fill Triangle,https://atcoder.jp/contests/abc251/tasks/abc251_h,nan
ASCII code,https://atcoder.jp/contests/abc252/tasks/abc252_a,nan
Takahashi's Failure,https://atcoder.jp/contests/abc252/tasks/abc252_b,nan
Slot Strategy,https://atcoder.jp/contests/abc252/tasks/abc252_c,nan
Distinct Trio,https://atcoder.jp/contests/abc252/tasks/abc252_d,nan
Road Reduction,https://atcoder.jp/contests/abc252/tasks/abc252_e,nan
Bread,https://atcoder.jp/contests/abc252/tasks/abc252_f,nan
Pre Order,https://atcoder.jp/contests/abc252/tasks/abc252_g,nan
K th beautiful Necklace,https://atcoder.jp/contests/abc252/tasks/abc252_h,nan
Median?,https://atcoder.jp/contests/abc253/tasks/abc253_a,nan
Distance Between Tokens,https://atcoder.jp/contests/abc253/tasks/abc253_b,nan
Max   Min Query,https://atcoder.jp/contests/abc253/tasks/abc253_c,nan
FizzBuzz Sum Hard,https://atcoder.jp/contests/abc253/tasks/abc253_d,nan
Distance Sequence,https://atcoder.jp/contests/abc253/tasks/abc253_e,nan
Operations on a Matrix,https://atcoder.jp/contests/abc253/tasks/abc253_f,nan
Swap Many Times,https://atcoder.jp/contests/abc253/tasks/abc253_g,nan
We Love Forest,https://atcoder.jp/contests/abc253/tasks/abc253_h,nan
Last Two Digits,https://atcoder.jp/contests/abc254/tasks/abc254_a,nan
Practical Computing,https://atcoder.jp/contests/abc254/tasks/abc254_b,nan
K Swap,https://atcoder.jp/contests/abc254/tasks/abc254_c,nan
Together Square,https://atcoder.jp/contests/abc254/tasks/abc254_d,nan
Small d and k,https://atcoder.jp/contests/abc254/tasks/abc254_e,nan
Rectangle GCD,https://atcoder.jp/contests/abc254/tasks/abc254_f,nan
Elevators,https://atcoder.jp/contests/abc254/tasks/abc254_g,nan
Multiply or Divide by 2,https://atcoder.jp/contests/abc254/tasks/abc254_h,nan
"You should output ARC, though this is ABC.",https://atcoder.jp/contests/abc255/tasks/abc255_a,nan
Light It Up,https://atcoder.jp/contests/abc255/tasks/abc255_b,nan
±1 Operation 1,https://atcoder.jp/contests/abc255/tasks/abc255_c,nan
±1 Operation 2,https://atcoder.jp/contests/abc255/tasks/abc255_d,nan
Lucky Numbers,https://atcoder.jp/contests/abc255/tasks/abc255_e,nan
Pre order and In order,https://atcoder.jp/contests/abc255/tasks/abc255_f,nan
Constrained Nim,https://atcoder.jp/contests/abc255/tasks/abc255_g,nan
Range Harvest Query,https://atcoder.jp/contests/abc255/tasks/abc255_h,nan
2^N,https://atcoder.jp/contests/abc256/tasks/abc256_a,nan
Batters,https://atcoder.jp/contests/abc256/tasks/abc256_b,nan
Filling 3x3 array,https://atcoder.jp/contests/abc256/tasks/abc256_c,nan
Union of Interval,https://atcoder.jp/contests/abc256/tasks/abc256_d,nan
Takahashi's Anguish,https://atcoder.jp/contests/abc256/tasks/abc256_e,nan
Cumulative Cumulative Cumulative Sum,https://atcoder.jp/contests/abc256/tasks/abc256_f,nan
Black and White Stones,https://atcoder.jp/contests/abc256/tasks/abc256_g,nan
I like Query Problem,https://atcoder.jp/contests/abc256/tasks/abc256_h,nan
A to Z String 2,https://atcoder.jp/contests/abc257/tasks/abc257_a,nan
1D Pawn,https://atcoder.jp/contests/abc257/tasks/abc257_b,nan
Robot Takahashi,https://atcoder.jp/contests/abc257/tasks/abc257_c,nan
Jumping Takahashi 2,https://atcoder.jp/contests/abc257/tasks/abc257_d,nan
Addition and Multiplication 2,https://atcoder.jp/contests/abc257/tasks/abc257_e,nan
Teleporter Setting,https://atcoder.jp/contests/abc257/tasks/abc257_f,nan
Prefix Concatenation,https://atcoder.jp/contests/abc257/tasks/abc257_g,nan
Dice Sum 2,https://atcoder.jp/contests/abc257/tasks/abc257_h,nan
When?,https://atcoder.jp/contests/abc258/tasks/abc258_a,nan
Number Box,https://atcoder.jp/contests/abc258/tasks/abc258_b,nan
Rotation,https://atcoder.jp/contests/abc258/tasks/abc258_c,nan
Trophy,https://atcoder.jp/contests/abc258/tasks/abc258_d,nan
Packing Potatoes,https://atcoder.jp/contests/abc258/tasks/abc258_e,nan
Main Street,https://atcoder.jp/contests/abc258/tasks/abc258_f,nan
Triangle,https://atcoder.jp/contests/abc258/tasks/abc258_g,nan
Odd Steps,https://atcoder.jp/contests/abc258/tasks/abc258_h,nan
Growth Record,https://atcoder.jp/contests/abc259/tasks/abc259_a,nan
Counterclockwise Rotation,https://atcoder.jp/contests/abc259/tasks/abc259_b,nan
XX to XXX,https://atcoder.jp/contests/abc259/tasks/abc259_c,nan
Circumferences,https://atcoder.jp/contests/abc259/tasks/abc259_d,nan
LCM on Whiteboard,https://atcoder.jp/contests/abc259/tasks/abc259_e,nan
Select Edges,https://atcoder.jp/contests/abc259/tasks/abc259_f,nan
Grid Card Game,https://atcoder.jp/contests/abc259/tasks/abc259_g,nan
Yet Another Path Counting,https://atcoder.jp/contests/abc259/tasks/abc259_h,nan
A Unique Letter,https://atcoder.jp/contests/abc260/tasks/abc260_a,nan
Better Students Are Needed!,https://atcoder.jp/contests/abc260/tasks/abc260_b,nan
Changing Jewels,https://atcoder.jp/contests/abc260/tasks/abc260_c,nan
Draw Your Cards,https://atcoder.jp/contests/abc260/tasks/abc260_d,nan
At Least One,https://atcoder.jp/contests/abc260/tasks/abc260_e,nan
Find 4 cycle,https://atcoder.jp/contests/abc260/tasks/abc260_f,nan
Scalene Triangle Area,https://atcoder.jp/contests/abc260/tasks/abc260_g,nan
Colorfulness,https://atcoder.jp/contests/abc260/tasks/abc260_h,nan
Intersection,https://atcoder.jp/contests/abc261/tasks/abc261_a,nan
Tournament Result,https://atcoder.jp/contests/abc261/tasks/abc261_b,nan
NewFolder(1),https://atcoder.jp/contests/abc261/tasks/abc261_c,nan
Flipping and Bonus,https://atcoder.jp/contests/abc261/tasks/abc261_d,nan
Many Operations,https://atcoder.jp/contests/abc261/tasks/abc261_e,nan
Sorting Color Balls,https://atcoder.jp/contests/abc261/tasks/abc261_f,nan
Replace,https://atcoder.jp/contests/abc261/tasks/abc261_g,nan
Game on Graph,https://atcoder.jp/contests/abc261/tasks/abc261_h,nan
World Cup,https://atcoder.jp/contests/abc262/tasks/abc262_a,nan
Triangle (Easier),https://atcoder.jp/contests/abc262/tasks/abc262_b,nan
Min Max Pair,https://atcoder.jp/contests/abc262/tasks/abc262_c,nan
I Hate Non integer Number,https://atcoder.jp/contests/abc262/tasks/abc262_d,nan
Red and Blue Graph,https://atcoder.jp/contests/abc262/tasks/abc262_e,nan
Erase and Rotate,https://atcoder.jp/contests/abc262/tasks/abc262_f,nan
LIS with Stack,https://atcoder.jp/contests/abc262/tasks/abc262_g,nan
Max Limited Sequence,https://atcoder.jp/contests/abc262/tasks/abc262_h,nan
Full House,https://atcoder.jp/contests/abc263/tasks/abc263_a,nan
Ancestor,https://atcoder.jp/contests/abc263/tasks/abc263_b,nan
Monotonically Increasing,https://atcoder.jp/contests/abc263/tasks/abc263_c,nan
Left Right Operation,https://atcoder.jp/contests/abc263/tasks/abc263_d,nan
Sugoroku 3,https://atcoder.jp/contests/abc263/tasks/abc263_e,nan
Tournament,https://atcoder.jp/contests/abc263/tasks/abc263_f,nan
Erasing Prime Pairs,https://atcoder.jp/contests/abc263/tasks/abc263_g,nan
Intersection 2,https://atcoder.jp/contests/abc263/tasks/abc263_h,nan
"""atcoder"".substr()",https://atcoder.jp/contests/abc264/tasks/abc264_a,nan
Nice Grid,https://atcoder.jp/contests/abc264/tasks/abc264_b,nan
Matrix Reducing,https://atcoder.jp/contests/abc264/tasks/abc264_c,nan
"""redocta"".swap(i,i+1)",https://atcoder.jp/contests/abc264/tasks/abc264_d,nan
Blackout 2,https://atcoder.jp/contests/abc264/tasks/abc264_e,nan
Monochromatic Path,https://atcoder.jp/contests/abc264/tasks/abc264_f,nan
String Fair,https://atcoder.jp/contests/abc264/tasks/abc264_g,nan
Perfect Binary Tree,https://atcoder.jp/contests/abc264/tasks/abc264_h,nan
Apple,https://atcoder.jp/contests/abc265/tasks/abc265_a,nan
Explore,https://atcoder.jp/contests/abc265/tasks/abc265_b,nan
Belt Conveyor,https://atcoder.jp/contests/abc265/tasks/abc265_c,nan
Iroha and Haiku (New ABC Edition),https://atcoder.jp/contests/abc265/tasks/abc265_d,nan
Warp,https://atcoder.jp/contests/abc265/tasks/abc265_e,nan
Manhattan Cafe,https://atcoder.jp/contests/abc265/tasks/abc265_f,nan
012 Inversion,https://atcoder.jp/contests/abc265/tasks/abc265_g,nan
No capture Lance Game,https://atcoder.jp/contests/abc265/tasks/abc265_h,nan
Middle  Letter,https://atcoder.jp/contests/abc266/tasks/abc266_a,nan
Modulo Number,https://atcoder.jp/contests/abc266/tasks/abc266_b,nan
Convex Quadrilateral,https://atcoder.jp/contests/abc266/tasks/abc266_c,nan
Snuke Panic (1D),https://atcoder.jp/contests/abc266/tasks/abc266_d,nan
Throwing the Die,https://atcoder.jp/contests/abc266/tasks/abc266_e,nan
Well defined Path Queries on a Namori,https://atcoder.jp/contests/abc266/tasks/abc266_f,nan
Yet Another RGB Sequence,https://atcoder.jp/contests/abc266/tasks/abc266_g,nan
Snuke Panic (2D),https://atcoder.jp/contests/abc266/tasks/abc266_h,nan
Saturday,https://atcoder.jp/contests/abc267/tasks/abc267_a,nan
Split?,https://atcoder.jp/contests/abc267/tasks/abc267_b,nan
Index × A(Continuous ver.),https://atcoder.jp/contests/abc267/tasks/abc267_c,nan
Index × A(Not Continuous ver.),https://atcoder.jp/contests/abc267/tasks/abc267_d,nan
Erasing Vertices 2,https://atcoder.jp/contests/abc267/tasks/abc267_e,nan
Exactly K Steps,https://atcoder.jp/contests/abc267/tasks/abc267_f,nan
Increasing K Times,https://atcoder.jp/contests/abc267/tasks/abc267_g,nan
Odd Sum,https://atcoder.jp/contests/abc267/tasks/abc267_h,nan
Five Integers,https://atcoder.jp/contests/abc268/tasks/abc268_a,nan
Prefix?,https://atcoder.jp/contests/abc268/tasks/abc268_b,nan
Chinese Restaurant,https://atcoder.jp/contests/abc268/tasks/abc268_c,nan
Unique Username,https://atcoder.jp/contests/abc268/tasks/abc268_d,nan
Chinese Restaurant (Three Star Version),https://atcoder.jp/contests/abc268/tasks/abc268_e,nan
Best Concatenation,https://atcoder.jp/contests/abc268/tasks/abc268_f,nan
Random Student ID,https://atcoder.jp/contests/abc268/tasks/abc268_g,nan
Taboo,https://atcoder.jp/contests/abc268/tasks/abc268_h,nan
Anyway Takahashi,https://atcoder.jp/contests/abc269/tasks/abc269_a,nan
Rectangle Detection,https://atcoder.jp/contests/abc269/tasks/abc269_b,nan
Submask,https://atcoder.jp/contests/abc269/tasks/abc269_c,nan
Do use hexagon grid,https://atcoder.jp/contests/abc269/tasks/abc269_d,nan
Last Rook,https://atcoder.jp/contests/abc269/tasks/abc269_e,nan
Numbered Checker,https://atcoder.jp/contests/abc269/tasks/abc269_f,nan
Reversible Cards 2,https://atcoder.jp/contests/abc269/tasks/abc269_g,nan
Antichain,https://atcoder.jp/contests/abc269/tasks/abc269_h,nan
1 2 4 Test,https://atcoder.jp/contests/abc270/tasks/abc270_a,nan
Hammer,https://atcoder.jp/contests/abc270/tasks/abc270_b,nan
Simple path,https://atcoder.jp/contests/abc270/tasks/abc270_c,nan
Stones,https://atcoder.jp/contests/abc270/tasks/abc270_d,nan
Apple Baskets on Circle,https://atcoder.jp/contests/abc270/tasks/abc270_e,nan
Transportation,https://atcoder.jp/contests/abc270/tasks/abc270_f,nan
Sequence in mod P,https://atcoder.jp/contests/abc270/tasks/abc270_g,nan
add 1,https://atcoder.jp/contests/abc270/tasks/abc270_h,nan
484558,https://atcoder.jp/contests/abc271/tasks/abc271_a,nan
Maintain Multiple Sequences,https://atcoder.jp/contests/abc271/tasks/abc271_b,nan
Manga,https://atcoder.jp/contests/abc271/tasks/abc271_c,nan
Flip and Adjust,https://atcoder.jp/contests/abc271/tasks/abc271_d,nan
Subsequence Path,https://atcoder.jp/contests/abc271/tasks/abc271_e,nan
XOR on Grid Path,https://atcoder.jp/contests/abc271/tasks/abc271_f,nan
Access Counter,https://atcoder.jp/contests/abc271/tasks/abc271_g,nan
General General,https://atcoder.jp/contests/abc271/tasks/abc271_h,nan
Integer Sum,https://atcoder.jp/contests/abc272/tasks/abc272_a,nan
Everyone is Friends,https://atcoder.jp/contests/abc272/tasks/abc272_b,nan
Max Even,https://atcoder.jp/contests/abc272/tasks/abc272_c,nan
Root M Leaper,https://atcoder.jp/contests/abc272/tasks/abc272_d,nan
Add and Mex,https://atcoder.jp/contests/abc272/tasks/abc272_e,nan
Two Strings,https://atcoder.jp/contests/abc272/tasks/abc272_f,nan
Yet Another mod M,https://atcoder.jp/contests/abc272/tasks/abc272_g,nan
Flipping Coins 2,https://atcoder.jp/contests/abc272/tasks/abc272_h,nan
A Recursive Function,https://atcoder.jp/contests/abc273/tasks/abc273_a,nan
Broken Rounding,https://atcoder.jp/contests/abc273/tasks/abc273_b,nan
(K+1) th Largest Number,https://atcoder.jp/contests/abc273/tasks/abc273_c,nan
LRUD Instructions,https://atcoder.jp/contests/abc273/tasks/abc273_d,nan
Notebook,https://atcoder.jp/contests/abc273/tasks/abc273_e,nan
Hammer 2,https://atcoder.jp/contests/abc273/tasks/abc273_f,nan
Row Column Sums 2,https://atcoder.jp/contests/abc273/tasks/abc273_g,nan
"Inv(0,1)ving Insert(1,0)n",https://atcoder.jp/contests/abc273/tasks/abc273_h,nan
Batting Average,https://atcoder.jp/contests/abc274/tasks/abc274_a,nan
Line Sensor,https://atcoder.jp/contests/abc274/tasks/abc274_b,nan
Ameba,https://atcoder.jp/contests/abc274/tasks/abc274_c,nan
Robot Arms 2,https://atcoder.jp/contests/abc274/tasks/abc274_d,nan
Booster,https://atcoder.jp/contests/abc274/tasks/abc274_e,nan
Fishing,https://atcoder.jp/contests/abc274/tasks/abc274_f,nan
Security Camera 3,https://atcoder.jp/contests/abc274/tasks/abc274_g,nan
XOR Sum of Arrays,https://atcoder.jp/contests/abc274/tasks/abc274_h,nan
Find Takahashi,https://atcoder.jp/contests/abc275/tasks/abc275_a,nan
ABC DEF,https://atcoder.jp/contests/abc275/tasks/abc275_b,nan
Counting Squares,https://atcoder.jp/contests/abc275/tasks/abc275_c,nan
Yet Another Recursive Function,https://atcoder.jp/contests/abc275/tasks/abc275_d,nan
Sugoroku 4,https://atcoder.jp/contests/abc275/tasks/abc275_e,nan
Erase Subarrays,https://atcoder.jp/contests/abc275/tasks/abc275_f,nan
Infinite Knapsack,https://atcoder.jp/contests/abc275/tasks/abc275_g,nan
Monster,https://atcoder.jp/contests/abc275/tasks/abc275_h,nan
Rightmost,https://atcoder.jp/contests/abc276/tasks/abc276_a,nan
Adjacency List,https://atcoder.jp/contests/abc276/tasks/abc276_b,nan
Previous Permutation,https://atcoder.jp/contests/abc276/tasks/abc276_c,nan
Divide by 2 or 3,https://atcoder.jp/contests/abc276/tasks/abc276_d,nan
Round Trip,https://atcoder.jp/contests/abc276/tasks/abc276_e,nan
Double Chance,https://atcoder.jp/contests/abc276/tasks/abc276_f,nan
Count Sequences,https://atcoder.jp/contests/abc276/tasks/abc276_g,nan
Construct a Matrix,https://atcoder.jp/contests/abc276/tasks/abc276_h,nan
^{ 1},https://atcoder.jp/contests/abc277/tasks/abc277_a,nan
Playing Cards Validation,https://atcoder.jp/contests/abc277/tasks/abc277_b,nan
Ladder Takahashi,https://atcoder.jp/contests/abc277/tasks/abc277_c,nan
Takahashi's Solitaire,https://atcoder.jp/contests/abc277/tasks/abc277_d,nan
Crystal Switches,https://atcoder.jp/contests/abc277/tasks/abc277_e,nan
Sorting a Matrix,https://atcoder.jp/contests/abc277/tasks/abc277_f,nan
Random Walk to Millionaire,https://atcoder.jp/contests/abc277/tasks/abc277_g,nan
Constrained Sums,https://atcoder.jp/contests/abc277/tasks/abc277_h,nan
Shift,https://atcoder.jp/contests/abc278/tasks/abc278_a,nan
Misjudge the Time,https://atcoder.jp/contests/abc278/tasks/abc278_b,nan
FF,https://atcoder.jp/contests/abc278/tasks/abc278_c,nan
All Assign Point Add,https://atcoder.jp/contests/abc278/tasks/abc278_d,nan
Grid Filling,https://atcoder.jp/contests/abc278/tasks/abc278_e,nan
Shiritori,https://atcoder.jp/contests/abc278/tasks/abc278_f,nan
Generalized Subtraction Game,https://atcoder.jp/contests/abc278/tasks/abc278_g,nan
make 1,https://atcoder.jp/contests/abc278/tasks/abc278_h,nan
wwwvvvvvv,https://atcoder.jp/contests/abc279/tasks/abc279_a,nan
LOOKUP,https://atcoder.jp/contests/abc279/tasks/abc279_b,nan
RANDOM,https://atcoder.jp/contests/abc279/tasks/abc279_c,nan
Freefall,https://atcoder.jp/contests/abc279/tasks/abc279_d,nan
Cheating Amidakuji,https://atcoder.jp/contests/abc279/tasks/abc279_e,nan
BOX,https://atcoder.jp/contests/abc279/tasks/abc279_f,nan
At Most 2 Colors,https://atcoder.jp/contests/abc279/tasks/abc279_g,nan
Sum of Prod of Min,https://atcoder.jp/contests/abc279/tasks/abc279_h,nan
Pawn on a Grid,https://atcoder.jp/contests/abc280/tasks/abc280_a,nan
Inverse Prefix Sum,https://atcoder.jp/contests/abc280/tasks/abc280_b,nan
Extra Character,https://atcoder.jp/contests/abc280/tasks/abc280_c,nan
Factorial and Multiple,https://atcoder.jp/contests/abc280/tasks/abc280_d,nan
Critical Hit,https://atcoder.jp/contests/abc280/tasks/abc280_e,nan
Pay or Receive,https://atcoder.jp/contests/abc280/tasks/abc280_f,nan
Do Use Hexagon Grid 2,https://atcoder.jp/contests/abc280/tasks/abc280_g,nan
Substring Sort,https://atcoder.jp/contests/abc280/tasks/abc280_h,nan
Count Down,https://atcoder.jp/contests/abc281/tasks/abc281_a,nan
Sandwich Number,https://atcoder.jp/contests/abc281/tasks/abc281_b,nan
Circular Playlist,https://atcoder.jp/contests/abc281/tasks/abc281_c,nan
Max Multiple,https://atcoder.jp/contests/abc281/tasks/abc281_d,nan
Least Elements,https://atcoder.jp/contests/abc281/tasks/abc281_e,nan
Xor Minimization,https://atcoder.jp/contests/abc281/tasks/abc281_f,nan
Farthest City,https://atcoder.jp/contests/abc281/tasks/abc281_g,nan
Alchemy,https://atcoder.jp/contests/abc281/tasks/abc281_h,nan
Generalized ABC,https://atcoder.jp/contests/abc282/tasks/abc282_a,nan
Let's Get a Perfect Score,https://atcoder.jp/contests/abc282/tasks/abc282_b,nan
String Delimiter,https://atcoder.jp/contests/abc282/tasks/abc282_c,nan
Make Bipartite 2,https://atcoder.jp/contests/abc282/tasks/abc282_d,nan
Choose Two and Eat One,https://atcoder.jp/contests/abc282/tasks/abc282_e,nan
Union of Two Sets,https://atcoder.jp/contests/abc282/tasks/abc282_f,nan
Similar Permutation,https://atcoder.jp/contests/abc282/tasks/abc282_g,nan
Min + Sum,https://atcoder.jp/contests/abc282/tasks/abc282_h,nan
Power,https://atcoder.jp/contests/abc283/tasks/abc283_a,nan
First Query Problem,https://atcoder.jp/contests/abc283/tasks/abc283_b,nan
Cash Register,https://atcoder.jp/contests/abc283/tasks/abc283_c,nan
Scope,https://atcoder.jp/contests/abc283/tasks/abc283_d,nan
Don't Isolate Elements,https://atcoder.jp/contests/abc283/tasks/abc283_e,nan
Permutation Distance,https://atcoder.jp/contests/abc283/tasks/abc283_f,nan
Partial Xor Enumeration,https://atcoder.jp/contests/abc283/tasks/abc283_g,nan
Popcount Sum,https://atcoder.jp/contests/abc283/tasks/abc283_h,nan
Sequence of Strings,https://atcoder.jp/contests/abc284/tasks/abc284_a,nan
Multi Test Cases,https://atcoder.jp/contests/abc284/tasks/abc284_b,nan
Count Connected Components,https://atcoder.jp/contests/abc284/tasks/abc284_c,nan
Happy New Year 2023,https://atcoder.jp/contests/abc284/tasks/abc284_d,nan
Count Simple Paths,https://atcoder.jp/contests/abc284/tasks/abc284_e,nan
ABCBAC,https://atcoder.jp/contests/abc284/tasks/abc284_f,nan
Only Once,https://atcoder.jp/contests/abc284/tasks/abc284_g,nan
Count Unlabeled Graphs,https://atcoder.jp/contests/abc284/tasks/abc284_h,nan
Edge Checker 2,https://atcoder.jp/contests/abc285/tasks/abc285_a,nan
Longest Uncommon Prefix,https://atcoder.jp/contests/abc285/tasks/abc285_b,nan
abc285_brutmhyhiizp,https://atcoder.jp/contests/abc285/tasks/abc285_c,nan
Change Usernames,https://atcoder.jp/contests/abc285/tasks/abc285_d,nan
Work or Rest,https://atcoder.jp/contests/abc285/tasks/abc285_e,nan
Substring of Sorted String,https://atcoder.jp/contests/abc285/tasks/abc285_f,nan
Tatami,https://atcoder.jp/contests/abc285/tasks/abc285_g,nan
Avoid Square Number,https://atcoder.jp/contests/abc285/tasks/abc285_h,nan
Range Swap,https://atcoder.jp/contests/abc286/tasks/abc286_a,nan
Cat,https://atcoder.jp/contests/abc286/tasks/abc286_b,nan
Rotate and Palindrome,https://atcoder.jp/contests/abc286/tasks/abc286_c,nan
Money in Hand,https://atcoder.jp/contests/abc286/tasks/abc286_d,nan
Souvenir,https://atcoder.jp/contests/abc286/tasks/abc286_e,nan
Guess The Number 2,https://atcoder.jp/contests/abc286/tasks/abc286_f,nan
Unique Walk,https://atcoder.jp/contests/abc286/tasks/abc286_g,nan
Don't Swim,https://atcoder.jp/contests/abc286/tasks/abc286_h,nan
Majority,https://atcoder.jp/contests/abc287/tasks/abc287_a,nan
Postal Card,https://atcoder.jp/contests/abc287/tasks/abc287_b,nan
Path Graph?,https://atcoder.jp/contests/abc287/tasks/abc287_c,nan
Match or Not,https://atcoder.jp/contests/abc287/tasks/abc287_d,nan
Karuta,https://atcoder.jp/contests/abc287/tasks/abc287_e,nan
Components,https://atcoder.jp/contests/abc287/tasks/abc287_f,nan
Balance Update Query,https://atcoder.jp/contests/abc287/tasks/abc287_g,nan
Directed Graph and Query,https://atcoder.jp/contests/abc287/tasks/abc287_h,nan
Many A+B Problems,https://atcoder.jp/contests/abc288/tasks/abc288_a,nan
Qualification Contest,https://atcoder.jp/contests/abc288/tasks/abc288_b,nan
Don’t be cycle,https://atcoder.jp/contests/abc288/tasks/abc288_c,nan
Range Add Query,https://atcoder.jp/contests/abc288/tasks/abc288_d,nan
Wish List,https://atcoder.jp/contests/abc288/tasks/abc288_e,nan
Integer Division,https://atcoder.jp/contests/abc288/tasks/abc288_f,nan
3^N Minesweeper,https://atcoder.jp/contests/abc288/tasks/abc288_g,nan
A Nameless Counting Problem,https://atcoder.jp/contests/abc288/tasks/abc288_h,nan
flip,https://atcoder.jp/contests/abc289/tasks/abc289_a,nan
V,https://atcoder.jp/contests/abc289/tasks/abc289_b,nan
Coverage,https://atcoder.jp/contests/abc289/tasks/abc289_c,nan
Step Up Robot,https://atcoder.jp/contests/abc289/tasks/abc289_d,nan
Swap Places,https://atcoder.jp/contests/abc289/tasks/abc289_e,nan
Teleporter Takahashi,https://atcoder.jp/contests/abc289/tasks/abc289_f,nan
Shopping in AtCoder store,https://atcoder.jp/contests/abc289/tasks/abc289_g,nan
Trio,https://atcoder.jp/contests/abc289/tasks/abc289_h,nan
Contest Result,https://atcoder.jp/contests/abc290/tasks/abc290_a,nan
Qual B,https://atcoder.jp/contests/abc290/tasks/abc290_b,nan
Max MEX,https://atcoder.jp/contests/abc290/tasks/abc290_c,nan
Marking,https://atcoder.jp/contests/abc290/tasks/abc290_d,nan
Make it Palindrome,https://atcoder.jp/contests/abc290/tasks/abc290_e,nan
Maximum Diameter,https://atcoder.jp/contests/abc290/tasks/abc290_f,nan
Edge Elimination,https://atcoder.jp/contests/abc290/tasks/abc290_g,nan
Bow Meow Optimization,https://atcoder.jp/contests/abc290/tasks/abc290_h,nan
camel Case,https://atcoder.jp/contests/abc291/tasks/abc291_a,nan
Trimmed Mean,https://atcoder.jp/contests/abc291/tasks/abc291_b,nan
LRUD Instructions 2,https://atcoder.jp/contests/abc291/tasks/abc291_c,nan
Flip Cards,https://atcoder.jp/contests/abc291/tasks/abc291_d,nan
Find Permutation,https://atcoder.jp/contests/abc291/tasks/abc291_e,nan
Teleporter and Closed off,https://atcoder.jp/contests/abc291/tasks/abc291_f,nan
OR Sum,https://atcoder.jp/contests/abc291/tasks/abc291_g,nan
Balanced Tree,https://atcoder.jp/contests/abc291/tasks/abc291_h,nan
CAPS LOCK,https://atcoder.jp/contests/abc292/tasks/abc292_a,nan
Yellow and Red Card,https://atcoder.jp/contests/abc292/tasks/abc292_b,nan
Four Variables,https://atcoder.jp/contests/abc292/tasks/abc292_c,nan
Unicyclic Components,https://atcoder.jp/contests/abc292/tasks/abc292_d,nan
Transitivity,https://atcoder.jp/contests/abc292/tasks/abc292_e,nan
Regular Triangle Inside a Rectangle,https://atcoder.jp/contests/abc292/tasks/abc292_f,nan
Count Strictly Increasing Sequences,https://atcoder.jp/contests/abc292/tasks/abc292_g,nan
Rating Estimator,https://atcoder.jp/contests/abc292/tasks/abc292_h,nan
Swap Odd and Even,https://atcoder.jp/contests/abc293/tasks/abc293_a,nan
Call the ID Number,https://atcoder.jp/contests/abc293/tasks/abc293_b,nan
Make Takahashi Happy,https://atcoder.jp/contests/abc293/tasks/abc293_c,nan
Tying Rope,https://atcoder.jp/contests/abc293/tasks/abc293_d,nan
Geometric Progression,https://atcoder.jp/contests/abc293/tasks/abc293_e,nan
Zero or One,https://atcoder.jp/contests/abc293/tasks/abc293_f,nan
Triple Index,https://atcoder.jp/contests/abc293/tasks/abc293_g,nan
Optimal Path Decomposition,https://atcoder.jp/contests/abc293/tasks/abc293_h,nan
Filter,https://atcoder.jp/contests/abc294/tasks/abc294_a,nan
ASCII Art,https://atcoder.jp/contests/abc294/tasks/abc294_b,nan
Merge Sequences,https://atcoder.jp/contests/abc294/tasks/abc294_c,nan
Bank,https://atcoder.jp/contests/abc294/tasks/abc294_d,nan
2xN Grid,https://atcoder.jp/contests/abc294/tasks/abc294_e,nan
Sugar Water 2,https://atcoder.jp/contests/abc294/tasks/abc294_f,nan
Distance Queries on a Tree,https://atcoder.jp/contests/abc294/tasks/abc294_g,nan
K Coloring,https://atcoder.jp/contests/abc294/tasks/abc294_h,nan
Probably English,https://atcoder.jp/contests/abc295/tasks/abc295_a,nan
Bombs,https://atcoder.jp/contests/abc295/tasks/abc295_b,nan
Socks,https://atcoder.jp/contests/abc295/tasks/abc295_c,nan
Three Days Ago,https://atcoder.jp/contests/abc295/tasks/abc295_d,nan
Kth Number,https://atcoder.jp/contests/abc295/tasks/abc295_e,nan
substr = S,https://atcoder.jp/contests/abc295/tasks/abc295_f,nan
Minimum Reachable City,https://atcoder.jp/contests/abc295/tasks/abc295_g,nan
E or m,https://atcoder.jp/contests/abc295/tasks/abc295_h,nan
Alternately,https://atcoder.jp/contests/abc296/tasks/abc296_a,nan
Chessboard,https://atcoder.jp/contests/abc296/tasks/abc296_b,nan
Gap Existence,https://atcoder.jp/contests/abc296/tasks/abc296_c,nan
M<=ab,https://atcoder.jp/contests/abc296/tasks/abc296_d,nan
Transition Game,https://atcoder.jp/contests/abc296/tasks/abc296_e,nan
Simultaneous Swap,https://atcoder.jp/contests/abc296/tasks/abc296_f,nan
Polygon and Points,https://atcoder.jp/contests/abc296/tasks/abc296_g,nan
Unite,https://atcoder.jp/contests/abc296/tasks/abc296_h,nan
Double Click,https://atcoder.jp/contests/abc297/tasks/abc297_a,nan
chess960,https://atcoder.jp/contests/abc297/tasks/abc297_b,nan
PC on the Table,https://atcoder.jp/contests/abc297/tasks/abc297_c,nan
Count Subtractions,https://atcoder.jp/contests/abc297/tasks/abc297_d,nan
Kth Takoyaki Set,https://atcoder.jp/contests/abc297/tasks/abc297_e,nan
Minimum Bounding Box 2,https://atcoder.jp/contests/abc297/tasks/abc297_f,nan
Constrained Nim 2,https://atcoder.jp/contests/abc297/tasks/abc297_g,nan
Diff Adjacent,https://atcoder.jp/contests/abc297/tasks/abc297_h,nan
Job Interview,https://atcoder.jp/contests/abc298/tasks/abc298_a,nan
Coloring Matrix,https://atcoder.jp/contests/abc298/tasks/abc298_b,nan
Cards Query Problem,https://atcoder.jp/contests/abc298/tasks/abc298_c,nan
Writing a Numeral,https://atcoder.jp/contests/abc298/tasks/abc298_d,nan
Unfair Sugoroku,https://atcoder.jp/contests/abc298/tasks/abc298_e,nan
Rook Score,https://atcoder.jp/contests/abc298/tasks/abc298_f,nan
Strawberry War,https://atcoder.jp/contests/abc298/tasks/abc298_g,nan
Sum of Min of Length,https://atcoder.jp/contests/abc298/tasks/abc298_h,nan
Treasure Chest,https://atcoder.jp/contests/abc299/tasks/abc299_a,nan
Trick Taking,https://atcoder.jp/contests/abc299/tasks/abc299_b,nan
Dango,https://atcoder.jp/contests/abc299/tasks/abc299_c,nan
Find by Query,https://atcoder.jp/contests/abc299/tasks/abc299_d,nan
Nearest Black Vertex,https://atcoder.jp/contests/abc299/tasks/abc299_e,nan
Square Subsequence,https://atcoder.jp/contests/abc299/tasks/abc299_f,nan
Minimum Permutation,https://atcoder.jp/contests/abc299/tasks/abc299_g,nan
Dice Sum Infinity,https://atcoder.jp/contests/abc299/tasks/abc299_h,nan
N choice question,https://atcoder.jp/contests/abc300/tasks/abc300_a,nan
Same Map in the RPG World,https://atcoder.jp/contests/abc300/tasks/abc300_b,nan
Cross,https://atcoder.jp/contests/abc300/tasks/abc300_c,nan
AABCC,https://atcoder.jp/contests/abc300/tasks/abc300_d,nan
Dice Product 3,https://atcoder.jp/contests/abc300/tasks/abc300_e,nan
More Holidays,https://atcoder.jp/contests/abc300/tasks/abc300_f,nan
P smooth number,https://atcoder.jp/contests/abc300/tasks/abc300_g,nan
Fibonacci: Revisited,https://atcoder.jp/contests/abc300/tasks/abc300_h,nan
Overall Winner,https://atcoder.jp/contests/abc301/tasks/abc301_a,nan
Fill the Gaps,https://atcoder.jp/contests/abc301/tasks/abc301_b,nan
AtCoder Cards,https://atcoder.jp/contests/abc301/tasks/abc301_c,nan
Bitmask,https://atcoder.jp/contests/abc301/tasks/abc301_d,nan
Pac Takahashi,https://atcoder.jp/contests/abc301/tasks/abc301_e,nan
Anti DDoS,https://atcoder.jp/contests/abc301/tasks/abc301_f,nan
Worst Picture,https://atcoder.jp/contests/abc301/tasks/abc301_g,nan
Difference of Distance,https://atcoder.jp/contests/abc301/tasks/abc301_h,nan
Attack,https://atcoder.jp/contests/abc302/tasks/abc302_a,nan
Find snuke,https://atcoder.jp/contests/abc302/tasks/abc302_b,nan
Almost Equal,https://atcoder.jp/contests/abc302/tasks/abc302_c,nan
Impartial Gift,https://atcoder.jp/contests/abc302/tasks/abc302_d,nan
Isolation,https://atcoder.jp/contests/abc302/tasks/abc302_e,nan
Merge Set,https://atcoder.jp/contests/abc302/tasks/abc302_f,nan
Sort from 1 to 4,https://atcoder.jp/contests/abc302/tasks/abc302_g,nan
Ball Collector,https://atcoder.jp/contests/abc302/tasks/abc302_h,nan
Similar String,https://atcoder.jp/contests/abc303/tasks/abc303_a,nan
Discord,https://atcoder.jp/contests/abc303/tasks/abc303_b,nan
Dash,https://atcoder.jp/contests/abc303/tasks/abc303_c,nan
Shift vs. CapsLock,https://atcoder.jp/contests/abc303/tasks/abc303_d,nan
A Gift From the Stars,https://atcoder.jp/contests/abc303/tasks/abc303_e,nan
Damage over Time,https://atcoder.jp/contests/abc303/tasks/abc303_f,nan
Bags Game,https://atcoder.jp/contests/abc303/tasks/abc303_g,nan
Constrained Tree Degree,https://atcoder.jp/contests/abc303/tasks/abc303_h,nan
First Player,https://atcoder.jp/contests/abc304/tasks/abc304_a,nan
Subscribers,https://atcoder.jp/contests/abc304/tasks/abc304_b,nan
Virus,https://atcoder.jp/contests/abc304/tasks/abc304_c,nan
A Piece of Cake,https://atcoder.jp/contests/abc304/tasks/abc304_d,nan
Good Graph,https://atcoder.jp/contests/abc304/tasks/abc304_e,nan
Shift Table,https://atcoder.jp/contests/abc304/tasks/abc304_f,nan
Max of Medians,https://atcoder.jp/contests/abc304/tasks/abc304_g,nan
Constrained Topological Sort,https://atcoder.jp/contests/abc304/tasks/abc304_h,nan
Water Station,https://atcoder.jp/contests/abc305/tasks/abc305_a,nan
ABCDEFG,https://atcoder.jp/contests/abc305/tasks/abc305_b,nan
Snuke the Cookie Picker,https://atcoder.jp/contests/abc305/tasks/abc305_c,nan
Sleep Log,https://atcoder.jp/contests/abc305/tasks/abc305_d,nan
Art Gallery on Graph,https://atcoder.jp/contests/abc305/tasks/abc305_e,nan
Dungeon Explore,https://atcoder.jp/contests/abc305/tasks/abc305_f,nan
Banned Substrings,https://atcoder.jp/contests/abc305/tasks/abc305_g,nan
Shojin,https://atcoder.jp/contests/abc305/tasks/abc305_h,nan
Echo,https://atcoder.jp/contests/abc306/tasks/abc306_a,nan
Base 2,https://atcoder.jp/contests/abc306/tasks/abc306_b,nan
Centers,https://atcoder.jp/contests/abc306/tasks/abc306_c,nan
Poisonous Full Course,https://atcoder.jp/contests/abc306/tasks/abc306_d,nan
Best Performances,https://atcoder.jp/contests/abc306/tasks/abc306_e,nan
Merge Sets,https://atcoder.jp/contests/abc306/tasks/abc306_f,nan
Return to 1,https://atcoder.jp/contests/abc306/tasks/abc306_g,nan
Balance Scale,https://atcoder.jp/contests/abc306/tasks/abc306_h,nan
Weekly Records,https://atcoder.jp/contests/abc307/tasks/abc307_a,nan
racecar,https://atcoder.jp/contests/abc307/tasks/abc307_b,nan
Ideal Sheet,https://atcoder.jp/contests/abc307/tasks/abc307_c,nan
Mismatched Parentheses,https://atcoder.jp/contests/abc307/tasks/abc307_d,nan
Distinct Adjacent,https://atcoder.jp/contests/abc307/tasks/abc307_e,nan
Virus 2,https://atcoder.jp/contests/abc307/tasks/abc307_f,nan
Approximate Equalization,https://atcoder.jp/contests/abc307/tasks/abc307_g,nan
Marquee,https://atcoder.jp/contests/abc307/tasks/abc307_h,nan
New Scheme,https://atcoder.jp/contests/abc308/tasks/abc308_a,nan
Default Price,https://atcoder.jp/contests/abc308/tasks/abc308_b,nan
Standings,https://atcoder.jp/contests/abc308/tasks/abc308_c,nan
Snuke Maze,https://atcoder.jp/contests/abc308/tasks/abc308_d,nan
MEX,https://atcoder.jp/contests/abc308/tasks/abc308_e,nan
Vouchers,https://atcoder.jp/contests/abc308/tasks/abc308_f,nan
Minimum Xor Pair Query,https://atcoder.jp/contests/abc308/tasks/abc308_g,nan
Make Q,https://atcoder.jp/contests/abc308/tasks/abc308_h,nan
Nine,https://atcoder.jp/contests/abc309/tasks/abc309_a,nan
Rotate,https://atcoder.jp/contests/abc309/tasks/abc309_b,nan
Medicine,https://atcoder.jp/contests/abc309/tasks/abc309_c,nan
Add One Edge,https://atcoder.jp/contests/abc309/tasks/abc309_d,nan
Family and Insurance,https://atcoder.jp/contests/abc309/tasks/abc309_e,nan
Box in Box,https://atcoder.jp/contests/abc309/tasks/abc309_f,nan
Ban Permutation,https://atcoder.jp/contests/abc309/tasks/abc309_g,nan
Simple Path Counting Problem,https://atcoder.jp/contests/abc309/tasks/abc309_h,nan
Order Something Else,https://atcoder.jp/contests/abc310/tasks/abc310_a,nan
Strictly Superior,https://atcoder.jp/contests/abc310/tasks/abc310_b,nan
Reversible,https://atcoder.jp/contests/abc310/tasks/abc310_c,nan
Peaceful Teams,https://atcoder.jp/contests/abc310/tasks/abc310_d,nan
NAND repeatedly,https://atcoder.jp/contests/abc310/tasks/abc310_e,nan
Make 10 Again,https://atcoder.jp/contests/abc310/tasks/abc310_f,nan
Takahashi And Pass The Ball Game,https://atcoder.jp/contests/abc310/tasks/abc310_g,nan
Negative Cost,https://atcoder.jp/contests/abc310/tasks/abc310_h,nan
First ABC,https://atcoder.jp/contests/abc311/tasks/abc311_a,nan
Vacation Together,https://atcoder.jp/contests/abc311/tasks/abc311_b,nan
Find it!,https://atcoder.jp/contests/abc311/tasks/abc311_c,nan
Grid Ice Floor,https://atcoder.jp/contests/abc311/tasks/abc311_d,nan
Defect free Squares,https://atcoder.jp/contests/abc311/tasks/abc311_e,nan
Yet Another Grid Task,https://atcoder.jp/contests/abc311/tasks/abc311_f,nan
One More Grid Task,https://atcoder.jp/contests/abc311/tasks/abc311_g,nan
Many Illumination Plans,https://atcoder.jp/contests/abc311/tasks/abc311_h,nan
Chord,https://atcoder.jp/contests/abc312/tasks/abc312_a,nan
TaK Code,https://atcoder.jp/contests/abc312/tasks/abc312_b,nan
Invisible Hand,https://atcoder.jp/contests/abc312/tasks/abc312_c,nan
Count Bracket Sequences,https://atcoder.jp/contests/abc312/tasks/abc312_d,nan
Tangency of Cuboids,https://atcoder.jp/contests/abc312/tasks/abc312_e,nan
Cans and Openers,https://atcoder.jp/contests/abc312/tasks/abc312_f,nan
Avoid Straight Line,https://atcoder.jp/contests/abc312/tasks/abc312_g,nan
snukesnuke,https://atcoder.jp/contests/abc312/tasks/abc312_h,nan
To Be Saikyo,https://atcoder.jp/contests/abc313/tasks/abc313_a,nan
Who is Saikyo?,https://atcoder.jp/contests/abc313/tasks/abc313_b,nan
Approximate Equalization 2,https://atcoder.jp/contests/abc313/tasks/abc313_c,nan
Odd or Even,https://atcoder.jp/contests/abc313/tasks/abc313_d,nan
Duplicate,https://atcoder.jp/contests/abc313/tasks/abc313_e,nan
Flip Machines,https://atcoder.jp/contests/abc313/tasks/abc313_f,nan
Redistribution of Piles,https://atcoder.jp/contests/abc313/tasks/abc313_g,nan
Group Photo,https://atcoder.jp/contests/abc313/tasks/abc313_h,nan
3.14,https://atcoder.jp/contests/abc314/tasks/abc314_a,nan
Roulette,https://atcoder.jp/contests/abc314/tasks/abc314_b,nan
Rotate Colored Subsequence,https://atcoder.jp/contests/abc314/tasks/abc314_c,nan
LOWER,https://atcoder.jp/contests/abc314/tasks/abc314_d,nan
Roulettes,https://atcoder.jp/contests/abc314/tasks/abc314_e,nan
A Certain Game,https://atcoder.jp/contests/abc314/tasks/abc314_f,nan
Amulets,https://atcoder.jp/contests/abc314/tasks/abc314_g,nan
Disk and Segments,https://atcoder.jp/contests/abc314/tasks/abc314_h,nan
tcdr,https://atcoder.jp/contests/abc315/tasks/abc315_a,nan
The Middle Day,https://atcoder.jp/contests/abc315/tasks/abc315_b,nan
Flavors,https://atcoder.jp/contests/abc315/tasks/abc315_c,nan
Magical Cookies,https://atcoder.jp/contests/abc315/tasks/abc315_d,nan
Prerequisites,https://atcoder.jp/contests/abc315/tasks/abc315_e,nan
Shortcuts,https://atcoder.jp/contests/abc315/tasks/abc315_f,nan
"Ai + Bj + Ck = X (1 <= i, j, k <= N)",https://atcoder.jp/contests/abc315/tasks/abc315_g,nan
Typical Convolution Problem,https://atcoder.jp/contests/abc315/tasks/abc315_h,nan
Potions,https://atcoder.jp/contests/abc317/tasks/abc317_a,nan
MissingNo.,https://atcoder.jp/contests/abc317/tasks/abc317_b,nan
Remembering the Days,https://atcoder.jp/contests/abc317/tasks/abc317_c,nan
President,https://atcoder.jp/contests/abc317/tasks/abc317_d,nan
Avoid Eye Contact,https://atcoder.jp/contests/abc317/tasks/abc317_e,nan
Nim,https://atcoder.jp/contests/abc317/tasks/abc317_f,nan
Rearranging,https://atcoder.jp/contests/abc317/tasks/abc317_g,nan
Walk,https://atcoder.jp/contests/abc317/tasks/abc317_h,nan
Full Moon,https://atcoder.jp/contests/abc318/tasks/abc318_a,nan
Overlapping sheets,https://atcoder.jp/contests/abc318/tasks/abc318_b,nan
Blue Spring,https://atcoder.jp/contests/abc318/tasks/abc318_c,nan
General Weighted Max Matching,https://atcoder.jp/contests/abc318/tasks/abc318_d,nan
Sandwiches,https://atcoder.jp/contests/abc318/tasks/abc318_e,nan
Octopus,https://atcoder.jp/contests/abc318/tasks/abc318_f,nan
Typical Path Problem,https://atcoder.jp/contests/abc318/tasks/abc318_g,nan
Count Strong Test Cases,https://atcoder.jp/contests/abc318/tasks/abc318_h,nan
Legendary Players,https://atcoder.jp/contests/abc319/tasks/abc319_a,nan
Measure,https://atcoder.jp/contests/abc319/tasks/abc319_b,nan
False Hope,https://atcoder.jp/contests/abc319/tasks/abc319_c,nan
Minimum Width,https://atcoder.jp/contests/abc319/tasks/abc319_d,nan
Bus Stops,https://atcoder.jp/contests/abc319/tasks/abc319_e,nan
Fighter Takahashi,https://atcoder.jp/contests/abc319/tasks/abc319_f,nan
Counting Shortest Paths,https://atcoder.jp/contests/abc319/tasks/abc319_g,nan
Leyland Number,https://atcoder.jp/contests/abc320/tasks/abc320_a,nan
Longest Palindrome,https://atcoder.jp/contests/abc320/tasks/abc320_b,nan
Slot Strategy 2 (Easy),https://atcoder.jp/contests/abc320/tasks/abc320_c,nan
Relative Position,https://atcoder.jp/contests/abc320/tasks/abc320_d,nan
Somen Nagashi,https://atcoder.jp/contests/abc320/tasks/abc320_e,nan
Fuel Round Trip,https://atcoder.jp/contests/abc320/tasks/abc320_f,nan
Slot Strategy 2 (Hard),https://atcoder.jp/contests/abc320/tasks/abc320_g,nan
321 like Checker,https://atcoder.jp/contests/abc321/tasks/abc321_a,nan
Cutoff,https://atcoder.jp/contests/abc321/tasks/abc321_b,nan
321 like Searcher,https://atcoder.jp/contests/abc321/tasks/abc321_c,nan
Set Menu,https://atcoder.jp/contests/abc321/tasks/abc321_d,nan
Complete Binary Tree,https://atcoder.jp/contests/abc321/tasks/abc321_e,nan
#(subset sum = K) with Add and Erase,https://atcoder.jp/contests/abc321/tasks/abc321_f,nan
Electric Circuit,https://atcoder.jp/contests/abc321/tasks/abc321_g,nan
First ABC 2,https://atcoder.jp/contests/abc322/tasks/abc322_a,nan
Prefix and Suffix,https://atcoder.jp/contests/abc322/tasks/abc322_b,nan
Festival,https://atcoder.jp/contests/abc322/tasks/abc322_c,nan
Polyomino,https://atcoder.jp/contests/abc322/tasks/abc322_d,nan
Product Development,https://atcoder.jp/contests/abc322/tasks/abc322_e,nan
Vacation Query,https://atcoder.jp/contests/abc322/tasks/abc322_f,nan
Two Kinds of Base,https://atcoder.jp/contests/abc322/tasks/abc322_g,nan
Weak Beats,https://atcoder.jp/contests/abc323/tasks/abc323_a,nan
Round Robin Tournament,https://atcoder.jp/contests/abc323/tasks/abc323_b,nan
World Tour Finals,https://atcoder.jp/contests/abc323/tasks/abc323_c,nan
Merge Slimes,https://atcoder.jp/contests/abc323/tasks/abc323_d,nan
Playlist,https://atcoder.jp/contests/abc323/tasks/abc323_e,nan
Push and Carry,https://atcoder.jp/contests/abc323/tasks/abc323_f,nan
Inversion of Tree,https://atcoder.jp/contests/abc323/tasks/abc323_g,nan
Same,https://atcoder.jp/contests/abc324/tasks/abc324_a,nan
3 smooth Numbers,https://atcoder.jp/contests/abc324/tasks/abc324_b,nan
Error Correction,https://atcoder.jp/contests/abc324/tasks/abc324_c,nan
Square Permutation,https://atcoder.jp/contests/abc324/tasks/abc324_d,nan
Joint Two Strings,https://atcoder.jp/contests/abc324/tasks/abc324_e,nan
Beautiful Path,https://atcoder.jp/contests/abc324/tasks/abc324_f,nan
Generate Arrays,https://atcoder.jp/contests/abc324/tasks/abc324_g,nan
Takahashi san,https://atcoder.jp/contests/abc325/tasks/abc325_a,nan
World Meeting,https://atcoder.jp/contests/abc325/tasks/abc325_b,nan
Sensors,https://atcoder.jp/contests/abc325/tasks/abc325_c,nan
Printing Machine,https://atcoder.jp/contests/abc325/tasks/abc325_d,nan
"Our clients, please wait a moment",https://atcoder.jp/contests/abc325/tasks/abc325_e,nan
Sensor Optimization Dilemma,https://atcoder.jp/contests/abc325/tasks/abc325_f,nan
offence,https://atcoder.jp/contests/abc325/tasks/abc325_g,nan
2UP3DOWN,https://atcoder.jp/contests/abc326/tasks/abc326_a,nan
326 like Numbers,https://atcoder.jp/contests/abc326/tasks/abc326_b,nan
Peak,https://atcoder.jp/contests/abc326/tasks/abc326_c,nan
ABC Puzzle,https://atcoder.jp/contests/abc326/tasks/abc326_d,nan
"Revenge of ""The Salary of AtCoder Inc.""",https://atcoder.jp/contests/abc326/tasks/abc326_e,nan
Robot Rotation,https://atcoder.jp/contests/abc326/tasks/abc326_f,nan
Unlock Achievement,https://atcoder.jp/contests/abc326/tasks/abc326_g,nan
ab,https://atcoder.jp/contests/abc327/tasks/abc327_a,nan
A^A,https://atcoder.jp/contests/abc327/tasks/abc327_b,nan
Number Place,https://atcoder.jp/contests/abc327/tasks/abc327_c,nan
Good Tuple Problem,https://atcoder.jp/contests/abc327/tasks/abc327_d,nan
Maximize Rating,https://atcoder.jp/contests/abc327/tasks/abc327_e,nan
Apples,https://atcoder.jp/contests/abc327/tasks/abc327_f,nan
Many Good Tuple Problems,https://atcoder.jp/contests/abc327/tasks/abc327_g,nan
Not Too Hard,https://atcoder.jp/contests/abc328/tasks/abc328_a,nan
11/11,https://atcoder.jp/contests/abc328/tasks/abc328_b,nan
Consecutive,https://atcoder.jp/contests/abc328/tasks/abc328_c,nan
Take ABC,https://atcoder.jp/contests/abc328/tasks/abc328_d,nan
Modulo MST,https://atcoder.jp/contests/abc328/tasks/abc328_e,nan
Good Set Query,https://atcoder.jp/contests/abc328/tasks/abc328_f,nan
Cut and Reorder,https://atcoder.jp/contests/abc328/tasks/abc328_g,nan
Spread,https://atcoder.jp/contests/abc329/tasks/abc329_a,nan
Next,https://atcoder.jp/contests/abc329/tasks/abc329_b,nan
Count xxx,https://atcoder.jp/contests/abc329/tasks/abc329_c,nan
Election Quick Report,https://atcoder.jp/contests/abc329/tasks/abc329_d,nan
Stamp,https://atcoder.jp/contests/abc329/tasks/abc329_e,nan
Colored Ball,https://atcoder.jp/contests/abc329/tasks/abc329_f,nan
Delivery on Tree,https://atcoder.jp/contests/abc329/tasks/abc329_g,nan
Counting Passes,https://atcoder.jp/contests/abc330/tasks/abc330_a,nan
Minimize Abs 1,https://atcoder.jp/contests/abc330/tasks/abc330_b,nan
Minimize Abs 2,https://atcoder.jp/contests/abc330/tasks/abc330_c,nan
Counting Ls,https://atcoder.jp/contests/abc330/tasks/abc330_d,nan
Mex and Update,https://atcoder.jp/contests/abc330/tasks/abc330_e,nan
Minimize Bounding  Square,https://atcoder.jp/contests/abc330/tasks/abc330_f,nan
Inversion Squared,https://atcoder.jp/contests/abc330/tasks/abc330_g,nan
Tomorrow,https://atcoder.jp/contests/abc331/tasks/abc331_a,nan
Buy One Carton of Milk,https://atcoder.jp/contests/abc331/tasks/abc331_b,nan
Sum of Numbers Greater Than Me,https://atcoder.jp/contests/abc331/tasks/abc331_c,nan
Tile Pattern,https://atcoder.jp/contests/abc331/tasks/abc331_d,nan
Set Meal,https://atcoder.jp/contests/abc331/tasks/abc331_e,nan
Palindrome Query,https://atcoder.jp/contests/abc331/tasks/abc331_f,nan
Collect Them All,https://atcoder.jp/contests/abc331/tasks/abc331_g,nan
Online Shopping,https://atcoder.jp/contests/abc332/tasks/abc332_a,nan
Glass and Mug,https://atcoder.jp/contests/abc332/tasks/abc332_b,nan
T shirts,https://atcoder.jp/contests/abc332/tasks/abc332_c,nan
Swapping Puzzle,https://atcoder.jp/contests/abc332/tasks/abc332_d,nan
Lucky bag,https://atcoder.jp/contests/abc332/tasks/abc332_e,nan
Random Update Query,https://atcoder.jp/contests/abc332/tasks/abc332_f,nan
Not Too Many Balls,https://atcoder.jp/contests/abc332/tasks/abc332_g,nan
Three Threes,https://atcoder.jp/contests/abc333/tasks/abc333_a,nan
Pentagon,https://atcoder.jp/contests/abc333/tasks/abc333_b,nan
Repunit Trio,https://atcoder.jp/contests/abc333/tasks/abc333_c,nan
Erase Leaves,https://atcoder.jp/contests/abc333/tasks/abc333_d,nan
Takahashi Quest,https://atcoder.jp/contests/abc333/tasks/abc333_e,nan
Bomb Game 2,https://atcoder.jp/contests/abc333/tasks/abc333_f,nan
Nearest Fraction,https://atcoder.jp/contests/abc333/tasks/abc333_g,nan
Christmas Present,https://atcoder.jp/contests/abc334/tasks/abc334_a,nan
Christmas Trees,https://atcoder.jp/contests/abc334/tasks/abc334_b,nan
Socks 2,https://atcoder.jp/contests/abc334/tasks/abc334_c,nan
Reindeer and Sleigh,https://atcoder.jp/contests/abc334/tasks/abc334_d,nan
Christmas Color Grid 1,https://atcoder.jp/contests/abc334/tasks/abc334_e,nan
Christmas Present 2,https://atcoder.jp/contests/abc334/tasks/abc334_f,nan
Christmas Color Grid 2,https://atcoder.jp/contests/abc334/tasks/abc334_g,nan
202<s>3</s>,https://atcoder.jp/contests/abc335/tasks/abc335_a,nan
Tetrahedral Number,https://atcoder.jp/contests/abc335/tasks/abc335_b,nan
Loong Tracking,https://atcoder.jp/contests/abc335/tasks/abc335_c,nan
Loong and Takahashi,https://atcoder.jp/contests/abc335/tasks/abc335_d,nan
Non Decreasing Colorful Path,https://atcoder.jp/contests/abc335/tasks/abc335_e,nan
Hop Sugoroku,https://atcoder.jp/contests/abc335/tasks/abc335_f,nan
Discrete Logarithm Problems,https://atcoder.jp/contests/abc335/tasks/abc335_g,nan
Long Loong,https://atcoder.jp/contests/abc336/tasks/abc336_a,nan
CTZ,https://atcoder.jp/contests/abc336/tasks/abc336_b,nan
Even Digits,https://atcoder.jp/contests/abc336/tasks/abc336_c,nan
Pyramid,https://atcoder.jp/contests/abc336/tasks/abc336_d,nan
Digit Sum Divisible,https://atcoder.jp/contests/abc336/tasks/abc336_e,nan
Rotation Puzzle,https://atcoder.jp/contests/abc336/tasks/abc336_f,nan
16 Integers,https://atcoder.jp/contests/abc336/tasks/abc336_g,nan
Scoreboard,https://atcoder.jp/contests/abc337/tasks/abc337_a,nan
Extended ABC,https://atcoder.jp/contests/abc337/tasks/abc337_b,nan
Lining Up 2,https://atcoder.jp/contests/abc337/tasks/abc337_c,nan
Cheating Gomoku Narabe,https://atcoder.jp/contests/abc337/tasks/abc337_d,nan
Bad Juice,https://atcoder.jp/contests/abc337/tasks/abc337_e,nan
Usual Color Ball Problems,https://atcoder.jp/contests/abc337/tasks/abc337_f,nan
Tree Inversion,https://atcoder.jp/contests/abc337/tasks/abc337_g,nan
Capitalized?,https://atcoder.jp/contests/abc338/tasks/abc338_a,nan
Frequency,https://atcoder.jp/contests/abc338/tasks/abc338_b,nan
Leftover Recipes,https://atcoder.jp/contests/abc338/tasks/abc338_c,nan
Island Tour,https://atcoder.jp/contests/abc338/tasks/abc338_d,nan
Chords,https://atcoder.jp/contests/abc338/tasks/abc338_e,nan
Negative Traveling Salesman,https://atcoder.jp/contests/abc338/tasks/abc338_f,nan
evall,https://atcoder.jp/contests/abc338/tasks/abc338_g,nan
TLD,https://atcoder.jp/contests/abc339/tasks/abc339_a,nan
Langton's Takahashi,https://atcoder.jp/contests/abc339/tasks/abc339_b,nan
Perfect Bus,https://atcoder.jp/contests/abc339/tasks/abc339_c,nan
Synchronized Players,https://atcoder.jp/contests/abc339/tasks/abc339_d,nan
Smooth Subsequence,https://atcoder.jp/contests/abc339/tasks/abc339_e,nan
Product Equality,https://atcoder.jp/contests/abc339/tasks/abc339_f,nan
Smaller Sum,https://atcoder.jp/contests/abc339/tasks/abc339_g,nan
Arithmetic Progression,https://atcoder.jp/contests/abc340/tasks/abc340_a,nan
Append,https://atcoder.jp/contests/abc340/tasks/abc340_b,nan
Divide and Divide,https://atcoder.jp/contests/abc340/tasks/abc340_c,nan
Super Takahashi Bros.,https://atcoder.jp/contests/abc340/tasks/abc340_d,nan
Mancala 2,https://atcoder.jp/contests/abc340/tasks/abc340_e,nan
S = 1,https://atcoder.jp/contests/abc340/tasks/abc340_f,nan
Leaf Color,https://atcoder.jp/contests/abc340/tasks/abc340_g,nan
Print 341,https://atcoder.jp/contests/abc341/tasks/abc341_a,nan
Foreign Exchange,https://atcoder.jp/contests/abc341/tasks/abc341_b,nan
Takahashi Gets Lost,https://atcoder.jp/contests/abc341/tasks/abc341_c,nan
Only one of two,https://atcoder.jp/contests/abc341/tasks/abc341_d,nan
Alternating String,https://atcoder.jp/contests/abc341/tasks/abc341_e,nan
Breakdown,https://atcoder.jp/contests/abc341/tasks/abc341_f,nan
Highest Ratio,https://atcoder.jp/contests/abc341/tasks/abc341_g,nan
Yay!,https://atcoder.jp/contests/abc342/tasks/abc342_a,nan
Which is ahead?,https://atcoder.jp/contests/abc342/tasks/abc342_b,nan
Many Replacement,https://atcoder.jp/contests/abc342/tasks/abc342_c,nan
Square Pair,https://atcoder.jp/contests/abc342/tasks/abc342_d,nan
Last Train,https://atcoder.jp/contests/abc342/tasks/abc342_e,nan
Black Jack,https://atcoder.jp/contests/abc342/tasks/abc342_f,nan
Retroactive Range Chmax,https://atcoder.jp/contests/abc342/tasks/abc342_g,nan
Wrong Answer,https://atcoder.jp/contests/abc343/tasks/abc343_a,nan
Adjacency Matrix,https://atcoder.jp/contests/abc343/tasks/abc343_b,nan
343,https://atcoder.jp/contests/abc343/tasks/abc343_c,nan
Diversity of Scores,https://atcoder.jp/contests/abc343/tasks/abc343_d,nan
7x7x7,https://atcoder.jp/contests/abc343/tasks/abc343_e,nan
Second Largest Query,https://atcoder.jp/contests/abc343/tasks/abc343_f,nan
Compress Strings,https://atcoder.jp/contests/abc343/tasks/abc343_g,nan
Spoiler,https://atcoder.jp/contests/abc344/tasks/abc344_a,nan
Delimiter,https://atcoder.jp/contests/abc344/tasks/abc344_b,nan
A+B+C,https://atcoder.jp/contests/abc344/tasks/abc344_c,nan
String Bags,https://atcoder.jp/contests/abc344/tasks/abc344_d,nan
Insert or Erase,https://atcoder.jp/contests/abc344/tasks/abc344_e,nan
Earn to Advance,https://atcoder.jp/contests/abc344/tasks/abc344_f,nan
Points and Comparison,https://atcoder.jp/contests/abc344/tasks/abc344_g,nan
Leftrightarrow,https://atcoder.jp/contests/abc345/tasks/abc345_a,nan
Integer Division Returns,https://atcoder.jp/contests/abc345/tasks/abc345_b,nan
One Time Swap,https://atcoder.jp/contests/abc345/tasks/abc345_c,nan
Tiling,https://atcoder.jp/contests/abc345/tasks/abc345_d,nan
Colorful Subsequence,https://atcoder.jp/contests/abc345/tasks/abc345_e,nan
Many Lamps,https://atcoder.jp/contests/abc345/tasks/abc345_f,nan
Sugoroku 5,https://atcoder.jp/contests/abc345/tasks/abc345_g,nan
Adjacent Product,https://atcoder.jp/contests/abc346/tasks/abc346_a,nan
Piano,https://atcoder.jp/contests/abc346/tasks/abc346_b,nan
Σ,https://atcoder.jp/contests/abc346/tasks/abc346_c,nan
Gomamayo Sequence,https://atcoder.jp/contests/abc346/tasks/abc346_d,nan
Paint,https://atcoder.jp/contests/abc346/tasks/abc346_e,nan
SSttrriinngg in StringString,https://atcoder.jp/contests/abc346/tasks/abc346_f,nan
Alone,https://atcoder.jp/contests/abc346/tasks/abc346_g,nan
Divisible,https://atcoder.jp/contests/abc347/tasks/abc347_a,nan
Substring,https://atcoder.jp/contests/abc347/tasks/abc347_b,nan
Ideal Holidays,https://atcoder.jp/contests/abc347/tasks/abc347_c,nan
Popcount and XOR,https://atcoder.jp/contests/abc347/tasks/abc347_d,nan
Set Add Query,https://atcoder.jp/contests/abc347/tasks/abc347_e,nan
Non overlapping Squares,https://atcoder.jp/contests/abc347/tasks/abc347_f,nan
Grid Coloring 2,https://atcoder.jp/contests/abc347/tasks/abc347_g,nan
Penalty Kick,https://atcoder.jp/contests/abc348/tasks/abc348_a,nan
Farthest Point,https://atcoder.jp/contests/abc348/tasks/abc348_b,nan
Colorful Beans,https://atcoder.jp/contests/abc348/tasks/abc348_c,nan
Medicines on Grid,https://atcoder.jp/contests/abc348/tasks/abc348_d,nan
Minimize Sum of Distances,https://atcoder.jp/contests/abc348/tasks/abc348_e,nan
Oddly Similar,https://atcoder.jp/contests/abc348/tasks/abc348_f,nan
Max (Sum   Max),https://atcoder.jp/contests/abc348/tasks/abc348_g,nan
Zero Sum Game,https://atcoder.jp/contests/abc349/tasks/abc349_a,nan
Commencement,https://atcoder.jp/contests/abc349/tasks/abc349_b,nan
Airport Code,https://atcoder.jp/contests/abc349/tasks/abc349_c,nan
Divide Interval,https://atcoder.jp/contests/abc349/tasks/abc349_d,nan
Weighted Tic Tac Toe,https://atcoder.jp/contests/abc349/tasks/abc349_e,nan
Subsequence LCM,https://atcoder.jp/contests/abc349/tasks/abc349_f,nan
Palindrome Construction,https://atcoder.jp/contests/abc349/tasks/abc349_g,nan
Past ABCs,https://atcoder.jp/contests/abc350/tasks/abc350_a,nan
Dentist Aoki,https://atcoder.jp/contests/abc350/tasks/abc350_b,nan
Sort,https://atcoder.jp/contests/abc350/tasks/abc350_c,nan
New Friends,https://atcoder.jp/contests/abc350/tasks/abc350_d,nan
Toward 0,https://atcoder.jp/contests/abc350/tasks/abc350_e,nan
Transpose,https://atcoder.jp/contests/abc350/tasks/abc350_f,nan
Mediator,https://atcoder.jp/contests/abc350/tasks/abc350_g,nan
The bottom of the ninth,https://atcoder.jp/contests/abc351/tasks/abc351_a,nan
Spot the Difference,https://atcoder.jp/contests/abc351/tasks/abc351_b,nan
Merge the balls,https://atcoder.jp/contests/abc351/tasks/abc351_c,nan
Grid and Magnet,https://atcoder.jp/contests/abc351/tasks/abc351_d,nan
Jump Distance Sum,https://atcoder.jp/contests/abc351/tasks/abc351_e,nan
Double Sum,https://atcoder.jp/contests/abc351/tasks/abc351_f,nan
Hash on Tree,https://atcoder.jp/contests/abc351/tasks/abc351_g,nan
AtCoder Line,https://atcoder.jp/contests/abc352/tasks/abc352_a,nan
Typing,https://atcoder.jp/contests/abc352/tasks/abc352_b,nan
Standing On The Shoulders,https://atcoder.jp/contests/abc352/tasks/abc352_c,nan
Permutation Subsequence,https://atcoder.jp/contests/abc352/tasks/abc352_d,nan
Clique Connect,https://atcoder.jp/contests/abc352/tasks/abc352_e,nan
Estimate Order,https://atcoder.jp/contests/abc352/tasks/abc352_f,nan
Socks 3,https://atcoder.jp/contests/abc352/tasks/abc352_g,nan
Buildings,https://atcoder.jp/contests/abc353/tasks/abc353_a,nan
AtCoder Amusement Park,https://atcoder.jp/contests/abc353/tasks/abc353_b,nan
Sigma Problem,https://atcoder.jp/contests/abc353/tasks/abc353_c,nan
Another Sigma Problem,https://atcoder.jp/contests/abc353/tasks/abc353_d,nan
Yet Another Sigma Problem,https://atcoder.jp/contests/abc353/tasks/abc353_e,nan
Tile Distance,https://atcoder.jp/contests/abc353/tasks/abc353_f,nan
Merchant Takahashi,https://atcoder.jp/contests/abc353/tasks/abc353_g,nan
Exponential Plant,https://atcoder.jp/contests/abc354/tasks/abc354_a,nan
AtCoder Janken 2,https://atcoder.jp/contests/abc354/tasks/abc354_b,nan
AtCoder Magics,https://atcoder.jp/contests/abc354/tasks/abc354_c,nan
AtCoder Wallpaper,https://atcoder.jp/contests/abc354/tasks/abc354_d,nan
Remove Pairs,https://atcoder.jp/contests/abc354/tasks/abc354_e,nan
Useless for LIS,https://atcoder.jp/contests/abc354/tasks/abc354_f,nan
Select Strings,https://atcoder.jp/contests/abc354/tasks/abc354_g,nan
Who Ate the Cake?,https://atcoder.jp/contests/abc355/tasks/abc355_a,nan
Piano 2,https://atcoder.jp/contests/abc355/tasks/abc355_b,nan
Bingo 2,https://atcoder.jp/contests/abc355/tasks/abc355_c,nan
Intersecting Intervals,https://atcoder.jp/contests/abc355/tasks/abc355_d,nan
Guess the Sum,https://atcoder.jp/contests/abc355/tasks/abc355_e,nan
MST Query,https://atcoder.jp/contests/abc355/tasks/abc355_f,nan
Baseball,https://atcoder.jp/contests/abc355/tasks/abc355_g,nan
Subsegment Reverse,https://atcoder.jp/contests/abc356/tasks/abc356_a,nan
Nutrients,https://atcoder.jp/contests/abc356/tasks/abc356_b,nan
Keys,https://atcoder.jp/contests/abc356/tasks/abc356_c,nan
Masked Popcount,https://atcoder.jp/contests/abc356/tasks/abc356_d,nan
Max/Min,https://atcoder.jp/contests/abc356/tasks/abc356_e,nan
Distance Component Size Query,https://atcoder.jp/contests/abc356/tasks/abc356_f,nan
Freestyle,https://atcoder.jp/contests/abc356/tasks/abc356_g,nan
Sanitize Hands,https://atcoder.jp/contests/abc357/tasks/abc357_a,nan
Uppercase and Lowercase,https://atcoder.jp/contests/abc357/tasks/abc357_b,nan
Sierpinski carpet,https://atcoder.jp/contests/abc357/tasks/abc357_c,nan
88888888,https://atcoder.jp/contests/abc357/tasks/abc357_d,nan
Reachability in Functional Graph,https://atcoder.jp/contests/abc357/tasks/abc357_e,nan
Two Sequence Queries,https://atcoder.jp/contests/abc357/tasks/abc357_f,nan
Stair like Grid,https://atcoder.jp/contests/abc357/tasks/abc357_g,nan
Welcome to AtCoder Land,https://atcoder.jp/contests/abc358/tasks/abc358_a,nan
Ticket Counter,https://atcoder.jp/contests/abc358/tasks/abc358_b,nan
Popcorn,https://atcoder.jp/contests/abc358/tasks/abc358_c,nan
Souvenirs,https://atcoder.jp/contests/abc358/tasks/abc358_d,nan
Alphabet Tiles,https://atcoder.jp/contests/abc358/tasks/abc358_e,nan
Easiest Maze,https://atcoder.jp/contests/abc358/tasks/abc358_f,nan
AtCoder Tour,https://atcoder.jp/contests/abc358/tasks/abc358_g,nan
Count Takahashi,https://atcoder.jp/contests/abc359/tasks/abc359_a,nan
Couples,https://atcoder.jp/contests/abc359/tasks/abc359_b,nan
Tile Distance 2,https://atcoder.jp/contests/abc359/tasks/abc359_c,nan
Avoid K Palindrome,https://atcoder.jp/contests/abc359/tasks/abc359_d,nan
Water Tank,https://atcoder.jp/contests/abc359/tasks/abc359_e,nan
Tree Degree Optimization,https://atcoder.jp/contests/abc359/tasks/abc359_f,nan
Sum of Tree Distance,https://atcoder.jp/contests/abc359/tasks/abc359_g,nan
A Healthy Breakfast,https://atcoder.jp/contests/abc360/tasks/abc360_a,nan
Vertical Reading,https://atcoder.jp/contests/abc360/tasks/abc360_b,nan
Move It,https://atcoder.jp/contests/abc360/tasks/abc360_c,nan
Ghost Ants,https://atcoder.jp/contests/abc360/tasks/abc360_d,nan
Random Swaps of Balls,https://atcoder.jp/contests/abc360/tasks/abc360_e,nan
InterSections,https://atcoder.jp/contests/abc360/tasks/abc360_f,nan
Suitable Edit for LIS,https://atcoder.jp/contests/abc360/tasks/abc360_g,nan
Insert,https://atcoder.jp/contests/abc361/tasks/abc361_a,nan
Intesection of Cuboids,https://atcoder.jp/contests/abc361/tasks/abc361_b,nan
Make Them Narrow,https://atcoder.jp/contests/abc361/tasks/abc361_c,nan
Go Stone Puzzle,https://atcoder.jp/contests/abc361/tasks/abc361_d,nan
Tree and Hamilton Path 2,https://atcoder.jp/contests/abc361/tasks/abc361_e,nan
x = a^b,https://atcoder.jp/contests/abc361/tasks/abc361_f,nan
Go Territory,https://atcoder.jp/contests/abc361/tasks/abc361_g,nan
Buy a Pen,https://atcoder.jp/contests/abc362/tasks/abc362_a,nan
Right Triangle,https://atcoder.jp/contests/abc362/tasks/abc362_b,nan
Sum = 0,https://atcoder.jp/contests/abc362/tasks/abc362_c,nan
Shortest Path 3,https://atcoder.jp/contests/abc362/tasks/abc362_d,nan
Count Arithmetic Subsequences,https://atcoder.jp/contests/abc362/tasks/abc362_e,nan
Perfect Matching on a Tree,https://atcoder.jp/contests/abc362/tasks/abc362_f,nan
Count Substring Query,https://atcoder.jp/contests/abc362/tasks/abc362_g,nan
Piling Up,https://atcoder.jp/contests/abc363/tasks/abc363_a,nan
Japanese Cursed Doll,https://atcoder.jp/contests/abc363/tasks/abc363_b,nan
Avoid K Palindrome 2,https://atcoder.jp/contests/abc363/tasks/abc363_c,nan
Palindromic Number,https://atcoder.jp/contests/abc363/tasks/abc363_d,nan
Sinking Land,https://atcoder.jp/contests/abc363/tasks/abc363_e,nan
Palindromic Expression,https://atcoder.jp/contests/abc363/tasks/abc363_f,nan
Dynamic Scheduling,https://atcoder.jp/contests/abc363/tasks/abc363_g,nan
Glutton Takahashi,https://atcoder.jp/contests/abc364/tasks/abc364_a,nan
Grid Walk,https://atcoder.jp/contests/abc364/tasks/abc364_b,nan
Minimum Glutton,https://atcoder.jp/contests/abc364/tasks/abc364_c,nan
K th Nearest,https://atcoder.jp/contests/abc364/tasks/abc364_d,nan
Maximum Glutton,https://atcoder.jp/contests/abc364/tasks/abc364_e,nan
Range Connect MST,https://atcoder.jp/contests/abc364/tasks/abc364_f,nan
Last Major City,https://atcoder.jp/contests/abc364/tasks/abc364_g,nan
Leap Year,https://atcoder.jp/contests/abc365/tasks/abc365_a,nan
Second Best,https://atcoder.jp/contests/abc365/tasks/abc365_b,nan
Transportation Expenses,https://atcoder.jp/contests/abc365/tasks/abc365_c,nan
AtCoder Janken 3,https://atcoder.jp/contests/abc365/tasks/abc365_d,nan
Xor Sigma Problem,https://atcoder.jp/contests/abc365/tasks/abc365_e,nan
Takahashi on Grid,https://atcoder.jp/contests/abc365/tasks/abc365_f,nan
AtCoder Office,https://atcoder.jp/contests/abc365/tasks/abc365_g,nan
Election 2,https://atcoder.jp/contests/abc366/tasks/abc366_a,nan
Vertical Writing,https://atcoder.jp/contests/abc366/tasks/abc366_b,nan
Balls and Bag Query,https://atcoder.jp/contests/abc366/tasks/abc366_c,nan
Cuboid Sum Query,https://atcoder.jp/contests/abc366/tasks/abc366_d,nan
Manhattan Multifocal Ellipse,https://atcoder.jp/contests/abc366/tasks/abc366_e,nan
Maximum Composition,https://atcoder.jp/contests/abc366/tasks/abc366_f,nan
XOR Neighbors,https://atcoder.jp/contests/abc366/tasks/abc366_g,nan
Shout Everyday,https://atcoder.jp/contests/abc367/tasks/abc367_a,nan
Cut .0,https://atcoder.jp/contests/abc367/tasks/abc367_b,nan
Enumerate Sequences,https://atcoder.jp/contests/abc367/tasks/abc367_c,nan
Pedometer,https://atcoder.jp/contests/abc367/tasks/abc367_d,nan
Permute K times,https://atcoder.jp/contests/abc367/tasks/abc367_e,nan
Rearrange Query,https://atcoder.jp/contests/abc367/tasks/abc367_f,nan
Sum of (XOR^K or 0),https://atcoder.jp/contests/abc367/tasks/abc367_g,nan
Cut,https://atcoder.jp/contests/abc368/tasks/abc368_a,nan
Decrease 2 max elements,https://atcoder.jp/contests/abc368/tasks/abc368_b,nan
Triple Attack,https://atcoder.jp/contests/abc368/tasks/abc368_c,nan
Minimum Steiner Tree,https://atcoder.jp/contests/abc368/tasks/abc368_d,nan
Train Delay,https://atcoder.jp/contests/abc368/tasks/abc368_e,nan
Dividing Game,https://atcoder.jp/contests/abc368/tasks/abc368_f,nan
Add and Multiply Queries,https://atcoder.jp/contests/abc368/tasks/abc368_g,nan
369,https://atcoder.jp/contests/abc369/tasks/abc369_a,nan
Piano 3,https://atcoder.jp/contests/abc369/tasks/abc369_b,nan
Count Arithmetic Subarrays,https://atcoder.jp/contests/abc369/tasks/abc369_c,nan
Bonus EXP,https://atcoder.jp/contests/abc369/tasks/abc369_d,nan
Sightseeing Tour,https://atcoder.jp/contests/abc369/tasks/abc369_e,nan
Gather Coins,https://atcoder.jp/contests/abc369/tasks/abc369_f,nan
As far as possible,https://atcoder.jp/contests/abc369/tasks/abc369_g,nan
Raise Both Hands,https://atcoder.jp/contests/abc370/tasks/abc370_a,nan
Binary Alchemy,https://atcoder.jp/contests/abc370/tasks/abc370_b,nan
Word Ladder,https://atcoder.jp/contests/abc370/tasks/abc370_c,nan
Cross Explosion,https://atcoder.jp/contests/abc370/tasks/abc370_d,nan
Avoid K Partition,https://atcoder.jp/contests/abc370/tasks/abc370_e,nan
Cake Division,https://atcoder.jp/contests/abc370/tasks/abc370_f,nan
Divisible by 3,https://atcoder.jp/contests/abc370/tasks/abc370_g,nan
Jiro,https://atcoder.jp/contests/abc371/tasks/abc371_a,nan
Taro,https://atcoder.jp/contests/abc371/tasks/abc371_b,nan
Make Isomorphic,https://atcoder.jp/contests/abc371/tasks/abc371_c,nan
1D Country,https://atcoder.jp/contests/abc371/tasks/abc371_d,nan
I Hate Sigma Problems,https://atcoder.jp/contests/abc371/tasks/abc371_e,nan
Takahashi in Narrow Road,https://atcoder.jp/contests/abc371/tasks/abc371_f,nan
Lexicographically Smallest Permutation,https://atcoder.jp/contests/abc371/tasks/abc371_g,nan
delete .,https://atcoder.jp/contests/abc372/tasks/abc372_a,nan
3^A,https://atcoder.jp/contests/abc372/tasks/abc372_b,nan
Count ABC Again,https://atcoder.jp/contests/abc372/tasks/abc372_c,nan
Buildings,https://atcoder.jp/contests/abc372/tasks/abc372_d,nan
K th Largest Connected Components,https://atcoder.jp/contests/abc372/tasks/abc372_e,nan
Teleporting Takahashi 2,https://atcoder.jp/contests/abc372/tasks/abc372_f,nan
Ax + By < C,https://atcoder.jp/contests/abc372/tasks/abc372_g,nan
September,https://atcoder.jp/contests/abc373/tasks/abc373_a,nan
1D Keyboard,https://atcoder.jp/contests/abc373/tasks/abc373_b,nan
Max Ai+Bj,https://atcoder.jp/contests/abc373/tasks/abc373_c,nan
Hidden Weights,https://atcoder.jp/contests/abc373/tasks/abc373_d,nan
How to Win the Election,https://atcoder.jp/contests/abc373/tasks/abc373_e,nan
Knapsack with Diminishing Values,https://atcoder.jp/contests/abc373/tasks/abc373_f,nan
No Cross Matching,https://atcoder.jp/contests/abc373/tasks/abc373_g,nan
Takahashi san 2,https://atcoder.jp/contests/abc374/tasks/abc374_a,nan
Unvarnished Report,https://atcoder.jp/contests/abc374/tasks/abc374_b,nan
Separated Lunch,https://atcoder.jp/contests/abc374/tasks/abc374_c,nan
Laser Marking,https://atcoder.jp/contests/abc374/tasks/abc374_d,nan
Sensor Optimization Dilemma 2,https://atcoder.jp/contests/abc374/tasks/abc374_e,nan
Shipping,https://atcoder.jp/contests/abc374/tasks/abc374_f,nan
Only One Product Name,https://atcoder.jp/contests/abc374/tasks/abc374_g,nan
Seats,https://atcoder.jp/contests/abc375/tasks/abc375_a,nan
Traveling Takahashi Problem,https://atcoder.jp/contests/abc375/tasks/abc375_b,nan
Spiral Rotation,https://atcoder.jp/contests/abc375/tasks/abc375_c,nan
ABA,https://atcoder.jp/contests/abc375/tasks/abc375_d,nan
3 Team Division,https://atcoder.jp/contests/abc375/tasks/abc375_e,nan
Road Blocked,https://atcoder.jp/contests/abc375/tasks/abc375_f,nan
Road Blocked 2,https://atcoder.jp/contests/abc375/tasks/abc375_g,nan
Candy Button,https://atcoder.jp/contests/abc376/tasks/abc376_a,nan
Hands on Ring (Easy),https://atcoder.jp/contests/abc376/tasks/abc376_b,nan
Prepare Another Box,https://atcoder.jp/contests/abc376/tasks/abc376_c,nan
Cycle,https://atcoder.jp/contests/abc376/tasks/abc376_d,nan
Max × Sum,https://atcoder.jp/contests/abc376/tasks/abc376_e,nan
Hands on Ring (Hard),https://atcoder.jp/contests/abc376/tasks/abc376_f,nan
Treasure Hunting,https://atcoder.jp/contests/abc376/tasks/abc376_g,nan
Rearranging ABC,https://atcoder.jp/contests/abc377/tasks/abc377_a,nan
Avoid Rook Attack,https://atcoder.jp/contests/abc377/tasks/abc377_b,nan
Avoid Knight Attack,https://atcoder.jp/contests/abc377/tasks/abc377_c,nan
Many Segments 2,https://atcoder.jp/contests/abc377/tasks/abc377_d,nan
Permute K times 2,https://atcoder.jp/contests/abc377/tasks/abc377_e,nan
Avoid Queen Attack,https://atcoder.jp/contests/abc377/tasks/abc377_f,nan
Edit to Match,https://atcoder.jp/contests/abc377/tasks/abc377_g,nan
Repeat ACL,https://atcoder.jp/contests/abl/tasks/abl_a,nan
Integer Preference,https://atcoder.jp/contests/abl/tasks/abl_b,nan
Connect Cities,https://atcoder.jp/contests/abl/tasks/abl_c,nan
Flat Subsequence,https://atcoder.jp/contests/abl/tasks/abl_d,nan
Replace Digits,https://atcoder.jp/contests/abl/tasks/abl_e,nan
Heights and Pairs,https://atcoder.jp/contests/abl/tasks/abl_f,nan
Reachable Towns,https://atcoder.jp/contests/acl1/tasks/acl1_a,nan
Sum is Multiple,https://atcoder.jp/contests/acl1/tasks/acl1_b,nan
Moving Pieces,https://atcoder.jp/contests/acl1/tasks/acl1_c,nan
Keep Distances,https://atcoder.jp/contests/acl1/tasks/acl1_d,nan
Shuffle Window,https://atcoder.jp/contests/acl1/tasks/acl1_e,nan
Center Rearranging,https://atcoder.jp/contests/acl1/tasks/acl1_f,nan
BBQ Easy,https://atcoder.jp/contests/agc001/tasks/agc001_a,nan
Mysterious Light,https://atcoder.jp/contests/agc001/tasks/agc001_b,nan
Shorten Diameter,https://atcoder.jp/contests/agc001/tasks/agc001_c,nan
Arrays and Palindrome,https://atcoder.jp/contests/agc001/tasks/agc001_d,nan
BBQ Hard,https://atcoder.jp/contests/agc001/tasks/agc001_e,nan
Wide Swap,https://atcoder.jp/contests/agc001/tasks/agc001_f,nan
Range Product,https://atcoder.jp/contests/agc002/tasks/agc002_a,nan
Box and Ball,https://atcoder.jp/contests/agc002/tasks/agc002_b,nan
Knot Puzzle,https://atcoder.jp/contests/agc002/tasks/agc002_c,nan
Stamp Rally,https://atcoder.jp/contests/agc002/tasks/agc002_d,nan
Candy Piles,https://atcoder.jp/contests/agc002/tasks/agc002_e,nan
Leftmost Ball,https://atcoder.jp/contests/agc002/tasks/agc002_f,nan
Wanna go back home,https://atcoder.jp/contests/agc003/tasks/agc003_a,nan
Simplified mahjong,https://atcoder.jp/contests/agc003/tasks/agc003_b,nan
BBuBBBlesort!,https://atcoder.jp/contests/agc003/tasks/agc003_c,nan
Anticube,https://atcoder.jp/contests/agc003/tasks/agc003_d,nan
Sequential operations on Sequence,https://atcoder.jp/contests/agc003/tasks/agc003_e,nan
Fraction of Fractal,https://atcoder.jp/contests/agc003/tasks/agc003_f,nan
Divide a Cuboid,https://atcoder.jp/contests/agc004/tasks/agc004_a,nan
Colorful Slimes,https://atcoder.jp/contests/agc004/tasks/agc004_b,nan
AND Grid,https://atcoder.jp/contests/agc004/tasks/agc004_c,nan
Teleporter,https://atcoder.jp/contests/agc004/tasks/agc004_d,nan
Salvage Robots,https://atcoder.jp/contests/agc004/tasks/agc004_e,nan
Namori,https://atcoder.jp/contests/agc004/tasks/agc004_f,nan
STring,https://atcoder.jp/contests/agc005/tasks/agc005_a,nan
Minimum Sum,https://atcoder.jp/contests/agc005/tasks/agc005_b,nan
Tree Restoring,https://atcoder.jp/contests/agc005/tasks/agc005_c,nan
~K Perm Counting,https://atcoder.jp/contests/agc005/tasks/agc005_d,nan
Sugigma: The Showdown,https://atcoder.jp/contests/agc005/tasks/agc005_e,nan
Many Easy Problems,https://atcoder.jp/contests/agc005/tasks/agc005_f,nan
Prefix and Suffix,https://atcoder.jp/contests/agc006/tasks/agc006_a,nan
Median Pyramid Easy,https://atcoder.jp/contests/agc006/tasks/agc006_b,nan
Rabbit Exercise,https://atcoder.jp/contests/agc006/tasks/agc006_c,nan
Median Pyramid Hard,https://atcoder.jp/contests/agc006/tasks/agc006_d,nan
Rotate 3x3,https://atcoder.jp/contests/agc006/tasks/agc006_e,nan
Blackout,https://atcoder.jp/contests/agc006/tasks/agc006_f,nan
Shik and Stone,https://atcoder.jp/contests/agc007/tasks/agc007_a,nan
Construct Sequences,https://atcoder.jp/contests/agc007/tasks/agc007_b,nan
Pushing Balls,https://atcoder.jp/contests/agc007/tasks/agc007_c,nan
Shik and Game,https://atcoder.jp/contests/agc007/tasks/agc007_d,nan
Shik and Travel,https://atcoder.jp/contests/agc007/tasks/agc007_e,nan
Shik and Copying String,https://atcoder.jp/contests/agc007/tasks/agc007_f,nan
Simple Calculator,https://atcoder.jp/contests/agc008/tasks/agc008_a,nan
Contiguous Repainting,https://atcoder.jp/contests/agc008/tasks/agc008_b,nan
Tetromino Tiling,https://atcoder.jp/contests/agc008/tasks/agc008_c,nan
K th K,https://atcoder.jp/contests/agc008/tasks/agc008_d,nan
Next or Nextnext,https://atcoder.jp/contests/agc008/tasks/agc008_e,nan
Black Radius,https://atcoder.jp/contests/agc008/tasks/agc008_f,nan
Multiple Array,https://atcoder.jp/contests/agc009/tasks/agc009_a,nan
Tournament,https://atcoder.jp/contests/agc009/tasks/agc009_b,nan
Division into Two,https://atcoder.jp/contests/agc009/tasks/agc009_c,nan
Uninity,https://atcoder.jp/contests/agc009/tasks/agc009_d,nan
Eternal Average,https://atcoder.jp/contests/agc009/tasks/agc009_e,nan
Addition,https://atcoder.jp/contests/agc010/tasks/agc010_a,nan
Boxes,https://atcoder.jp/contests/agc010/tasks/agc010_b,nan
Cleaning,https://atcoder.jp/contests/agc010/tasks/agc010_c,nan
Decrementing,https://atcoder.jp/contests/agc010/tasks/agc010_d,nan
Rearranging,https://atcoder.jp/contests/agc010/tasks/agc010_e,nan
Tree Game,https://atcoder.jp/contests/agc010/tasks/agc010_f,nan
Airport Bus,https://atcoder.jp/contests/agc011/tasks/agc011_a,nan
Colorful Creatures,https://atcoder.jp/contests/agc011/tasks/agc011_b,nan
Squared Graph,https://atcoder.jp/contests/agc011/tasks/agc011_c,nan
Half Reflector,https://atcoder.jp/contests/agc011/tasks/agc011_d,nan
Increasing Numbers,https://atcoder.jp/contests/agc011/tasks/agc011_e,nan
Train Service Planning,https://atcoder.jp/contests/agc011/tasks/agc011_f,nan
AtCoder Group Contest,https://atcoder.jp/contests/agc012/tasks/agc012_a,nan
Splatter Painting,https://atcoder.jp/contests/agc012/tasks/agc012_b,nan
Tautonym Puzzle,https://atcoder.jp/contests/agc012/tasks/agc012_c,nan
Colorful Balls,https://atcoder.jp/contests/agc012/tasks/agc012_d,nan
Camel and Oases,https://atcoder.jp/contests/agc012/tasks/agc012_e,nan
Prefix Median,https://atcoder.jp/contests/agc012/tasks/agc012_f,nan
Sorted Arrays,https://atcoder.jp/contests/agc013/tasks/agc013_a,nan
Hamiltonish Path,https://atcoder.jp/contests/agc013/tasks/agc013_b,nan
Ants on a Circle,https://atcoder.jp/contests/agc013/tasks/agc013_c,nan
Piling Up,https://atcoder.jp/contests/agc013/tasks/agc013_d,nan
Placing Squares,https://atcoder.jp/contests/agc013/tasks/agc013_e,nan
Two Faced Cards,https://atcoder.jp/contests/agc013/tasks/agc013_f,nan
Cookie Exchanges,https://atcoder.jp/contests/agc014/tasks/agc014_a,nan
Unplanned Queries,https://atcoder.jp/contests/agc014/tasks/agc014_b,nan
Closed Rooms,https://atcoder.jp/contests/agc014/tasks/agc014_c,nan
Black and White Tree,https://atcoder.jp/contests/agc014/tasks/agc014_d,nan
Blue and Red Tree,https://atcoder.jp/contests/agc014/tasks/agc014_e,nan
Strange Sorting,https://atcoder.jp/contests/agc014/tasks/agc014_f,nan
A+...+B Problem,https://atcoder.jp/contests/agc015/tasks/agc015_a,nan
Evilator,https://atcoder.jp/contests/agc015/tasks/agc015_b,nan
Nuske vs Phantom Thnook,https://atcoder.jp/contests/agc015/tasks/agc015_c,nan
A or...or B Problem,https://atcoder.jp/contests/agc015/tasks/agc015_d,nan
Mr.Aoki Incubator,https://atcoder.jp/contests/agc015/tasks/agc015_e,nan
Kenus the Ancient Greek,https://atcoder.jp/contests/agc015/tasks/agc015_f,nan
Shrinking,https://atcoder.jp/contests/agc016/tasks/agc016_a,nan
Colorful Hats,https://atcoder.jp/contests/agc016/tasks/agc016_b,nan
+/  Rectangle,https://atcoder.jp/contests/agc016/tasks/agc016_c,nan
XOR Replace,https://atcoder.jp/contests/agc016/tasks/agc016_d,nan
Poor Turkeys,https://atcoder.jp/contests/agc016/tasks/agc016_e,nan
Games on DAG,https://atcoder.jp/contests/agc016/tasks/agc016_f,nan
Biscuits,https://atcoder.jp/contests/agc017/tasks/agc017_a,nan
Moderate Differences,https://atcoder.jp/contests/agc017/tasks/agc017_b,nan
Snuke and Spells,https://atcoder.jp/contests/agc017/tasks/agc017_c,nan
Game on Tree,https://atcoder.jp/contests/agc017/tasks/agc017_d,nan
Jigsaw,https://atcoder.jp/contests/agc017/tasks/agc017_e,nan
Zigzag,https://atcoder.jp/contests/agc017/tasks/agc017_f,nan
Getting Difference,https://atcoder.jp/contests/agc018/tasks/agc018_a,nan
Sports Festival,https://atcoder.jp/contests/agc018/tasks/agc018_b,nan
Coins,https://atcoder.jp/contests/agc018/tasks/agc018_c,nan
Tree and Hamilton Path,https://atcoder.jp/contests/agc018/tasks/agc018_d,nan
Sightseeing Plan,https://atcoder.jp/contests/agc018/tasks/agc018_e,nan
Two Trees,https://atcoder.jp/contests/agc018/tasks/agc018_f,nan
Ice Tea Store,https://atcoder.jp/contests/agc019/tasks/agc019_a,nan
Reverse and Compare,https://atcoder.jp/contests/agc019/tasks/agc019_b,nan
Fountain Walk,https://atcoder.jp/contests/agc019/tasks/agc019_c,nan
Shift and Flip,https://atcoder.jp/contests/agc019/tasks/agc019_d,nan
Shuffle and Swap,https://atcoder.jp/contests/agc019/tasks/agc019_e,nan
Yes or No,https://atcoder.jp/contests/agc019/tasks/agc019_f,nan
Move and Win,https://atcoder.jp/contests/agc020/tasks/agc020_a,nan
Ice Rink Game,https://atcoder.jp/contests/agc020/tasks/agc020_b,nan
Median Sum,https://atcoder.jp/contests/agc020/tasks/agc020_c,nan
Min Max Repetition,https://atcoder.jp/contests/agc020/tasks/agc020_d,nan
Encoding Subsets,https://atcoder.jp/contests/agc020/tasks/agc020_e,nan
Arcs on a Circle,https://atcoder.jp/contests/agc020/tasks/agc020_f,nan
Digit Sum 2,https://atcoder.jp/contests/agc021/tasks/agc021_a,nan
Holes,https://atcoder.jp/contests/agc021/tasks/agc021_b,nan
Tiling,https://atcoder.jp/contests/agc021/tasks/agc021_c,nan
Reversed LCS,https://atcoder.jp/contests/agc021/tasks/agc021_d,nan
Ball Eat Chameleons,https://atcoder.jp/contests/agc021/tasks/agc021_e,nan
Trinity,https://atcoder.jp/contests/agc021/tasks/agc021_f,nan
Diverse Word,https://atcoder.jp/contests/agc022/tasks/agc022_a,nan
GCD Sequence,https://atcoder.jp/contests/agc022/tasks/agc022_b,nan
Remainder Game,https://atcoder.jp/contests/agc022/tasks/agc022_c,nan
Shopping,https://atcoder.jp/contests/agc022/tasks/agc022_d,nan
Median Replace,https://atcoder.jp/contests/agc022/tasks/agc022_e,nan
Checkers,https://atcoder.jp/contests/agc022/tasks/agc022_f,nan
Zero Sum Ranges,https://atcoder.jp/contests/agc023/tasks/agc023_a,nan
Find Symmetries,https://atcoder.jp/contests/agc023/tasks/agc023_b,nan
Painting Machines,https://atcoder.jp/contests/agc023/tasks/agc023_c,nan
Go Home,https://atcoder.jp/contests/agc023/tasks/agc023_d,nan
Inversions,https://atcoder.jp/contests/agc023/tasks/agc023_e,nan
01 on Tree,https://atcoder.jp/contests/agc023/tasks/agc023_f,nan
Fairness,https://atcoder.jp/contests/agc024/tasks/agc024_a,nan
Backfront,https://atcoder.jp/contests/agc024/tasks/agc024_b,nan
Sequence Growing Easy,https://atcoder.jp/contests/agc024/tasks/agc024_c,nan
Isomorphism Freak,https://atcoder.jp/contests/agc024/tasks/agc024_d,nan
Sequence Growing Hard,https://atcoder.jp/contests/agc024/tasks/agc024_e,nan
Simple Subsequence Problem,https://atcoder.jp/contests/agc024/tasks/agc024_f,nan
Digits Sum,https://atcoder.jp/contests/agc025/tasks/agc025_a,nan
RGB Coloring,https://atcoder.jp/contests/agc025/tasks/agc025_b,nan
Interval Game,https://atcoder.jp/contests/agc025/tasks/agc025_c,nan
Choosing Points,https://atcoder.jp/contests/agc025/tasks/agc025_d,nan
Walking on a Tree,https://atcoder.jp/contests/agc025/tasks/agc025_e,nan
Addition and Andition,https://atcoder.jp/contests/agc025/tasks/agc025_f,nan
Colorful Slimes 2,https://atcoder.jp/contests/agc026/tasks/agc026_a,nan
rng_10s,https://atcoder.jp/contests/agc026/tasks/agc026_b,nan
String Coloring,https://atcoder.jp/contests/agc026/tasks/agc026_c,nan
Histogram Coloring,https://atcoder.jp/contests/agc026/tasks/agc026_d,nan
Synchronized Subsequence,https://atcoder.jp/contests/agc026/tasks/agc026_e,nan
Manju Game,https://atcoder.jp/contests/agc026/tasks/agc026_f,nan
Candy Distribution Again,https://atcoder.jp/contests/agc027/tasks/agc027_a,nan
Garbage Collector,https://atcoder.jp/contests/agc027/tasks/agc027_b,nan
ABland Yard,https://atcoder.jp/contests/agc027/tasks/agc027_c,nan
Modulo Matrix,https://atcoder.jp/contests/agc027/tasks/agc027_d,nan
ABBreviate,https://atcoder.jp/contests/agc027/tasks/agc027_e,nan
Grafting,https://atcoder.jp/contests/agc027/tasks/agc027_f,nan
Two Abbreviations,https://atcoder.jp/contests/agc028/tasks/agc028_a,nan
Removing Blocks,https://atcoder.jp/contests/agc028/tasks/agc028_b,nan
Min Cost Cycle,https://atcoder.jp/contests/agc028/tasks/agc028_c,nan
Chords,https://atcoder.jp/contests/agc028/tasks/agc028_d,nan
High Elements,https://atcoder.jp/contests/agc028/tasks/agc028_e,nan
Reachable Cells,https://atcoder.jp/contests/agc028/tasks/agc028_f,nan
Reachable Cells,https://atcoder.jp/contests/agc028/tasks/agc028_f2,nan
Irreversible operation,https://atcoder.jp/contests/agc029/tasks/agc029_a,nan
Powers of two,https://atcoder.jp/contests/agc029/tasks/agc029_b,nan
Lexicographic constraints,https://atcoder.jp/contests/agc029/tasks/agc029_c,nan
Grid game,https://atcoder.jp/contests/agc029/tasks/agc029_d,nan
Wandering TKHS,https://atcoder.jp/contests/agc029/tasks/agc029_e,nan
Construction of a tree,https://atcoder.jp/contests/agc029/tasks/agc029_f,nan
Poisonous Cookies,https://atcoder.jp/contests/agc030/tasks/agc030_a,nan
Tree Burning,https://atcoder.jp/contests/agc030/tasks/agc030_b,nan
Coloring Torus,https://atcoder.jp/contests/agc030/tasks/agc030_c,nan
Inversion Sum,https://atcoder.jp/contests/agc030/tasks/agc030_d,nan
Less than 3,https://atcoder.jp/contests/agc030/tasks/agc030_e,nan
Permutation and Minimum,https://atcoder.jp/contests/agc030/tasks/agc030_f,nan
Colorful Subsequence,https://atcoder.jp/contests/agc031/tasks/agc031_a,nan
Reversi,https://atcoder.jp/contests/agc031/tasks/agc031_b,nan
Differ by 1 Bit,https://atcoder.jp/contests/agc031/tasks/agc031_c,nan
A Sequence of Permutations,https://atcoder.jp/contests/agc031/tasks/agc031_d,nan
Snuke the Phantom Thief,https://atcoder.jp/contests/agc031/tasks/agc031_e,nan
Walk on Graph,https://atcoder.jp/contests/agc031/tasks/agc031_f,nan
Limited Insertion,https://atcoder.jp/contests/agc032/tasks/agc032_a,nan
Balanced Neighbors,https://atcoder.jp/contests/agc032/tasks/agc032_b,nan
Three Circuits,https://atcoder.jp/contests/agc032/tasks/agc032_c,nan
Rotation Sort,https://atcoder.jp/contests/agc032/tasks/agc032_d,nan
Modulo Pairing,https://atcoder.jp/contests/agc032/tasks/agc032_e,nan
One Third,https://atcoder.jp/contests/agc032/tasks/agc032_f,nan
Darker and Darker,https://atcoder.jp/contests/agc033/tasks/agc033_a,nan
LRUD Game,https://atcoder.jp/contests/agc033/tasks/agc033_b,nan
Removing Coins,https://atcoder.jp/contests/agc033/tasks/agc033_c,nan
Complexity,https://atcoder.jp/contests/agc033/tasks/agc033_d,nan
Go around a Circle,https://atcoder.jp/contests/agc033/tasks/agc033_e,nan
Adding Edges,https://atcoder.jp/contests/agc033/tasks/agc033_f,nan
Kenken Race,https://atcoder.jp/contests/agc034/tasks/agc034_a,nan
ABC,https://atcoder.jp/contests/agc034/tasks/agc034_b,nan
Tests,https://atcoder.jp/contests/agc034/tasks/agc034_c,nan
Manhattan Max Matching,https://atcoder.jp/contests/agc034/tasks/agc034_d,nan
Complete Compress,https://atcoder.jp/contests/agc034/tasks/agc034_e,nan
RNG and XOR,https://atcoder.jp/contests/agc034/tasks/agc034_f,nan
XOR Circle,https://atcoder.jp/contests/agc035/tasks/agc035_a,nan
Even Degrees,https://atcoder.jp/contests/agc035/tasks/agc035_b,nan
Skolem XOR Tree,https://atcoder.jp/contests/agc035/tasks/agc035_c,nan
Add and Remove,https://atcoder.jp/contests/agc035/tasks/agc035_d,nan
Develop,https://atcoder.jp/contests/agc035/tasks/agc035_e,nan
Two Histograms,https://atcoder.jp/contests/agc035/tasks/agc035_f,nan
Triangle,https://atcoder.jp/contests/agc036/tasks/agc036_a,nan
Do Not Duplicate,https://atcoder.jp/contests/agc036/tasks/agc036_b,nan
GP 2,https://atcoder.jp/contests/agc036/tasks/agc036_c,nan
Negative Cycle,https://atcoder.jp/contests/agc036/tasks/agc036_d,nan
ABC String,https://atcoder.jp/contests/agc036/tasks/agc036_e,nan
Square Constraints,https://atcoder.jp/contests/agc036/tasks/agc036_f,nan
Dividing a String,https://atcoder.jp/contests/agc037/tasks/agc037_a,nan
RGB Balls,https://atcoder.jp/contests/agc037/tasks/agc037_b,nan
Numbers on a Circle,https://atcoder.jp/contests/agc037/tasks/agc037_c,nan
Sorting a Grid,https://atcoder.jp/contests/agc037/tasks/agc037_d,nan
Reversing and Concatenating,https://atcoder.jp/contests/agc037/tasks/agc037_e,nan
Counting of Subarrays,https://atcoder.jp/contests/agc037/tasks/agc037_f,nan
01 Matrix,https://atcoder.jp/contests/agc038/tasks/agc038_a,nan
Sorting a Segment,https://atcoder.jp/contests/agc038/tasks/agc038_b,nan
LCMs,https://atcoder.jp/contests/agc038/tasks/agc038_c,nan
Unique Path,https://atcoder.jp/contests/agc038/tasks/agc038_d,nan
Gachapon,https://atcoder.jp/contests/agc038/tasks/agc038_e,nan
Two Permutations,https://atcoder.jp/contests/agc038/tasks/agc038_f,nan
Connection and Disconnection,https://atcoder.jp/contests/agc039/tasks/agc039_a,nan
Graph Partition,https://atcoder.jp/contests/agc039/tasks/agc039_b,nan
Division by Two with Something,https://atcoder.jp/contests/agc039/tasks/agc039_c,nan
Incenters,https://atcoder.jp/contests/agc039/tasks/agc039_d,nan
Pairing Points,https://atcoder.jp/contests/agc039/tasks/agc039_e,nan
Min Product Sum,https://atcoder.jp/contests/agc039/tasks/agc039_f,nan
><,https://atcoder.jp/contests/agc040/tasks/agc040_a,nan
Two Contests,https://atcoder.jp/contests/agc040/tasks/agc040_b,nan
Neither AB nor BA,https://atcoder.jp/contests/agc040/tasks/agc040_c,nan
Balance Beam,https://atcoder.jp/contests/agc040/tasks/agc040_d,nan
Prefix Suffix Addition,https://atcoder.jp/contests/agc040/tasks/agc040_e,nan
Two Pieces,https://atcoder.jp/contests/agc040/tasks/agc040_f,nan
Table Tennis Training,https://atcoder.jp/contests/agc041/tasks/agc041_a,nan
Voting Judges,https://atcoder.jp/contests/agc041/tasks/agc041_b,nan
Domino Quality,https://atcoder.jp/contests/agc041/tasks/agc041_c,nan
Problem Scores,https://atcoder.jp/contests/agc041/tasks/agc041_d,nan
Balancing Network,https://atcoder.jp/contests/agc041/tasks/agc041_e,nan
Histogram Rooks,https://atcoder.jp/contests/agc041/tasks/agc041_f,nan
Range Flip Find Route,https://atcoder.jp/contests/agc043/tasks/agc043_a,nan
123 Triangle,https://atcoder.jp/contests/agc043/tasks/agc043_b,nan
Giant Graph,https://atcoder.jp/contests/agc043/tasks/agc043_c,nan
Merge Triplets,https://atcoder.jp/contests/agc043/tasks/agc043_d,nan
Topology,https://atcoder.jp/contests/agc043/tasks/agc043_e,nan
Jewelry Box,https://atcoder.jp/contests/agc043/tasks/agc043_f,nan
Pay to Win,https://atcoder.jp/contests/agc044/tasks/agc044_a,nan
Joker,https://atcoder.jp/contests/agc044/tasks/agc044_b,nan
Strange Dance,https://atcoder.jp/contests/agc044/tasks/agc044_c,nan
Guess the Password,https://atcoder.jp/contests/agc044/tasks/agc044_d,nan
Random Pawn,https://atcoder.jp/contests/agc044/tasks/agc044_e,nan
Name Preserving Clubs,https://atcoder.jp/contests/agc044/tasks/agc044_f,nan
Xor Battle,https://atcoder.jp/contests/agc045/tasks/agc045_a,nan
01 Unbalanced,https://atcoder.jp/contests/agc045/tasks/agc045_b,nan
Range Set,https://atcoder.jp/contests/agc045/tasks/agc045_c,nan
Lamps and Buttons,https://atcoder.jp/contests/agc045/tasks/agc045_d,nan
Fragile Balls,https://atcoder.jp/contests/agc045/tasks/agc045_e,nan
Division into Multiples,https://atcoder.jp/contests/agc045/tasks/agc045_f,nan
"Takahashikun, The Strider",https://atcoder.jp/contests/agc046/tasks/agc046_a,nan
Extension,https://atcoder.jp/contests/agc046/tasks/agc046_b,nan
Shift,https://atcoder.jp/contests/agc046/tasks/agc046_c,nan
Secret Passage,https://atcoder.jp/contests/agc046/tasks/agc046_d,nan
Permutation Cover,https://atcoder.jp/contests/agc046/tasks/agc046_e,nan
Forbidden Tournament,https://atcoder.jp/contests/agc046/tasks/agc046_f,nan
Integer Product,https://atcoder.jp/contests/agc047/tasks/agc047_a,nan
First Second,https://atcoder.jp/contests/agc047/tasks/agc047_b,nan
Product Modulo,https://atcoder.jp/contests/agc047/tasks/agc047_c,nan
Twin Binary Trees,https://atcoder.jp/contests/agc047/tasks/agc047_d,nan
Product Simulation,https://atcoder.jp/contests/agc047/tasks/agc047_e,nan
Rooks,https://atcoder.jp/contests/agc047/tasks/agc047_f,nan
atcoder < S,https://atcoder.jp/contests/agc048/tasks/agc048_a,nan
Bracket Score,https://atcoder.jp/contests/agc048/tasks/agc048_b,nan
Penguin Skating,https://atcoder.jp/contests/agc048/tasks/agc048_c,nan
Pocky Game,https://atcoder.jp/contests/agc048/tasks/agc048_d,nan
Strange Relation,https://atcoder.jp/contests/agc048/tasks/agc048_e,nan
01 Record,https://atcoder.jp/contests/agc048/tasks/agc048_f,nan
Erasing Vertices,https://atcoder.jp/contests/agc049/tasks/agc049_a,nan
Flip Digits,https://atcoder.jp/contests/agc049/tasks/agc049_b,nan
Robots,https://atcoder.jp/contests/agc049/tasks/agc049_c,nan
Convex Sequence,https://atcoder.jp/contests/agc049/tasks/agc049_d,nan
Increment Decrement,https://atcoder.jp/contests/agc049/tasks/agc049_e,nan
Happy Sequence,https://atcoder.jp/contests/agc049/tasks/agc049_f,nan
AtCoder Jumper,https://atcoder.jp/contests/agc050/tasks/agc050_a,nan
Three Coins,https://atcoder.jp/contests/agc050/tasks/agc050_b,nan
Block Game,https://atcoder.jp/contests/agc050/tasks/agc050_c,nan
Shopping,https://atcoder.jp/contests/agc050/tasks/agc050_d,nan
Three Traffic Lights,https://atcoder.jp/contests/agc050/tasks/agc050_e,nan
NAND Tree,https://atcoder.jp/contests/agc050/tasks/agc050_f,nan
Dodecagon,https://atcoder.jp/contests/agc051/tasks/agc051_a,nan
Bowling,https://atcoder.jp/contests/agc051/tasks/agc051_b,nan
Flipper,https://atcoder.jp/contests/agc051/tasks/agc051_c,nan
C4,https://atcoder.jp/contests/agc051/tasks/agc051_d,nan
Middle Point,https://atcoder.jp/contests/agc051/tasks/agc051_e,nan
rng_58's Last Problem,https://atcoder.jp/contests/agc051/tasks/agc051_f,nan
Long Common Subsequence,https://atcoder.jp/contests/agc052/tasks/agc052_a,nan
Tree Edges XOR,https://atcoder.jp/contests/agc052/tasks/agc052_b,nan
Nondivisible Prefix Sums,https://atcoder.jp/contests/agc052/tasks/agc052_c,nan
Equal LIS,https://atcoder.jp/contests/agc052/tasks/agc052_d,nan
3 Letters,https://atcoder.jp/contests/agc052/tasks/agc052_e,nan
Tree Vertices XOR,https://atcoder.jp/contests/agc052/tasks/agc052_f,nan
>< again,https://atcoder.jp/contests/agc053/tasks/agc053_a,nan
Taking the middle,https://atcoder.jp/contests/agc053/tasks/agc053_b,nan
Random Card Game,https://atcoder.jp/contests/agc053/tasks/agc053_c,nan
Everyone is a winner,https://atcoder.jp/contests/agc053/tasks/agc053_d,nan
More Peaks More Fun,https://atcoder.jp/contests/agc053/tasks/agc053_e,nan
ESPers,https://atcoder.jp/contests/agc053/tasks/agc053_f,nan
Remove Substrings,https://atcoder.jp/contests/agc054/tasks/agc054_a,nan
Greedy Division,https://atcoder.jp/contests/agc054/tasks/agc054_b,nan
Roughly Sorted,https://atcoder.jp/contests/agc054/tasks/agc054_c,nan
(ox),https://atcoder.jp/contests/agc054/tasks/agc054_d,nan
ZigZag Break,https://atcoder.jp/contests/agc054/tasks/agc054_e,nan
Decrement,https://atcoder.jp/contests/agc054/tasks/agc054_f,nan
ABC Identity,https://atcoder.jp/contests/agc055/tasks/agc055_a,nan
ABC Supremacy,https://atcoder.jp/contests/agc055/tasks/agc055_b,nan
Weird LIS,https://atcoder.jp/contests/agc055/tasks/agc055_c,nan
ABC Ultimatum,https://atcoder.jp/contests/agc055/tasks/agc055_d,nan
Set Merging,https://atcoder.jp/contests/agc055/tasks/agc055_e,nan
Creative Splitting,https://atcoder.jp/contests/agc055/tasks/agc055_f,nan
Three Cells per Row and Column,https://atcoder.jp/contests/agc056/tasks/agc056_a,nan
Range Argmax,https://atcoder.jp/contests/agc056/tasks/agc056_b,nan
01 Balanced,https://atcoder.jp/contests/agc056/tasks/agc056_c,nan
Subset Sum Game,https://atcoder.jp/contests/agc056/tasks/agc056_d,nan
Cheese,https://atcoder.jp/contests/agc056/tasks/agc056_e,nan
Degree Sequence in DFS Order,https://atcoder.jp/contests/agc056/tasks/agc056_f,nan
Antichain of Integer Strings,https://atcoder.jp/contests/agc057/tasks/agc057_a,nan
2A + x,https://atcoder.jp/contests/agc057/tasks/agc057_b,nan
Increment or Xor,https://atcoder.jp/contests/agc057/tasks/agc057_c,nan
Sum Avoidance,https://atcoder.jp/contests/agc057/tasks/agc057_d,nan
RowCol/ColRow Sort,https://atcoder.jp/contests/agc057/tasks/agc057_e,nan
Reflection,https://atcoder.jp/contests/agc057/tasks/agc057_f,nan
Make it Zigzag,https://atcoder.jp/contests/agc058/tasks/agc058_a,nan
Adjacent Chmax,https://atcoder.jp/contests/agc058/tasks/agc058_b,nan
Planar Tree,https://atcoder.jp/contests/agc058/tasks/agc058_c,nan
Yet Another ABC String,https://atcoder.jp/contests/agc058/tasks/agc058_d,nan
Nearer Permutation,https://atcoder.jp/contests/agc058/tasks/agc058_e,nan
Authentic Tree DP,https://atcoder.jp/contests/agc058/tasks/agc058_f,nan
My Last ABC Problem,https://atcoder.jp/contests/agc059/tasks/agc059_a,nan
Arrange Your Balls,https://atcoder.jp/contests/agc059/tasks/agc059_b,nan
Guessing Permutation for as Long as Possible,https://atcoder.jp/contests/agc059/tasks/agc059_c,nan
Distinct Elements on Subsegments,https://atcoder.jp/contests/agc059/tasks/agc059_d,nan
Grid 3 coloring,https://atcoder.jp/contests/agc059/tasks/agc059_e,nan
LIDS,https://atcoder.jp/contests/agc059/tasks/agc059_f,nan
No Majority,https://atcoder.jp/contests/agc060/tasks/agc060_a,nan
Unique XOR Path,https://atcoder.jp/contests/agc060/tasks/agc060_b,nan
Large Heap,https://atcoder.jp/contests/agc060/tasks/agc060_c,nan
Same Descent Set,https://atcoder.jp/contests/agc060/tasks/agc060_d,nan
Number of Cycles,https://atcoder.jp/contests/agc060/tasks/agc060_e,nan
Spanning Trees of Interval Graph,https://atcoder.jp/contests/agc060/tasks/agc060_f,nan
Long Shuffle,https://atcoder.jp/contests/agc061/tasks/agc061_a,nan
Summation By Construction,https://atcoder.jp/contests/agc061/tasks/agc061_b,nan
First Come First Serve,https://atcoder.jp/contests/agc061/tasks/agc061_c,nan
Almost Multiplication Table,https://atcoder.jp/contests/agc061/tasks/agc061_d,nan
Increment or XOR,https://atcoder.jp/contests/agc061/tasks/agc061_e,nan
Perfect Strings,https://atcoder.jp/contests/agc061/tasks/agc061_f,nan
Right Side Character,https://atcoder.jp/contests/agc062/tasks/agc062_a,nan
Split and Insert,https://atcoder.jp/contests/agc062/tasks/agc062_b,nan
Mex of Subset Sum,https://atcoder.jp/contests/agc062/tasks/agc062_c,nan
Walk Around Neighborhood,https://atcoder.jp/contests/agc062/tasks/agc062_d,nan
Overlap Binary Tree,https://atcoder.jp/contests/agc062/tasks/agc062_e,nan
Preserve Distinct,https://atcoder.jp/contests/agc062/tasks/agc062_f,nan
Mex Game,https://atcoder.jp/contests/agc063/tasks/agc063_a,nan
"Insert 1, 2, 3, ...",https://atcoder.jp/contests/agc063/tasks/agc063_b,nan
Add Mod Operations,https://atcoder.jp/contests/agc063/tasks/agc063_c,nan
Many CRT,https://atcoder.jp/contests/agc063/tasks/agc063_d,nan
Child to Parent,https://atcoder.jp/contests/agc063/tasks/agc063_e,nan
Simultaneous Floor,https://atcoder.jp/contests/agc063/tasks/agc063_f,nan
i i's,https://atcoder.jp/contests/agc064/tasks/agc064_a,nan
Red and Blue Spanning Tree,https://atcoder.jp/contests/agc064/tasks/agc064_b,nan
Erase and Divide Game,https://atcoder.jp/contests/agc064/tasks/agc064_c,nan
Red and Blue Chips,https://atcoder.jp/contests/agc064/tasks/agc064_d,nan
Cross Sum Construction,https://atcoder.jp/contests/agc064/tasks/agc064_e,nan
No Permutations,https://atcoder.jp/contests/agc064/tasks/agc064_f,nan
Shuffle and mod K,https://atcoder.jp/contests/agc065/tasks/agc065_a,nan
Erase and Insert,https://atcoder.jp/contests/agc065/tasks/agc065_b,nan
Avoid Half Sum,https://atcoder.jp/contests/agc065/tasks/agc065_c,nan
Not Intersect,https://atcoder.jp/contests/agc065/tasks/agc065_d,nan
One Two Three,https://atcoder.jp/contests/agc065/tasks/agc065_e,nan
Always Perfect,https://atcoder.jp/contests/agc065/tasks/agc065_f,nan
Adjacent Difference,https://atcoder.jp/contests/agc066/tasks/agc066_a,nan
Decreasing Digit Sums,https://atcoder.jp/contests/agc066/tasks/agc066_b,nan
Delete AAB or BAA,https://atcoder.jp/contests/agc066/tasks/agc066_c,nan
A Independent Set,https://atcoder.jp/contests/agc066/tasks/agc066_d,nan
Sliding Puzzle On Tree,https://atcoder.jp/contests/agc066/tasks/agc066_e,nan
Beautiful String,https://atcoder.jp/contests/agc066/tasks/agc066_f,nan
Big Clique Everywhere,https://atcoder.jp/contests/agc067/tasks/agc067_a,nan
Modifications,https://atcoder.jp/contests/agc067/tasks/agc067_b,nan
Divisibility Homomorphism,https://atcoder.jp/contests/agc067/tasks/agc067_c,nan
Unique Matching,https://atcoder.jp/contests/agc067/tasks/agc067_d,nan
Biconnected Graph,https://atcoder.jp/contests/agc067/tasks/agc067_e,nan
Circular Distance,https://atcoder.jp/contests/agc068/tasks/agc068_a,nan
01 Graph Construction,https://atcoder.jp/contests/agc068/tasks/agc068_b,nan
Ball Redistribution,https://atcoder.jp/contests/agc068/tasks/agc068_c,nan
Sum of Hash of Lexmin,https://atcoder.jp/contests/agc068/tasks/agc068_d,nan
Sort and Match,https://atcoder.jp/contests/agc068/tasks/agc068_e,nan
AtCoder Ad,https://atcoder.jp/contests/ahc001/tasks/ahc001_a,nan
Walking on Tiles,https://atcoder.jp/contests/ahc002/tasks/ahc002_a,nan
Shortest Path Queries,https://atcoder.jp/contests/ahc003/tasks/ahc003_a,nan
Alien's Genome Assembly,https://atcoder.jp/contests/ahc004/tasks/ahc004_a,nan
Patrolling,https://atcoder.jp/contests/ahc005/tasks/ahc005_a,nan
Food Delivery,https://atcoder.jp/contests/ahc006/tasks/ahc006_a,nan
Online MST,https://atcoder.jp/contests/ahc007/tasks/ahc007_a,nan
Territory,https://atcoder.jp/contests/ahc008/tasks/ahc008_a,nan
Robust Memory of Commuting Routes,https://atcoder.jp/contests/ahc009/tasks/ahc009_a,nan
Loop Lines,https://atcoder.jp/contests/ahc010/tasks/ahc010_a,nan
Sliding Tree Puzzle,https://atcoder.jp/contests/ahc011/tasks/ahc011_a,nan
AtCoder 10th Anniversary,https://atcoder.jp/contests/ahc012/tasks/ahc012_a,nan
Server Room,https://atcoder.jp/contests/ahc013/tasks/ahc013_a,nan
RectJoin,https://atcoder.jp/contests/ahc014/tasks/ahc014_a,nan
Halloween Candy,https://atcoder.jp/contests/ahc015/tasks/ahc015_a,nan
Graphorean,https://atcoder.jp/contests/ahc016/tasks/ahc016_a,nan
Road Repair,https://atcoder.jp/contests/ahc017/tasks/ahc017_a,nan
Excavation,https://atcoder.jp/contests/ahc018/tasks/ahc018_a,nan
Silhouette Block Puzzle Creation,https://atcoder.jp/contests/ahc019/tasks/ahc019_a,nan
Broadcasting,https://atcoder.jp/contests/ahc020/tasks/ahc020_a,nan
Pyramid Sorting,https://atcoder.jp/contests/ahc021/tasks/ahc021_a,nan
Exploring Another Space,https://atcoder.jp/contests/ahc022/tasks/ahc022_a,nan
Topological Map,https://atcoder.jp/contests/ahc024/tasks/ahc024_a,nan
Balancing by Balance,https://atcoder.jp/contests/ahc025/tasks/ahc025_a,nan
Stack of Boxes,https://atcoder.jp/contests/ahc026/tasks/ahc026_a,nan
Recurring Cleaning Route,https://atcoder.jp/contests/ahc027/tasks/ahc027_a,nan
Lucky Words,https://atcoder.jp/contests/ahc028/tasks/ahc028_a,nan
Business Simulation Game,https://atcoder.jp/contests/ahc029/tasks/ahc029_a,nan
Polyomino Mining,https://atcoder.jp/contests/ahc030/tasks/ahc030_a,nan
Event Hall,https://atcoder.jp/contests/ahc031/tasks/ahc031_a,nan
Mod Stamp,https://atcoder.jp/contests/ahc032/tasks/ahc032_a,nan
Container Handling with Cranes,https://atcoder.jp/contests/ahc033/tasks/ahc033_a,nan
Leveling with a Dump Truck,https://atcoder.jp/contests/ahc034/tasks/ahc034_a,nan
Breed Improvement,https://atcoder.jp/contests/ahc035/tasks/ahc035_a,nan
Efficient Signal Control,https://atcoder.jp/contests/ahc036/tasks/ahc036_a,nan
Soda,https://atcoder.jp/contests/ahc037/tasks/ahc037_a,nan
Tree Robot Arm,https://atcoder.jp/contests/ahc038/tasks/ahc038_a,nan
Bulletin Board,https://atcoder.jp/contests/aising2019/tasks/aising2019_a,nan
Contests,https://atcoder.jp/contests/aising2019/tasks/aising2019_b,nan
Alternating Path,https://atcoder.jp/contests/aising2019/tasks/aising2019_c,nan
Nearest Card Game,https://atcoder.jp/contests/aising2019/tasks/aising2019_d,nan
Attack to a Tree,https://atcoder.jp/contests/aising2019/tasks/aising2019_e,nan
Number of Multiples,https://atcoder.jp/contests/aising2020/tasks/aising2020_a,nan
An Odd Problem,https://atcoder.jp/contests/aising2020/tasks/aising2020_b,nan
XYZ Triplets,https://atcoder.jp/contests/aising2020/tasks/aising2020_c,nan
Anything Goes to Zero,https://atcoder.jp/contests/aising2020/tasks/aising2020_d,nan
Camel Train,https://atcoder.jp/contests/aising2020/tasks/aising2020_e,nan
Two Snuke,https://atcoder.jp/contests/aising2020/tasks/aising2020_f,nan
Two Integers,https://atcoder.jp/contests/apc001/tasks/apc001_a,nan
Two Arrays,https://atcoder.jp/contests/apc001/tasks/apc001_b,nan
Vacant Seat,https://atcoder.jp/contests/apc001/tasks/apc001_c,nan
Forest,https://atcoder.jp/contests/apc001/tasks/apc001_d,nan
Antennas on Tree,https://atcoder.jp/contests/apc001/tasks/apc001_e,nan
XOR Tree,https://atcoder.jp/contests/apc001/tasks/apc001_f,nan
Colorful Doors,https://atcoder.jp/contests/apc001/tasks/apc001_g,nan
Generalized Insertion Sort,https://atcoder.jp/contests/apc001/tasks/apc001_h,nan
Simple APSP Problem,https://atcoder.jp/contests/apc001/tasks/apc001_i,nan
Rectangles,https://atcoder.jp/contests/apc001/tasks/apc001_j,nan
Code,https://atcoder.jp/contests/joiopen2012c/tasks/apio_code,nan
Jumps,https://atcoder.jp/contests/joiopen2012c/tasks/apio_jumps,nan
Mansion,https://atcoder.jp/contests/joiopen2012c/tasks/apio_mansion,nan
センター採点,https://atcoder.jp/contests/arc001/tasks/arc001_1,nan
リモコン,https://atcoder.jp/contests/arc001/tasks/arc001_2,nan
パズルのお手伝い,https://atcoder.jp/contests/arc001/tasks/arc001_3,nan
レースゲーム,https://atcoder.jp/contests/arc001/tasks/arc001_4,nan
うるう年,https://atcoder.jp/contests/arc002/tasks/arc002_1,nan
割り切れる日付,https://atcoder.jp/contests/arc002/tasks/arc002_2,nan
コマンド入力,https://atcoder.jp/contests/arc002/tasks/arc002_3,nan
ボードゲーム,https://atcoder.jp/contests/arc002/tasks/arc002_4,nan
GPA計算,https://atcoder.jp/contests/arc003/tasks/arc003_1,nan
さかさま辞書,https://atcoder.jp/contests/arc003/tasks/arc003_2,nan
暗闇帰り道,https://atcoder.jp/contests/arc003/tasks/arc003_3,nan
シャッフル席替え,https://atcoder.jp/contests/arc003/tasks/arc003_4,nan
2点間距離の最大値 ( The longest distance ),https://atcoder.jp/contests/arc004/tasks/arc004_1,nan
2点間距離の最大と最小 ( Maximum and Minimum ),https://atcoder.jp/contests/arc004/tasks/arc004_2,nan
平均値太郎の憂鬱 ( The melancholy of Taro Heikinchi ),https://atcoder.jp/contests/arc004/tasks/arc004_3,nan
表現の自由 ( Freedom of expression ),https://atcoder.jp/contests/arc004/tasks/arc004_4,nan
大好き高橋君,https://atcoder.jp/contests/arc005/tasks/arc005_1,nan
P CASカードと高橋君,https://atcoder.jp/contests/arc005/tasks/arc005_2,nan
器物損壊！高橋君,https://atcoder.jp/contests/arc005/tasks/arc005_3,nan
連射王高橋君,https://atcoder.jp/contests/arc005/tasks/arc005_4,nan
宝くじ,https://atcoder.jp/contests/arc006/tasks/arc006_1,nan
あみだくじ,https://atcoder.jp/contests/arc006/tasks/arc006_2,nan
積み重ね,https://atcoder.jp/contests/arc006/tasks/arc006_3,nan
アルファベット探し,https://atcoder.jp/contests/arc006/tasks/arc006_4,nan
帰ってきた器物損壊！高橋君,https://atcoder.jp/contests/arc007/tasks/arc007_1,nan
迷子のCDケース,https://atcoder.jp/contests/arc007/tasks/arc007_2,nan
節約生活,https://atcoder.jp/contests/arc007/tasks/arc007_3,nan
破れた宿題,https://atcoder.jp/contests/arc007/tasks/arc007_4,nan
たこ焼き買えるかな？,https://atcoder.jp/contests/arc008/tasks/arc008_1,nan
謎のたこ焼きおじさん,https://atcoder.jp/contests/arc008/tasks/arc008_2,nan
THE☆たこ焼き祭り2012,https://atcoder.jp/contests/arc008/tasks/arc008_3,nan
タコヤキオイシクナール,https://atcoder.jp/contests/arc008/tasks/arc008_4,nan
元気にお使い！高橋君,https://atcoder.jp/contests/arc009/tasks/arc009_1,nan
おとぎの国の高橋君,https://atcoder.jp/contests/arc009/tasks/arc009_2,nan
高橋君、24歳,https://atcoder.jp/contests/arc009/tasks/arc009_3,nan
覚醒ノ高橋君,https://atcoder.jp/contests/arc009/tasks/arc009_4,nan
名刺交換,https://atcoder.jp/contests/arc010/tasks/arc010_1,nan
超大型連休,https://atcoder.jp/contests/arc010/tasks/arc010_2,nan
積み上げパズル,https://atcoder.jp/contests/arc010/tasks/arc010_3,nan
情報伝播,https://atcoder.jp/contests/arc010/tasks/arc010_4,nan
鉛筆リサイクルの新技術,https://atcoder.jp/contests/arc011/tasks/arc011_1,nan
ルイス・キャロルの記憶術,https://atcoder.jp/contests/arc011/tasks/arc011_2,nan
ダブレット,https://atcoder.jp/contests/arc011/tasks/arc011_3,nan
きつねさんからの挑戦状,https://atcoder.jp/contests/arc011/tasks/arc011_4,nan
週末,https://atcoder.jp/contests/arc012/tasks/arc012_1,nan
アキレスと亀,https://atcoder.jp/contests/arc012/tasks/arc012_2,nan
五目並べチェッカー,https://atcoder.jp/contests/arc012/tasks/arc012_3,nan
Don't worry. Be Together,https://atcoder.jp/contests/arc012/tasks/arc012_4,nan
梱包できるかな？,https://atcoder.jp/contests/arc013/tasks/arc013_1,nan
引越しできるかな？,https://atcoder.jp/contests/arc013/tasks/arc013_2,nan
笑いをとれるかな？,https://atcoder.jp/contests/arc013/tasks/arc013_3,nan
切り分けできるかな？,https://atcoder.jp/contests/arc013/tasks/arc013_4,nan
君が望むなら世界中全てのたこ焼きを赤と青に染め上げよう,https://atcoder.jp/contests/arc014/tasks/arc014_1,nan
あの日したしりとりの結果を僕達はまだ知らない。,https://atcoder.jp/contests/arc014/tasks/arc014_2,nan
魂の還る場所,https://atcoder.jp/contests/arc014/tasks/arc014_3,nan
grepマスター,https://atcoder.jp/contests/arc014/tasks/arc014_4,nan
Celsius と Fahrenheit,https://atcoder.jp/contests/arc015/tasks/arc015_1,nan
真冬日？真夏日？,https://atcoder.jp/contests/arc015/tasks/arc015_2,nan
変わった単位,https://atcoder.jp/contests/arc015/tasks/arc015_3,nan
きんいろクッキー,https://atcoder.jp/contests/arc015/tasks/arc015_4,nan
クイズゲーム,https://atcoder.jp/contests/arc016/tasks/arc016_1,nan
音楽ゲーム,https://atcoder.jp/contests/arc016/tasks/arc016_2,nan
ソーシャルゲーム,https://atcoder.jp/contests/arc016/tasks/arc016_3,nan
軍艦ゲーム,https://atcoder.jp/contests/arc016/tasks/arc016_4,nan
素数、コンテスト、素数,https://atcoder.jp/contests/arc017/tasks/arc017_1,nan
解像度が低い。,https://atcoder.jp/contests/arc017/tasks/arc017_2,nan
無駄なものが嫌いな人,https://atcoder.jp/contests/arc017/tasks/arc017_3,nan
ARCたんクッキー,https://atcoder.jp/contests/arc017/tasks/arc017_4,nan
BMI,https://atcoder.jp/contests/arc018/tasks/arc018_1,nan
格子点と整数,https://atcoder.jp/contests/arc018/tasks/arc018_2,nan
席替え,https://atcoder.jp/contests/arc018/tasks/arc018_3,nan
僕は友達が少ない,https://atcoder.jp/contests/arc018/tasks/arc018_4,nan
お買い物クライシス,https://atcoder.jp/contests/arc019/tasks/arc019_1,nan
こだわりの名前,https://atcoder.jp/contests/arc019/tasks/arc019_2,nan
最後の森,https://atcoder.jp/contests/arc019/tasks/arc019_3,nan
ほんとうのたたかい,https://atcoder.jp/contests/arc019/tasks/arc019_4,nan
石を滑らせるゲーム,https://atcoder.jp/contests/arc020/tasks/arc020_1,nan
縞模様,https://atcoder.jp/contests/arc020/tasks/arc020_2,nan
A mod B Problem,https://atcoder.jp/contests/arc020/tasks/arc020_3,nan
お菓子の国の旅行,https://atcoder.jp/contests/arc020/tasks/arc020_4,nan
DEAD END,https://atcoder.jp/contests/arc021/tasks/arc021_1,nan
Your Numbers are XORed...,https://atcoder.jp/contests/arc021/tasks/arc021_2,nan
増築王高橋君,https://atcoder.jp/contests/arc021/tasks/arc021_3,nan
だいたい最小全域木,https://atcoder.jp/contests/arc021/tasks/arc021_4,nan
スーパーICT高校生,https://atcoder.jp/contests/arc022/tasks/arc022_1,nan
細長いお菓子,https://atcoder.jp/contests/arc022/tasks/arc022_2,nan
ロミオとジュリエット,https://atcoder.jp/contests/arc022/tasks/arc022_3,nan
スプリンクラー,https://atcoder.jp/contests/arc022/tasks/arc022_4,nan
経過日数,https://atcoder.jp/contests/arc023/tasks/arc023_1,nan
謎の人物X,https://atcoder.jp/contests/arc023/tasks/arc023_2,nan
タコヤ木,https://atcoder.jp/contests/arc023/tasks/arc023_3,nan
GCD区間,https://atcoder.jp/contests/arc023/tasks/arc023_4,nan
くつがくっつく,https://atcoder.jp/contests/arc024/tasks/arc024_1,nan
赤と黒の木,https://atcoder.jp/contests/arc024/tasks/arc024_2,nan
だれじゃ,https://atcoder.jp/contests/arc024/tasks/arc024_3,nan
バス停,https://atcoder.jp/contests/arc024/tasks/arc024_4,nan
ゴールドラッシュ,https://atcoder.jp/contests/arc025/tasks/arc025_1,nan
チョコレート,https://atcoder.jp/contests/arc025/tasks/arc025_2,nan
ウサギとカメ,https://atcoder.jp/contests/arc025/tasks/arc025_3,nan
コンセント,https://atcoder.jp/contests/arc025/tasks/arc025_4,nan
ダイナミックなポーズ,https://atcoder.jp/contests/arc026/tasks/arc026_1,nan
完全数,https://atcoder.jp/contests/arc026/tasks/arc026_2,nan
蛍光灯,https://atcoder.jp/contests/arc026/tasks/arc026_3,nan
道を直すお仕事,https://atcoder.jp/contests/arc026/tasks/arc026_4,nan
門限,https://atcoder.jp/contests/arc027/tasks/arc027_1,nan
大事な数なのでZ回書きまLた。,https://atcoder.jp/contests/arc027/tasks/arc027_2,nan
最高のトッピングにしような,https://atcoder.jp/contests/arc027/tasks/arc027_3,nan
ぴょんぴょんトレーニング,https://atcoder.jp/contests/arc027/tasks/arc027_4,nan
小石を取るゲーム,https://atcoder.jp/contests/arc028/tasks/arc028_1,nan
特別賞,https://atcoder.jp/contests/arc028/tasks/arc028_2,nan
高橋王国の分割統治,https://atcoder.jp/contests/arc028/tasks/arc028_3,nan
注文の多い高橋商店,https://atcoder.jp/contests/arc028/tasks/arc028_4,nan
高橋君とお肉,https://atcoder.jp/contests/arc029/tasks/arc029_1,nan
高橋君と禁断の書,https://atcoder.jp/contests/arc029/tasks/arc029_2,nan
高橋君と国家,https://atcoder.jp/contests/arc029/tasks/arc029_3,nan
高橋君と木のおもちゃ,https://atcoder.jp/contests/arc029/tasks/arc029_4,nan
閉路グラフ,https://atcoder.jp/contests/arc030/tasks/arc030_1,nan
ツリーグラフ,https://atcoder.jp/contests/arc030/tasks/arc030_2,nan
有向グラフ,https://atcoder.jp/contests/arc030/tasks/arc030_3,nan
グラフではない,https://atcoder.jp/contests/arc030/tasks/arc030_4,nan
名前,https://atcoder.jp/contests/arc031/tasks/arc031_1,nan
埋め立て,https://atcoder.jp/contests/arc031/tasks/arc031_2,nan
積み木,https://atcoder.jp/contests/arc031/tasks/arc031_3,nan
買い物上手,https://atcoder.jp/contests/arc031/tasks/arc031_4,nan
ホリドッグ,https://atcoder.jp/contests/arc032/tasks/arc032_1,nan
道路工事,https://atcoder.jp/contests/arc032/tasks/arc032_2,nan
仕事計画,https://atcoder.jp/contests/arc032/tasks/arc032_3,nan
アットコーダーモンスターズ,https://atcoder.jp/contests/arc032/tasks/arc032_4,nan
隠れた言葉,https://atcoder.jp/contests/arc033/tasks/arc033_1,nan
メタ構文変数,https://atcoder.jp/contests/arc033/tasks/arc033_2,nan
データ構造,https://atcoder.jp/contests/arc033/tasks/arc033_3,nan
見たことのない多項式,https://atcoder.jp/contests/arc033/tasks/arc033_4,nan
首席,https://atcoder.jp/contests/arc034/tasks/arc034_1,nan
方程式,https://atcoder.jp/contests/arc034/tasks/arc034_2,nan
約数かつ倍数,https://atcoder.jp/contests/arc034/tasks/arc034_3,nan
インフレゲーム,https://atcoder.jp/contests/arc034/tasks/arc034_4,nan
高橋くんと回文,https://atcoder.jp/contests/arc035/tasks/arc035_a,nan
アットコーダー王国のコンテスト事情,https://atcoder.jp/contests/arc035/tasks/arc035_b,nan
アットコーダー王国の交通事情,https://atcoder.jp/contests/arc035/tasks/arc035_c,nan
高橋くんとマラソンコース,https://atcoder.jp/contests/arc035/tasks/arc035_d,nan
ぐっすり,https://atcoder.jp/contests/arc036/tasks/arc036_a,nan
山のデータ,https://atcoder.jp/contests/arc036/tasks/arc036_b,nan
偶然ジェネレータ,https://atcoder.jp/contests/arc036/tasks/arc036_c,nan
偶数メートル,https://atcoder.jp/contests/arc036/tasks/arc036_d,nan
全優,https://atcoder.jp/contests/arc037/tasks/arc037_a,nan
バウムテスト,https://atcoder.jp/contests/arc037/tasks/arc037_b,nan
億マス計算,https://atcoder.jp/contests/arc037/tasks/arc037_c,nan
Chaotic Polygons,https://atcoder.jp/contests/arc037/tasks/arc037_d,nan
カードと兄妹,https://atcoder.jp/contests/arc038/tasks/arc038_a,nan
マス目と駒,https://atcoder.jp/contests/arc038/tasks/arc038_b,nan
茶碗と豆,https://atcoder.jp/contests/arc038/tasks/arc038_c,nan
有向グラフと数,https://atcoder.jp/contests/arc038/tasks/arc038_d,nan
A   B problem,https://atcoder.jp/contests/arc039/tasks/arc039_a,nan
高橋幼稚園,https://atcoder.jp/contests/arc039/tasks/arc039_b,nan
幼稚園児高橋君,https://atcoder.jp/contests/arc039/tasks/arc039_c,nan
旅行会社高橋君,https://atcoder.jp/contests/arc039/tasks/arc039_d,nan
床塗り,https://atcoder.jp/contests/arc040/tasks/arc040_a,nan
直線塗り,https://atcoder.jp/contests/arc040/tasks/arc040_b,nan
Z塗り,https://atcoder.jp/contests/arc040/tasks/arc040_c,nan
カクカク塗り,https://atcoder.jp/contests/arc040/tasks/arc040_d,nan
コインの反転,https://atcoder.jp/contests/arc041/tasks/arc041_a,nan
アメーバ,https://atcoder.jp/contests/arc041/tasks/arc041_b,nan
ウサギ跳び,https://atcoder.jp/contests/arc041/tasks/arc041_c,nan
辺彩色,https://atcoder.jp/contests/arc041/tasks/arc041_d,nan
掲示板,https://atcoder.jp/contests/arc042/tasks/arc042_a,nan
アリの高橋くん,https://atcoder.jp/contests/arc042/tasks/arc042_b,nan
おやつ,https://atcoder.jp/contests/arc042/tasks/arc042_c,nan
あまり,https://atcoder.jp/contests/arc042/tasks/arc042_d,nan
点数変換,https://atcoder.jp/contests/arc043/tasks/arc043_a,nan
難易度,https://atcoder.jp/contests/arc043/tasks/arc043_b,nan
転倒距離,https://atcoder.jp/contests/arc043/tasks/arc043_c,nan
引っ越し,https://atcoder.jp/contests/arc043/tasks/arc043_d,nan
素数判定,https://atcoder.jp/contests/arc044/tasks/arc044_a,nan
最短路問題,https://atcoder.jp/contests/arc044/tasks/arc044_b,nan
ビーム,https://atcoder.jp/contests/arc044/tasks/arc044_c,nan
suffix array,https://atcoder.jp/contests/arc044/tasks/arc044_d,nan
スペース高橋君,https://atcoder.jp/contests/arc045/tasks/arc045_a,nan
ドキドキデート大作戦高橋君,https://atcoder.jp/contests/arc045/tasks/arc045_b,nan
エックスオア多橋君,https://atcoder.jp/contests/arc045/tasks/arc045_c,nan
みんな仲良し高橋君,https://atcoder.jp/contests/arc045/tasks/arc045_d,nan
ゾロ目数,https://atcoder.jp/contests/arc046/tasks/arc046_a,nan
石取り大作戦,https://atcoder.jp/contests/arc046/tasks/arc046_b,nan
合コン大作戦,https://atcoder.jp/contests/arc046/tasks/arc046_c,nan
うさぎとマス目,https://atcoder.jp/contests/arc046/tasks/arc046_d,nan
タブの開きすぎ,https://atcoder.jp/contests/arc047/tasks/arc047_a,nan
同一円周上,https://atcoder.jp/contests/arc047/tasks/arc047_b,nan
N!÷K番目の単語,https://atcoder.jp/contests/arc047/tasks/arc047_c,nan
ナナメクエリ,https://atcoder.jp/contests/arc047/tasks/arc047_d,nan
階段の下,https://atcoder.jp/contests/arc048/tasks/arc048_a,nan
AtCoderでじゃんけんを,https://atcoder.jp/contests/arc048/tasks/arc048_b,nan
足の多い高橋君,https://atcoder.jp/contests/arc048/tasks/arc048_c,nan
たこ焼き屋とQ人の高橋君,https://atcoder.jp/contests/arc048/tasks/arc048_d,nan
"""強調""",https://atcoder.jp/contests/arc049/tasks/arc049_a,nan
高橋ノルム君,https://atcoder.jp/contests/arc049/tasks/arc049_b,nan
ぬりまーす,https://atcoder.jp/contests/arc049/tasks/arc049_c,nan
すわっぷしまーす,https://atcoder.jp/contests/arc049/tasks/arc049_d,nan
大文字と小文字,https://atcoder.jp/contests/arc050/tasks/arc050_a,nan
花束,https://atcoder.jp/contests/arc050/tasks/arc050_b,nan
LCM 111,https://atcoder.jp/contests/arc050/tasks/arc050_c,nan
Suffix Concat,https://atcoder.jp/contests/arc050/tasks/arc050_d,nan
塗り絵,https://atcoder.jp/contests/arc051/tasks/arc051_a,nan
互除法,https://atcoder.jp/contests/arc051/tasks/arc051_b,nan
掛け算,https://atcoder.jp/contests/arc051/tasks/arc051_c,nan
長方形,https://atcoder.jp/contests/arc051/tasks/arc051_d,nan
何期生？,https://atcoder.jp/contests/arc052/tasks/arc052_a,nan
円錐,https://atcoder.jp/contests/arc052/tasks/arc052_b,nan
高橋くんと不思議な道,https://atcoder.jp/contests/arc052/tasks/arc052_c,nan
9,https://atcoder.jp/contests/arc052/tasks/arc052_d,nan
ドミノ色塗り,https://atcoder.jp/contests/arc053/tasks/arc053_a,nan
回文分割,https://atcoder.jp/contests/arc053/tasks/arc053_b,nan
魔法使い高橋君,https://atcoder.jp/contests/arc053/tasks/arc053_c,nan
2 つの山札,https://atcoder.jp/contests/arc053/tasks/arc053_d,nan
動く歩道,https://atcoder.jp/contests/arc054/tasks/arc054_a,nan
ムーアの法則,https://atcoder.jp/contests/arc054/tasks/arc054_b,nan
鯛焼き,https://atcoder.jp/contests/arc054/tasks/arc054_c,nan
バブルソート,https://atcoder.jp/contests/arc054/tasks/arc054_d,nan
数え上げ,https://atcoder.jp/contests/arc055/tasks/arc055_a,nan
せんべい,https://atcoder.jp/contests/arc055/tasks/arc055_b,nan
ABCAC,https://atcoder.jp/contests/arc055/tasks/arc055_c,nan
隠された等差数列,https://atcoder.jp/contests/arc055/tasks/arc055_d,nan
みんなでワイワイみかん,https://atcoder.jp/contests/arc056/tasks/arc056_a,nan
駐車場,https://atcoder.jp/contests/arc056/tasks/arc056_b,nan
部門分け,https://atcoder.jp/contests/arc056/tasks/arc056_c,nan
サケノミ,https://atcoder.jp/contests/arc056/tasks/arc056_d,nan
2兆円,https://atcoder.jp/contests/arc057/tasks/arc057_a,nan
高橋君ゲーム,https://atcoder.jp/contests/arc057/tasks/arc057_b,nan
2乗根,https://atcoder.jp/contests/arc057/tasks/arc057_c,nan
全域木,https://atcoder.jp/contests/arc057/tasks/arc057_d,nan
Iroha's Obsession,https://atcoder.jp/contests/arc058/tasks/arc058_a,nan
Iroha and a Grid,https://atcoder.jp/contests/arc058/tasks/arc058_b,nan
Iroha and Haiku,https://atcoder.jp/contests/arc058/tasks/arc058_c,nan
Iroha Loves Strings,https://atcoder.jp/contests/arc058/tasks/arc058_d,nan
Be Together,https://atcoder.jp/contests/arc059/tasks/arc059_a,nan
Unbalanced,https://atcoder.jp/contests/arc059/tasks/arc059_b,nan
Children and Candies,https://atcoder.jp/contests/arc059/tasks/arc059_c,nan
Unhappy Hacking,https://atcoder.jp/contests/arc059/tasks/arc059_d,nan
Tak and Cards,https://atcoder.jp/contests/abc044/tasks/arc060_a,nan
Digit Sum,https://atcoder.jp/contests/abc044/tasks/arc060_b,nan
Tak and Hotels,https://atcoder.jp/contests/arc060/tasks/arc060_c,nan
Best Representation,https://atcoder.jp/contests/arc060/tasks/arc060_d,nan
Many Formulas,https://atcoder.jp/contests/abc045/tasks/arc061_a,nan
Snuke's Coloring,https://atcoder.jp/contests/abc045/tasks/arc061_b,nan
Snuke's Subway Trip,https://atcoder.jp/contests/arc061/tasks/arc061_c,nan
Card Game for Three,https://atcoder.jp/contests/arc061/tasks/arc061_d,nan
AtCoDeer and Election Report,https://atcoder.jp/contests/abc046/tasks/arc062_a,nan
AtCoDeer and Rock Paper,https://atcoder.jp/contests/abc046/tasks/arc062_b,nan
Building Cubes with AtCoDeer,https://atcoder.jp/contests/arc062/tasks/arc062_c,nan
Painting Graphs with AtCoDeer,https://atcoder.jp/contests/arc062/tasks/arc062_d,nan
1D Reversi,https://atcoder.jp/contests/abc047/tasks/arc063_a,nan
An Invisible Hand,https://atcoder.jp/contests/abc047/tasks/arc063_b,nan
Integers on a Tree,https://atcoder.jp/contests/arc063/tasks/arc063_c,nan
Snuke's Coloring 2,https://atcoder.jp/contests/arc063/tasks/arc063_d,nan
Boxes and Candies,https://atcoder.jp/contests/abc048/tasks/arc064_a,nan
An Ordinary Game,https://atcoder.jp/contests/abc048/tasks/arc064_b,nan
Cosmic Rays,https://atcoder.jp/contests/arc064/tasks/arc064_c,nan
Rotated Palindromes,https://atcoder.jp/contests/arc064/tasks/arc064_d,nan
Daydream,https://atcoder.jp/contests/abc049/tasks/arc065_a,nan
Connectivity,https://atcoder.jp/contests/abc049/tasks/arc065_b,nan
Manhattan Compass,https://atcoder.jp/contests/arc065/tasks/arc065_c,nan
Shuffling,https://atcoder.jp/contests/arc065/tasks/arc065_d,nan
Lining Up,https://atcoder.jp/contests/abc050/tasks/arc066_a,nan
Xor Sum,https://atcoder.jp/contests/abc050/tasks/arc066_b,nan
Addition and Subtraction Hard,https://atcoder.jp/contests/arc066/tasks/arc066_c,nan
Contest with Drinks Hard,https://atcoder.jp/contests/arc066/tasks/arc066_d,nan
Factors of Factorial,https://atcoder.jp/contests/abc052/tasks/arc067_a,nan
Walk and Teleport,https://atcoder.jp/contests/abc052/tasks/arc067_b,nan
Grouping,https://atcoder.jp/contests/arc067/tasks/arc067_c,nan
Yakiniku Restaurants,https://atcoder.jp/contests/arc067/tasks/arc067_d,nan
X: Yet Another Die Game,https://atcoder.jp/contests/abc053/tasks/arc068_a,nan
Card Eater,https://atcoder.jp/contests/abc053/tasks/arc068_b,nan
Snuke Line,https://atcoder.jp/contests/arc068/tasks/arc068_c,nan
Solitaire,https://atcoder.jp/contests/arc068/tasks/arc068_d,nan
Scc Puzzle,https://atcoder.jp/contests/abc055/tasks/arc069_a,nan
Menagerie,https://atcoder.jp/contests/abc055/tasks/arc069_b,nan
Frequency,https://atcoder.jp/contests/arc069/tasks/arc069_c,nan
Flags,https://atcoder.jp/contests/arc069/tasks/arc069_d,nan
Go Home,https://atcoder.jp/contests/abc056/tasks/arc070_a,nan
No Need,https://atcoder.jp/contests/abc056/tasks/arc070_b,nan
NarrowRectangles,https://atcoder.jp/contests/arc070/tasks/arc070_c,nan
HonestOrUnkind,https://atcoder.jp/contests/arc070/tasks/arc070_d,nan
Dubious Document,https://atcoder.jp/contests/abc058/tasks/arc071_a,nan
###,https://atcoder.jp/contests/abc058/tasks/arc071_b,nan
TrBBnsformBBtion,https://atcoder.jp/contests/arc071/tasks/arc071_c,nan
Infinite Sequence,https://atcoder.jp/contests/arc071/tasks/arc071_d,nan
Sequence,https://atcoder.jp/contests/abc059/tasks/arc072_a,nan
Alice&Brown,https://atcoder.jp/contests/abc059/tasks/arc072_b,nan
Alice in linear land,https://atcoder.jp/contests/arc072/tasks/arc072_c,nan
Dam,https://atcoder.jp/contests/arc072/tasks/arc072_d,nan
Sentou,https://atcoder.jp/contests/abc060/tasks/arc073_a,nan
Simple Knapsack,https://atcoder.jp/contests/abc060/tasks/arc073_b,nan
Ball Coloring,https://atcoder.jp/contests/arc073/tasks/arc073_c,nan
Many Moves,https://atcoder.jp/contests/arc073/tasks/arc073_d,nan
Chocolate Bar,https://atcoder.jp/contests/abc062/tasks/arc074_a,nan
3N Numbers,https://atcoder.jp/contests/abc062/tasks/arc074_b,nan
RGB Sequence,https://atcoder.jp/contests/arc074/tasks/arc074_c,nan
Lotus Leaves,https://atcoder.jp/contests/arc074/tasks/arc074_d,nan
Bugged,https://atcoder.jp/contests/abc063/tasks/arc075_a,nan
Widespread,https://atcoder.jp/contests/abc063/tasks/arc075_b,nan
Meaningful Mean,https://atcoder.jp/contests/arc075/tasks/arc075_c,nan
Mirrored,https://atcoder.jp/contests/arc075/tasks/arc075_d,nan
Reconciled?,https://atcoder.jp/contests/abc065/tasks/arc076_a,nan
Built?,https://atcoder.jp/contests/abc065/tasks/arc076_b,nan
Connected?,https://atcoder.jp/contests/arc076/tasks/arc076_c,nan
Exhausted?,https://atcoder.jp/contests/arc076/tasks/arc076_d,nan
pushpush,https://atcoder.jp/contests/abc066/tasks/arc077_a,nan
11,https://atcoder.jp/contests/abc066/tasks/arc077_b,nan
guruguru,https://atcoder.jp/contests/arc077/tasks/arc077_c,nan
SS,https://atcoder.jp/contests/arc077/tasks/arc077_d,nan
Splitting Pile,https://atcoder.jp/contests/abc067/tasks/arc078_a,nan
Fennec VS. Snuke,https://atcoder.jp/contests/abc067/tasks/arc078_b,nan
Awkward Response,https://atcoder.jp/contests/arc078/tasks/arc078_c,nan
Mole and Abandoned Mine,https://atcoder.jp/contests/arc078/tasks/arc078_d,nan
Cat Snuke and a Voyage,https://atcoder.jp/contests/abc068/tasks/arc079_a,nan
Decrease (Contestant ver.),https://atcoder.jp/contests/abc068/tasks/arc079_b,nan
Decrease (Judge ver.),https://atcoder.jp/contests/arc079/tasks/arc079_c,nan
Namori Grundy,https://atcoder.jp/contests/arc079/tasks/arc079_d,nan
4 adjacent,https://atcoder.jp/contests/abc069/tasks/arc080_a,nan
Grid Coloring,https://atcoder.jp/contests/abc069/tasks/arc080_b,nan
Young Maids,https://atcoder.jp/contests/arc080/tasks/arc080_c,nan
Prime Flip,https://atcoder.jp/contests/arc080/tasks/arc080_d,nan
Make a Rectangle,https://atcoder.jp/contests/abc071/tasks/arc081_a,nan
Coloring Dominoes,https://atcoder.jp/contests/abc071/tasks/arc081_b,nan
Don't Be a Subsequence,https://atcoder.jp/contests/arc081/tasks/arc081_c,nan
Flip and Rectangles,https://atcoder.jp/contests/arc081/tasks/arc081_d,nan
Together,https://atcoder.jp/contests/abc072/tasks/arc082_a,nan
Derangement,https://atcoder.jp/contests/abc072/tasks/arc082_b,nan
ConvexScore,https://atcoder.jp/contests/arc082/tasks/arc082_c,nan
Sandglass,https://atcoder.jp/contests/arc082/tasks/arc082_d,nan
Sugar Water,https://atcoder.jp/contests/abc074/tasks/arc083_a,nan
Restoring Road Network,https://atcoder.jp/contests/abc074/tasks/arc083_b,nan
Bichrome Tree,https://atcoder.jp/contests/arc083/tasks/arc083_c,nan
Collecting Balls,https://atcoder.jp/contests/arc083/tasks/arc083_d,nan
Snuke Festival,https://atcoder.jp/contests/abc077/tasks/arc084_a,nan
Small Multiple,https://atcoder.jp/contests/abc077/tasks/arc084_b,nan
Finite Encyclopedia of Integer Sequences,https://atcoder.jp/contests/arc084/tasks/arc084_c,nan
XorShift,https://atcoder.jp/contests/arc084/tasks/arc084_d,nan
HSI,https://atcoder.jp/contests/abc078/tasks/arc085_a,nan
ABS,https://atcoder.jp/contests/abc078/tasks/arc085_b,nan
MUL,https://atcoder.jp/contests/arc085/tasks/arc085_c,nan
NRE,https://atcoder.jp/contests/arc085/tasks/arc085_d,nan
Not so Diverse,https://atcoder.jp/contests/abc081/tasks/arc086_a,nan
Non decreasing,https://atcoder.jp/contests/abc081/tasks/arc086_b,nan
Smuggling Marbles,https://atcoder.jp/contests/arc086/tasks/arc086_c,nan
Shift and Decrement,https://atcoder.jp/contests/arc086/tasks/arc086_d,nan
Good Sequence,https://atcoder.jp/contests/abc082/tasks/arc087_a,nan
FT Robot,https://atcoder.jp/contests/abc082/tasks/arc087_b,nan
Prefix free Game,https://atcoder.jp/contests/arc087/tasks/arc087_c,nan
Squirrel Migration,https://atcoder.jp/contests/arc087/tasks/arc087_d,nan
Multiple Gift,https://atcoder.jp/contests/abc083/tasks/arc088_a,nan
Wide Flip,https://atcoder.jp/contests/abc083/tasks/arc088_b,nan
Papple Sort,https://atcoder.jp/contests/arc088/tasks/arc088_c,nan
Christmas Tree,https://atcoder.jp/contests/arc088/tasks/arc088_d,nan
Traveling,https://atcoder.jp/contests/abc086/tasks/arc089_a,nan
Checker,https://atcoder.jp/contests/abc086/tasks/arc089_b,nan
GraphXY,https://atcoder.jp/contests/arc089/tasks/arc089_c,nan
ColoringBalls,https://atcoder.jp/contests/arc089/tasks/arc089_d,nan
Candies,https://atcoder.jp/contests/abc087/tasks/arc090_a,nan
People on a Line,https://atcoder.jp/contests/abc087/tasks/arc090_b,nan
Avoiding Collision,https://atcoder.jp/contests/arc090/tasks/arc090_c,nan
Number of Digits,https://atcoder.jp/contests/arc090/tasks/arc090_d,nan
"Flip,Flip, and Flip......",https://atcoder.jp/contests/abc090/tasks/arc091_a,nan
Remainder Reminder,https://atcoder.jp/contests/abc090/tasks/arc091_b,nan
LISDL,https://atcoder.jp/contests/arc091/tasks/arc091_c,nan
Strange Nim,https://atcoder.jp/contests/arc091/tasks/arc091_d,nan
2D Plane 2N Points,https://atcoder.jp/contests/abc091/tasks/arc092_a,nan
Two Sequences,https://atcoder.jp/contests/abc091/tasks/arc092_b,nan
Both Sides Merger,https://atcoder.jp/contests/arc092/tasks/arc092_c,nan
Two Faced Edges,https://atcoder.jp/contests/arc092/tasks/arc092_d,nan
Traveling Plan,https://atcoder.jp/contests/abc092/tasks/arc093_a,nan
Grid Components,https://atcoder.jp/contests/abc092/tasks/arc093_b,nan
Bichrome Spanning Tree,https://atcoder.jp/contests/arc093/tasks/arc093_c,nan
Dark Horse,https://atcoder.jp/contests/arc093/tasks/arc093_d,nan
Same Integers,https://atcoder.jp/contests/abc093/tasks/arc094_a,nan
Worst Case,https://atcoder.jp/contests/abc093/tasks/arc094_b,nan
Tozan and Gezan,https://atcoder.jp/contests/arc094/tasks/arc094_c,nan
Normalization,https://atcoder.jp/contests/arc094/tasks/arc094_d,nan
Many Medians,https://atcoder.jp/contests/abc094/tasks/arc095_a,nan
Binomial Coefficients,https://atcoder.jp/contests/abc094/tasks/arc095_b,nan
Symmetric Grid,https://atcoder.jp/contests/arc095/tasks/arc095_c,nan
Permutation Tree,https://atcoder.jp/contests/arc095/tasks/arc095_d,nan
Half and Half,https://atcoder.jp/contests/abc095/tasks/arc096_a,nan
Static Sushi,https://atcoder.jp/contests/abc095/tasks/arc096_b,nan
Everything on It,https://atcoder.jp/contests/arc096/tasks/arc096_c,nan
Sweet Alchemy,https://atcoder.jp/contests/arc096/tasks/arc096_d,nan
K th Substring,https://atcoder.jp/contests/abc097/tasks/arc097_a,nan
Equals,https://atcoder.jp/contests/abc097/tasks/arc097_b,nan
Sorted and Sorted,https://atcoder.jp/contests/arc097/tasks/arc097_c,nan
Monochrome Cat,https://atcoder.jp/contests/arc097/tasks/arc097_d,nan
Attention,https://atcoder.jp/contests/abc098/tasks/arc098_a,nan
Xor Sum 2,https://atcoder.jp/contests/abc098/tasks/arc098_b,nan
Range Minimum Queries,https://atcoder.jp/contests/arc098/tasks/arc098_c,nan
Donation,https://atcoder.jp/contests/arc098/tasks/arc098_d,nan
Minimization,https://atcoder.jp/contests/abc101/tasks/arc099_a,nan
Snuke Numbers,https://atcoder.jp/contests/abc101/tasks/arc099_b,nan
Independence,https://atcoder.jp/contests/arc099/tasks/arc099_c,nan
Eating Symbols Hard,https://atcoder.jp/contests/arc099/tasks/arc099_d,nan
Linear Approximation,https://atcoder.jp/contests/abc102/tasks/arc100_a,nan
Equal Cut,https://atcoder.jp/contests/abc102/tasks/arc100_b,nan
Or Plus Max,https://atcoder.jp/contests/arc100/tasks/arc100_c,nan
Colorful Sequences,https://atcoder.jp/contests/arc100/tasks/arc100_d,nan
Candles,https://atcoder.jp/contests/abc107/tasks/arc101_a,nan
Median of Medians,https://atcoder.jp/contests/abc107/tasks/arc101_b,nan
Ribbons on Tree,https://atcoder.jp/contests/arc101/tasks/arc101_c,nan
Robots and Exits,https://atcoder.jp/contests/arc101/tasks/arc101_d,nan
Triangular Relationship,https://atcoder.jp/contests/abc108/tasks/arc102_a,nan
All Your Paths are Different Lengths,https://atcoder.jp/contests/abc108/tasks/arc102_b,nan
Stop. Otherwise...,https://atcoder.jp/contests/arc102/tasks/arc102_c,nan
Revenge of BBuBBBlesort!,https://atcoder.jp/contests/arc102/tasks/arc102_d,nan
/\/\/\/,https://atcoder.jp/contests/abc111/tasks/arc103_a,nan
Robot Arms,https://atcoder.jp/contests/abc111/tasks/arc103_b,nan
Tr/ee,https://atcoder.jp/contests/arc103/tasks/arc103_c,nan
Distance Sums,https://atcoder.jp/contests/arc103/tasks/arc103_d,nan
Plus Minus,https://atcoder.jp/contests/arc104/tasks/arc104_a,nan
DNA Sequence,https://atcoder.jp/contests/arc104/tasks/arc104_b,nan
Fair Elevator,https://atcoder.jp/contests/arc104/tasks/arc104_c,nan
Multiset Mean,https://atcoder.jp/contests/arc104/tasks/arc104_d,nan
Random LIS,https://atcoder.jp/contests/arc104/tasks/arc104_e,nan
Visibility Sequence,https://atcoder.jp/contests/arc104/tasks/arc104_f,nan
Fourtune Cookies,https://atcoder.jp/contests/arc105/tasks/arc105_a,nan
MAX =min,https://atcoder.jp/contests/arc105/tasks/arc105_b,nan
Camels and Bridge,https://atcoder.jp/contests/arc105/tasks/arc105_c,nan
Let's Play Nim,https://atcoder.jp/contests/arc105/tasks/arc105_d,nan
Keep Graph Disconnected,https://atcoder.jp/contests/arc105/tasks/arc105_e,nan
Lights Out on Connected Graph,https://atcoder.jp/contests/arc105/tasks/arc105_f,nan
106,https://atcoder.jp/contests/arc106/tasks/arc106_a,nan
Values,https://atcoder.jp/contests/arc106/tasks/arc106_b,nan
Solutions,https://atcoder.jp/contests/arc106/tasks/arc106_c,nan
Powers,https://atcoder.jp/contests/arc106/tasks/arc106_d,nan
Medals,https://atcoder.jp/contests/arc106/tasks/arc106_e,nan
Figures,https://atcoder.jp/contests/arc106/tasks/arc106_f,nan
Simple Math,https://atcoder.jp/contests/arc107/tasks/arc107_a,nan
Quadruple,https://atcoder.jp/contests/arc107/tasks/arc107_b,nan
Shuffle Permutation,https://atcoder.jp/contests/arc107/tasks/arc107_c,nan
Number of Multisets,https://atcoder.jp/contests/arc107/tasks/arc107_d,nan
Mex Mat,https://atcoder.jp/contests/arc107/tasks/arc107_e,nan
Sum of Abs,https://atcoder.jp/contests/arc107/tasks/arc107_f,nan
Sum and Product,https://atcoder.jp/contests/arc108/tasks/arc108_a,nan
Abbreviate Fox,https://atcoder.jp/contests/arc108/tasks/arc108_b,nan
Keep Graph Connected,https://atcoder.jp/contests/arc108/tasks/arc108_c,nan
AB,https://atcoder.jp/contests/arc108/tasks/arc108_d,nan
Random IS,https://atcoder.jp/contests/arc108/tasks/arc108_e,nan
Paint Tree,https://atcoder.jp/contests/arc108/tasks/arc108_f,nan
Hands,https://atcoder.jp/contests/arc109/tasks/arc109_a,nan
log,https://atcoder.jp/contests/arc109/tasks/arc109_b,nan
Large RPS Tournament,https://atcoder.jp/contests/arc109/tasks/arc109_c,nan
L,https://atcoder.jp/contests/arc109/tasks/arc109_d,nan
1D Reversi Builder,https://atcoder.jp/contests/arc109/tasks/arc109_e,nan
1D Kingdom  Builder,https://atcoder.jp/contests/arc109/tasks/arc109_f,nan
Redundant Redundancy,https://atcoder.jp/contests/arc110/tasks/arc110_a,nan
Many 110,https://atcoder.jp/contests/arc110/tasks/arc110_b,nan
Exoswap,https://atcoder.jp/contests/arc110/tasks/arc110_c,nan
Binomial Coefficient is Fun,https://atcoder.jp/contests/arc110/tasks/arc110_d,nan
Shorten ABC,https://atcoder.jp/contests/arc110/tasks/arc110_e,nan
Esoswap,https://atcoder.jp/contests/arc110/tasks/arc110_f,nan
Simple Math 2,https://atcoder.jp/contests/arc111/tasks/arc111_a,nan
Reversible Cards,https://atcoder.jp/contests/arc111/tasks/arc111_b,nan
Too Heavy,https://atcoder.jp/contests/arc111/tasks/arc111_c,nan
Orientation,https://atcoder.jp/contests/arc111/tasks/arc111_d,nan
Simple Math 3,https://atcoder.jp/contests/arc111/tasks/arc111_e,nan
Do you like query problems?,https://atcoder.jp/contests/arc111/tasks/arc111_f,nan
B = C,https://atcoder.jp/contests/arc112/tasks/arc112_a,nan
     B,https://atcoder.jp/contests/arc112/tasks/arc112_b,nan
DFS Game,https://atcoder.jp/contests/arc112/tasks/arc112_c,nan
Skate,https://atcoder.jp/contests/arc112/tasks/arc112_d,nan
Cigar Box,https://atcoder.jp/contests/arc112/tasks/arc112_e,nan
Die Siedler,https://atcoder.jp/contests/arc112/tasks/arc112_f,nan
A*B*C,https://atcoder.jp/contests/arc113/tasks/arc113_a,nan
A^B^C,https://atcoder.jp/contests/arc113/tasks/arc113_b,nan
String Invasion,https://atcoder.jp/contests/arc113/tasks/arc113_c,nan
Sky Reflector,https://atcoder.jp/contests/arc113/tasks/arc113_d,nan
Rvom and Rsrev,https://atcoder.jp/contests/arc113/tasks/arc113_e,nan
Social Distance,https://atcoder.jp/contests/arc113/tasks/arc113_f,nan
Not coprime,https://atcoder.jp/contests/arc114/tasks/arc114_a,nan
Special Subsets,https://atcoder.jp/contests/arc114/tasks/arc114_b,nan
Sequence Scores,https://atcoder.jp/contests/arc114/tasks/arc114_c,nan
Moving Pieces on Line,https://atcoder.jp/contests/arc114/tasks/arc114_d,nan
Paper Cutting 2,https://atcoder.jp/contests/arc114/tasks/arc114_e,nan
Permutation Division,https://atcoder.jp/contests/arc114/tasks/arc114_f,nan
Two Choices,https://atcoder.jp/contests/arc115/tasks/arc115_a,nan
Plus Matrix,https://atcoder.jp/contests/arc115/tasks/arc115_b,nan
ℕ Coloring,https://atcoder.jp/contests/arc115/tasks/arc115_c,nan
Odd Degree,https://atcoder.jp/contests/arc115/tasks/arc115_d,nan
LEQ and NEQ,https://atcoder.jp/contests/arc115/tasks/arc115_e,nan
Migration,https://atcoder.jp/contests/arc115/tasks/arc115_f,nan
Odd vs Even,https://atcoder.jp/contests/arc116/tasks/arc116_a,nan
Products of Min Max,https://atcoder.jp/contests/arc116/tasks/arc116_b,nan
Multiple Sequences,https://atcoder.jp/contests/arc116/tasks/arc116_c,nan
I Wanna Win The Game,https://atcoder.jp/contests/arc116/tasks/arc116_d,nan
Spread of Information,https://atcoder.jp/contests/arc116/tasks/arc116_e,nan
Deque Game,https://atcoder.jp/contests/arc116/tasks/arc116_f,nan
God Sequence,https://atcoder.jp/contests/arc117/tasks/arc117_a,nan
ARC Wrecker,https://atcoder.jp/contests/arc117/tasks/arc117_b,nan
Tricolor Pyramid,https://atcoder.jp/contests/arc117/tasks/arc117_c,nan
Miracle Tree,https://atcoder.jp/contests/arc117/tasks/arc117_d,nan
Zero Sum Ranges 2,https://atcoder.jp/contests/arc117/tasks/arc117_e,nan
Gateau,https://atcoder.jp/contests/arc117/tasks/arc117_f,nan
Tax Included Price,https://atcoder.jp/contests/arc118/tasks/arc118_a,nan
Village of M People,https://atcoder.jp/contests/arc118/tasks/arc118_b,nan
Coprime Set,https://atcoder.jp/contests/arc118/tasks/arc118_c,nan
Hamiltonian Cycle,https://atcoder.jp/contests/arc118/tasks/arc118_d,nan
Avoid Permutations,https://atcoder.jp/contests/arc118/tasks/arc118_e,nan
Growth Rate,https://atcoder.jp/contests/arc118/tasks/arc118_f,nan
119 × 2^23 + 1,https://atcoder.jp/contests/arc119/tasks/arc119_a,nan
Electric Board,https://atcoder.jp/contests/arc119/tasks/arc119_b,nan
ARC Wrecker 2,https://atcoder.jp/contests/arc119/tasks/arc119_c,nan
Grid Repainting 3,https://atcoder.jp/contests/arc119/tasks/arc119_d,nan
Pancakes,https://atcoder.jp/contests/arc119/tasks/arc119_e,nan
AtCoder Express 3,https://atcoder.jp/contests/arc119/tasks/arc119_f,nan
Max Add,https://atcoder.jp/contests/arc120/tasks/arc120_a,nan
Uniformly Distributed,https://atcoder.jp/contests/arc120/tasks/arc120_b,nan
Swaps 2,https://atcoder.jp/contests/arc120/tasks/arc120_c,nan
Bracket Score 2,https://atcoder.jp/contests/arc120/tasks/arc120_d,nan
1D Party,https://atcoder.jp/contests/arc120/tasks/arc120_e,nan
Wine Thief,https://atcoder.jp/contests/arc120/tasks/arc120_f,nan
Wine Thief,https://atcoder.jp/contests/arc120/tasks/arc120_f2,nan
2nd Greatest Distance,https://atcoder.jp/contests/arc121/tasks/arc121_a,nan
RGB Matching,https://atcoder.jp/contests/arc121/tasks/arc121_b,nan
Odd Even Sort,https://atcoder.jp/contests/arc121/tasks/arc121_c,nan
1 or 2,https://atcoder.jp/contests/arc121/tasks/arc121_d,nan
Directed Tree,https://atcoder.jp/contests/arc121/tasks/arc121_e,nan
Logical Operations on Tree,https://atcoder.jp/contests/arc121/tasks/arc121_f,nan
Many Formulae,https://atcoder.jp/contests/arc122/tasks/arc122_a,nan
Insurance,https://atcoder.jp/contests/arc122/tasks/arc122_b,nan
Calculator,https://atcoder.jp/contests/arc122/tasks/arc122_c,nan
XOR Game,https://atcoder.jp/contests/arc122/tasks/arc122_d,nan
Increasing LCMs,https://atcoder.jp/contests/arc122/tasks/arc122_e,nan
Domination,https://atcoder.jp/contests/arc122/tasks/arc122_f,nan
Arithmetic Sequence,https://atcoder.jp/contests/arc123/tasks/arc123_a,nan
Increasing Triples,https://atcoder.jp/contests/arc123/tasks/arc123_b,nan
"1, 2, 3   Decomposition",https://atcoder.jp/contests/arc123/tasks/arc123_c,nan
"Inc, Dec   Decomposition",https://atcoder.jp/contests/arc123/tasks/arc123_d,nan
Training,https://atcoder.jp/contests/arc123/tasks/arc123_e,nan
Insert Addition,https://atcoder.jp/contests/arc123/tasks/arc123_f,nan
LR Constraints,https://atcoder.jp/contests/arc124/tasks/arc124_a,nan
XOR Matching 2,https://atcoder.jp/contests/arc124/tasks/arc124_b,nan
LCM of GCDs,https://atcoder.jp/contests/arc124/tasks/arc124_c,nan
Yet Another Sorting Problem,https://atcoder.jp/contests/arc124/tasks/arc124_d,nan
Pass to Next,https://atcoder.jp/contests/arc124/tasks/arc124_e,nan
Chance Meeting,https://atcoder.jp/contests/arc124/tasks/arc124_f,nan
Dial Up,https://atcoder.jp/contests/arc125/tasks/arc125_a,nan
Squares,https://atcoder.jp/contests/arc125/tasks/arc125_b,nan
LIS to Original Sequence,https://atcoder.jp/contests/arc125/tasks/arc125_c,nan
Unique Subsequence,https://atcoder.jp/contests/arc125/tasks/arc125_d,nan
Snack,https://atcoder.jp/contests/arc125/tasks/arc125_e,nan
Tree Degree Subset Sum,https://atcoder.jp/contests/arc125/tasks/arc125_f,nan
Make 10,https://atcoder.jp/contests/arc126/tasks/arc126_a,nan
Cross free Matching,https://atcoder.jp/contests/arc126/tasks/arc126_b,nan
Maximize GCD,https://atcoder.jp/contests/arc126/tasks/arc126_c,nan
Pure Straight,https://atcoder.jp/contests/arc126/tasks/arc126_d,nan
Infinite Operations,https://atcoder.jp/contests/arc126/tasks/arc126_e,nan
Affine Sort,https://atcoder.jp/contests/arc126/tasks/arc126_f,nan
Leading 1s,https://atcoder.jp/contests/arc127/tasks/arc127_a,nan
Ternary Strings,https://atcoder.jp/contests/arc127/tasks/arc127_b,nan
Binary Strings,https://atcoder.jp/contests/arc127/tasks/arc127_c,nan
Sum of Min of Xor,https://atcoder.jp/contests/arc127/tasks/arc127_d,nan
Priority Queue,https://atcoder.jp/contests/arc127/tasks/arc127_e,nan
±AB,https://atcoder.jp/contests/arc127/tasks/arc127_f,nan
Gold and Silver,https://atcoder.jp/contests/arc128/tasks/arc128_a,nan
Balls of Three Colors,https://atcoder.jp/contests/arc128/tasks/arc128_b,nan
Max Dot,https://atcoder.jp/contests/arc128/tasks/arc128_c,nan
Neq Neq,https://atcoder.jp/contests/arc128/tasks/arc128_d,nan
K Different Values,https://atcoder.jp/contests/arc128/tasks/arc128_e,nan
Game against Robot,https://atcoder.jp/contests/arc128/tasks/arc128_f,nan
Smaller XOR,https://atcoder.jp/contests/arc129/tasks/arc129_a,nan
Range Point Distance,https://atcoder.jp/contests/arc129/tasks/arc129_b,nan
Multiple of 7,https://atcoder.jp/contests/arc129/tasks/arc129_c,nan
 1+2 1,https://atcoder.jp/contests/arc129/tasks/arc129_d,nan
Yet Another Minimization,https://atcoder.jp/contests/arc129/tasks/arc129_e,nan
Let's Play Tag,https://atcoder.jp/contests/arc129/tasks/arc129_f,nan
Remove One Character,https://atcoder.jp/contests/arc130/tasks/arc130_a,nan
Colorful Lines,https://atcoder.jp/contests/arc130/tasks/arc130_b,nan
Digit Sum Minimization,https://atcoder.jp/contests/arc130/tasks/arc130_c,nan
Zigzag Tree,https://atcoder.jp/contests/arc130/tasks/arc130_d,nan
Increasing Minimum,https://atcoder.jp/contests/arc130/tasks/arc130_e,nan
Replace by Average,https://atcoder.jp/contests/arc130/tasks/arc130_f,nan
Two Lucky Numbers,https://atcoder.jp/contests/arc131/tasks/arc131_a,nan
Grid Repainting 4,https://atcoder.jp/contests/arc131/tasks/arc131_b,nan
Zero XOR,https://atcoder.jp/contests/arc131/tasks/arc131_c,nan
AtArcher,https://atcoder.jp/contests/arc131/tasks/arc131_d,nan
Christmas Wreath,https://atcoder.jp/contests/arc131/tasks/arc131_e,nan
ARC Stamp,https://atcoder.jp/contests/arc131/tasks/arc131_f,nan
Permutation Grid,https://atcoder.jp/contests/arc132/tasks/arc132_a,nan
Shift and Reverse,https://atcoder.jp/contests/arc132/tasks/arc132_b,nan
Almost Sorted,https://atcoder.jp/contests/arc132/tasks/arc132_c,nan
Between Two Binary Strings,https://atcoder.jp/contests/arc132/tasks/arc132_d,nan
Paw,https://atcoder.jp/contests/arc132/tasks/arc132_e,nan
Takahashi The Strongest,https://atcoder.jp/contests/arc132/tasks/arc132_f,nan
Erase by Value,https://atcoder.jp/contests/arc133/tasks/arc133_a,nan
Dividing Subsequence,https://atcoder.jp/contests/arc133/tasks/arc133_b,nan
Row Column Sums,https://atcoder.jp/contests/arc133/tasks/arc133_c,nan
Range XOR,https://atcoder.jp/contests/arc133/tasks/arc133_d,nan
Cyclic Medians,https://atcoder.jp/contests/arc133/tasks/arc133_e,nan
Random Transition,https://atcoder.jp/contests/arc133/tasks/arc133_f,nan
Bridge and Sheets,https://atcoder.jp/contests/arc134/tasks/arc134_a,nan
Reserve or Reverse,https://atcoder.jp/contests/arc134/tasks/arc134_b,nan
The Majority,https://atcoder.jp/contests/arc134/tasks/arc134_c,nan
Concatenate Subsequences,https://atcoder.jp/contests/arc134/tasks/arc134_d,nan
Modulo Nim,https://atcoder.jp/contests/arc134/tasks/arc134_e,nan
Flipping Coins,https://atcoder.jp/contests/arc134/tasks/arc134_f,nan
"Floor, Ceil   Decomposition",https://atcoder.jp/contests/arc135/tasks/arc135_a,nan
Sum of Three Terms,https://atcoder.jp/contests/arc135/tasks/arc135_b,nan
XOR to All,https://atcoder.jp/contests/arc135/tasks/arc135_c,nan
Add to Square,https://atcoder.jp/contests/arc135/tasks/arc135_d,nan
Sequence of Multiples,https://atcoder.jp/contests/arc135/tasks/arc135_e,nan
"Delete 1, 4, 7, ...",https://atcoder.jp/contests/arc135/tasks/arc135_f,nan
A ↔ BB,https://atcoder.jp/contests/arc136/tasks/arc136_a,nan
Triple Shift,https://atcoder.jp/contests/arc136/tasks/arc136_b,nan
Circular Addition,https://atcoder.jp/contests/arc136/tasks/arc136_c,nan
Without Carry,https://atcoder.jp/contests/arc136/tasks/arc136_d,nan
Non coprime DAG,https://atcoder.jp/contests/arc136/tasks/arc136_e,nan
Flip Cells,https://atcoder.jp/contests/arc136/tasks/arc136_f,nan
Coprime Pair,https://atcoder.jp/contests/arc137/tasks/arc137_a,nan
Count 1's,https://atcoder.jp/contests/arc137/tasks/arc137_b,nan
Distinct Numbers,https://atcoder.jp/contests/arc137/tasks/arc137_c,nan
Prefix XORs,https://atcoder.jp/contests/arc137/tasks/arc137_d,nan
Bakery,https://atcoder.jp/contests/arc137/tasks/arc137_e,nan
Overlaps,https://atcoder.jp/contests/arc137/tasks/arc137_f,nan
Larger Score,https://atcoder.jp/contests/arc138/tasks/arc138_a,nan
01 Generation,https://atcoder.jp/contests/arc138/tasks/arc138_b,nan
Rotate and Play Game,https://atcoder.jp/contests/arc138/tasks/arc138_c,nan
Differ by K bits,https://atcoder.jp/contests/arc138/tasks/arc138_d,nan
Decreasing Subsequence,https://atcoder.jp/contests/arc138/tasks/arc138_e,nan
KD Tree,https://atcoder.jp/contests/arc138/tasks/arc138_f,nan
Trailing Zeros,https://atcoder.jp/contests/arc139/tasks/arc139_a,nan
Make N,https://atcoder.jp/contests/arc139/tasks/arc139_b,nan
One Three Nine,https://atcoder.jp/contests/arc139/tasks/arc139_c,nan
Priority Queue 2,https://atcoder.jp/contests/arc139/tasks/arc139_d,nan
Wazir,https://atcoder.jp/contests/arc139/tasks/arc139_e,nan
Many Xor Optimization Problems,https://atcoder.jp/contests/arc139/tasks/arc139_f,nan
Right String,https://atcoder.jp/contests/arc140/tasks/arc140_a,nan
Shorten ARC,https://atcoder.jp/contests/arc140/tasks/arc140_b,nan
ABS Permutation (LIS ver.),https://atcoder.jp/contests/arc140/tasks/arc140_c,nan
One to One,https://atcoder.jp/contests/arc140/tasks/arc140_d,nan
Not Equal Rectangle,https://atcoder.jp/contests/arc140/tasks/arc140_e,nan
ABS Permutation (Count ver.),https://atcoder.jp/contests/arc140/tasks/arc140_f,nan
Periodic Number,https://atcoder.jp/contests/arc141/tasks/arc141_a,nan
Increasing Prefix XOR,https://atcoder.jp/contests/arc141/tasks/arc141_b,nan
Bracket and Permutation,https://atcoder.jp/contests/arc141/tasks/arc141_c,nan
Non divisible Set,https://atcoder.jp/contests/arc141/tasks/arc141_d,nan
Sliding Edge on Torus,https://atcoder.jp/contests/arc141/tasks/arc141_e,nan
Well defined Abbreviation,https://atcoder.jp/contests/arc141/tasks/arc141_f,nan
Reverse and Minimize,https://atcoder.jp/contests/arc142/tasks/arc142_a,nan
Unbalanced Squares,https://atcoder.jp/contests/arc142/tasks/arc142_b,nan
Tree Queries,https://atcoder.jp/contests/arc142/tasks/arc142_c,nan
Deterministic Placing,https://atcoder.jp/contests/arc142/tasks/arc142_d,nan
Pairing Wizards,https://atcoder.jp/contests/arc142/tasks/arc142_e,nan
Paired Wizards,https://atcoder.jp/contests/arc142/tasks/arc142_f,nan
Three Integers,https://atcoder.jp/contests/arc143/tasks/arc143_a,nan
Counting Grids,https://atcoder.jp/contests/arc143/tasks/arc143_b,nan
Piles of Pebbles,https://atcoder.jp/contests/arc143/tasks/arc143_c,nan
Bridges,https://atcoder.jp/contests/arc143/tasks/arc143_d,nan
Reversi,https://atcoder.jp/contests/arc143/tasks/arc143_e,nan
Counting Subsets,https://atcoder.jp/contests/arc143/tasks/arc143_f,nan
Digit Sum of 2x,https://atcoder.jp/contests/arc144/tasks/arc144_a,nan
Gift Tax,https://atcoder.jp/contests/arc144/tasks/arc144_b,nan
K Derangement,https://atcoder.jp/contests/arc144/tasks/arc144_c,nan
AND OR Equation,https://atcoder.jp/contests/arc144/tasks/arc144_d,nan
GCD of Path Weights,https://atcoder.jp/contests/arc144/tasks/arc144_e,nan
Arithmetic Sequence Nim,https://atcoder.jp/contests/arc144/tasks/arc144_f,nan
AB Palindrome,https://atcoder.jp/contests/arc145/tasks/arc145_a,nan
AB Game,https://atcoder.jp/contests/arc145/tasks/arc145_b,nan
Split and Maximize,https://atcoder.jp/contests/arc145/tasks/arc145_c,nan
Non Arithmetic Progression Set,https://atcoder.jp/contests/arc145/tasks/arc145_d,nan
Adjacent XOR,https://atcoder.jp/contests/arc145/tasks/arc145_e,nan
Modulo Sum of Increasing Sequences,https://atcoder.jp/contests/arc145/tasks/arc145_f,nan
Three Cards,https://atcoder.jp/contests/arc146/tasks/arc146_a,nan
Plus and AND,https://atcoder.jp/contests/arc146/tasks/arc146_b,nan
Even XOR,https://atcoder.jp/contests/arc146/tasks/arc146_c,nan
>=<,https://atcoder.jp/contests/arc146/tasks/arc146_d,nan
Simple Speed,https://atcoder.jp/contests/arc146/tasks/arc146_e,nan
Simple Solitaire,https://atcoder.jp/contests/arc146/tasks/arc146_f,nan
Max Mod Min,https://atcoder.jp/contests/arc147/tasks/arc147_a,nan
Swap to Sort,https://atcoder.jp/contests/arc147/tasks/arc147_b,nan
Min Diff Sum,https://atcoder.jp/contests/arc147/tasks/arc147_c,nan
Sets Scores,https://atcoder.jp/contests/arc147/tasks/arc147_d,nan
Examination,https://atcoder.jp/contests/arc147/tasks/arc147_e,nan
Again ABC String,https://atcoder.jp/contests/arc147/tasks/arc147_f,nan
mod M,https://atcoder.jp/contests/arc148/tasks/arc148_a,nan
dp,https://atcoder.jp/contests/arc148/tasks/arc148_b,nan
Lights Out on Tree,https://atcoder.jp/contests/arc148/tasks/arc148_c,nan
mod M Game,https://atcoder.jp/contests/arc148/tasks/arc148_d,nan
≥ K,https://atcoder.jp/contests/arc148/tasks/arc148_e,nan
998244353 → 1000000007,https://atcoder.jp/contests/arc148/tasks/arc148_f,nan
Repdigit Number,https://atcoder.jp/contests/arc149/tasks/arc149_a,nan
Two LIS Sum,https://atcoder.jp/contests/arc149/tasks/arc149_b,nan
Avoid Prime Sum,https://atcoder.jp/contests/arc149/tasks/arc149_c,nan
Simultaneous Sugoroku,https://atcoder.jp/contests/arc149/tasks/arc149_d,nan
Sliding Window Sort,https://atcoder.jp/contests/arc149/tasks/arc149_e,nan
Rational Number System,https://atcoder.jp/contests/arc149/tasks/arc149_f,nan
Continuous 1,https://atcoder.jp/contests/arc150/tasks/arc150_a,nan
Make Divisible,https://atcoder.jp/contests/arc150/tasks/arc150_b,nan
Path and Subsequence,https://atcoder.jp/contests/arc150/tasks/arc150_c,nan
Removing Gacha,https://atcoder.jp/contests/arc150/tasks/arc150_d,nan
Weathercock,https://atcoder.jp/contests/arc150/tasks/arc150_e,nan
Constant Sum Subsequence,https://atcoder.jp/contests/arc150/tasks/arc150_f,nan
Equal Hamming Distances,https://atcoder.jp/contests/arc151/tasks/arc151_a,nan
A < AP,https://atcoder.jp/contests/arc151/tasks/arc151_b,nan
01 Game,https://atcoder.jp/contests/arc151/tasks/arc151_c,nan
Binary Representations and Queries,https://atcoder.jp/contests/arc151/tasks/arc151_d,nan
Keep Being Substring,https://atcoder.jp/contests/arc151/tasks/arc151_e,nan
RGB Card Game,https://atcoder.jp/contests/arc151/tasks/arc151_f,nan
Seat Occupation,https://atcoder.jp/contests/arc152/tasks/arc152_a,nan
Pass on Path,https://atcoder.jp/contests/arc152/tasks/arc152_b,nan
Pivot,https://atcoder.jp/contests/arc152/tasks/arc152_c,nan
Halftree,https://atcoder.jp/contests/arc152/tasks/arc152_d,nan
Xor Annihilation,https://atcoder.jp/contests/arc152/tasks/arc152_e,nan
Attraction on Tree,https://atcoder.jp/contests/arc152/tasks/arc152_f,nan
AABCDDEFE,https://atcoder.jp/contests/arc153/tasks/arc153_a,nan
Grid Rotations,https://atcoder.jp/contests/arc153/tasks/arc153_b,nan
± Increasing Sequence,https://atcoder.jp/contests/arc153/tasks/arc153_c,nan
Sum of Sum of Digits,https://atcoder.jp/contests/arc153/tasks/arc153_d,nan
Deque Minimization,https://atcoder.jp/contests/arc153/tasks/arc153_e,nan
Tri Colored Paths,https://atcoder.jp/contests/arc153/tasks/arc153_f,nan
Swap Digit,https://atcoder.jp/contests/arc154/tasks/arc154_a,nan
New Place,https://atcoder.jp/contests/arc154/tasks/arc154_b,nan
Roller,https://atcoder.jp/contests/arc154/tasks/arc154_c,nan
A + B > C ?,https://atcoder.jp/contests/arc154/tasks/arc154_d,nan
Reverse and Inversion,https://atcoder.jp/contests/arc154/tasks/arc154_e,nan
Dice Game,https://atcoder.jp/contests/arc154/tasks/arc154_f,nan
ST and TS  Palindrome,https://atcoder.jp/contests/arc155/tasks/arc155_a,nan
Abs Abs Function,https://atcoder.jp/contests/arc155/tasks/arc155_b,nan
Even Sum Triplet,https://atcoder.jp/contests/arc155/tasks/arc155_c,nan
Avoid Coprime Game,https://atcoder.jp/contests/arc155/tasks/arc155_d,nan
Split and Square,https://atcoder.jp/contests/arc155/tasks/arc155_e,nan
Directable as Desired,https://atcoder.jp/contests/arc155/tasks/arc155_f,nan
Non Adjacent Flip,https://atcoder.jp/contests/arc156/tasks/arc156_a,nan
Mex on Blackboard,https://atcoder.jp/contests/arc156/tasks/arc156_b,nan
Tree and LCS,https://atcoder.jp/contests/arc156/tasks/arc156_c,nan
Xor Sum 5,https://atcoder.jp/contests/arc156/tasks/arc156_d,nan
Non Adjacent Matching,https://atcoder.jp/contests/arc156/tasks/arc156_e,nan
Make Same Set,https://atcoder.jp/contests/arc156/tasks/arc156_f,nan
XXYYX,https://atcoder.jp/contests/arc157/tasks/arc157_a,nan
XYYYX,https://atcoder.jp/contests/arc157/tasks/arc157_b,nan
YY Square,https://atcoder.jp/contests/arc157/tasks/arc157_c,nan
YY Garden,https://atcoder.jp/contests/arc157/tasks/arc157_d,nan
XXYX Binary Tree,https://atcoder.jp/contests/arc157/tasks/arc157_e,nan
XY Ladder LCS,https://atcoder.jp/contests/arc157/tasks/arc157_f,nan
+3 +5 +7,https://atcoder.jp/contests/arc158/tasks/arc158_a,nan
Sum Product Ratio,https://atcoder.jp/contests/arc158/tasks/arc158_b,nan
All Pair Digit Sums,https://atcoder.jp/contests/arc158/tasks/arc158_c,nan
Equation,https://atcoder.jp/contests/arc158/tasks/arc158_d,nan
All Pair Shortest Paths,https://atcoder.jp/contests/arc158/tasks/arc158_e,nan
Random Radix Sort,https://atcoder.jp/contests/arc158/tasks/arc158_f,nan
Copy and Paste Graph,https://atcoder.jp/contests/arc159/tasks/arc159_a,nan
GCD Subtraction,https://atcoder.jp/contests/arc159/tasks/arc159_b,nan
Permutation Addition,https://atcoder.jp/contests/arc159/tasks/arc159_c,nan
LIS 2,https://atcoder.jp/contests/arc159/tasks/arc159_d,nan
Difference Sum Query,https://atcoder.jp/contests/arc159/tasks/arc159_e,nan
Good Division,https://atcoder.jp/contests/arc159/tasks/arc159_f,nan
Reverse and Count,https://atcoder.jp/contests/arc160/tasks/arc160_a,nan
Triple Pair,https://atcoder.jp/contests/arc160/tasks/arc160_b,nan
Power Up,https://atcoder.jp/contests/arc160/tasks/arc160_c,nan
Mahjong,https://atcoder.jp/contests/arc160/tasks/arc160_d,nan
Make Biconnected,https://atcoder.jp/contests/arc160/tasks/arc160_e,nan
Count Sorted Arrays,https://atcoder.jp/contests/arc160/tasks/arc160_f,nan
Make M,https://atcoder.jp/contests/arc161/tasks/arc161_a,nan
Exactly Three Bits,https://atcoder.jp/contests/arc161/tasks/arc161_b,nan
Dyed by Majority (Odd Tree),https://atcoder.jp/contests/arc161/tasks/arc161_c,nan
Everywhere is Sparser than Whole (Construction),https://atcoder.jp/contests/arc161/tasks/arc161_d,nan
Not Dyed by Majority (Cubic Graph),https://atcoder.jp/contests/arc161/tasks/arc161_e,nan
Everywhere is Sparser than Whole (Judge),https://atcoder.jp/contests/arc161/tasks/arc161_f,nan
Ekiden Race,https://atcoder.jp/contests/arc162/tasks/arc162_a,nan
Insertion Sort 2,https://atcoder.jp/contests/arc162/tasks/arc162_b,nan
Mex Game on Tree,https://atcoder.jp/contests/arc162/tasks/arc162_c,nan
Smallest Vertices,https://atcoder.jp/contests/arc162/tasks/arc162_d,nan
Strange Constraints,https://atcoder.jp/contests/arc162/tasks/arc162_e,nan
Montage,https://atcoder.jp/contests/arc162/tasks/arc162_f,nan
Divide String,https://atcoder.jp/contests/arc163/tasks/arc163_a,nan
Favorite Game,https://atcoder.jp/contests/arc163/tasks/arc163_b,nan
Harmonic Mean,https://atcoder.jp/contests/arc163/tasks/arc163_c,nan
Sum of SCC,https://atcoder.jp/contests/arc163/tasks/arc163_d,nan
Chmin XOR Game,https://atcoder.jp/contests/arc163/tasks/arc163_e,nan
Many Increasing Problems,https://atcoder.jp/contests/arc163/tasks/arc163_f,nan
Ternary Decomposition,https://atcoder.jp/contests/arc164/tasks/arc164_a,nan
Switching Travel,https://atcoder.jp/contests/arc164/tasks/arc164_b,nan
Reversible Card Game,https://atcoder.jp/contests/arc164/tasks/arc164_c,nan
1D Coulomb,https://atcoder.jp/contests/arc164/tasks/arc164_d,nan
Segment Tree Optimization,https://atcoder.jp/contests/arc164/tasks/arc164_e,nan
Subtree Reversi,https://atcoder.jp/contests/arc164/tasks/arc164_f,nan
Sum equals LCM,https://atcoder.jp/contests/arc165/tasks/arc165_a,nan
Sliding Window Sort 2,https://atcoder.jp/contests/arc165/tasks/arc165_b,nan
Social Distance on Graph,https://atcoder.jp/contests/arc165/tasks/arc165_c,nan
Substring Comparison,https://atcoder.jp/contests/arc165/tasks/arc165_d,nan
Random Isolation,https://atcoder.jp/contests/arc165/tasks/arc165_e,nan
Make Adjacent,https://atcoder.jp/contests/arc165/tasks/arc165_f,nan
Replace C or Swap AB,https://atcoder.jp/contests/arc166/tasks/arc166_a,nan
Make Multiples,https://atcoder.jp/contests/arc166/tasks/arc166_b,nan
LU / RD Marking,https://atcoder.jp/contests/arc166/tasks/arc166_c,nan
Interval Counts,https://atcoder.jp/contests/arc166/tasks/arc166_d,nan
Fizz Buzz Difference,https://atcoder.jp/contests/arc166/tasks/arc166_e,nan
Tangent Addition Formula,https://atcoder.jp/contests/arc166/tasks/arc166_f,nan
Toasts for Breakfast Party,https://atcoder.jp/contests/arc167/tasks/arc167_a,nan
Product of Divisors,https://atcoder.jp/contests/arc167/tasks/arc167_b,nan
MST on Line++,https://atcoder.jp/contests/arc167/tasks/arc167_c,nan
Good Permutation,https://atcoder.jp/contests/arc167/tasks/arc167_d,nan
One Square in a Triangle,https://atcoder.jp/contests/arc167/tasks/arc167_e,nan
Tree Tree Tree,https://atcoder.jp/contests/arc167/tasks/arc167_f,nan
<Inversion>,https://atcoder.jp/contests/arc168/tasks/arc168_a,nan
Arbitrary Nim,https://atcoder.jp/contests/arc168/tasks/arc168_b,nan
Swap Characters,https://atcoder.jp/contests/arc168/tasks/arc168_c,nan
Maximize Update,https://atcoder.jp/contests/arc168/tasks/arc168_d,nan
Subsegments with Large Sums,https://atcoder.jp/contests/arc168/tasks/arc168_e,nan
Up Down Queries,https://atcoder.jp/contests/arc168/tasks/arc168_f,nan
Please Sign,https://atcoder.jp/contests/arc169/tasks/arc169_a,nan
Subsegments with Small Sums,https://atcoder.jp/contests/arc169/tasks/arc169_b,nan
Not So Consecutive,https://atcoder.jp/contests/arc169/tasks/arc169_c,nan
Add to Make a Permutation,https://atcoder.jp/contests/arc169/tasks/arc169_d,nan
Avoid Boring Matches,https://atcoder.jp/contests/arc169/tasks/arc169_e,nan
Large DP Table,https://atcoder.jp/contests/arc169/tasks/arc169_f,nan
Yet Another AB Problem,https://atcoder.jp/contests/arc170/tasks/arc170_a,nan
Arithmetic Progression Subsequence,https://atcoder.jp/contests/arc170/tasks/arc170_b,nan
Prefix Mex Sequence,https://atcoder.jp/contests/arc170/tasks/arc170_c,nan
Triangle Card Game,https://atcoder.jp/contests/arc170/tasks/arc170_d,nan
BDFS,https://atcoder.jp/contests/arc170/tasks/arc170_e,nan
Edge Deletion 2,https://atcoder.jp/contests/arc170/tasks/arc170_f,nan
No Attacking,https://atcoder.jp/contests/arc171/tasks/arc171_a,nan
Chmax,https://atcoder.jp/contests/arc171/tasks/arc171_b,nan
Swap on Tree,https://atcoder.jp/contests/arc171/tasks/arc171_c,nan
Rolling Hash,https://atcoder.jp/contests/arc171/tasks/arc171_d,nan
Rookhopper's Tour,https://atcoder.jp/contests/arc171/tasks/arc171_e,nan
Both Reversible,https://atcoder.jp/contests/arc171/tasks/arc171_f,nan
Chocolate,https://atcoder.jp/contests/arc172/tasks/arc172_a,nan
AtCoder Language,https://atcoder.jp/contests/arc172/tasks/arc172_b,nan
Election,https://atcoder.jp/contests/arc172/tasks/arc172_c,nan
Distance Ranking,https://atcoder.jp/contests/arc172/tasks/arc172_d,nan
Last 9 Digits,https://atcoder.jp/contests/arc172/tasks/arc172_e,nan
Walking,https://atcoder.jp/contests/arc172/tasks/arc172_f,nan
Neq Number,https://atcoder.jp/contests/arc173/tasks/arc173_a,nan
Make Many Triangles,https://atcoder.jp/contests/arc173/tasks/arc173_b,nan
Not Median,https://atcoder.jp/contests/arc173/tasks/arc173_c,nan
Bracket Walk,https://atcoder.jp/contests/arc173/tasks/arc173_d,nan
Rearrange and Adjacent XOR,https://atcoder.jp/contests/arc173/tasks/arc173_e,nan
Select and Split,https://atcoder.jp/contests/arc173/tasks/arc173_f,nan
A Multiply,https://atcoder.jp/contests/arc174/tasks/arc174_a,nan
Bought Review,https://atcoder.jp/contests/arc174/tasks/arc174_b,nan
Catastrophic Roulette,https://atcoder.jp/contests/arc174/tasks/arc174_c,nan
Digit vs Square Root,https://atcoder.jp/contests/arc174/tasks/arc174_d,nan
Existence Counting,https://atcoder.jp/contests/arc174/tasks/arc174_e,nan
Final Stage,https://atcoder.jp/contests/arc174/tasks/arc174_f,nan
Spoon Taking Problem,https://atcoder.jp/contests/arc175/tasks/arc175_a,nan
Parenthesis Arrangement,https://atcoder.jp/contests/arc175/tasks/arc175_b,nan
Jumping Through Intervals,https://atcoder.jp/contests/arc175/tasks/arc175_c,nan
LIS on Tree 2,https://atcoder.jp/contests/arc175/tasks/arc175_d,nan
Three View Drawing,https://atcoder.jp/contests/arc175/tasks/arc175_e,nan
Append Same Characters,https://atcoder.jp/contests/arc175/tasks/arc175_f,nan
01 Matrix Again,https://atcoder.jp/contests/arc176/tasks/arc176_a,nan
Simple Math 4,https://atcoder.jp/contests/arc176/tasks/arc176_b,nan
Max Permutation,https://atcoder.jp/contests/arc176/tasks/arc176_c,nan
Swap Permutation,https://atcoder.jp/contests/arc176/tasks/arc176_d,nan
Max Vector,https://atcoder.jp/contests/arc176/tasks/arc176_e,nan
Colorful Star,https://atcoder.jp/contests/arc176/tasks/arc176_f,nan
Exchange,https://atcoder.jp/contests/arc177/tasks/arc177_a,nan
Puzzle of Lamps,https://atcoder.jp/contests/arc177/tasks/arc177_b,nan
Routing,https://atcoder.jp/contests/arc177/tasks/arc177_c,nan
Earthquakes,https://atcoder.jp/contests/arc177/tasks/arc177_d,nan
Wrong Scoreboard,https://atcoder.jp/contests/arc177/tasks/arc177_e,nan
Two Airlines,https://atcoder.jp/contests/arc177/tasks/arc177_f,nan
Good Permutation 2,https://atcoder.jp/contests/arc178/tasks/arc178_a,nan
1 + 6 = 7,https://atcoder.jp/contests/arc178/tasks/arc178_b,nan
Sum of Abs 2,https://atcoder.jp/contests/arc178/tasks/arc178_c,nan
Delete Range Mex,https://atcoder.jp/contests/arc178/tasks/arc178_d,nan
Serval Survival,https://atcoder.jp/contests/arc178/tasks/arc178_e,nan
Long Sequence Inversion,https://atcoder.jp/contests/arc178/tasks/arc178_f,nan
Partition,https://atcoder.jp/contests/arc179/tasks/arc179_a,nan
Between B and B,https://atcoder.jp/contests/arc179/tasks/arc179_b,nan
Beware of Overflow,https://atcoder.jp/contests/arc179/tasks/arc179_c,nan
Portable Gate,https://atcoder.jp/contests/arc179/tasks/arc179_d,nan
Rectangle Concatenation,https://atcoder.jp/contests/arc179/tasks/arc179_e,nan
All the Same,https://atcoder.jp/contests/arc179/tasks/arc179_f,nan
ABA and BAB,https://atcoder.jp/contests/arc180/tasks/arc180_a,nan
Improve Inversions,https://atcoder.jp/contests/arc180/tasks/arc180_b,nan
Subsequence and Prefix Sum,https://atcoder.jp/contests/arc180/tasks/arc180_c,nan
Division into 3,https://atcoder.jp/contests/arc180/tasks/arc180_d,nan
LIS and Inversion,https://atcoder.jp/contests/arc180/tasks/arc180_e,nan
Yet Another Expected Value,https://atcoder.jp/contests/arc180/tasks/arc180_f,nan
Sort Left and Right,https://atcoder.jp/contests/arc181/tasks/arc181_a,nan
Annoying String Problem,https://atcoder.jp/contests/arc181/tasks/arc181_b,nan
Row and Column Order,https://atcoder.jp/contests/arc181/tasks/arc181_c,nan
Prefix Bubble Sort,https://atcoder.jp/contests/arc181/tasks/arc181_d,nan
Min and Max at the edge,https://atcoder.jp/contests/arc181/tasks/arc181_e,nan
Colorful Reversi,https://atcoder.jp/contests/arc181/tasks/arc181_f,nan
Chmax Rush!,https://atcoder.jp/contests/arc182/tasks/arc182_a,nan
|{floor(A_i/2^k)}|,https://atcoder.jp/contests/arc182/tasks/arc182_b,nan
Sum of Number of Divisors of Product,https://atcoder.jp/contests/arc182/tasks/arc182_c,nan
Increment Decrement Again,https://atcoder.jp/contests/arc182/tasks/arc182_d,nan
Sum of Min of Mod of Linear,https://atcoder.jp/contests/arc182/tasks/arc182_e,nan
Graph of Mod of Linear,https://atcoder.jp/contests/arc182/tasks/arc182_f,nan
Median of Good Sequences,https://atcoder.jp/contests/arc183/tasks/arc183_a,nan
Near Assignment,https://atcoder.jp/contests/arc183/tasks/arc183_b,nan
Not Argmax,https://atcoder.jp/contests/arc183/tasks/arc183_c,nan
Keep Perfectly Matched,https://atcoder.jp/contests/arc183/tasks/arc183_d,nan
Ascendant Descendant,https://atcoder.jp/contests/arc183/tasks/arc183_e,nan
Sum of Minimum Distance,https://atcoder.jp/contests/arc183/tasks/arc183_f,nan
Appraiser,https://atcoder.jp/contests/arc184/tasks/arc184_a,nan
123 Set,https://atcoder.jp/contests/arc184/tasks/arc184_b,nan
Mountain and Valley Folds,https://atcoder.jp/contests/arc184/tasks/arc184_c,nan
Erase Balls 2D,https://atcoder.jp/contests/arc184/tasks/arc184_d,nan
Accumulating Many Times,https://atcoder.jp/contests/arc184/tasks/arc184_e,nan
mod M Game 2,https://atcoder.jp/contests/arc185/tasks/arc185_a,nan
+1 and  1,https://atcoder.jp/contests/arc185/tasks/arc185_b,nan
Sum of Three Integers,https://atcoder.jp/contests/arc185/tasks/arc185_c,nan
Random Walk on Tree,https://atcoder.jp/contests/arc185/tasks/arc185_d,nan
Adjacent GCD,https://atcoder.jp/contests/arc185/tasks/arc185_e,nan
Underclued,https://atcoder.jp/contests/arc186/tasks/arc186_a,nan
Typical Permutation Descriptor,https://atcoder.jp/contests/arc186/tasks/arc186_b,nan
Ball and Box,https://atcoder.jp/contests/arc186/tasks/arc186_c,nan
Polish Mania,https://atcoder.jp/contests/arc186/tasks/arc186_d,nan
Missing Subsequence,https://atcoder.jp/contests/arc186/tasks/arc186_e,nan
Colorful MST,https://atcoder.jp/contests/cf17-tournament-round2-open/tasks/asaporo2_a,nan
Many Swaps Sorting,https://atcoder.jp/contests/cf17-tournament-round2-open/tasks/asaporo2_b,nan
Paired Parentheses,https://atcoder.jp/contests/cf17-tournament-round1-open/tasks/asaporo2_c,nan
Ancient Tree Record,https://atcoder.jp/contests/cf17-tournament-round1-open/tasks/asaporo2_d,nan
Black Cats Deployment,https://atcoder.jp/contests/cf17-tournament-round3-open/tasks/asaporo2_e,nan
Unicyclic Graph Counting,https://atcoder.jp/contests/cf17-tournament-round3-open/tasks/asaporo2_f,nan
Takahashi the Magician,https://atcoder.jp/contests/cf16-tournament-round2-open/tasks/asaporo_a,nan
Compression,https://atcoder.jp/contests/cf16-tournament-round3-open/tasks/asaporo_b,nan
Graph,https://atcoder.jp/contests/cf16-tournament-round1-open/tasks/asaporo_c,nan
Struck Out,https://atcoder.jp/contests/cf16-tournament-round3-open/tasks/asaporo_d,nan
Takahashi is Missing!,https://atcoder.jp/contests/cf16-tournament-round2-open/tasks/asaporo_e,nan
Problem where Commas Separate Digits,https://atcoder.jp/contests/cf16-tournament-round1-open/tasks/asaporo_f,nan
Crops on Grid,https://atcoder.jp/contests/ahc023/tasks/asprocon10_a,nan
inal. Crops on Grid (System Test),https://atcoder.jp/contests/ahc023/tasks/asprocon10_b,nan
Car Assembly Line,https://atcoder.jp/contests/asprocon7/tasks/asprocon7_a,nan
Automated Painting Line,https://atcoder.jp/contests/asprocon8/tasks/asprocon8_a,nan
Shift Scheduling,https://atcoder.jp/contests/asprocon9/tasks/asprocon9_a,nan
n^p mod m,https://atcoder.jp/contests/atc002/tasks/atc002_b,nan
最適二分探索木,https://atcoder.jp/contests/atc002/tasks/atc002_c,nan
Turn Right,https://atcoder.jp/contests/atcoder11live/tasks/atcoder11live_a,nan
Volume Control,https://atcoder.jp/contests/atcoder12live/tasks/atcoder12live_a,nan
Irregular Contest,https://atcoder.jp/contests/autumn_fest/tasks/autumn_fest_01,nan
3Match,https://atcoder.jp/contests/autumn_fest/tasks/autumn_fest_02,nan
Cards,https://atcoder.jp/contests/autumn_fest/tasks/autumn_fest_03,nan
Don't Think Seriously!,https://atcoder.jp/contests/autumn_fest/tasks/autumn_fest_04,nan
Be Together,https://atcoder.jp/contests/autumn_fest/tasks/autumn_fest_05,nan
Vinculum,https://atcoder.jp/contests/autumn_fest/tasks/autumn_fest_06,nan
Bit Map,https://atcoder.jp/contests/autumn_fest/tasks/autumn_fest_07,nan
U・N・C・O,https://atcoder.jp/contests/autumn_fest/tasks/autumn_fest_08,nan
Pyramid,https://atcoder.jp/contests/autumn_fest/tasks/autumn_fest_09,nan
Ninja of Train,https://atcoder.jp/contests/autumn_fest/tasks/autumn_fest_10,nan
Batch Style Mastermind,https://atcoder.jp/contests/autumn_fest/tasks/autumn_fest_11,nan
Moving Slimes,https://atcoder.jp/contests/awtf2024-open/tasks/awtf2024_a,nan
01 Inversion Expected,https://atcoder.jp/contests/awtf2024-open/tasks/awtf2024_b,nan
Fuel,https://atcoder.jp/contests/awtf2024-open/tasks/awtf2024_c,nan
Almost Bubble Sort,https://atcoder.jp/contests/awtf2024-open/tasks/awtf2024_d,nan
Colorful Stamps,https://atcoder.jp/contests/awtf2024-open/tasks/awtf2024_e,nan
Ball,https://atcoder.jp/contests/bcu30-2018/tasks/bcu30_2018_a,nan
Spring Water,https://atcoder.jp/contests/bcu30-2018/tasks/bcu30_2018_b,nan
Age,https://atcoder.jp/contests/bcu30-2018-qual/tasks/bcu30_2018_qual_a,nan
Wolf Keyboard,https://atcoder.jp/contests/bcu30-2019/tasks/bcu30_2019_a,nan
Interval Addition,https://atcoder.jp/contests/bcu30-2019/tasks/bcu30_2019_b,nan
Bullet of Flame,https://atcoder.jp/contests/bcu30-2019-qual/tasks/bcu30_2019_qual_a,nan
すごろく,https://atcoder.jp/contests/bcu30/tasks/bcu30_a,nan
数字パズル,https://atcoder.jp/contests/bcu30/tasks/bcu30_b,nan
クロスワード,https://atcoder.jp/contests/bcu30/tasks/bcu30_c,nan
数直線,https://atcoder.jp/contests/bcu30/tasks/bcu30_d,nan
スライドパズル,https://atcoder.jp/contests/bcu30/tasks/bcu30_e,nan
数列と計算,https://atcoder.jp/contests/bcu30/tasks/bcu30_f,nan
A + B,https://atcoder.jp/contests/birthday0410/tasks/birthday0410_a,nan
ライスゲーム,https://atcoder.jp/contests/birthday0410/tasks/birthday0410_b,nan
ロ　シ　ア,https://atcoder.jp/contests/birthday0410/tasks/birthday0410_c,nan
先生と遺書,https://atcoder.jp/contests/birthday0410/tasks/birthday0410_d,nan
排他的☆論理和っ！！,https://atcoder.jp/contests/birthday0410/tasks/birthday0410_e,nan
おいらの素数生成式,https://atcoder.jp/contests/birthday0410/tasks/birthday0410_f,nan
この問題はほんとうにひどい問題であるため，できれば先に他の問題のほうをお楽しみいただければと思っておりまして，ですので他の問題を通し終えて暇になり，かつその暇を,https://atcoder.jp/contests/birthday0410/tasks/birthday0410_x,nan
値札,https://atcoder.jp/contests/bitflyer2018-final/tasks/bitflyer2018_final_a,nan
交通費,https://atcoder.jp/contests/bitflyer2018-final/tasks/bitflyer2018_final_b,nan
部分文字列と括弧,https://atcoder.jp/contests/bitflyer2018-final/tasks/bitflyer2018_final_c,nan
数列 XOR,https://atcoder.jp/contests/bitflyer2018-final/tasks/bitflyer2018_final_d,nan
数式とクエリ,https://atcoder.jp/contests/bitflyer2018-final/tasks/bitflyer2018_final_e,nan
配信パズル,https://atcoder.jp/contests/bitflyer2018-final/tasks/bitflyer2018_final_f,nan
Following Permutations,https://atcoder.jp/contests/bitflyer2018-final/tasks/bitflyer2018_final_g,nan
三角形と格子点,https://atcoder.jp/contests/bitflyer2018-final/tasks/bitflyer2018_final_h,nan
本選参加者数,https://atcoder.jp/contests/bitflyer2018-qual/tasks/bitflyer2018_qual_a,nan
洋菓子店,https://atcoder.jp/contests/bitflyer2018-qual/tasks/bitflyer2018_qual_b,nan
徒歩圏内,https://atcoder.jp/contests/bitflyer2018-qual/tasks/bitflyer2018_qual_c,nan
ハンコ,https://atcoder.jp/contests/bitflyer2018-qual/tasks/bitflyer2018_qual_d,nan
祝日,https://atcoder.jp/contests/bitflyer2018-qual/tasks/bitflyer2018_qual_e,nan
Product and GCD,https://atcoder.jp/contests/caddi2018b/tasks/caddi2018_a,nan
Harlequin,https://atcoder.jp/contests/caddi2018b/tasks/caddi2018_b,nan
Negative Doubling,https://atcoder.jp/contests/caddi2018/tasks/caddi2018_c,nan
Square,https://atcoder.jp/contests/caddi2018/tasks/caddi2018_d,nan
12/22,https://atcoder.jp/contests/caddi2018b/tasks/caddi2018b_a,nan
AtCoder Alloy,https://atcoder.jp/contests/caddi2018b/tasks/caddi2018b_b,nan
球の詰め込み,https://atcoder.jp/contests/caddi2019/tasks/caddi2019_a,nan
1D Matching,https://atcoder.jp/contests/cf16-exhibition-final/tasks/cf16_exhibition_final_a,nan
Inscribed Bicycle,https://atcoder.jp/contests/cf16-exhibition-final/tasks/cf16_exhibition_final_b,nan
Cheating Nim,https://atcoder.jp/contests/cf16-exhibition-final/tasks/cf16_exhibition_final_c,nan
Dice Game,https://atcoder.jp/contests/cf16-exhibition-final/tasks/cf16_exhibition_final_d,nan
Water Distribution,https://atcoder.jp/contests/cf16-exhibition-final/tasks/cf16_exhibition_final_e,nan
Intervals,https://atcoder.jp/contests/cf16-exhibition-final/tasks/cf16_exhibition_final_f,nan
FESTIVAL,https://atcoder.jp/contests/cf16-exhibition-final/tasks/cf16_exhibition_final_g,nan
AB=C Problem,https://atcoder.jp/contests/cf16-exhibition-final/tasks/cf16_exhibition_final_h,nan
90 and 270,https://atcoder.jp/contests/cf16-exhibition-final/tasks/cf16_exhibition_final_i,nan
123 Pairs,https://atcoder.jp/contests/cf16-exhibition-final/tasks/cf16_exhibition_final_j,nan
Awkward,https://atcoder.jp/contests/cf17-exhibition-open/tasks/cf17_exhibition_a,nan
Increment and Swap,https://atcoder.jp/contests/cf17-exhibition-open/tasks/cf17_exhibition_b,nan
AKIBA,https://atcoder.jp/contests/cf17-final/tasks/cf17_final_a,nan
Palindrome phobia,https://atcoder.jp/contests/cf17-final/tasks/cf17_final_b,nan
Time Gap,https://atcoder.jp/contests/cf17-final/tasks/cf17_final_c,nan
Zabuton,https://atcoder.jp/contests/cf17-final/tasks/cf17_final_d,nan
Combination Lock,https://atcoder.jp/contests/cf17-final/tasks/cf17_final_e,nan
Distribute Numbers,https://atcoder.jp/contests/cf17-final/tasks/cf17_final_f,nan
Mancala,https://atcoder.jp/contests/cf17-final/tasks/cf17_final_g,nan
Poor Penguin,https://atcoder.jp/contests/cf17-final/tasks/cf17_final_h,nan
Full Tournament,https://atcoder.jp/contests/cf17-final/tasks/cf17_final_i,nan
Tree MST,https://atcoder.jp/contests/cf17-final/tasks/cf17_final_j,nan
ヘイホー君と加算,https://atcoder.jp/contests/code-festival-2015-morning-easy/tasks/cf_2015_morning_easy_a,nan
ヘイホー君と置き換え,https://atcoder.jp/contests/code-festival-2015-morning-easy/tasks/cf_2015_morning_easy_b,nan
ヘイホー君と最終試験,https://atcoder.jp/contests/code-festival-2015-morning-easy/tasks/cf_2015_morning_easy_c,nan
ヘイホー君と削除,https://atcoder.jp/contests/code-festival-2015-morning-easy/tasks/cf_2015_morning_easy_d,nan
一次元オセロ,https://atcoder.jp/contests/code-festival-2015-morning-middle/tasks/cf_2015_morning_hard_a,nan
立方体とペンキ,https://atcoder.jp/contests/code-festival-2015-morning-middle/tasks/cf_2015_morning_hard_b,nan
数列の組み替え,https://atcoder.jp/contests/code-festival-2015-morning-hard/tasks/cf_2015_morning_hard_c,nan
ありんこ,https://atcoder.jp/contests/code-festival-2015-morning-hard/tasks/cf_2015_morning_hard_h,nan
チーム分け,https://atcoder.jp/contests/code-festival-2015-relay/tasks/cf_2015_relay_a,nan
全完,https://atcoder.jp/contests/code-festival-2015-relay/tasks/cf_2015_relay_b,nan
円周率,https://atcoder.jp/contests/code-festival-2015-relay/tasks/cf_2015_relay_c,nan
ピザ,https://atcoder.jp/contests/code-festival-2015-relay/tasks/cf_2015_relay_d,nan
反転時計,https://atcoder.jp/contests/code-festival-2015-relay/tasks/cf_2015_relay_e,nan
グラフの個数,https://atcoder.jp/contests/code-festival-2015-relay/tasks/cf_2015_relay_f,nan
主菜と副菜,https://atcoder.jp/contests/code-festival-2015-relay/tasks/cf_2015_relay_g,nan
塗りつぶし,https://atcoder.jp/contests/code-festival-2015-relay/tasks/cf_2015_relay_h,nan
Platoon Match,https://atcoder.jp/contests/code-festival-2015-relay/tasks/cf_2015_relay_i,nan
石山ゲーム,https://atcoder.jp/contests/code-festival-2015-relay/tasks/cf_2015_relay_j,nan
約数をたくさんつくろう！,https://atcoder.jp/contests/chokudai002/tasks/chokudai002_a,nan
○×ブロック,https://atcoder.jp/contests/chokudai003/tasks/chokudai003_a,nan
Just Write Numbers!,https://atcoder.jp/contests/chokudai004/tasks/chokudai004_a,nan
カラフルパネル,https://atcoder.jp/contests/chokudai005/tasks/chokudai005_a,nan
高橋君の山崩しゲーム,https://atcoder.jp/contests/chokudai001/tasks/chokudai_001_a,nan
最大値,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_a,nan
和,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_b,nan
カンマ区切り,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_c,nan
ソート,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_d,nan
1は何番目？,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_e,nan
見える数,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_f,nan
あまり,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_g,nan
LIS,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_h,nan
和がNの区間,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_i,nan
転倒数,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_j,nan
辞書順で何番目？,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_k,nan
N回スワップ,https://atcoder.jp/contests/chokudai_S001/tasks/chokudai_S001_l,nan
長方形 α,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_a,nan
あまり α,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_b,nan
和の最大値 α,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_c,nan
和の最大値 β,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_d,nan
カツサンドくん α,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_e,nan
種類数 α,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_f,nan
GCD α,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_g,nan
あまり β,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_h,nan
カツサンドくん β,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_i,nan
GCD β,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_j,nan
種類数 β,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_k,nan
長方形 β,https://atcoder.jp/contests/chokudai_S002/tasks/chokudai_S002_l,nan
Automatic Map Generator,https://atcoder.jp/contests/code-festival-2015-okinawa-open/tasks/code_festival_2015_okinawa_a,nan
Beware of the Sogginess!,https://atcoder.jp/contests/code-festival-2015-okinawa-open/tasks/code_festival_2015_okinawa_b,nan
Cat versus Wolf,https://atcoder.jp/contests/code-festival-2015-okinawa-open/tasks/code_festival_2015_okinawa_c,nan
Dictionary for Shiritori Game,https://atcoder.jp/contests/code-festival-2015-okinawa-open/tasks/code_festival_2015_okinawa_d,nan
Enormous XOR Rectangle,https://atcoder.jp/contests/code-festival-2015-okinawa-open/tasks/code_festival_2015_okinawa_e,nan
Falconry,https://atcoder.jp/contests/code-festival-2015-okinawa-open/tasks/code_festival_2015_okinawa_f,nan
Gorgeous Vases,https://atcoder.jp/contests/code-festival-2015-okinawa-open/tasks/code_festival_2015_okinawa_g,nan
Happy 2015,https://atcoder.jp/contests/code-festival-2015-okinawa-open/tasks/code_festival_2015_okinawa_h,nan
Implementation Addict,https://atcoder.jp/contests/code-festival-2015-okinawa-open/tasks/code_festival_2015_okinawa_i,nan
Jungle,https://atcoder.jp/contests/code-festival-2015-okinawa-open/tasks/code_festival_2015_okinawa_j,nan
Snuke's favorite YAKINIKU,https://atcoder.jp/contests/code-festival-2017-quala/tasks/code_festival_2017_quala_a,nan
fLIP,https://atcoder.jp/contests/code-festival-2017-quala/tasks/code_festival_2017_quala_b,nan
Palindromic Matrix,https://atcoder.jp/contests/code-festival-2017-quala/tasks/code_festival_2017_quala_c,nan
Four Coloring,https://atcoder.jp/contests/code-festival-2017-quala/tasks/code_festival_2017_quala_d,nan
Modern Painting,https://atcoder.jp/contests/code-festival-2017-quala/tasks/code_festival_2017_quala_e,nan
Squeezing Slimes,https://atcoder.jp/contests/code-festival-2017-quala/tasks/code_festival_2017_quala_f,nan
XXFESTIVAL,https://atcoder.jp/contests/code-festival-2017-qualb/tasks/code_festival_2017_qualb_a,nan
Problem Set,https://atcoder.jp/contests/code-festival-2017-qualb/tasks/code_festival_2017_qualb_b,nan
3 Steps,https://atcoder.jp/contests/code-festival-2017-qualb/tasks/code_festival_2017_qualb_c,nan
101 to 010,https://atcoder.jp/contests/code-festival-2017-qualb/tasks/code_festival_2017_qualb_d,nan
Popping Balls,https://atcoder.jp/contests/code-festival-2017-qualb/tasks/code_festival_2017_qualb_e,nan
Largest Smallest Cyclic Shift,https://atcoder.jp/contests/code-festival-2017-qualb/tasks/code_festival_2017_qualb_f,nan
Can you get AC?,https://atcoder.jp/contests/code-festival-2017-qualc/tasks/code_festival_2017_qualc_a,nan
Similar Arrays,https://atcoder.jp/contests/code-festival-2017-qualc/tasks/code_festival_2017_qualc_b,nan
Inserting 'x',https://atcoder.jp/contests/code-festival-2017-qualc/tasks/code_festival_2017_qualc_c,nan
Yet Another Palindrome Partitioning,https://atcoder.jp/contests/code-festival-2017-qualc/tasks/code_festival_2017_qualc_d,nan
Cubes,https://atcoder.jp/contests/code-festival-2017-qualc/tasks/code_festival_2017_qualc_e,nan
Three Gluttons,https://atcoder.jp/contests/code-festival-2017-qualc/tasks/code_festival_2017_qualc_f,nan
2540,https://atcoder.jp/contests/code-festival-2018-final-open/tasks/code_festival_2018_final_a,nan
Theme Color,https://atcoder.jp/contests/code-festival-2018-final-open/tasks/code_festival_2018_final_b,nan
Telephone Charge,https://atcoder.jp/contests/code-festival-2018-final-open/tasks/code_festival_2018_final_c,nan
Three Letters,https://atcoder.jp/contests/code-festival-2018-final-open/tasks/code_festival_2018_final_d,nan
Tough Journey,https://atcoder.jp/contests/code-festival-2018-final-open/tasks/code_festival_2018_final_e,nan
Dinner Planning,https://atcoder.jp/contests/code-festival-2018-final-open/tasks/code_festival_2018_final_f,nan
Chicks and Cages,https://atcoder.jp/contests/code-festival-2018-final-open/tasks/code_festival_2018_final_g,nan
Pothunter,https://atcoder.jp/contests/code-festival-2018-final-open/tasks/code_festival_2018_final_h,nan
Homework,https://atcoder.jp/contests/code-festival-2018-final-open/tasks/code_festival_2018_final_i,nan
Complicated Operations,https://atcoder.jp/contests/code-festival-2018-final-open/tasks/code_festival_2018_final_j,nan
配点,https://atcoder.jp/contests/code-festival-2018-quala/tasks/code_festival_2018_quala_a,nan
みかん,https://atcoder.jp/contests/code-festival-2018-quala/tasks/code_festival_2018_quala_b,nan
半分,https://atcoder.jp/contests/code-festival-2018-quala/tasks/code_festival_2018_quala_c,nan
通勤,https://atcoder.jp/contests/code-festival-2018-quala/tasks/code_festival_2018_quala_d,nan
オレンジとみかん,https://atcoder.jp/contests/code-festival-2018-quala/tasks/code_festival_2018_quala_e,nan
Probability of Participation,https://atcoder.jp/contests/code-festival-2018-qualb/tasks/code_festival_2018_qualb_a,nan
Tensai,https://atcoder.jp/contests/code-festival-2018-qualb/tasks/code_festival_2018_qualb_b,nan
Special Cake for CODE FESTIVAL,https://atcoder.jp/contests/code-festival-2018-qualb/tasks/code_festival_2018_qualb_c,nan
Sushi Restaurant,https://atcoder.jp/contests/code-festival-2018-qualb/tasks/code_festival_2018_qualb_d,nan
Game of + ,https://atcoder.jp/contests/code-festival-2018-qualb/tasks/code_festival_2018_qualb_e,nan
Lock,https://atcoder.jp/contests/code-festival-2014-china-open/tasks/code_festival_china_a,nan
n th Points,https://atcoder.jp/contests/code-festival-2014-china-open/tasks/code_festival_china_b,nan
Regular Polygon,https://atcoder.jp/contests/code-festival-2014-china-open/tasks/code_festival_china_c,nan
Maze,https://atcoder.jp/contests/code-festival-2014-china-open/tasks/code_festival_china_d,nan
Game,https://atcoder.jp/contests/code-festival-2014-china-open/tasks/code_festival_china_e,nan
Yakiniku,https://atcoder.jp/contests/code-festival-2014-china-open/tasks/code_festival_china_f,nan
Ammunition Dumps,https://atcoder.jp/contests/code-festival-2014-china-open/tasks/code_festival_china_g,nan
Dungeon,https://atcoder.jp/contests/code-festival-2014-china-open/tasks/code_festival_china_h,nan
Obstruction,https://atcoder.jp/contests/code-festival-2014-china-open/tasks/code_festival_china_i,nan
XORAND,https://atcoder.jp/contests/code-festival-2014-china-open/tasks/code_festival_china_j,nan
パズル,https://atcoder.jp/contests/code-festival-2014-exhibition/tasks/code_festival_exhibition_a,nan
カッコつけ,https://atcoder.jp/contests/code-festival-2014-exhibition/tasks/code_festival_exhibition_b,nan
50m走,https://atcoder.jp/contests/code-festival-2014-final/tasks/code_festival_final_a,nan
暗算ゲーム,https://atcoder.jp/contests/code-festival-2014-final/tasks/code_festival_final_b,nan
N進数,https://atcoder.jp/contests/code-festival-2014-final/tasks/code_festival_final_c,nan
パスカルの三角形,https://atcoder.jp/contests/code-festival-2014-final/tasks/code_festival_final_d,nan
常ならずグラフ,https://atcoder.jp/contests/code-festival-2014-final/tasks/code_festival_final_e,nan
誤情報,https://atcoder.jp/contests/code-festival-2014-final/tasks/code_festival_final_f,nan
魔方陣,https://atcoder.jp/contests/code-festival-2014-final/tasks/code_festival_final_g,nan
部屋割り,https://atcoder.jp/contests/code-festival-2014-final/tasks/code_festival_final_h,nan
Shapes,https://atcoder.jp/contests/code-festival-2014-final/tasks/code_festival_final_i,nan
2つのカップ,https://atcoder.jp/contests/code-festival-2014-final/tasks/code_festival_final_j,nan
差の平均,https://atcoder.jp/contests/code-festival-2014-morning-easy/tasks/code_festival_morning_easy_a,nan
チーム作り,https://atcoder.jp/contests/code-festival-2014-morning-easy/tasks/code_festival_morning_easy_b,nan
身体バランス,https://atcoder.jp/contests/code-festival-2014-morning-easy/tasks/code_festival_morning_easy_c,nan
枕決め,https://atcoder.jp/contests/code-festival-2014-morning-easy/tasks/code_festival_morning_easy_d,nan
宝探し 2,https://atcoder.jp/contests/code-festival-2014-morning-hard/tasks/code_festival_morning_hard_c,nan
Rail Tour,https://atcoder.jp/contests/code-festival-2014-morning-hard/tasks/code_festival_morning_hard_d,nan
eject,https://atcoder.jp/contests/code-festival-2014-morning-middle/tasks/code_festival_morning_med_c,nan
ぽよぽよ,https://atcoder.jp/contests/code-festival-2014-morning-middle/tasks/code_festival_morning_med_d,nan
CODE FESTIVAL 2014,https://atcoder.jp/contests/code-festival-2014-quala/tasks/code_festival_qualA_a,nan
とても長い文字列,https://atcoder.jp/contests/code-festival-2014-quala/tasks/code_festival_qualA_b,nan
2月29日,https://atcoder.jp/contests/code-festival-2014-quala/tasks/code_festival_qualA_c,nan
壊れた電卓,https://atcoder.jp/contests/code-festival-2014-quala/tasks/code_festival_qualA_d,nan
あるピアニスト,https://atcoder.jp/contests/code-festival-2014-qualb/tasks/code_festival_qualB_a,nan
歩く人,https://atcoder.jp/contests/code-festival-2014-qualb/tasks/code_festival_qualB_b,nan
錬金術士,https://atcoder.jp/contests/code-festival-2014-qualb/tasks/code_festival_qualB_c,nan
登山家,https://atcoder.jp/contests/code-festival-2014-qualb/tasks/code_festival_qualB_d,nan
haruki、気になります！,https://atcoder.jp/contests/code-festival-2014-relay/tasks/code_festival_relay_a,nan
もう1年遊べるドン？,https://atcoder.jp/contests/code-festival-2014-relay/tasks/code_festival_relay_b,nan
amylasemania IIDX,https://atcoder.jp/contests/code-festival-2014-relay/tasks/code_festival_relay_c,nan
FU,https://atcoder.jp/contests/code-festival-2014-relay/tasks/code_festival_relay_d,nan
変な足し算,https://atcoder.jp/contests/code-festival-2014-relay/tasks/code_festival_relay_e,nan
ループを探せ,https://atcoder.jp/contests/code-festival-2014-relay/tasks/code_festival_relay_f,nan
haruki の覚醒め,https://atcoder.jp/contests/code-festival-2014-relay/tasks/code_festival_relay_g,nan
アクセス頻度,https://atcoder.jp/contests/code-festival-2014-relay/tasks/code_festival_relay_h,nan
信号待ち,https://atcoder.jp/contests/code-festival-2014-relay/tasks/code_festival_relay_i,nan
Color Game,https://atcoder.jp/contests/code-festival-2014-relay/tasks/code_festival_relay_j,nan
Code Formula 2015,https://atcoder.jp/contests/code-formula-2014-final/tasks/code_formula_2014_final_a,nan
3歩進んで2歩下がる,https://atcoder.jp/contests/code-formula-2014-final/tasks/code_formula_2014_final_b,nan
次世代SNS,https://atcoder.jp/contests/code-formula-2014-final/tasks/code_formula_2014_final_c,nan
映画の連続視聴,https://atcoder.jp/contests/code-formula-2014-final/tasks/code_formula_2014_final_d,nan
ab文字列,https://atcoder.jp/contests/code-formula-2014-final/tasks/code_formula_2014_final_e,nan
100個の円,https://atcoder.jp/contests/code-formula-2014-final/tasks/code_formula_2014_final_f,nan
ノイハの塔,https://atcoder.jp/contests/code-formula-2014-final/tasks/code_formula_2014_final_g,nan
平和協定,https://atcoder.jp/contests/code-formula-2014-final/tasks/code_formula_2014_final_h,nan
立方数,https://atcoder.jp/contests/code-formula-2014-quala/tasks/code_formula_2014_qualA_a,nan
ボウリングゲーム,https://atcoder.jp/contests/code-formula-2014-quala/tasks/code_formula_2014_qualA_b,nan
決勝進出者,https://atcoder.jp/contests/code-formula-2014-quala/tasks/code_formula_2014_qualA_c,nan
無刻印キーボード,https://atcoder.jp/contests/code-formula-2014-quala/tasks/code_formula_2014_qualA_d,nan
サイコロ,https://atcoder.jp/contests/code-formula-2014-qualb/tasks/code_formula_2014_qualB_a,nan
11の倍数,https://atcoder.jp/contests/code-formula-2014-qualb/tasks/code_formula_2014_qualB_b,nan
仲良し文字列,https://atcoder.jp/contests/code-formula-2014-qualb/tasks/code_formula_2014_qualB_c,nan
お釣りの嫌いな高橋君,https://atcoder.jp/contests/code-formula-2014-qualb/tasks/code_formula_2014_qualB_d,nan
カメツル算,https://atcoder.jp/contests/code-thanks-festival-2014-a-open/tasks/code_thanks_festival_14_quala_a,nan
バッジ,https://atcoder.jp/contests/code-thanks-festival-2014-a-open/tasks/code_thanks_festival_14_quala_b,nan
コンテスト,https://atcoder.jp/contests/code-thanks-festival-2014-a-open/tasks/code_thanks_festival_14_quala_c,nan
定期券,https://atcoder.jp/contests/code-thanks-festival-2014-a-open/tasks/code_thanks_festival_14_quala_d,nan
儀式,https://atcoder.jp/contests/code-thanks-festival-2014-a-open/tasks/code_thanks_festival_14_quala_e,nan
順位表,https://atcoder.jp/contests/code-thanks-festival-2014-a-open/tasks/code_thanks_festival_14_quala_f,nan
通勤電車と気分,https://atcoder.jp/contests/code-thanks-festival-2014-a-open/tasks/code_thanks_festival_14_quala_g,nan
模様替え,https://atcoder.jp/contests/code-thanks-festival-2014-a-open/tasks/code_thanks_festival_14_quala_h,nan
朝食,https://atcoder.jp/contests/code-thanks-festival-2014-b-open/tasks/code_thanks_festival_14_qualb_a,nan
電卓ゲーム,https://atcoder.jp/contests/code-thanks-festival-2014-b-open/tasks/code_thanks_festival_14_qualb_b,nan
人気投票ゲーム,https://atcoder.jp/contests/code-thanks-festival-2014-b-open/tasks/code_thanks_festival_14_qualb_c,nan
足ゲーム,https://atcoder.jp/contests/code-thanks-festival-2014-b-open/tasks/code_thanks_festival_14_qualb_d,nan
マスゲーム,https://atcoder.jp/contests/code-thanks-festival-2014-b-open/tasks/code_thanks_festival_14_qualb_e,nan
太鼓ゲーム,https://atcoder.jp/contests/code-thanks-festival-2014-b-open/tasks/code_thanks_festival_14_qualb_f,nan
石取りゲーム,https://atcoder.jp/contests/code-thanks-festival-2014-b-open/tasks/code_thanks_festival_14_qualb_g,nan
しりとりゲーム,https://atcoder.jp/contests/code-thanks-festival-2014-b-open/tasks/code_thanks_festival_14_qualb_h,nan
金庫,https://atcoder.jp/contests/code-thanks-festival-2015-open/tasks/code_thanks_festival_2015_a,nan
袋とボール,https://atcoder.jp/contests/code-thanks-festival-2015-open/tasks/code_thanks_festival_2015_b,nan
集合写真,https://atcoder.jp/contests/code-thanks-festival-2015-open/tasks/code_thanks_festival_2015_c,nan
暴露,https://atcoder.jp/contests/code-thanks-festival-2015-open/tasks/code_thanks_festival_2015_d,nan
ノイズ除去,https://atcoder.jp/contests/code-thanks-festival-2015-open/tasks/code_thanks_festival_2015_e,nan
お祭りとお菓子,https://atcoder.jp/contests/code-thanks-festival-2015-open/tasks/code_thanks_festival_2015_f,nan
カメレオン,https://atcoder.jp/contests/code-thanks-festival-2015-open/tasks/code_thanks_festival_2015_g,nan
穴あきケーキ,https://atcoder.jp/contests/code-thanks-festival-2015-open/tasks/code_thanks_festival_2015_h,nan
Time Penalty,https://atcoder.jp/contests/code-thanks-festival-2017/tasks/code_thanks_festival_2017_a,nan
Concatenated Palindrome,https://atcoder.jp/contests/code-thanks-festival-2017/tasks/code_thanks_festival_2017_b,nan
Factory,https://atcoder.jp/contests/code-thanks-festival-2017/tasks/code_thanks_festival_2017_c,nan
Bus Tour,https://atcoder.jp/contests/code-thanks-festival-2017/tasks/code_thanks_festival_2017_d,nan
Coin Authentication,https://atcoder.jp/contests/code-thanks-festival-2017/tasks/code_thanks_festival_2017_e,nan
Limited Xor Subset,https://atcoder.jp/contests/code-thanks-festival-2017/tasks/code_thanks_festival_2017_f,nan
Mixture Drug,https://atcoder.jp/contests/code-thanks-festival-2017/tasks/code_thanks_festival_2017_g,nan
Union Sets,https://atcoder.jp/contests/code-thanks-festival-2017/tasks/code_thanks_festival_2017_h,nan
Two Problems,https://atcoder.jp/contests/code-thanks-festival-2018/tasks/code_thanks_festival_2018_a,nan
Colored Balls,https://atcoder.jp/contests/code-thanks-festival-2018/tasks/code_thanks_festival_2018_b,nan
Pair Distance,https://atcoder.jp/contests/code-thanks-festival-2018/tasks/code_thanks_festival_2018_c,nan
Concatenation,https://atcoder.jp/contests/code-thanks-festival-2018/tasks/code_thanks_festival_2018_d,nan
Union,https://atcoder.jp/contests/code-thanks-festival-2018/tasks/code_thanks_festival_2018_e,nan
Coins on the tree,https://atcoder.jp/contests/code-thanks-festival-2018/tasks/code_thanks_festival_2018_f,nan
Sum of Cards,https://atcoder.jp/contests/code-thanks-festival-2018/tasks/code_thanks_festival_2018_g,nan
Median Game,https://atcoder.jp/contests/code-thanks-festival-2018/tasks/code_thanks_festival_2018_h,nan
高橋王国と青木王国,https://atcoder.jp/contests/code-festival-2015-exhibition/tasks/codefestival_2015_ex_a,nan
TRAX,https://atcoder.jp/contests/code-festival-2015-exhibition/tasks/codefestival_2015_ex_b,nan
コード川柳,https://atcoder.jp/contests/code-festival-2015-final-open/tasks/codefestival_2015_final_a,nan
ダイスゲーム,https://atcoder.jp/contests/code-festival-2015-final-open/tasks/codefestival_2015_final_b,nan
寿司タワー,https://atcoder.jp/contests/code-festival-2015-final-open/tasks/codefestival_2015_final_c,nan
足ゲームII,https://atcoder.jp/contests/code-festival-2015-final-open/tasks/codefestival_2015_final_d,nan
ショートコーディング,https://atcoder.jp/contests/code-festival-2015-final-open/tasks/codefestival_2015_final_e,nan
歩くピアニスト,https://atcoder.jp/contests/code-festival-2015-final-open/tasks/codefestival_2015_final_f,nan
スタンプラリー,https://atcoder.jp/contests/code-festival-2015-final-open/tasks/codefestival_2015_final_g,nan
焼肉の達人,https://atcoder.jp/contests/code-festival-2015-final-open/tasks/codefestival_2015_final_h,nan
風船ツリー,https://atcoder.jp/contests/code-festival-2015-final-open/tasks/codefestival_2015_final_i,nan
N個のバケツ,https://atcoder.jp/contests/code-festival-2015-final-open/tasks/codefestival_2015_final_j,nan
CODE FESTIVAL 2015,https://atcoder.jp/contests/code-festival-2015-quala/tasks/codefestival_2015_qualA_a,nan
とても長い数列,https://atcoder.jp/contests/code-festival-2015-quala/tasks/codefestival_2015_qualA_b,nan
8月31日,https://atcoder.jp/contests/code-festival-2015-quala/tasks/codefestival_2015_qualA_c,nan
壊れた電車,https://atcoder.jp/contests/code-festival-2015-quala/tasks/codefestival_2015_qualA_d,nan
Double String,https://atcoder.jp/contests/code-festival-2015-qualb/tasks/codefestival_2015_qualB_a,nan
Grading,https://atcoder.jp/contests/code-festival-2015-qualb/tasks/codefestival_2015_qualB_b,nan
Hotel,https://atcoder.jp/contests/code-festival-2015-qualb/tasks/codefestival_2015_qualB_c,nan
"Squares, Pieces and Coloring",https://atcoder.jp/contests/code-festival-2015-qualb/tasks/codefestival_2015_qualB_d,nan
Distance Pairs,https://atcoder.jp/contests/cf16-exhibition/tasks/codefestival_2016_ex_a,nan
Exact Payment,https://atcoder.jp/contests/cf16-exhibition/tasks/codefestival_2016_ex_b,nan
Where's Snuke?,https://atcoder.jp/contests/cf16-final/tasks/codefestival_2016_final_a,nan
Exactly N points,https://atcoder.jp/contests/cf16-final/tasks/codefestival_2016_final_b,nan
Interpretation,https://atcoder.jp/contests/cf16-final/tasks/codefestival_2016_final_c,nan
Pair Cards,https://atcoder.jp/contests/cf16-final/tasks/codefestival_2016_final_d,nan
Cookies,https://atcoder.jp/contests/cf16-final/tasks/codefestival_2016_final_e,nan
Road of the King,https://atcoder.jp/contests/cf16-final/tasks/codefestival_2016_final_f,nan
Zigzag MST,https://atcoder.jp/contests/cf16-final/tasks/codefestival_2016_final_g,nan
Tokaido,https://atcoder.jp/contests/cf16-final/tasks/codefestival_2016_final_h,nan
Reverse Grid,https://atcoder.jp/contests/cf16-final/tasks/codefestival_2016_final_i,nan
Neue Spiel,https://atcoder.jp/contests/cf16-final/tasks/codefestival_2016_final_j,nan
CODEFESTIVAL 2016,https://atcoder.jp/contests/code-festival-2016-quala/tasks/codefestival_2016_qualA_a,nan
Friendly Rabbits,https://atcoder.jp/contests/code-festival-2016-quala/tasks/codefestival_2016_qualA_b,nan
Next Letter,https://atcoder.jp/contests/code-festival-2016-quala/tasks/codefestival_2016_qualA_c,nan
Grid and Integers,https://atcoder.jp/contests/code-festival-2016-quala/tasks/codefestival_2016_qualA_d,nan
LRU Puzzle,https://atcoder.jp/contests/code-festival-2016-quala/tasks/codefestival_2016_qualA_e,nan
Signboard,https://atcoder.jp/contests/code-festival-2016-qualb/tasks/codefestival_2016_qualB_a,nan
Qualification simulator,https://atcoder.jp/contests/code-festival-2016-qualb/tasks/codefestival_2016_qualB_b,nan
Gr idian MST,https://atcoder.jp/contests/code-festival-2016-qualb/tasks/codefestival_2016_qualB_c,nan
Greedy customers,https://atcoder.jp/contests/code-festival-2016-qualb/tasks/codefestival_2016_qualB_d,nan
Lexicographical disorder,https://atcoder.jp/contests/code-festival-2016-qualb/tasks/codefestival_2016_qualB_e,nan
CF,https://atcoder.jp/contests/code-festival-2016-qualc/tasks/codefestival_2016_qualC_a,nan
K Cakes,https://atcoder.jp/contests/code-festival-2016-qualc/tasks/codefestival_2016_qualC_b,nan
Two Alpinists,https://atcoder.jp/contests/code-festival-2016-qualc/tasks/codefestival_2016_qualC_c,nan
Friction,https://atcoder.jp/contests/code-festival-2016-qualc/tasks/codefestival_2016_qualC_d,nan
Encyclopedia of Permutations,https://atcoder.jp/contests/code-festival-2016-qualc/tasks/codefestival_2016_qualC_e,nan
QUEN,https://atcoder.jp/contests/codequeen2023-final-open/tasks/codequeen2023_final_a,nan
N Queens Problem,https://atcoder.jp/contests/codequeen2023-final-open/tasks/codequeen2023_final_b,nan
Path Intersection,https://atcoder.jp/contests/codequeen2023-final-open/tasks/codequeen2023_final_c,nan
Moving Queen,https://atcoder.jp/contests/codequeen2023-final-open/tasks/codequeen2023_final_d,nan
Good Partition,https://atcoder.jp/contests/codequeen2023-final-open/tasks/codequeen2023_final_e,nan
Queen's Crown,https://atcoder.jp/contests/codequeen2023-final-open/tasks/codequeen2023_final_f,nan
Welcome to AtCoder Land 2,https://atcoder.jp/contests/codequeen2024-final-N9tn8QqD/tasks/codequeen2024_final_a,nan
Decode Time Signal,https://atcoder.jp/contests/codequeen2024-final-N9tn8QqD/tasks/codequeen2024_final_b,nan
Attraction on Rainy Day,https://atcoder.jp/contests/codequeen2024-final-N9tn8QqD/tasks/codequeen2024_final_c,nan
Attend Many Events,https://atcoder.jp/contests/codequeen2024-final-N9tn8QqD/tasks/codequeen2024_final_d,nan
AtCoder Hotel,https://atcoder.jp/contests/codequeen2024-final-N9tn8QqD/tasks/codequeen2024_final_e,nan
Divide the Cake,https://atcoder.jp/contests/codequeen2024-final-N9tn8QqD/tasks/codequeen2024_final_f,nan
Quintuple Scoop Ice Cream,https://atcoder.jp/contests/codequeen2024-final-N9tn8QqD/tasks/codequeen2024_final_g,nan
"Good bye, AtCoder Land.",https://atcoder.jp/contests/codequeen2024-final-N9tn8QqD/tasks/codequeen2024_final_h,nan
ファイティング・タカハシ,https://atcoder.jp/contests/colopl2018-final/tasks/colopl2018_final_a,nan
異世界数式,https://atcoder.jp/contests/colopl2018-final/tasks/colopl2018_final_b,nan
スペースエクスプローラー高橋君,https://atcoder.jp/contests/colopl2018-final/tasks/colopl2018_final_c,nan
Chaos of the Snuke World,https://atcoder.jp/contests/colopl2018-final/tasks/colopl2018_final_d,nan
キャプテン・タカハシ,https://atcoder.jp/contests/colopl2018-final/tasks/colopl2018_final_e,nan
高橋くんの帰還,https://atcoder.jp/contests/colopl2018-final/tasks/colopl2018_final_f,nan
すぬけそだて――登録――,https://atcoder.jp/contests/colopl2018-qual/tasks/colopl2018_qual_a,nan
すぬけそだて――チュートリアル――,https://atcoder.jp/contests/colopl2018-qual/tasks/colopl2018_qual_b,nan
すぬけそだて――ごはん――,https://atcoder.jp/contests/colopl2018-qual/tasks/colopl2018_qual_c,nan
すぬけそだて――トレーニング――,https://atcoder.jp/contests/colopl2018-qual/tasks/colopl2018_qual_d,nan
すぬけそだて――わっか――,https://atcoder.jp/contests/colopl2018-qual/tasks/colopl2018_qual_e,nan
Ajihon,https://atcoder.jp/contests/cpsco2019-s1/tasks/cpsco2019_s1_a,nan
Beautiful Harmony,https://atcoder.jp/contests/cpsco2019-s1/tasks/cpsco2019_s1_b,nan
Coins,https://atcoder.jp/contests/cpsco2019-s1/tasks/cpsco2019_s1_c,nan
Dessert Planning,https://atcoder.jp/contests/cpsco2019-s1/tasks/cpsco2019_s1_d,nan
Exclusive OR Queries,https://atcoder.jp/contests/cpsco2019-s1/tasks/cpsco2019_s1_e,nan
Fruits in Season,https://atcoder.jp/contests/cpsco2019-s1/tasks/cpsco2019_s1_f,nan
Game with Division,https://atcoder.jp/contests/cpsco2019-s1/tasks/cpsco2019_s1_g,nan
Highest and Ends,https://atcoder.jp/contests/cpsco2019-s1/tasks/cpsco2019_s1_h,nan
Scholarship Repayment,https://atcoder.jp/contests/cpsco2019-s2/tasks/cpsco2019_s2_a,nan
Telephone Q,https://atcoder.jp/contests/cpsco2019-s2/tasks/cpsco2019_s2_b,nan
Delicious Burgers,https://atcoder.jp/contests/cpsco2019-s2/tasks/cpsco2019_s2_c,nan
Two Piles,https://atcoder.jp/contests/cpsco2019-s2/tasks/cpsco2019_s2_d,nan
Mogu Mogu Gummi,https://atcoder.jp/contests/cpsco2019-s2/tasks/cpsco2019_s2_e,nan
Treasure Collector,https://atcoder.jp/contests/cpsco2019-s2/tasks/cpsco2019_s2_f,nan
MSTX,https://atcoder.jp/contests/cpsco2019-s2/tasks/cpsco2019_s2_g,nan
ASOKO,https://atcoder.jp/contests/cpsco2019-s3/tasks/cpsco2019_s3_a,nan
Balloons,https://atcoder.jp/contests/cpsco2019-s3/tasks/cpsco2019_s3_b,nan
Camp Reception,https://atcoder.jp/contests/cpsco2019-s3/tasks/cpsco2019_s3_c,nan
Decode RGB Sequence,https://atcoder.jp/contests/cpsco2019-s3/tasks/cpsco2019_s3_d,nan
Enumerate Xor Sum,https://atcoder.jp/contests/cpsco2019-s3/tasks/cpsco2019_s3_e,nan
Flexible Permutation,https://atcoder.jp/contests/cpsco2019-s3/tasks/cpsco2019_s3_f,nan
Grand Election,https://atcoder.jp/contests/cpsco2019-s3/tasks/cpsco2019_s3_g,nan
Swimming,https://atcoder.jp/contests/cpsco2019-s4/tasks/cpsco2019_s4_a,nan
Meeting,https://atcoder.jp/contests/cpsco2019-s4/tasks/cpsco2019_s4_b,nan
Make a Team,https://atcoder.jp/contests/cpsco2019-s4/tasks/cpsco2019_s4_c,nan
Boring Sequence,https://atcoder.jp/contests/cpsco2019-s4/tasks/cpsco2019_s4_d,nan
ox Concatenation,https://atcoder.jp/contests/cpsco2019-s4/tasks/cpsco2019_s4_e,nan
Lost Tree,https://atcoder.jp/contests/cpsco2019-s4/tasks/cpsco2019_s4_f,nan
正方形のチップ２,https://atcoder.jp/contests/ddcc2017-final/tasks/ddcc2017_final_a,nan
GCDロボット,https://atcoder.jp/contests/ddcc2017-final/tasks/ddcc2017_final_b,nan
グラフいじり,https://atcoder.jp/contests/ddcc2017-final/tasks/ddcc2017_final_c,nan
なめらかな木,https://atcoder.jp/contests/ddcc2017-final/tasks/ddcc2017_final_d,nan
足のばし,https://atcoder.jp/contests/ddcc2017-final/tasks/ddcc2017_final_e,nan
DDCC型文字列,https://atcoder.jp/contests/ddcc2017-qual/tasks/ddcc2017_qual_a,nan
鉛筆,https://atcoder.jp/contests/ddcc2017-qual/tasks/ddcc2017_qual_b,nan
収納,https://atcoder.jp/contests/ddcc2017-qual/tasks/ddcc2017_qual_c,nan
石,https://atcoder.jp/contests/ddcc2017-qual/tasks/ddcc2017_qual_d,nan
チップ・ストーリー　～無色編～,https://atcoder.jp/contests/ddcc2019-qual/tasks/ddcc2018_qual_a,nan
チップ・ストーリー　～漆黒編～,https://atcoder.jp/contests/ddcc2019-qual/tasks/ddcc2018_qual_b,nan
チップ・ストーリー　～白銀編～,https://atcoder.jp/contests/ddcc2019-qual/tasks/ddcc2018_qual_c,nan
チップ・ストーリー　～黄金編～,https://atcoder.jp/contests/ddcc2019-qual/tasks/ddcc2018_qual_d,nan
レース (Race),https://atcoder.jp/contests/ddcc2019-final/tasks/ddcc2019_final_a,nan
大吉数列 (Array of Fortune),https://atcoder.jp/contests/ddcc2019-final/tasks/ddcc2019_final_b,nan
光の反射 (Reflection of Light),https://atcoder.jp/contests/ddcc2019-final/tasks/ddcc2019_final_c,nan
DISCO!,https://atcoder.jp/contests/ddcc2019-final/tasks/ddcc2019_final_d,nan
飾りつけ (Decoration),https://atcoder.jp/contests/ddcc2019-final/tasks/ddcc2019_final_e,nan
シミュレータ問題（予選問題）,https://atcoder.jp/contests/ddcc2019-machine/tasks/ddcc2019_machine_a,nan
装置実装問題（決勝進出者のみ）,https://atcoder.jp/contests/ddcc2019-machine/tasks/ddcc2019_machine_b,nan
Div/de,https://atcoder.jp/contests/ddcc2020-final/tasks/ddcc2020_final_a,nan
Hawker on Graph,https://atcoder.jp/contests/ddcc2020-final/tasks/ddcc2020_final_b,nan
Smaller Suffix Free Sequences,https://atcoder.jp/contests/ddcc2020-final/tasks/ddcc2020_final_c,nan
Pars/ey,https://atcoder.jp/contests/ddcc2020-final/tasks/ddcc2020_final_d,nan
DDCC Finals,https://atcoder.jp/contests/ddcc2020-qual/tasks/ddcc2020_qual_a,nan
Iron Bar Cutting,https://atcoder.jp/contests/ddcc2020-qual/tasks/ddcc2020_qual_b,nan
Strawberry Cakes,https://atcoder.jp/contests/ddcc2020-qual/tasks/ddcc2020_qual_c,nan
Digit Sum Replace,https://atcoder.jp/contests/ddcc2020-qual/tasks/ddcc2020_qual_d,nan
Majority of Balls,https://atcoder.jp/contests/ddcc2020-qual/tasks/ddcc2020_qual_e,nan
DISCOSMOS,https://atcoder.jp/contests/ddcc2020-qual/tasks/ddcc2020_qual_f,nan
正方形のチップ,https://atcoder.jp/contests/ddcc2016-final/tasks/ddcc_2016_final_a,nan
デュアルカット,https://atcoder.jp/contests/ddcc2016-final/tasks/ddcc_2016_final_b,nan
01文字列,https://atcoder.jp/contests/ddcc2016-final/tasks/ddcc_2016_final_c,nan
シャツの部屋,https://atcoder.jp/contests/ddcc2016-final/tasks/ddcc_2016_final_d,nan
根付き木とクエリ,https://atcoder.jp/contests/ddcc2016-final/tasks/ddcc_2016_final_e,nan
SDカード,https://atcoder.jp/contests/ddcc2016-qual/tasks/ddcc_2016_qual_a,nan
ステップカット,https://atcoder.jp/contests/ddcc2016-qual/tasks/ddcc_2016_qual_b,nan
ロト2,https://atcoder.jp/contests/ddcc2016-qual/tasks/ddcc_2016_qual_c,nan
道路網,https://atcoder.jp/contests/ddcc2016-qual/tasks/ddcc_2016_qual_d,nan
深さ優先探索,https://atcoder.jp/contests/atc001/tasks/dfs_a,nan
C Filter,https://atcoder.jp/contests/digitalarts2012/tasks/digitalarts_1,nan
Password,https://atcoder.jp/contests/digitalarts2012/tasks/digitalarts_2,nan
Chokutter,https://atcoder.jp/contests/digitalarts2012/tasks/digitalarts_3,nan
DISCO presents ディスカバリーチャンネルプログラミングコンテスト 2016 Ⅱ,https://atcoder.jp/contests/discovery2016-final/tasks/discovery_2016_final_a,nan
DDPC特別ビュッフェⅡ,https://atcoder.jp/contests/discovery2016-final/tasks/discovery_2016_final_b,nan
特別講演「括弧列と塗り分け」,https://atcoder.jp/contests/discovery2016-final/tasks/discovery_2016_final_c,nan
ディスコ社内ツアーⅡ,https://atcoder.jp/contests/discovery2016-final/tasks/discovery_2016_final_d,nan
アメージングな二分探索木は、きみが作る！,https://atcoder.jp/contests/discovery2016-final/tasks/discovery_2016_final_e,nan
DISCO presents ディスカバリーチャンネルプログラミングコンテスト 2016,https://atcoder.jp/contests/discovery2016-qual/tasks/discovery_2016_qual_a,nan
ディスコ社内ツアー,https://atcoder.jp/contests/discovery2016-qual/tasks/discovery_2016_qual_b,nan
アメージングな文字列は、きみが作る！,https://atcoder.jp/contests/discovery2016-qual/tasks/discovery_2016_qual_c,nan
DDPC特別ビュッフェ,https://atcoder.jp/contests/discovery2016-qual/tasks/discovery_2016_qual_d,nan
Ball Distribution,https://atcoder.jp/contests/diverta2019-2/tasks/diverta2019_2_a,nan
Picking Up,https://atcoder.jp/contests/diverta2019-2/tasks/diverta2019_2_b,nan
Successive Subtraction,https://atcoder.jp/contests/diverta2019-2/tasks/diverta2019_2_c,nan
Squirrel Merchant,https://atcoder.jp/contests/diverta2019-2/tasks/diverta2019_2_d,nan
Balanced Piles,https://atcoder.jp/contests/diverta2019-2/tasks/diverta2019_2_e,nan
Diverta City,https://atcoder.jp/contests/diverta2019-2/tasks/diverta2019_2_f,nan
Consecutive Integers,https://atcoder.jp/contests/diverta2019/tasks/diverta2019_a,nan
RGB Boxes,https://atcoder.jp/contests/diverta2019/tasks/diverta2019_b,nan
AB Substrings,https://atcoder.jp/contests/diverta2019/tasks/diverta2019_c,nan
DivRem Number,https://atcoder.jp/contests/diverta2019/tasks/diverta2019_d,nan
XOR Partitioning,https://atcoder.jp/contests/diverta2019/tasks/diverta2019_e,nan
Edge Ordering,https://atcoder.jp/contests/diverta2019/tasks/diverta2019_f,nan
ドーナツの体積,https://atcoder.jp/contests/donuts-2015/tasks/donuts_2015_1,nan
Tokyo 7th シスターズ,https://atcoder.jp/contests/donuts-2015/tasks/donuts_2015_2,nan
行列のできるドーナツ屋,https://atcoder.jp/contests/donuts-2015/tasks/donuts_2015_3,nan
ドーナツの箱詰め,https://atcoder.jp/contests/donuts-2015/tasks/donuts_2015_4,nan
勤怠管理,https://atcoder.jp/contests/donuts-live2014/tasks/donuts_live2014_1,nan
7th,https://atcoder.jp/contests/donuts-live2014/tasks/donuts_live2014_2,nan
ソーシャルゲーム,https://atcoder.jp/contests/donuts-live2014/tasks/donuts_live2014_3,nan
サバゲー,https://atcoder.jp/contests/donuts-live2014/tasks/donuts_live2014_4,nan
お菓子やさん,https://atcoder.jp/contests/donuts-live2014/tasks/donuts_live2014_5,nan
Frog 1,https://atcoder.jp/contests/dp/tasks/dp_a,nan
Frog 2,https://atcoder.jp/contests/dp/tasks/dp_b,nan
Vacation,https://atcoder.jp/contests/dp/tasks/dp_c,nan
Knapsack 1,https://atcoder.jp/contests/dp/tasks/dp_d,nan
Knapsack 2,https://atcoder.jp/contests/dp/tasks/dp_e,nan
LCS,https://atcoder.jp/contests/dp/tasks/dp_f,nan
Longest Path,https://atcoder.jp/contests/dp/tasks/dp_g,nan
Grid 1,https://atcoder.jp/contests/dp/tasks/dp_h,nan
Coins,https://atcoder.jp/contests/dp/tasks/dp_i,nan
Sushi,https://atcoder.jp/contests/dp/tasks/dp_j,nan
Stones,https://atcoder.jp/contests/dp/tasks/dp_k,nan
Deque,https://atcoder.jp/contests/dp/tasks/dp_l,nan
Candies,https://atcoder.jp/contests/dp/tasks/dp_m,nan
Slimes,https://atcoder.jp/contests/dp/tasks/dp_n,nan
Matching,https://atcoder.jp/contests/dp/tasks/dp_o,nan
Independent Set,https://atcoder.jp/contests/dp/tasks/dp_p,nan
Flowers,https://atcoder.jp/contests/dp/tasks/dp_q,nan
Walk,https://atcoder.jp/contests/dp/tasks/dp_r,nan
Digit Sum,https://atcoder.jp/contests/dp/tasks/dp_s,nan
Permutation,https://atcoder.jp/contests/dp/tasks/dp_t,nan
Grouping,https://atcoder.jp/contests/dp/tasks/dp_u,nan
Subtree,https://atcoder.jp/contests/dp/tasks/dp_v,nan
Intervals,https://atcoder.jp/contests/dp/tasks/dp_w,nan
Tower,https://atcoder.jp/contests/dp/tasks/dp_x,nan
Grid 2,https://atcoder.jp/contests/dp/tasks/dp_y,nan
Frog 3,https://atcoder.jp/contests/dp/tasks/dp_z,nan
アナログ時計,https://atcoder.jp/contests/dwacon2018-final-open/tasks/dwacon2018_final_a,nan
だんだん強く,https://atcoder.jp/contests/dwacon2018-final-open/tasks/dwacon2018_final_b,nan
XOR ピラミッド,https://atcoder.jp/contests/dwacon2018-final-open/tasks/dwacon2018_final_c,nan
ニワンゴくんとゲーム,https://atcoder.jp/contests/dwacon2018-final-open/tasks/dwacon2018_final_d,nan
ニコニコ文字列判定,https://atcoder.jp/contests/dwacon2018-prelims/tasks/dwacon2018_prelims_a,nan
2525文字列分解,https://atcoder.jp/contests/dwacon2018-prelims/tasks/dwacon2018_prelims_b,nan
Kill/Death,https://atcoder.jp/contests/dwacon2018-prelims/tasks/dwacon2018_prelims_c,nan
ディスクの節約,https://atcoder.jp/contests/dwacon2018-prelims/tasks/dwacon2018_prelims_d,nan
ニワンゴくんの家探し,https://atcoder.jp/contests/dwacon2018-prelims/tasks/dwacon2018_prelims_e,nan
Taro vs. Jiro,https://atcoder.jp/contests/dwacon5th-final-open/tasks/dwacon5th_final_a,nan
XOR Spread,https://atcoder.jp/contests/dwacon5th-final-open/tasks/dwacon5th_final_b,nan
Interval and MST,https://atcoder.jp/contests/dwacon5th-final-open/tasks/dwacon5th_final_c,nan
Parentheses Inversions,https://atcoder.jp/contests/dwacon5th-final-open/tasks/dwacon5th_final_d,nan
Thumbnail,https://atcoder.jp/contests/dwacon5th-prelims/tasks/dwacon5th_prelims_a,nan
Sum AND Subarrays,https://atcoder.jp/contests/dwacon5th-prelims/tasks/dwacon5th_prelims_b,nan
k DMC,https://atcoder.jp/contests/dwacon5th-prelims/tasks/dwacon5th_prelims_c,nan
Square Rotation,https://atcoder.jp/contests/dwacon5th-prelims/tasks/dwacon5th_prelims_d,nan
Cyclic GCDs,https://atcoder.jp/contests/dwacon5th-prelims/tasks/dwacon5th_prelims_e,nan
2525敷き詰め,https://atcoder.jp/contests/dwacon6th-final-open/tasks/dwacon6th_final_a,nan
Harvest Festival,https://atcoder.jp/contests/dwacon6th-final-open/tasks/dwacon6th_final_b,nan
Tree Shrinking,https://atcoder.jp/contests/dwacon6th-final-open/tasks/dwacon6th_final_c,nan
Three Safes,https://atcoder.jp/contests/dwacon6th-final-open/tasks/dwacon6th_final_d,nan
Falling Asleep,https://atcoder.jp/contests/dwacon6th-prelims/tasks/dwacon6th_prelims_a,nan
Fusing Slimes,https://atcoder.jp/contests/dwacon6th-prelims/tasks/dwacon6th_prelims_b,nan
Cookie Distribution,https://atcoder.jp/contests/dwacon6th-prelims/tasks/dwacon6th_prelims_c,nan
Arrangement,https://atcoder.jp/contests/dwacon6th-prelims/tasks/dwacon6th_prelims_d,nan
Span Covering,https://atcoder.jp/contests/dwacon6th-prelims/tasks/dwacon6th_prelims_e,nan
ニコニコ文字列２,https://atcoder.jp/contests/dwango2015-honsen/tasks/dwango2015_finals_1,nan
コメント,https://atcoder.jp/contests/dwango2015-honsen/tasks/dwango2015_finals_2,nan
ドライブ,https://atcoder.jp/contests/dwango2015-honsen/tasks/dwango2015_finals_3,nan
コインの取り合い,https://atcoder.jp/contests/dwango2015-honsen/tasks/dwango2015_finals_4,nan
プレミアム会員,https://atcoder.jp/contests/dwango2015-prelims/tasks/dwango2015_prelims_1,nan
ニコニコ文字列,https://atcoder.jp/contests/dwango2015-prelims/tasks/dwango2015_prelims_2,nan
ゲーマーじゃんけん,https://atcoder.jp/contests/dwango2015-prelims/tasks/dwango2015_prelims_3,nan
タクシー,https://atcoder.jp/contests/dwango2015-prelims/tasks/dwango2015_prelims_4,nan
電波局,https://atcoder.jp/contests/dwango2015-prelims/tasks/dwango2015_prelims_5,nan
通勤,https://atcoder.jp/contests/dwango2016-honsen/tasks/dwango2016final_a,nan
道迷い,https://atcoder.jp/contests/dwango2016-honsen/tasks/dwango2016final_b,nan
電波塔,https://atcoder.jp/contests/dwango2016-honsen/tasks/dwango2016final_c,nan
木,https://atcoder.jp/contests/dwango2016-honsen/tasks/dwango2016final_d,nan
ニコニコ数,https://atcoder.jp/contests/dwango2016-prelims/tasks/dwango2016qual_a,nan
積み鉛筆,https://atcoder.jp/contests/dwango2016-prelims/tasks/dwango2016qual_b,nan
メンテナンス明け,https://atcoder.jp/contests/dwango2016-prelims/tasks/dwango2016qual_c,nan
庭園,https://atcoder.jp/contests/dwango2016-prelims/tasks/dwango2016qual_d,nan
花火,https://atcoder.jp/contests/dwango2016-prelims/tasks/dwango2016qual_e,nan
計算ドリル,https://atcoder.jp/contests/dwacon2017-honsen/tasks/dwango2017final_a,nan
ニワンゴくんの約数,https://atcoder.jp/contests/dwacon2017-honsen/tasks/dwango2017final_b,nan
ドワンGo,https://atcoder.jp/contests/dwacon2017-honsen/tasks/dwango2017final_c,nan
「ドワンゴからの挑戦状」製作秘話,https://atcoder.jp/contests/dwacon2017-honsen/tasks/dwango2017final_d,nan
動画検索,https://atcoder.jp/contests/dwacon2017-prelims/tasks/dwango2017qual_a,nan
ニコニコレベル,https://atcoder.jp/contests/dwacon2017-prelims/tasks/dwango2017qual_b,nan
スキーリフトの相乗り,https://atcoder.jp/contests/dwacon2017-prelims/tasks/dwango2017qual_c,nan
ネタだけ食べたい寿司,https://atcoder.jp/contests/dwacon2017-prelims/tasks/dwango2017qual_d,nan
偶奇飴分け,https://atcoder.jp/contests/dwacon2017-prelims/tasks/dwango2017qual_e,nan
Ax+By,https://atcoder.jp/contests/editor-update-test/tasks/editor_update_test_a,nan
部分木サイズ,https://atcoder.jp/contests/editor-update-test/tasks/editor_update_test_b,nan
Regular Triangle,https://atcoder.jp/contests/exawizards2019/tasks/exawizards2019_a,nan
Red or Blue,https://atcoder.jp/contests/exawizards2019/tasks/exawizards2019_b,nan
Snuke the Wizard,https://atcoder.jp/contests/exawizards2019/tasks/exawizards2019_c,nan
Modulo Operations,https://atcoder.jp/contests/exawizards2019/tasks/exawizards2019_d,nan
Black or White,https://atcoder.jp/contests/exawizards2019/tasks/exawizards2019_e,nan
More Realistic Manhattan Distance,https://atcoder.jp/contests/exawizards2019/tasks/exawizards2019_f,nan
高速フーリエ変換,https://atcoder.jp/contests/atc001/tasks/fft_c,nan
Bintree,https://atcoder.jp/contests/fuka5/tasks/fuka_bintree,nan
単位,https://atcoder.jp/contests/fuka5/tasks/fuka_credit,nan
Graph Cut,https://atcoder.jp/contests/fuka5/tasks/fuka_graphcut,nan
すべては1になる,https://atcoder.jp/contests/fuka5/tasks/fuka_insider,nan
IRU vs SAKI,https://atcoder.jp/contests/fuka5/tasks/fuka_iru,nan
流れ,https://atcoder.jp/contests/fuka5/tasks/fuka_liquid,nan
すごろく,https://atcoder.jp/contests/fuka5/tasks/fuka_sugoroku,nan
増減ソート,https://atcoder.jp/contests/future-meets-you-contest-2018-open/tasks/future2018career_a,nan
ツカモの栽培,https://atcoder.jp/contests/future-contest-2018-final/tasks/future_contest_2018_final_a,nan
山型足し算,https://atcoder.jp/contests/future-contest-2018-qual/tasks/future_contest_2018_qual_a,nan
モンスターテイマー,https://atcoder.jp/contests/future-contest-2019-final/tasks/future_contest_2019_final_a,nan
ばらばらロボット,https://atcoder.jp/contests/future-contest-2019-qual/tasks/future_contest_2019_qual_a,nan
千の木2,https://atcoder.jp/contests/future-contest-2020-final-2/tasks/future_contest_2020_final_2_a,nan
千の木,https://atcoder.jp/contests/future-contest-2020-final/tasks/future_contest_2020_final_a,nan
ロボットの誘導,https://atcoder.jp/contests/future-contest-2020-qual/tasks/future_contest_2020_qual_a,nan
マイニング,https://atcoder.jp/contests/future-contest-2021-final-open/tasks/future_contest_2021_final_a,nan
カードの回収,https://atcoder.jp/contests/future-contest-2021-qual/tasks/future_contest_2021_qual_a,nan
Code Golf for Robot Vacuums,https://atcoder.jp/contests/future-contest-2022-final-open/tasks/future_contest_2022_final_a,nan
Project Leader,https://atcoder.jp/contests/future-contest-2022-qual/tasks/future_contest_2022_qual_a,nan
Dowsing Rod,https://atcoder.jp/contests/future-contest-2023-final-open/tasks/future_contest_2023_final_a,nan
Polyomino Connection A,https://atcoder.jp/contests/future-fif-digital-days/tasks/future_fif_digital_days_a,nan
Polyomino Connection B,https://atcoder.jp/contests/future-fif-digital-days/tasks/future_fif_digital_days_b,nan
Polyomino Connection C,https://atcoder.jp/contests/future-fif-digital-days/tasks/future_fif_digital_days_c,nan
future_fif_digital_days_open_a,https://atcoder.jp/contests/future-fif-digital-days-open/tasks/future_fif_digital_days_open_a,nan
future_fif_digital_days_open_b,https://atcoder.jp/contests/future-fif-digital-days-open/tasks/future_fif_digital_days_open_b,nan
future_fif_digital_days_open_c,https://atcoder.jp/contests/future-fif-digital-days-open/tasks/future_fif_digital_days_open_c,nan
Practice 1,https://atcoder.jp/contests/genocon2021/tasks/genocon2021_a,nan
Practice 2,https://atcoder.jp/contests/genocon2021/tasks/genocon2021_b,nan
Practice 3,https://atcoder.jp/contests/genocon2021/tasks/genocon2021_c,nan
Mind the Difference,https://atcoder.jp/contests/genocon2021/tasks/genocon2021_d,nan
役人,https://atcoder.jp/contests/geocon2013/tasks/geocon2013_a,nan
玉座の間,https://atcoder.jp/contests/geocon2013/tasks/geocon2013_b,nan
泥棒,https://atcoder.jp/contests/geocon2013/tasks/geocon2013_c,nan
魔女,https://atcoder.jp/contests/geocon2013/tasks/geocon2013_d,nan
教室,https://atcoder.jp/contests/gigacode-2019/tasks/gigacode_2019_a,nan
採用面接,https://atcoder.jp/contests/gigacode-2019/tasks/gigacode_2019_b,nan
パソコンの購入,https://atcoder.jp/contests/gigacode-2019/tasks/gigacode_2019_c,nan
家の建設,https://atcoder.jp/contests/gigacode-2019/tasks/gigacode_2019_d,nan
車の乗り継ぎ,https://atcoder.jp/contests/gigacode-2019/tasks/gigacode_2019_e,nan
クローゼットの配置,https://atcoder.jp/contests/gigacode-2019/tasks/gigacode_2019_f,nan
ギガ国の道路事情,https://atcoder.jp/contests/gigacode-2019/tasks/gigacode_2019_g,nan
論理回路の構成,https://atcoder.jp/contests/gigacode-2019/tasks/gigacode_2019_h,nan
得点,https://atcoder.jp/contests/gwcontest2015/tasks/gw2015_a,nan
アリ巣,https://atcoder.jp/contests/gwcontest2015/tasks/gw2015_b,nan
Snukeと対戦！,https://atcoder.jp/contests/gwcontest2015/tasks/gw2015_c,nan
最短絡問題,https://atcoder.jp/contests/gwcontest2015/tasks/gw2015_d,nan
シフト塗り分け,https://atcoder.jp/contests/gwcontest2015/tasks/gw2015_e,nan
ピラミッド   誕生日編,https://atcoder.jp/contests/gwcontest2015/tasks/gw2015_f,nan
ピラミッド   球編,https://atcoder.jp/contests/gwcontest2015/tasks/gw2015_g,nan
ピラミッド   デコ編,https://atcoder.jp/contests/gwcontest2015/tasks/gw2015_h,nan
ピラミッド   立方体編,https://atcoder.jp/contests/gwcontest2015/tasks/gw2015_i,nan
ピラミッド   2D編,https://atcoder.jp/contests/gwcontest2015/tasks/gw2015_j,nan
1→1,https://atcoder.jp/contests/hbpc2012/tasks/hbpc_1,nan
01:01,https://atcoder.jp/contests/hbpc2012/tasks/hbpc_2,nan
1=0.999...,https://atcoder.jp/contests/hbpc2012/tasks/hbpc_3,nan
1+1,https://atcoder.jp/contests/hbpc2012/tasks/hbpc_4,nan
Keyboard,https://atcoder.jp/contests/hhkb2020/tasks/hhkb2020_a,nan
Futon,https://atcoder.jp/contests/hhkb2020/tasks/hhkb2020_b,nan
Neq Min,https://atcoder.jp/contests/hhkb2020/tasks/hhkb2020_c,nan
Squares,https://atcoder.jp/contests/hhkb2020/tasks/hhkb2020_d,nan
Lamps,https://atcoder.jp/contests/hhkb2020/tasks/hhkb2020_e,nan
Random Max,https://atcoder.jp/contests/hhkb2020/tasks/hhkb2020_f,nan
Problem 1,https://atcoder.jp/contests/hokudai-hitachi2017-1/tasks/hitachi2017_1_a,nan
Problem 2,https://atcoder.jp/contests/hokudai-hitachi2017-2/tasks/hitachi2017_2_a,nan
Hitachi String,https://atcoder.jp/contests/hitachi2020/tasks/hitachi2020_a,nan
Nice Shopping,https://atcoder.jp/contests/hitachi2020/tasks/hitachi2020_b,nan
ThREE,https://atcoder.jp/contests/hitachi2020/tasks/hitachi2020_c,nan
Manga Market,https://atcoder.jp/contests/hitachi2020/tasks/hitachi2020_d,nan
Odd Sum Rectangles,https://atcoder.jp/contests/hitachi2020/tasks/hitachi2020_e,nan
Preserve Diameter,https://atcoder.jp/contests/hitachi2020/tasks/hitachi2020_f,nan
Problem Setting A,https://atcoder.jp/contests/hokudai-hitachi2018/tasks/hokudai_hitachi2018_a,nan
Problem Setting B,https://atcoder.jp/contests/hokudai-hitachi2018/tasks/hokudai_hitachi2018_b,nan
Problem Setting C,https://atcoder.jp/contests/hokudai-hitachi2018/tasks/hokudai_hitachi2018_c,nan
Problem A,https://atcoder.jp/contests/hokudai-hitachi2019-1/tasks/hokudai_hitachi2019_1_a,nan
Problem B,https://atcoder.jp/contests/hokudai-hitachi2019-1/tasks/hokudai_hitachi2019_1_b,nan
Problem C,https://atcoder.jp/contests/hokudai-hitachi2019-2/tasks/hokudai_hitachi2019_2_a,nan
hokudai_hitachi2020_a,https://atcoder.jp/contests/hokudai-hitachi2020/tasks/hokudai_hitachi2020_a,nan
hokudai_hitachi2020_b,https://atcoder.jp/contests/hokudai-hitachi2020/tasks/hokudai_hitachi2020_b,nan
Regional area design,https://atcoder.jp/contests/hokudai-hitachi2021/tasks/hokudai_hitachi2021_a,nan
Regional area design and daily operation,https://atcoder.jp/contests/hokudai-hitachi2021/tasks/hokudai_hitachi2021_b,nan
Scheduling of Agricultural Machinery Sharing,https://atcoder.jp/contests/hokudai-hitachi2022/tasks/hokudai_hitachi2022_a,nan
Dynamic Scheduling of Agricultural Machinery Sharing,https://atcoder.jp/contests/hokudai-hitachi2022/tasks/hokudai_hitachi2022_b,nan
Dictionary,https://atcoder.jp/contests/jag2012autumn/tasks/icpc2012autumn_a,nan
Texas hold 'em,https://atcoder.jp/contests/jag2012autumn/tasks/icpc2012autumn_b,nan
Median Tree,https://atcoder.jp/contests/jag2012autumn/tasks/icpc2012autumn_c,nan
Billiard,https://atcoder.jp/contests/jag2012autumn/tasks/icpc2012autumn_d,nan
Stack Maze,https://atcoder.jp/contests/jag2012autumn/tasks/icpc2012autumn_e,nan
Counting 1's,https://atcoder.jp/contests/jag2012autumn/tasks/icpc2012autumn_f,nan
Ancient Commemorative Monolith,https://atcoder.jp/contests/jag2012autumn/tasks/icpc2012autumn_g,nan
Magical Bridges,https://atcoder.jp/contests/jag2012autumn/tasks/icpc2012autumn_h,nan
Hashigo Sama,https://atcoder.jp/contests/jag2012autumn/tasks/icpc2012autumn_j,nan
Ancient Scrolls,https://atcoder.jp/contests/jag2012autumn/tasks/icpc2012autumn_k,nan
Broken Audio Signal,https://atcoder.jp/contests/jag2013autumn/tasks/icpc2013autumn_a,nan
Restore Calculation,https://atcoder.jp/contests/jag2013autumn/tasks/icpc2013autumn_b,nan
SIRO Challenge,https://atcoder.jp/contests/jag2013autumn/tasks/icpc2013autumn_c,nan
Everlasting  One ,https://atcoder.jp/contests/jag2013autumn/tasks/icpc2013autumn_d,nan
Putter,https://atcoder.jp/contests/jag2013autumn/tasks/icpc2013autumn_e,nan
Shipura,https://atcoder.jp/contests/jag2013autumn/tasks/icpc2013autumn_f,nan
Floating Islands,https://atcoder.jp/contests/jag2013autumn/tasks/icpc2013autumn_g,nan
Venn Diagram,https://atcoder.jp/contests/jag2013autumn/tasks/icpc2013autumn_h,nan
Overwriting Game,https://atcoder.jp/contests/jag2013autumn/tasks/icpc2013autumn_i,nan
Magical Switches,https://atcoder.jp/contests/jag2013autumn/tasks/icpc2013autumn_j,nan
Everlasting Zero,https://atcoder.jp/contests/JAG2013Spring/tasks/icpc2013spring_a,nan
Integer in Integer,https://atcoder.jp/contests/JAG2013Spring/tasks/icpc2013spring_b,nan
Iyasugigappa,https://atcoder.jp/contests/JAG2013Spring/tasks/icpc2013spring_c,nan
Medical Inspection,https://atcoder.jp/contests/JAG2013Spring/tasks/icpc2013spring_d,nan
Minimum Spanning Tree,https://atcoder.jp/contests/JAG2013Spring/tasks/icpc2013spring_e,nan
Point Distance,https://atcoder.jp/contests/JAG2013Spring/tasks/icpc2013spring_f,nan
Revenge of Minimum Cost Flow,https://atcoder.jp/contests/JAG2013Spring/tasks/icpc2013spring_g,nan
Rings,https://atcoder.jp/contests/JAG2013Spring/tasks/icpc2013spring_h,nan
The J th Number,https://atcoder.jp/contests/JAG2013Spring/tasks/icpc2013spring_i,nan
Tree Reconstruction,https://atcoder.jp/contests/JAG2013Spring/tasks/icpc2013spring_j,nan
Koto Distance,https://atcoder.jp/contests/jag2013summer-day2/tasks/icpc2013summer_day2_a,nan
Evacuation Route,https://atcoder.jp/contests/jag2013summer-day2/tasks/icpc2013summer_day2_b,nan
Apples,https://atcoder.jp/contests/jag2013summer-day2/tasks/icpc2013summer_day2_c,nan
TiMe Table,https://atcoder.jp/contests/jag2013summer-day2/tasks/icpc2013summer_day2_d,nan
Pattern Language,https://atcoder.jp/contests/jag2013summer-day2/tasks/icpc2013summer_day2_e,nan
Social Monsters,https://atcoder.jp/contests/jag2013summer-day2/tasks/icpc2013summer_day2_f,nan
Perm Query,https://atcoder.jp/contests/jag2013summer-day2/tasks/icpc2013summer_day2_g,nan
Invest Master,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_a,nan
Minus One,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_b,nan
Wave Attack,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_c,nan
Fast Division,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_d,nan
順位付け,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_e,nan
Phutball,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_f,nan
Unordered Operators,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_g,nan
Almost Same Substring,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_h,nan
京都旅行,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_i,nan
A + B,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_j,nan
くるくるくるりん,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_k,nan
Air Pollution,https://atcoder.jp/contests/jag2013summer-day3/tasks/icpc2013summer_day3_l,nan
Thread Tree,https://atcoder.jp/contests/jag2013summer-day4/tasks/icpc2013summer_day4_a,nan
Trodden Cable,https://atcoder.jp/contests/jag2013summer-day4/tasks/icpc2013summer_day4_b,nan
Fox Observation,https://atcoder.jp/contests/jag2013summer-day4/tasks/icpc2013summer_day4_c,nan
Removing Magical Tiles,https://atcoder.jp/contests/jag2013summer-day4/tasks/icpc2013summer_day4_d,nan
Optimal alpha beta pruning,https://atcoder.jp/contests/jag2013summer-day4/tasks/icpc2013summer_day4_e,nan
Graph Automata Player,https://atcoder.jp/contests/jag2013summer-day4/tasks/icpc2013summer_day4_f,nan
Spotlight Movement,https://atcoder.jp/contests/jag2013summer-day4/tasks/icpc2013summer_day4_g,nan
Gravity Point,https://atcoder.jp/contests/jag2013summer-day4/tasks/icpc2013summer_day4_h,nan
Multi Path Story,https://atcoder.jp/contests/jag2013summer-day4/tasks/icpc2013summer_day4_i,nan
Rotation Game,https://atcoder.jp/contests/jag2013summer-day4/tasks/icpc2013summer_day4_j,nan
Anime Master,https://atcoder.jp/contests/jag2013summer-warmingup/tasks/icpc2013summer_warmingUp_a,nan
Cans of Toys,https://atcoder.jp/contests/jag2013summer-warmingup/tasks/icpc2013summer_warmingUp_b,nan
Containers,https://atcoder.jp/contests/jag2013summer-warmingup/tasks/icpc2013summer_warmingUp_c,nan
Graph Destruction,https://atcoder.jp/contests/jag2013summer-warmingup/tasks/icpc2013summer_warmingUp_d,nan
Magic Doors,https://atcoder.jp/contests/jag2013summer-warmingup/tasks/icpc2013summer_warmingUp_e,nan
Maximum Segment XOR,https://atcoder.jp/contests/jag2013summer-warmingup/tasks/icpc2013summer_warmingUp_f,nan
Moving Points,https://atcoder.jp/contests/jag2013summer-warmingup/tasks/icpc2013summer_warmingUp_g,nan
Shuffling Machine,https://atcoder.jp/contests/jag2013summer-warmingup/tasks/icpc2013summer_warmingUp_h,nan
Topology,https://atcoder.jp/contests/jag2013summer-warmingup/tasks/icpc2013summer_warmingUp_i,nan
Very Intellectual Card Game,https://atcoder.jp/contests/jag2013summer-warmingup/tasks/icpc2013summer_warmingUp_j,nan
North North West,https://atcoder.jp/contests/jag2014autumn/tasks/icpc2014autumn_a,nan
Unknown Switches,https://atcoder.jp/contests/jag2014autumn/tasks/icpc2014autumn_b,nan
Speedrun,https://atcoder.jp/contests/jag2014autumn/tasks/icpc2014autumn_c,nan
Flowers,https://atcoder.jp/contests/jag2014autumn/tasks/icpc2014autumn_d,nan
Square in Circles,https://atcoder.jp/contests/jag2014autumn/tasks/icpc2014autumn_e,nan
Reverse a Road II,https://atcoder.jp/contests/jag2014autumn/tasks/icpc2014autumn_f,nan
Cookie Counter,https://atcoder.jp/contests/jag2014autumn/tasks/icpc2014autumn_g,nan
Points and Lines,https://atcoder.jp/contests/jag2014autumn/tasks/icpc2014autumn_h,nan
Color the Map Extreme,https://atcoder.jp/contests/jag2014autumn/tasks/icpc2014autumn_i,nan
Website Tour,https://atcoder.jp/contests/jag2014autumn/tasks/icpc2014autumn_j,nan
Idempotent Filter,https://atcoder.jp/contests/jag2014autumn/tasks/icpc2014autumn_k,nan
Breadth First Search by Foxpower,https://atcoder.jp/contests/JAG2014Spring/tasks/icpc2014spring_a,nan
Cube Coloring,https://atcoder.jp/contests/JAG2014Spring/tasks/icpc2014spring_b,nan
Decoding Ancient Messages,https://atcoder.jp/contests/JAG2014Spring/tasks/icpc2014spring_c,nan
LR,https://atcoder.jp/contests/JAG2014Spring/tasks/icpc2014spring_d,nan
Parentheses,https://atcoder.jp/contests/JAG2014Spring/tasks/icpc2014spring_e,nan
Polygon Guards,https://atcoder.jp/contests/JAG2014Spring/tasks/icpc2014spring_f,nan
Proportional Representation,https://atcoder.jp/contests/JAG2014Spring/tasks/icpc2014spring_g,nan
RLE Replacement,https://atcoder.jp/contests/JAG2014Spring/tasks/icpc2014spring_h,nan
Tokyo Olympics Center,https://atcoder.jp/contests/JAG2014Spring/tasks/icpc2014spring_i,nan
Unfair Game,https://atcoder.jp/contests/JAG2014Spring/tasks/icpc2014spring_j,nan
Manhattan,https://atcoder.jp/contests/jag2014summer-day2/tasks/icpc2014summer_day2_a,nan
Dictionary,https://atcoder.jp/contests/jag2014summer-day2/tasks/icpc2014summer_day2_b,nan
Clique Coloring,https://atcoder.jp/contests/jag2014summer-day2/tasks/icpc2014summer_day2_c,nan
Dense Amidakuji,https://atcoder.jp/contests/jag2014summer-day2/tasks/icpc2014summer_day2_d,nan
Cellular Automaton,https://atcoder.jp/contests/jag2014summer-day2/tasks/icpc2014summer_day2_e,nan
Directions,https://atcoder.jp/contests/jag2014summer-day2/tasks/icpc2014summer_day2_f,nan
Snake,https://atcoder.jp/contests/jag2014summer-day2/tasks/icpc2014summer_day2_g,nan
Distance Sum,https://atcoder.jp/contests/jag2014summer-day2/tasks/icpc2014summer_day2_h,nan
Substring Pairs,https://atcoder.jp/contests/jag2014summer-day2/tasks/icpc2014summer_day2_i,nan
Hyperrectangle,https://atcoder.jp/contests/jag2014summer-day2/tasks/icpc2014summer_day2_j,nan
山手線,https://atcoder.jp/contests/jag2014summer-day4/tasks/icpc2014summer_day4_a,nan
不審者,https://atcoder.jp/contests/jag2014summer-day4/tasks/icpc2014summer_day4_b,nan
Magic Bullet,https://atcoder.jp/contests/jag2014summer-day4/tasks/icpc2014summer_day4_c,nan
夕食,https://atcoder.jp/contests/jag2014summer-day4/tasks/icpc2014summer_day4_d,nan
AI,https://atcoder.jp/contests/jag2014summer-day4/tasks/icpc2014summer_day4_e,nan
Longest Match,https://atcoder.jp/contests/jag2014summer-day4/tasks/icpc2014summer_day4_f,nan
リサイクル,https://atcoder.jp/contests/jag2014summer-day4/tasks/icpc2014summer_day4_g,nan
トーナメント,https://atcoder.jp/contests/jag2014summer-day4/tasks/icpc2014summer_day4_h,nan
首都,https://atcoder.jp/contests/jag2014summer-day4/tasks/icpc2014summer_day4_i,nan
Vongress,https://atcoder.jp/contests/jag2014summer-day4/tasks/icpc2014summer_day4_j,nan
M and A,https://atcoder.jp/contests/jag2015autumn/tasks/icpc2015autumn_a,nan
Change a Password,https://atcoder.jp/contests/jag2015autumn/tasks/icpc2015autumn_b,nan
Delete Files,https://atcoder.jp/contests/jag2015autumn/tasks/icpc2015autumn_c,nan
Line Gimmick,https://atcoder.jp/contests/jag2015autumn/tasks/icpc2015autumn_d,nan
Shifting a Matrix,https://atcoder.jp/contests/jag2015autumn/tasks/icpc2015autumn_e,nan
Modern Announce Network,https://atcoder.jp/contests/jag2015autumn/tasks/icpc2015autumn_f,nan
Cube Dividing,https://atcoder.jp/contests/jag2015autumn/tasks/icpc2015autumn_g,nan
Donut Decoration,https://atcoder.jp/contests/jag2015autumn/tasks/icpc2015autumn_h,nan
Shortest Bridge,https://atcoder.jp/contests/jag2015autumn/tasks/icpc2015autumn_i,nan
Longest Shortest Path,https://atcoder.jp/contests/jag2015autumn/tasks/icpc2015autumn_j,nan
Optimal Tournament,https://atcoder.jp/contests/jag2015autumn/tasks/icpc2015autumn_k,nan
Balanced Paths,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_a,nan
Card Game Strategy,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_b,nan
Casino,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_c,nan
Content Delivery,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_d,nan
Cost Performance Flow,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_e,nan
ICPC Teams,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_f,nan
JAG channel II,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_g,nan
Kimagure Cleaner,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_h,nan
Midpoint,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_i,nan
New Game AI,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_j,nan
Runner and Sniper,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_k,nan
Wall Making Game,https://atcoder.jp/contests/jag2015spring/tasks/icpc2015spring_l,nan
幾何問題を解こう,https://atcoder.jp/contests/jag2015summer-day2/tasks/icpc2015summer_day2_a,nan
監獄,https://atcoder.jp/contests/jag2015summer-day2/tasks/icpc2015summer_day2_b,nan
ABC Gene,https://atcoder.jp/contests/jag2015summer-day2/tasks/icpc2015summer_day2_c,nan
真っ暗な部屋,https://atcoder.jp/contests/jag2015summer-day2/tasks/icpc2015summer_day2_d,nan
坑道数式,https://atcoder.jp/contests/jag2015summer-day2/tasks/icpc2015summer_day2_e,nan
ほぼ周期文字列,https://atcoder.jp/contests/jag2015summer-day2/tasks/icpc2015summer_day2_f,nan
Escape,https://atcoder.jp/contests/jag2015summer-day2/tasks/icpc2015summer_day2_g,nan
Bit Operation Game,https://atcoder.jp/contests/jag2015summer-day2/tasks/icpc2015summer_day2_h,nan
ツインリバース,https://atcoder.jp/contests/jag2015summer-day2/tasks/icpc2015summer_day2_i,nan
連結,https://atcoder.jp/contests/jag2015summer-day2/tasks/icpc2015summer_day2_j,nan
Leapfrog,https://atcoder.jp/contests/jag2015summer-day2/tasks/icpc2015summer_day2_k,nan
Analyzing Bit (Yet Special) Strings,https://atcoder.jp/contests/jag2015summer-day3/tasks/icpc2015summer_day3_a,nan
Bits Are Dangerous,https://atcoder.jp/contests/jag2015summer-day3/tasks/icpc2015summer_day3_b,nan
Counting Amusing Numbers,https://atcoder.jp/contests/jag2015summer-day3/tasks/icpc2015summer_day3_c,nan
Degree Of Number's Eccentricity,https://atcoder.jp/contests/jag2015summer-day3/tasks/icpc2015summer_day3_d,nan
Exact Number of Drops,https://atcoder.jp/contests/jag2015summer-day3/tasks/icpc2015summer_day3_e,nan
Figures Of Simple Sense,https://atcoder.jp/contests/jag2015summer-day3/tasks/icpc2015summer_day3_f,nan
Gowk's Errand for Master,https://atcoder.jp/contests/jag2015summer-day3/tasks/icpc2015summer_day3_g,nan
Handicapped Onsite Prediction,https://atcoder.jp/contests/jag2015summer-day3/tasks/icpc2015summer_day3_h,nan
Icy Roads Of Nomel,https://atcoder.jp/contests/jag2015summer-day3/tasks/icpc2015summer_day3_i,nan
Jelly Oxygen Beans,https://atcoder.jp/contests/jag2015summer-day3/tasks/icpc2015summer_day3_j,nan
Where is the Boundary,https://atcoder.jp/contests/jag2015summer-day4/tasks/icpc2015summer_day4_a,nan
Vector Field,https://atcoder.jp/contests/jag2015summer-day4/tasks/icpc2015summer_day4_b,nan
Kuru Kuru Sushi,https://atcoder.jp/contests/jag2015summer-day4/tasks/icpc2015summer_day4_c,nan
Identity Function,https://atcoder.jp/contests/jag2015summer-day4/tasks/icpc2015summer_day4_d,nan
Enclose Points,https://atcoder.jp/contests/jag2015summer-day4/tasks/icpc2015summer_day4_e,nan
Marching Course,https://atcoder.jp/contests/jag2015summer-day4/tasks/icpc2015summer_day4_f,nan
Surface Area of Cubes,https://atcoder.jp/contests/jag2015summer-day4/tasks/icpc2015summer_day4_g,nan
Laser Cutter,https://atcoder.jp/contests/jag2015summer-day4/tasks/icpc2015summer_day4_h,nan
Live Programming,https://atcoder.jp/contests/jag2015summer-day4/tasks/icpc2015summer_day4_i,nan
Black Company,https://atcoder.jp/contests/jag2015summer-day4/tasks/icpc2015summer_day4_j,nan
Best Matched Pair,https://atcoder.jp/contests/jag2016autumn/tasks/icpc2016autumn_a,nan
Help the Princess!,https://atcoder.jp/contests/jag2016autumn/tasks/icpc2016autumn_b,nan
We Don't Wanna Work!,https://atcoder.jp/contests/jag2016autumn/tasks/icpc2016autumn_c,nan
Parentheses,https://atcoder.jp/contests/jag2016autumn/tasks/icpc2016autumn_d,nan
Similarity of Subtrees,https://atcoder.jp/contests/jag2016autumn/tasks/icpc2016autumn_e,nan
Escape from the Hell,https://atcoder.jp/contests/jag2016autumn/tasks/icpc2016autumn_f,nan
Share the Ruins Preservation,https://atcoder.jp/contests/jag2016autumn/tasks/icpc2016autumn_g,nan
Pipe Fitter and the Fierce Dogs,https://atcoder.jp/contests/jag2016autumn/tasks/icpc2016autumn_h,nan
Multisect,https://atcoder.jp/contests/jag2016autumn/tasks/icpc2016autumn_i,nan
Compressed Formula,https://atcoder.jp/contests/jag2016autumn/tasks/icpc2016autumn_j,nan
Non redundant Drive,https://atcoder.jp/contests/jag2016autumn/tasks/icpc2016autumn_k,nan
映画館,https://atcoder.jp/contests/ijpc2015/tasks/ijpc2015_a,nan
IOIウエハース,https://atcoder.jp/contests/ijpc2015-2/tasks/ijpc2015_b,nan
しりとり木,https://atcoder.jp/contests/ijpc2015/tasks/ijpc2015_c,nan
格子点,https://atcoder.jp/contests/ijpc2015/tasks/ijpc2015_d,nan
カードゲーム,https://atcoder.jp/contests/ijpc2015-2/tasks/ijpc2015_e,nan
ガソリンスタンド,https://atcoder.jp/contests/ijpc2015-2/tasks/ijpc2015_f,nan
IOI,https://atcoder.jp/contests/ijpc2015/tasks/ijpc2015_g,nan
鉄道会社,https://atcoder.jp/contests/ijpc2015-2/tasks/ijpc2015_h,nan
自動MOD取り機,https://atcoder.jp/contests/ijpc2015-2/tasks/ijpc2015_i,nan
Верный,https://atcoder.jp/contests/ijpc2015/tasks/ijpc2015_j,nan
むこのどうぶつたち と しんりんのはかい (Innocent Animals and Destruction of Forests),https://atcoder.jp/contests/ijpc2012-1/tasks/ijpc_animals,nan
かえってきたどうぶつたち と しんりんのさいせい (Return of Animals and Regeneration of Forests),https://atcoder.jp/contests/ijpc2012-3/tasks/ijpc_animals2,nan
やさしいおばけ の たんじょうびかい (Friendly Ghost's Birthday Party),https://atcoder.jp/contests/ijpc2012-3/tasks/ijpc_ghost,nan
しょうじききつね と うそつきにんげん (Honest Fox and Dishonest Man),https://atcoder.jp/contests/ijpc2012-3/tasks/ijpc_honest,nan
国際情報オリンピック日本代表プログラミングコンテスト (Welcome to IJPC),https://atcoder.jp/contests/ijpc2012pr/tasks/ijpc_ijpc,nan
国際道迷いオリンピック(International Michimayoi Olympic),https://atcoder.jp/contests/ijpc2012-2/tasks/ijpc_imo,nan
にひきのきつね と くらがりのめいろ (Two Foxes and the Dark Maze),https://atcoder.jp/contests/ijpc2012-2/tasks/ijpc_maze,nan
ポーター・テレ・ポーター (Porter Tele Porter),https://atcoder.jp/contests/ijpc2012-2/tasks/ijpc_porter,nan
合成数を倒せ (Prime Hazard),https://atcoder.jp/contests/ijpc2012pr/tasks/ijpc_primehazard,nan
銀メダル (Silver Medal),https://atcoder.jp/contests/ijpc2012-1/tasks/ijpc_silver,nan
提出 (Submission),https://atcoder.jp/contests/ijpc2012pr/tasks/ijpc_submission,nan
魔法の訓練 (Magical Training),https://atcoder.jp/contests/ijpc2012-1/tasks/ijpc_training,nan
分散 (Variance),https://atcoder.jp/contests/ijpc2012pr/tasks/ijpc_variance,nan
Table Tennis,https://atcoder.jp/contests/indeednow-finala-open/tasks/indeednow_2015_finala_a,nan
Office Ninja,https://atcoder.jp/contests/indeednow-finala-open/tasks/indeednow_2015_finala_b,nan
Optimal Recommendations,https://atcoder.jp/contests/indeednow-finala-open/tasks/indeednow_2015_finala_c,nan
Longest Path,https://atcoder.jp/contests/indeednow-finala-open/tasks/indeednow_2015_finala_d,nan
Page Rank,https://atcoder.jp/contests/indeednow-finala-open/tasks/indeednow_2015_finala_e,nan
就職活動,https://atcoder.jp/contests/indeednow-finala-open/tasks/indeednow_2015_finala_f,nan
Counting on a Triangle,https://atcoder.jp/contests/indeednow-finalb-open/tasks/indeednow_2015_finalb_a,nan
How are you?,https://atcoder.jp/contests/indeednow-finalb-open/tasks/indeednow_2015_finalb_b,nan
Palindrome Concatenation,https://atcoder.jp/contests/indeednow-finalb-open/tasks/indeednow_2015_finalb_c,nan
Game on a Grid,https://atcoder.jp/contests/indeednow-finalb-open/tasks/indeednow_2015_finalb_d,nan
Line up!,https://atcoder.jp/contests/indeednow-finalb-open/tasks/indeednow_2015_finalb_e,nan
掛け算の筆算,https://atcoder.jp/contests/indeednow-quala/tasks/indeednow_2015_quala_1,nan
Indeedなう！,https://atcoder.jp/contests/indeednow-quala/tasks/indeednow_2015_quala_2,nan
説明会,https://atcoder.jp/contests/indeednow-quala/tasks/indeednow_2015_quala_3,nan
パズル,https://atcoder.jp/contests/indeednow-quala/tasks/indeednow_2015_quala_4,nan
高橋くんとマンハッタン,https://atcoder.jp/contests/indeednow-qualb/tasks/indeednow_2015_qualb_1,nan
高橋くんと文字列操作,https://atcoder.jp/contests/indeednow-qualb/tasks/indeednow_2015_qualb_2,nan
高橋くんと数列,https://atcoder.jp/contests/indeednow-qualb/tasks/indeednow_2015_qualb_4,nan
木,https://atcoder.jp/contests/indeednow-qualb/tasks/indeednow_2015_qualc_3,nan
AtCoder Contest Scheduling,https://atcoder.jp/contests/intro-heuristics/tasks/intro_heuristics_a,nan
Scoring,https://atcoder.jp/contests/intro-heuristics/tasks/intro_heuristics_b,nan
Incremental Scoring,https://atcoder.jp/contests/intro-heuristics/tasks/intro_heuristics_c,nan
一問目,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_a,nan
ローリング・老人と海,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_b,nan
Halcyon,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_c,nan
肉と肉のぶつかり合い,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_d,nan
放課後,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_e,nan
Head of The Dragon,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_f,nan
友達以上恋人以下,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_g,nan
ちらし寿司,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_h,nan
リスのお仕事,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_i,nan
ヌクレオチド,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_j,nan
ルーレット,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_k,nan
をあ ぷろぶれむ,https://atcoder.jp/contests/iroha2019-day1/tasks/iroha2019_day1_l,nan
わたのはら,https://atcoder.jp/contests/iroha2019-day2/tasks/iroha2019_day2_a,nan
河川敷の変態仮面,https://atcoder.jp/contests/iroha2019-day2/tasks/iroha2019_day2_b,nan
陽気な妖姫,https://atcoder.jp/contests/iroha2019-day2/tasks/iroha2019_day2_c,nan
楽しすぎる家庭菜園,https://atcoder.jp/contests/iroha2019-day2/tasks/iroha2019_day2_d,nan
連呼,https://atcoder.jp/contests/iroha2019-day2/tasks/iroha2019_day2_e,nan
総入れ替え,https://atcoder.jp/contests/iroha2019-day2/tasks/iroha2019_day2_f,nan
通学路,https://atcoder.jp/contests/iroha2019-day2/tasks/iroha2019_day2_g,nan
根室の巫女,https://atcoder.jp/contests/iroha2019-day2/tasks/iroha2019_day2_h,nan
南極,https://atcoder.jp/contests/iroha2019-day2/tasks/iroha2019_day2_i,nan
ライ麦畑で待ちながら,https://atcoder.jp/contests/iroha2019-day2/tasks/iroha2019_day2_j,nan
虫取り,https://atcoder.jp/contests/iroha2019-day2/tasks/iroha2019_day2_k,nan
宇宙人,https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_a,nan
ゐろはちゃん,https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_b,nan
"Not Say ""NO""",https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_c,nan
おにごっこ,https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_d,nan
「く」,https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_e,nan
闇のカードゲーム,https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_f,nan
ますまてぃくす・おりんぴっく！,https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_g,nan
〔経験値〕,https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_h,nan
Prime or Not,https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_i,nan
Go to Heaven,https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_j,nan
えそらんぐ,https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_k,nan
デクレッシェンド,https://atcoder.jp/contests/iroha2019-day3/tasks/iroha2019_day3_l,nan
あるよるのできごと,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_a,nan
叫び声,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_b,nan
君の力に,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_c,nan
揺れる街、増える敵,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_d,nan
芽生え,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_e,nan
道なき道を,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_f,nan
真実の魔法陣,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_g,nan
永遠に,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_h,nan
ピンチ,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_i,nan
もう、諦めない,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_j,nan
世界線,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_k,nan
...好きです,https://atcoder.jp/contests/iroha2019-day4/tasks/iroha2019_day4_l,nan
阿吽の呼吸,https://atcoder.jp/contests/jag2016-domestic/tasks/jag2016secretspring_a,nan
豪邸と宅配便,https://atcoder.jp/contests/jag2016-domestic/tasks/jag2016secretspring_b,nan
みさわさんの根付き木,https://atcoder.jp/contests/jag2016-domestic/tasks/jag2016secretspring_c,nan
インビジブル,https://atcoder.jp/contests/jag2016-domestic/tasks/jag2016secretspring_d,nan
選挙活動,https://atcoder.jp/contests/jag2016-domestic/tasks/jag2016secretspring_e,nan
土地相続,https://atcoder.jp/contests/jag2016-domestic/tasks/jag2016secretspring_f,nan
リングと紐,https://atcoder.jp/contests/jag2016-domestic/tasks/jag2016secretspring_g,nan
Window,https://atcoder.jp/contests/jag2017autumn/tasks/jag2017autumn_a,nan
Tournament Chart,https://atcoder.jp/contests/jag2017autumn/tasks/jag2017autumn_b,nan
Prime Factor Prime,https://atcoder.jp/contests/jag2017autumn/tasks/jag2017autumn_c,nan
Revenge of the Broken Door,https://atcoder.jp/contests/jag2017autumn/tasks/jag2017autumn_d,nan
Tree Separator,https://atcoder.jp/contests/jag2017autumn/tasks/jag2017autumn_e,nan
RPG Maker,https://atcoder.jp/contests/jag2017autumn/tasks/jag2017autumn_f,nan
Coin Slider,https://atcoder.jp/contests/jag2017autumn/tasks/jag2017autumn_g,nan
Separate String,https://atcoder.jp/contests/jag2017autumn/tasks/jag2017autumn_h,nan
Revenge of the Endless BFS,https://atcoder.jp/contests/jag2017autumn/tasks/jag2017autumn_i,nan
Farm Village,https://atcoder.jp/contests/jag2017autumn/tasks/jag2017autumn_j,nan
Conveyor Belt,https://atcoder.jp/contests/jag2017autumn/tasks/jag2017autumn_k,nan
しりとり,https://atcoder.jp/contests/jag2017summer-day1/tasks/jag2017summer_day1_a,nan
リス,https://atcoder.jp/contests/jag2017summer-day1/tasks/jag2017summer_day1_b,nan
すごろく,https://atcoder.jp/contests/jag2017summer-day1/tasks/jag2017summer_day1_c,nan
くさかべ,https://atcoder.jp/contests/jag2017summer-day1/tasks/jag2017summer_day1_d,nan
ベクトル式,https://atcoder.jp/contests/jag2017summer-day1/tasks/jag2017summer_day1_e,nan
極小部分列,https://atcoder.jp/contests/jag2017summer-day1/tasks/jag2017summer_day1_f,nan
ツーリスト問題,https://atcoder.jp/contests/jag2017summer-day1/tasks/jag2017summer_day1_g,nan
イベルタル,https://atcoder.jp/contests/jag2017summer-day1/tasks/jag2017summer_day1_h,nan
ルーク,https://atcoder.jp/contests/jag2017summer-day1/tasks/jag2017summer_day1_i,nan
クッパ,https://atcoder.jp/contests/jag2017summer-day1/tasks/jag2017summer_day1_j,nan
パンプキン,https://atcoder.jp/contests/jag2017summer-day1/tasks/jag2017summer_day1_k,nan
Star in Parentheses,https://atcoder.jp/contests/jag2017summer-day3/tasks/jag2017summer_day3_a,nan
Slimming Plan,https://atcoder.jp/contests/jag2017summer-day3/tasks/jag2017summer_day3_b,nan
Ninja Map,https://atcoder.jp/contests/jag2017summer-day3/tasks/jag2017summer_day3_c,nan
Janken Master,https://atcoder.jp/contests/jag2017summer-day3/tasks/jag2017summer_day3_d,nan
Route Calculator,https://atcoder.jp/contests/jag2017summer-day3/tasks/jag2017summer_day3_e,nan
Endless BFS,https://atcoder.jp/contests/jag2017summer-day3/tasks/jag2017summer_day3_f,nan
Low Range Sum Matrix,https://atcoder.jp/contests/jag2017summer-day3/tasks/jag2017summer_day3_g,nan
Tiny Room,https://atcoder.jp/contests/jag2017summer-day3/tasks/jag2017summer_day3_h,nan
Librarian's Work,https://atcoder.jp/contests/jag2017summer-day3/tasks/jag2017summer_day3_i,nan
Sum Source Detection,https://atcoder.jp/contests/jag2017summer-day3/tasks/jag2017summer_day3_j,nan
Permutation Period,https://atcoder.jp/contests/jag2017summer-day3/tasks/jag2017summer_day3_k,nan
10^N+7,https://atcoder.jp/contests/jag2018summer-day2/tasks/jag2018summer_day2_a,nan
Coins,https://atcoder.jp/contests/jag2018summer-day2/tasks/jag2018summer_day2_b,nan
Equiangular,https://atcoder.jp/contests/jag2018summer-day2/tasks/jag2018summer_day2_c,nan
Knapsack And Queries,https://atcoder.jp/contests/jag2018summer-day2/tasks/jag2018summer_day2_d,nan
Self contained,https://atcoder.jp/contests/jag2018summer-day2/tasks/jag2018summer_day2_e,nan
Point Sequences,https://atcoder.jp/contests/jag2018summer-day2/tasks/jag2018summer_day2_f,nan
Construct One Point,https://atcoder.jp/contests/jag2018summer-day2/tasks/jag2018summer_day2_g,nan
Prefix Suffix Free,https://atcoder.jp/contests/jag2018summer-day2/tasks/jag2018summer_day2_h,nan
ADD DIV MAX RESTORE,https://atcoder.jp/contests/jag2018summer-day2/tasks/jag2018summer_day2_i,nan
AB Sort,https://atcoder.jp/contests/jag2018summer-day2/tasks/jag2018summer_day2_j,nan
Short LIS,https://atcoder.jp/contests/jag2018summer-day2/tasks/jag2018summer_day2_k,nan
JOI 2006 本選 問題1,https://atcoder.jp/contests/joi2006ho/tasks/joi2006ho_a,nan
JOI 2006 本選 問題2,https://atcoder.jp/contests/joi2006ho/tasks/joi2006ho_b,nan
JOI 2006 本選 問題3,https://atcoder.jp/contests/joi2006ho/tasks/joi2006ho_c,nan
JOI 2006 本選 問題4,https://atcoder.jp/contests/joi2006ho/tasks/joi2006ho_d,nan
JOI 2006 本選 問題5,https://atcoder.jp/contests/joi2006ho/tasks/joi2006ho_e,nan
JOI 2006 予選 問題1,https://atcoder.jp/contests/joi2006yo/tasks/joi2006yo_a,nan
JOI 2006 予選 問題2,https://atcoder.jp/contests/joi2006yo/tasks/joi2006yo_b,nan
JOI 2006 予選 問題3,https://atcoder.jp/contests/joi2006yo/tasks/joi2006yo_c,nan
JOI 2006 予選 問題4,https://atcoder.jp/contests/joi2006yo/tasks/joi2006yo_d,nan
JOI 2006 予選 問題5,https://atcoder.jp/contests/joi2006yo/tasks/joi2006yo_e,nan
最大の和,https://atcoder.jp/contests/joi2007ho/tasks/joi2007ho_a,nan
最長の階段,https://atcoder.jp/contests/joi2007ho/tasks/joi2007ho_b,nan
最古の遺跡,https://atcoder.jp/contests/joi2007ho/tasks/joi2007ho_c,nan
最悪の記者,https://atcoder.jp/contests/joi2007ho/tasks/joi2007ho_d,nan
最軽量のモビール,https://atcoder.jp/contests/joi2007ho/tasks/joi2007ho_e,nan
得点,https://atcoder.jp/contests/joi2007yo/tasks/joi2007yo_a,nan
未提出者は誰だ,https://atcoder.jp/contests/joi2007yo/tasks/joi2007yo_b,nan
シーザー暗号,https://atcoder.jp/contests/joi2007yo/tasks/joi2007yo_c,nan
カードの並び替え,https://atcoder.jp/contests/joi2007yo/tasks/joi2007yo_d,nan
品質検査,https://atcoder.jp/contests/joi2007yo/tasks/joi2007yo_e,nan
通学経路,https://atcoder.jp/contests/joi2007yo/tasks/joi2007yo_f,nan
碁石ならべ,https://atcoder.jp/contests/joi2008ho/tasks/joi2008ho_a,nan
共通部分文字列,https://atcoder.jp/contests/joi2008ho/tasks/joi2008ho_b,nan
ダーツ,https://atcoder.jp/contests/joi2008ho/tasks/joi2008ho_c,nan
ぴょんぴょん川渡り,https://atcoder.jp/contests/joi2008ho/tasks/joi2008ho_d,nan
ペンキの色,https://atcoder.jp/contests/joi2008ho/tasks/joi2008ho_e,nan
おつり,https://atcoder.jp/contests/joi2008yo/tasks/joi2008yo_a,nan
JOIとIOI,https://atcoder.jp/contests/joi2008yo/tasks/joi2008yo_b,nan
カードゲーム,https://atcoder.jp/contests/joi2008yo/tasks/joi2008yo_c,nan
星座探し,https://atcoder.jp/contests/joi2008yo/tasks/joi2008yo_d,nan
おせんべい,https://atcoder.jp/contests/joi2008yo/tasks/joi2008yo_e,nan
船旅,https://atcoder.jp/contests/joi2008yo/tasks/joi2008yo_f,nan
IOIOI,https://atcoder.jp/contests/joi2009ho/tasks/joi2009ho_a,nan
ピザ,https://atcoder.jp/contests/joi2009ho/tasks/joi2009ho_b,nan
あみだくじ,https://atcoder.jp/contests/joi2009ho/tasks/joi2009ho_c,nan
散歩,https://atcoder.jp/contests/joi2009ho/tasks/joi2009ho_d,nan
認証レベル,https://atcoder.jp/contests/joi2009ho/tasks/joi2009ho_e,nan
タイムカード,https://atcoder.jp/contests/joi2009yo/tasks/joi2009yo_a,nan
コンテスト,https://atcoder.jp/contests/joi2009yo/tasks/joi2009yo_b,nan
連鎖,https://atcoder.jp/contests/joi2009yo/tasks/joi2009yo_c,nan
薄氷渡り,https://atcoder.jp/contests/joi2009yo/tasks/joi2009yo_d,nan
シャッフル,https://atcoder.jp/contests/joi2009yo/tasks/joi2009yo_e,nan
ビンゴ,https://atcoder.jp/contests/joi2009yo/tasks/joi2009yo_f,nan
旅人,https://atcoder.jp/contests/joi2010ho/tasks/joi2010ho_a,nan
お菓子の分割,https://atcoder.jp/contests/joi2010ho/tasks/joi2010ho_b,nan
つらら,https://atcoder.jp/contests/joi2010ho/tasks/joi2010ho_c,nan
博覧会,https://atcoder.jp/contests/joi2010ho/tasks/joi2010ho_d,nan
ダンジョン,https://atcoder.jp/contests/joi2010ho/tasks/joi2010ho_e,nan
レシート,https://atcoder.jp/contests/joi2010yo/tasks/joi2010yo_a,nan
すごろく,https://atcoder.jp/contests/joi2010yo/tasks/joi2010yo_b,nan
パーティー,https://atcoder.jp/contests/joi2010yo/tasks/joi2010yo_c,nan
カード並べ,https://atcoder.jp/contests/joi2010yo/tasks/joi2010yo_d,nan
通勤経路,https://atcoder.jp/contests/joi2010yo/tasks/joi2010yo_e,nan
方向音痴のトナカイ,https://atcoder.jp/contests/joi2010yo/tasks/joi2010yo_f,nan
惑星探査 (Planetary Exploration),https://atcoder.jp/contests/joi2011ho/tasks/joi2011ho1,nan
古本屋 (Books),https://atcoder.jp/contests/joi2011ho/tasks/joi2011ho2,nan
JOI 国の買い物事情 (Shopping in JOI Kingdom),https://atcoder.jp/contests/joi2011ho/tasks/joi2011ho3,nan
歩くサンタクロース (Walking Santa),https://atcoder.jp/contests/joi2011ho/tasks/joi2011ho4,nan
微生物実験 (Bug Party),https://atcoder.jp/contests/joi2011ho/tasks/joi2011ho5,nan
合計時間 (Total Time),https://atcoder.jp/contests/joi2011yo/tasks/joi2011yo_a,nan
指輪 (Ring),https://atcoder.jp/contests/joi2011yo/tasks/joi2011yo_b,nan
タイル (Tile),https://atcoder.jp/contests/joi2011yo/tasks/joi2011yo_c,nan
1 年生 (A First Grader),https://atcoder.jp/contests/joi2011yo/tasks/joi2011yo_d,nan
チーズ (Cheese),https://atcoder.jp/contests/joi2011yo/tasks/joi2011yo_e,nan
JOI 旗 (JOI Flag),https://atcoder.jp/contests/joi2011yo/tasks/joi2011yo_f,nan
JJOOII (JJOOII),https://atcoder.jp/contests/joi2012ho/tasks/joi2012ho1,nan
たのしいカードゲーム (Card Game is Fun),https://atcoder.jp/contests/joi2012ho/tasks/joi2012ho2,nan
夜店 (Night Market),https://atcoder.jp/contests/joi2012ho/tasks/joi2012ho3,nan
釘 (Nails),https://atcoder.jp/contests/joi2012ho/tasks/joi2012ho4,nan
JOI 国のお祭り事情 (Festivals in JOI Kingdom),https://atcoder.jp/contests/joi2012ho/tasks/joi2012ho5,nan
ランチ (Lunch),https://atcoder.jp/contests/joi2012yo/tasks/joi2012yo_a,nan
サッカー (Soccer),https://atcoder.jp/contests/joi2012yo/tasks/joi2012yo_b,nan
最高のピザ (Best Pizza),https://atcoder.jp/contests/joi2012yo/tasks/joi2012yo_c,nan
パスタ (Pasta),https://atcoder.jp/contests/joi2012yo/tasks/joi2012yo_d,nan
イルミネーション (Illumination),https://atcoder.jp/contests/joi2012yo/tasks/joi2012yo_e,nan
ジグザグ数 (Zig Zag Numbers),https://atcoder.jp/contests/joi2012yo/tasks/joi2012yo_f,nan
電飾 (Illumination),https://atcoder.jp/contests/joi2013ho/tasks/joi2013ho1,nan
IOI 列車で行こう (Take the 'IOI' train),https://atcoder.jp/contests/joi2013ho/tasks/joi2013ho2,nan
現代的な屋敷 (Modern Mansion),https://atcoder.jp/contests/joi2013ho/tasks/joi2013ho3,nan
JOIOI の塔 (Tower of JOIOI),https://atcoder.jp/contests/joi2013ho/tasks/joi2013ho4,nan
バブルソート (Bubble Sort),https://atcoder.jp/contests/joi2013ho/tasks/joi2013ho5,nan
宿題 (Homework),https://atcoder.jp/contests/joi2013yo/tasks/joi2013yo_a,nan
数当てゲーム (Unique Number),https://atcoder.jp/contests/joi2013yo/tasks/joi2013yo_b,nan
看板 (Signboard),https://atcoder.jp/contests/joi2013yo/tasks/joi2013yo_c,nan
暑い日々 (Hot days),https://atcoder.jp/contests/joi2013yo/tasks/joi2013yo_d,nan
魚の生息範囲 (Fish),https://atcoder.jp/contests/joi2013yo/tasks/joi2013yo_e,nan
お土産購入計画 (Gifts),https://atcoder.jp/contests/joi2013yo/tasks/joi2013yo_f,nan
JOI 紋章 (JOI Emblem),https://atcoder.jp/contests/joi2014ho/tasks/joi2014ho1,nan
IOI 饅頭 (IOI Manju),https://atcoder.jp/contests/joi2014ho/tasks/joi2014ho2,nan
バームクーヘン (Baumkuchen),https://atcoder.jp/contests/joi2014ho/tasks/joi2014ho3,nan
フクロモモンガ  (Sugar Glider),https://atcoder.jp/contests/joi2014ho/tasks/joi2014ho4,nan
切り取り線  (Cutting),https://atcoder.jp/contests/joi2014ho/tasks/joi2014ho5,nan
平均点 (Average Score),https://atcoder.jp/contests/joi2014yo/tasks/joi2014yo_a,nan
投票 (Vote),https://atcoder.jp/contests/joi2014yo/tasks/joi2014yo_b,nan
超都観光 (Super Metropolis),https://atcoder.jp/contests/joi2014yo/tasks/joi2014yo_c,nan
部活のスケジュール表 (Schedule),https://atcoder.jp/contests/joi2014yo/tasks/joi2014yo_d,nan
タクシー (Taxis),https://atcoder.jp/contests/joi2014yo/tasks/joi2014yo_e,nan
小籠包 (Xiao Long Bao),https://atcoder.jp/contests/joi2014yo/tasks/joi2014yo_f,nan
鉄道旅行 (Railroad Trip),https://atcoder.jp/contests/joi2015ho/tasks/joi2015ho_a,nan
ケーキの切り分け２ (Cake 2),https://atcoder.jp/contests/joi2015ho/tasks/joi2015ho_b,nan
JOI 公園 (JOI Park),https://atcoder.jp/contests/joi2015ho/tasks/joi2015ho_c,nan
舞踏会 (Ball),https://atcoder.jp/contests/joi2015ho/tasks/joi2015ho_d,nan
城壁 (Rampart),https://atcoder.jp/contests/joi2015ho/tasks/joi2015ho_e,nan
水道料金 (Water Rate),https://atcoder.jp/contests/joi2015yo/tasks/joi2015yo_a,nan
クリスマスパーティー (Christmas Party),https://atcoder.jp/contests/joi2015yo/tasks/joi2015yo_b,nan
気象予報士 (Weather Forecaster),https://atcoder.jp/contests/joi2015yo/tasks/joi2015yo_c,nan
シルクロード (Silk Road),https://atcoder.jp/contests/joi2015yo/tasks/joi2015yo_d,nan
砂の城 (Sandcastle),https://atcoder.jp/contests/joi2015yo/tasks/joi2015yo_e,nan
財宝 (Treasures),https://atcoder.jp/contests/joi2015yo/tasks/joi2015yo_f,nan
オレンジの出荷 (Oranges),https://atcoder.jp/contests/joi2016ho/tasks/joi2016ho_a,nan
スタンプラリー 2 (Collecting Stamps 2),https://atcoder.jp/contests/joi2016ho/tasks/joi2016ho_b,nan
鉄道運賃 (Train Fare),https://atcoder.jp/contests/joi2016ho/tasks/joi2016ho_c,nan
縄張り (Territory),https://atcoder.jp/contests/joi2016ho/tasks/joi2016ho_d,nan
断層 (Geologic Fault),https://atcoder.jp/contests/joi2016ho/tasks/joi2016ho_e,nan
科目選択 (Selecting Subjects),https://atcoder.jp/contests/joi2016yo/tasks/joi2016yo_a,nan
ゼッケンの交換 (Swapping Bibs),https://atcoder.jp/contests/joi2016yo/tasks/joi2016yo_b,nan
ロシアの旗 (Russian Flag),https://atcoder.jp/contests/joi2016yo/tasks/joi2016yo_c,nan
JOI国のお散歩事情 (Walking in JOI Kingdom),https://atcoder.jp/contests/joi2016yo/tasks/joi2016yo_d,nan
ゾンビ島 (Zombie Island),https://atcoder.jp/contests/joi2016yo/tasks/joi2016yo_e,nan
屋台 (Food stalls),https://atcoder.jp/contests/joi2016yo/tasks/joi2016yo_f,nan
フェーン現象 (Foehn Phenomena),https://atcoder.jp/contests/joi2017ho/tasks/joi2017ho_a,nan
準急電車 (Semiexpress),https://atcoder.jp/contests/joi2017ho/tasks/joi2017ho_b,nan
JOIOI 王国 (Kingdom of JOIOI),https://atcoder.jp/contests/joi2017ho/tasks/joi2017ho_c,nan
サッカー (Soccer),https://atcoder.jp/contests/joi2017ho/tasks/joi2017ho_d,nan
縄 (Rope),https://atcoder.jp/contests/joi2017ho/tasks/joi2017ho_e,nan
電子レンジ (Microwave),https://atcoder.jp/contests/joi2017yo/tasks/joi2017yo_a,nan
ポイントカード (Point Card),https://atcoder.jp/contests/joi2017yo/tasks/joi2017yo_b,nan
休憩スペース (Refreshment Area),https://atcoder.jp/contests/joi2017yo/tasks/joi2017yo_c,nan
ぬいぐるみの整理 (Plush Toys),https://atcoder.jp/contests/joi2017yo/tasks/joi2017yo_d,nan
尾根 (Ridge),https://atcoder.jp/contests/joi2017yo/tasks/joi2017yo_e,nan
ヘビの JOI 君 (Snake JOI),https://atcoder.jp/contests/joi2017yo/tasks/joi2017yo_f,nan
鉛筆 (Pencils),https://atcoder.jp/contests/joi2018yo/tasks/joi2018_yo_a,nan
双六 (Sugoroku),https://atcoder.jp/contests/joi2018yo/tasks/joi2018_yo_b,nan
幹線道路 (Trunk Road),https://atcoder.jp/contests/joi2018yo/tasks/joi2018_yo_c,nan
水ようかん (Mizuyokan),https://atcoder.jp/contests/joi2018yo/tasks/joi2018_yo_d,nan
森林伐採（Deforestation）,https://atcoder.jp/contests/joi2018yo/tasks/joi2018_yo_e,nan
L番目のK番目の数 (LthKthNumber),https://atcoder.jp/contests/joi2018yo/tasks/joi2018_yo_f,nan
ストーブ (Stove),https://atcoder.jp/contests/joi2018ho/tasks/joi2018ho_a,nan
美術展 (Art Exhibition),https://atcoder.jp/contests/joi2018ho/tasks/joi2018ho_b,nan
団子職人 (Dango Maker),https://atcoder.jp/contests/joi2018ho/tasks/joi2018ho_c,nan
定期券 (Commuter Pass),https://atcoder.jp/contests/joi2018ho/tasks/joi2018ho_d,nan
毒蛇の脱走 (Snake Escaping),https://atcoder.jp/contests/joi2018ho/tasks/joi2018ho_e,nan
ソーシャルゲーム (Social Game),https://atcoder.jp/contests/joi2019yo/tasks/joi2019_yo_a,nan
すごろくと駒 (Sugoroku and Pieces),https://atcoder.jp/contests/joi2019yo/tasks/joi2019_yo_b,nan
マルバツスタンプ (Circle Cross Stamps),https://atcoder.jp/contests/joi2019yo/tasks/joi2019_yo_c,nan
日本沈没 (Japan Sinks),https://atcoder.jp/contests/joi2019yo/tasks/joi2019_yo_d,nan
イルミネーション (Illumination),https://atcoder.jp/contests/joi2019yo/tasks/joi2019_yo_e,nan
座席 (Seats),https://atcoder.jp/contests/joi2019yo/tasks/joi2019_yo_f,nan
勇者ビ太郎 (Bitaro the Brave),https://atcoder.jp/contests/joi2019ho/tasks/joi2019ho_a,nan
展覧会 (Exhibition),https://atcoder.jp/contests/joi2019ho/tasks/joi2019ho_b,nan
たのしいたのしいたのしい家庭菜園 (Growing Vegetables is Fun 3),https://atcoder.jp/contests/joi2019ho/tasks/joi2019ho_c,nan
コイン集め (Coin Collecting),https://atcoder.jp/contests/joi2019ho/tasks/joi2019ho_d,nan
珍しい都市 (Unique Cities),https://atcoder.jp/contests/joi2019ho/tasks/joi2019ho_e,nan
3 つの整数 (Three Integers),https://atcoder.jp/contests/joi2020yo1a/tasks/joi2020_yo1a_a,nan
母音を数える (Counting Vowels),https://atcoder.jp/contests/joi2020yo1a/tasks/joi2020_yo1a_b,nan
マージ (Merge),https://atcoder.jp/contests/joi2020yo1a/tasks/joi2020_yo1a_c,nan
試験 (Exam),https://atcoder.jp/contests/joi2020yo1b/tasks/joi2020_yo1b_a,nan
文字列の反転 (Inversion of a String),https://atcoder.jp/contests/joi2020yo1b/tasks/joi2020_yo1b_b,nan
最頻値 (Mode),https://atcoder.jp/contests/joi2020yo1b/tasks/joi2020_yo1b_c,nan
X に最も近い値 (The Nearest Value),https://atcoder.jp/contests/joi2020yo1c/tasks/joi2020_yo1c_a,nan
キャピタリゼーション (Capitalization),https://atcoder.jp/contests/joi2020yo1c/tasks/joi2020_yo1c_b,nan
最長昇順連続部分列 (Longest Ascending Contiguous Subsequence),https://atcoder.jp/contests/joi2020yo1c/tasks/joi2020_yo1c_c,nan
ポスター (Poster),https://atcoder.jp/contests/joi2020yo2/tasks/joi2020_yo2_a,nan
いちご (Strawberry),https://atcoder.jp/contests/joi2020yo2/tasks/joi2020_yo2_b,nan
桁和 (Digit Sum),https://atcoder.jp/contests/joi2020yo2/tasks/joi2020_yo2_c,nan
テンキー (Tenkey),https://atcoder.jp/contests/joi2020yo2/tasks/joi2020_yo2_d,nan
じゃんけん式 (Rock Scissors Paper Expression),https://atcoder.jp/contests/joi2020yo2/tasks/joi2020_yo2_e,nan
長いだけのネクタイ (Just Long Neckties),https://atcoder.jp/contests/joi2020ho/tasks/joi2020ho_a,nan
JJOOII 2 (JJOOII 2),https://atcoder.jp/contests/joi2020ho/tasks/joi2020ho_b,nan
スタンプラリー 3 (Collecting Stamps 3),https://atcoder.jp/contests/joi2020ho/tasks/joi2020ho_c,nan
オリンピックバス (Olympic Bus),https://atcoder.jp/contests/joi2020ho/tasks/joi2020ho_d,nan
火事 (Fire),https://atcoder.jp/contests/joi2020ho/tasks/joi2020ho_e,nan
2 番目に大きい整数 (The Second Largest Integer),https://atcoder.jp/contests/joi2021yo1a/tasks/joi2021_yo1a_a,nan
JOI ソート (JOI Sort),https://atcoder.jp/contests/joi2021yo1a/tasks/joi2021_yo1a_b,nan
共通要素 (Common Elements),https://atcoder.jp/contests/joi2021yo1a/tasks/joi2021_yo1a_c,nan
帰省 (Homecoming),https://atcoder.jp/contests/joi2021yo1b/tasks/joi2021_yo1b_a,nan
ビ太郎と IOI (Bitaro and IOI),https://atcoder.jp/contests/joi2021yo1b/tasks/joi2021_yo1b_b,nan
分割 (Split),https://atcoder.jp/contests/joi2021yo1b/tasks/joi2021_yo1b_c,nan
計算 (Calculation),https://atcoder.jp/contests/joi2021yo1c/tasks/joi2021_yo1c_a,nan
IOI 文字列 (IOI String),https://atcoder.jp/contests/joi2021yo1c/tasks/joi2021_yo1c_b,nan
比較 (Comparison),https://atcoder.jp/contests/joi2021yo1c/tasks/joi2021_yo1c_c,nan
往復すごろく (Round Sugoroku),https://atcoder.jp/contests/joi2021yo2/tasks/joi2021_yo2_a,nan
パンケーキ (Pancake),https://atcoder.jp/contests/joi2021yo2/tasks/joi2021_yo2_b,nan
イベント巡り (Event Hopping),https://atcoder.jp/contests/joi2021yo2/tasks/joi2021_yo2_c,nan
安全点検 (Safety Inspection),https://atcoder.jp/contests/joi2021yo2/tasks/joi2021_yo2_d,nan
スパイ 2 (Spy 2),https://atcoder.jp/contests/joi2021yo2/tasks/joi2021_yo2_e,nan
とてもたのしい家庭菜園 (Growing Vegetables is Fun 4),https://atcoder.jp/contests/joi2021ho/tasks/joi2021ho_a,nan
雪玉 (Snowball),https://atcoder.jp/contests/joi2021ho/tasks/joi2021ho_b,nan
集合写真 (Group Photo),https://atcoder.jp/contests/joi2021ho/tasks/joi2021ho_c,nan
ロボット (Robot),https://atcoder.jp/contests/joi2021ho/tasks/joi2021ho_d,nan
ダンジョン 3 (Dungeon 3),https://atcoder.jp/contests/joi2021ho/tasks/joi2021ho_e,nan
余り (Remainder),https://atcoder.jp/contests/joi2022yo1a/tasks/joi2022_yo1a_a,nan
移動 (Moving),https://atcoder.jp/contests/joi2022yo1a/tasks/joi2022_yo1a_b,nan
複雑な文字列 (Complex String),https://atcoder.jp/contests/joi2022yo1a/tasks/joi2022_yo1a_c,nan
箱と鍵 (Boxes and Keys),https://atcoder.jp/contests/joi2022yo1a/tasks/joi2022_yo1a_d,nan
立方体 (Cube),https://atcoder.jp/contests/joi2022yo1b/tasks/joi2022_yo1b_a,nan
短針 (Hour Hand),https://atcoder.jp/contests/joi2022yo1b/tasks/joi2022_yo1b_b,nan
次の文字 (Next Character),https://atcoder.jp/contests/joi2022yo1b/tasks/joi2022_yo1b_c,nan
希少な数 (Rare Number),https://atcoder.jp/contests/joi2022yo1b/tasks/joi2022_yo1b_d,nan
身長 (Height),https://atcoder.jp/contests/joi2022yo1c/tasks/joi2022_yo1c_a,nan
アイスクリーム (Ice Cream),https://atcoder.jp/contests/joi2022yo1c/tasks/joi2022_yo1c_b,nan
運動会 (Sports Day),https://atcoder.jp/contests/joi2022yo1c/tasks/joi2022_yo1c_c,nan
ボールの移動 (Moving Balls),https://atcoder.jp/contests/joi2022yo1c/tasks/joi2022_yo1c_d,nan
図書館 2 (Library 2),https://atcoder.jp/contests/joi2022yo2/tasks/joi2022_yo2_a,nan
カーペット (Carpet),https://atcoder.jp/contests/joi2022yo2/tasks/joi2022_yo2_b,nan
国土分割 (Land Division),https://atcoder.jp/contests/joi2022yo2/tasks/joi2022_yo2_c,nan
飴 2 (Candies 2),https://atcoder.jp/contests/joi2022yo2/tasks/joi2022_yo2_d,nan
交易計画 (Trade Plan),https://atcoder.jp/contests/joi2022yo2/tasks/joi2022_yo2_e,nan
インターカステラー (Intercastellar),https://atcoder.jp/contests/joi2022ho/tasks/joi2022ho_a,nan
自習 (Self Study),https://atcoder.jp/contests/joi2022ho/tasks/joi2022ho_b,nan
選挙で勝とう (Let's Win the Election),https://atcoder.jp/contests/joi2022ho/tasks/joi2022ho_c,nan
鉄道旅行 2 (Railway Trip 2),https://atcoder.jp/contests/joi2022ho/tasks/joi2022ho_d,nan
砂の城 2 (Sandcastle 2),https://atcoder.jp/contests/joi2022ho/tasks/joi2022ho_e,nan
長方形 (Rectangle),https://atcoder.jp/contests/joi2023yo1a/tasks/joi2023_yo1a_a,nan
ゾロ目 (Same Numbers),https://atcoder.jp/contests/joi2023yo1a/tasks/joi2023_yo1a_b,nan
3 つの箱 (Three Boxes),https://atcoder.jp/contests/joi2023yo1a/tasks/joi2023_yo1a_c,nan
二人三脚 (Three Legged Race),https://atcoder.jp/contests/joi2023yo1a/tasks/joi2023_yo1a_d,nan
時間 (Hour),https://atcoder.jp/contests/joi2023yo1b/tasks/joi2023_yo1b_a,nan
三方比較 (Three Way Comparison),https://atcoder.jp/contests/joi2023yo1b/tasks/joi2023_yo1b_b,nan
繰り返し文字列 (Repeating String),https://atcoder.jp/contests/joi2023yo1b/tasks/joi2023_yo1b_c,nan
点数 (Score),https://atcoder.jp/contests/joi2023yo1b/tasks/joi2023_yo1b_d,nan
2 桁の整数 (Two digit Integer),https://atcoder.jp/contests/joi2023yo1c/tasks/joi2023_yo1c_a,nan
11 月 (November),https://atcoder.jp/contests/joi2023yo1c/tasks/joi2023_yo1c_b,nan
JOI エディタ (JOI Editor),https://atcoder.jp/contests/joi2023yo1c/tasks/joi2023_yo1c_c,nan
マラソン大会 (Marathon Race),https://atcoder.jp/contests/joi2023yo1c/tasks/joi2023_yo1c_d,nan
年齢の差 (Age Difference),https://atcoder.jp/contests/joi2023yo2/tasks/joi2023_yo2_a,nan
ジョイ四人組 (JOI04),https://atcoder.jp/contests/joi2023yo2/tasks/joi2023_yo2_b,nan
塗りつぶし (Painting),https://atcoder.jp/contests/joi2023yo2/tasks/joi2023_yo2_c,nan
貨物列車 (Freight Train),https://atcoder.jp/contests/joi2023yo2/tasks/joi2023_yo2_d,nan
日本沈没 2 (Japan Sinks 2),https://atcoder.jp/contests/joi2023yo2/tasks/joi2023_yo2_e,nan
碁石ならべ 2 (Stone Arranging 2),https://atcoder.jp/contests/joi2023ho/tasks/joi2023ho_a,nan
宣伝 2 (Advertisement 2),https://atcoder.jp/contests/joi2023ho/tasks/joi2023ho_b,nan
迷路 (Maze),https://atcoder.jp/contests/joi2023ho/tasks/joi2023ho_c,nan
キャットエクササイズ (Cat Exercise),https://atcoder.jp/contests/joi2023ho/tasks/joi2023ho_d,nan
現代的な機械 (Modern Machine),https://atcoder.jp/contests/joi2023ho/tasks/joi2023ho_e,nan
果物 (Fruit),https://atcoder.jp/contests/joi2024yo1a/tasks/joi2024_yo1a_a,nan
和の判定 (Sum Checker),https://atcoder.jp/contests/joi2024yo1a/tasks/joi2024_yo1a_b,nan
ハミング距離 (Hamming Distance),https://atcoder.jp/contests/joi2024yo1a/tasks/joi2024_yo1a_c,nan
現れている数字 (Appearing Numbers),https://atcoder.jp/contests/joi2024yo1a/tasks/joi2024_yo1a_d,nan
飴の袋詰め (Drops Packing),https://atcoder.jp/contests/joi2024yo1b/tasks/joi2024_yo1b_a,nan
火曜日 (Tuesday),https://atcoder.jp/contests/joi2024yo1b/tasks/joi2024_yo1b_b,nan
画数数え (Stroke Count),https://atcoder.jp/contests/joi2024yo1b/tasks/joi2024_yo1b_c,nan
繰り返し (Repetition),https://atcoder.jp/contests/joi2024yo1b/tasks/joi2024_yo1b_d,nan
分 (Minutes),https://atcoder.jp/contests/joi2024yo1c/tasks/joi2024_yo1c_a,nan
桁 (Digit),https://atcoder.jp/contests/joi2024yo1c/tasks/joi2024_yo1c_b,nan
揃った文字 (Matched Letters),https://atcoder.jp/contests/joi2024yo1c/tasks/joi2024_yo1c_c,nan
差 (Difference),https://atcoder.jp/contests/joi2024yo1c/tasks/joi2024_yo1c_d,nan
カードゲーム 2 (Card Game 2),https://atcoder.jp/contests/joi2024yo2/tasks/joi2024_yo2_a,nan
買い物 2 (Shopping 2),https://atcoder.jp/contests/joi2024yo2/tasks/joi2024_yo2_b,nan
白色光 2 (White Light 2),https://atcoder.jp/contests/joi2024yo2/tasks/joi2024_yo2_c,nan
庭園 2 (Garden 2),https://atcoder.jp/contests/joi2024yo2/tasks/joi2024_yo2_d,nan
高速道路の通行料金 (Highway Tolls),https://atcoder.jp/contests/joi2024yo2/tasks/joi2024_yo2_e,nan
室温 (Room Temperature),https://atcoder.jp/contests/joi2024ho/tasks/joi2024ho_a,nan
建設事業 2 (Construction Project 2),https://atcoder.jp/contests/joi2024ho/tasks/joi2024ho_b,nan
マラソン大会 2 (Marathon Race 2),https://atcoder.jp/contests/joi2024ho/tasks/joi2024ho_c,nan
プレゼント交換 (Gift Exchange),https://atcoder.jp/contests/joi2024ho/tasks/joi2024ho_d,nan
道路網の整備 2 (Road Service 2),https://atcoder.jp/contests/joi2024ho/tasks/joi2024ho_e,nan
鉛筆 2 (Pencils 2),https://atcoder.jp/contests/joi2025yo1a/tasks/joi2025_yo1a_a,nan
散歩 (Walking),https://atcoder.jp/contests/joi2025yo1a/tasks/joi2025_yo1a_b,nan
OIJ (OIJ),https://atcoder.jp/contests/joi2025yo1a/tasks/joi2025_yo1a_c,nan
どら焼き (Dorayaki),https://atcoder.jp/contests/joi2025yo1a/tasks/joi2025_yo1a_d,nan
徒競走 (Footrace),https://atcoder.jp/contests/joi2025yo1b/tasks/joi2025_yo1b_a,nan
鉄道旅行 3 (Railway Trip 3),https://atcoder.jp/contests/joi2025yo1b/tasks/joi2025_yo1b_b,nan
じゃんけん (Rock Scissors Paper),https://atcoder.jp/contests/joi2025yo1b/tasks/joi2025_yo1b_c,nan
三角足し算 (Triangle Addition),https://atcoder.jp/contests/joi2025yo1b/tasks/joi2025_yo1b_d,nan
金平糖 (Konpeito),https://atcoder.jp/contests/joig2021-open/tasks/joig2021_a,nan
巻物 (Scroll),https://atcoder.jp/contests/joig2021-open/tasks/joig2021_b,nan
イルミネーション 2 (Illumination 2),https://atcoder.jp/contests/joig2021-open/tasks/joig2021_c,nan
展覧会 2 (Exhibition 2),https://atcoder.jp/contests/joig2021-open/tasks/joig2021_d,nan
パレード (Parade),https://atcoder.jp/contests/joig2021-open/tasks/joig2021_e,nan
デジタルアート (Digital Art),https://atcoder.jp/contests/joig2021-open/tasks/joig2021_f,nan
ピアノコンクール (Piano Competition),https://atcoder.jp/contests/joig2022-open/tasks/joig2022_a,nan
掛け算 (Multiplication),https://atcoder.jp/contests/joig2022-open/tasks/joig2022_b,nan
投票 (Voting),https://atcoder.jp/contests/joig2022-open/tasks/joig2022_c,nan
いちご 2 (Strawberry 2),https://atcoder.jp/contests/joig2022-open/tasks/joig2022_d,nan
エゴイ展 (EGOI Exhibition),https://atcoder.jp/contests/joig2022-open/tasks/joig2022_e,nan
タクシー 2 (Taxis 2),https://atcoder.jp/contests/joig2022-open/tasks/joig2022_f,nan
末尾の文字 (Last Letter),https://atcoder.jp/contests/joig2023-open/tasks/joig2023_a,nan
絶対階差数列 (Sequence of Absolute Differences),https://atcoder.jp/contests/joig2023-open/tasks/joig2023_b,nan
鐘 (Bell),https://atcoder.jp/contests/joig2023-open/tasks/joig2023_c,nan
コイン集め 2 (Coin Collecting 2),https://atcoder.jp/contests/joig2023-open/tasks/joig2023_d,nan
運河 (Canal),https://atcoder.jp/contests/joig2023-open/tasks/joig2023_e,nan
タイピング大会 (Typing Contest),https://atcoder.jp/contests/joig2023-open/tasks/joig2023_f,nan
三連続 (Three Consecutive),https://atcoder.jp/contests/joig2024-open/tasks/joig2024_a,nan
ダンス (Dance),https://atcoder.jp/contests/joig2024-open/tasks/joig2024_b,nan
座席 2 (Seats 2),https://atcoder.jp/contests/joig2024-open/tasks/joig2024_c,nan
たくさんの数字 (Many Digits),https://atcoder.jp/contests/joig2024-open/tasks/joig2024_d,nan
名前 (Name),https://atcoder.jp/contests/joig2024-open/tasks/joig2024_e,nan
感染シミュレーション (Infection Simulation),https://atcoder.jp/contests/joig2024-open/tasks/joig2024_f,nan
リレー競技 (Relay),https://atcoder.jp/contests/joigsc2022/tasks/joigsc2022_a,nan
JOIG ツアー (JOIG Tour),https://atcoder.jp/contests/joigsc2022/tasks/joigsc2022_b,nan
チーム戦 (Team Contest),https://atcoder.jp/contests/joigsc2022/tasks/joigsc2022_c,nan
コピー & ペースト 3 (Copy and Paste 3),https://atcoder.jp/contests/joigsc2022/tasks/joigsc2022_d,nan
メロンの出荷 (Melons),https://atcoder.jp/contests/joigsc2022/tasks/joigsc2022_e,nan
空港 (Airport),https://atcoder.jp/contests/joigsc2022/tasks/joigsc2022_f,nan
一流の団子職人 (Super Dango Maker),https://atcoder.jp/contests/joigsc2022/tasks/joigsc2022_g,nan
復興事業 (Reconstruction Project),https://atcoder.jp/contests/joigsc2022/tasks/joigsc2022_h,nan
ロケット打ち上げ (Rocket Launching),https://atcoder.jp/contests/joigsp2023/tasks/joigsp2023_a,nan
テレポーター (Teleporter),https://atcoder.jp/contests/joigsp2023/tasks/joigsp2023_b,nan
議会 (Council),https://atcoder.jp/contests/joigsp2023/tasks/joigsp2023_c,nan
ベルトコンベア (Belt Conveyor),https://atcoder.jp/contests/joigsp2023/tasks/joigsp2023_d,nan
スマートフォン (Smartphone),https://atcoder.jp/contests/joigsp2023/tasks/joigsp2023_e,nan
白色光 (White Light),https://atcoder.jp/contests/joigsp2023/tasks/joigsp2023_f,nan
ビ太郎の旅 (Bitaro's Travel),https://atcoder.jp/contests/joigsp2023/tasks/joigsp2023_g,nan
最後の戦い (The Last Battle),https://atcoder.jp/contests/joigsp2023/tasks/joigsp2023_h,nan
いっしょ (Together),https://atcoder.jp/contests/joigsp2024/tasks/joigsp2024_a,nan
バームクーヘン 2 (Baumkuchen 2),https://atcoder.jp/contests/joigsp2024/tasks/joigsp2024_b,nan
ボードゲーム (Board Game),https://atcoder.jp/contests/joigsp2024/tasks/joigsp2024_c,nan
三色灯 (Tricolor Lights),https://atcoder.jp/contests/joigsp2024/tasks/joigsp2024_d,nan
カードゲーム 3 (Card Game 3),https://atcoder.jp/contests/joigsp2024/tasks/joigsp2024_e,nan
チョコレートを増やせ (Increase Chocolates),https://atcoder.jp/contests/joigsp2024/tasks/joigsp2024_f,nan
島巡り (Island Hopping),https://atcoder.jp/contests/joigsp2024/tasks/joigsp2024_g,nan
卓球 (Table Tennis),https://atcoder.jp/contests/joigsp2024/tasks/joigsp2024_h,nan
交配 (Crossing),https://atcoder.jp/contests/joiopen2021/tasks/joiopen2021_a,nan
決算報告 (Financial Report),https://atcoder.jp/contests/joiopen2021/tasks/joiopen2021_b,nan
モンスターゲーム (Monster Game),https://atcoder.jp/contests/joiopen2021/tasks/joiopen2021_c,nan
シーソー (Seesaw),https://atcoder.jp/contests/joiopen2022/tasks/joiopen2022_a,nan
キリン (Giraffes),https://atcoder.jp/contests/joiopen2022/tasks/joiopen2022_b,nan
通学路 (School Road),https://atcoder.jp/contests/joiopen2022/tasks/joiopen2022_c,nan
古代の機械 2 (Ancient Machine 2),https://atcoder.jp/contests/joiopen2023/tasks/joiopen2023_a,nan
セルオートマトン (Cell Automaton),https://atcoder.jp/contests/joiopen2023/tasks/joiopen2023_b,nan
庭園 (Garden),https://atcoder.jp/contests/joiopen2023/tasks/joiopen2023_c,nan
試験 2 (Examination 2),https://atcoder.jp/contests/joiopen2024/tasks/joiopen2024_a,nan
熱中症 (Heat Stroke),https://atcoder.jp/contests/joiopen2024/tasks/joiopen2024_b,nan
図書館 3 (Library 3),https://atcoder.jp/contests/joiopen2024/tasks/joiopen2024_c,nan
gram. アナグラム (Anagram),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_anagra,nan
lding. ビルの飾り付け (Building),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_buildi,nan
cuit. 電気回路の結線 (Circuit),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_circui,nan
torial. 階乗 (Factorial),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_factor,nan
mat. フェルマー方程式 (Fermat),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_fermat,nan
er. 光ファイバー (Fiber),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_fiber,nan
es. 直線 (Lines),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_lines,nan
l. ショッピングモール (Mall),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_mall,nan
king1. 半導体工場 (Packing),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_packin,nan
king2. 半導体工場 (Packing),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_packing2,nan
king3. 半導体工場 (Packing),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_packing3,nan
king4. 半導体工場 (Packing),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_packing4,nan
king5. 半導体工場 (Packing),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_packing5,nan
te. 象使い (Route),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_route,nan
t. SALT TREE XV,https://atcoder.jp/contests/joisc2007/tasks/joisc2007_salt,nan
re. 得点 (Score),https://atcoder.jp/contests/joisc2007/tasks/joisc2007_score,nan
t. ベルト (Belt),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_belt,nan
ating. カンニング対策 (Cheating),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_cheating,nan
mittee. 委員会 (Committee),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_committee,nan
ction1. 選挙 (Election),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_election1,nan
ction2. 選挙 (Election),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_election2,nan
ction3. 選挙 (Election),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_election3,nan
ction4. 選挙 (Election),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_election4,nan
ction5. 選挙 (Election),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_election5,nan
. インフルエンザ (Flu),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_flu,nan
ction. 分数 (Fraction),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_fraction,nan
htman. 夜警 (Nightman),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_nightman,nan
e. ナイルドットコム (Nile.Com),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_nile,nan
gami. 折り紙 (Origami),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_origami,nan
ns. 最古の遺跡2 (Ruins),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_ruins,nan
et. 色紙 (Sheet),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_sheet,nan
hoon. 台風 (Typhoon),https://atcoder.jp/contests/joisc2008/tasks/joisc2008_typhoon,nan
uction. 誘拐 (Abduction),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_abduction,nan
ertisement. 宣伝 (Advertisement),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_advertisement,nan
psticks. 塗り箸 (Chopsticks),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_chopsticks,nan
test. コンテスト (Contest),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_contest,nan
tribution. 冊子の配布 (Distribution),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_distribution,nan
o. ロゴマーク (Logo),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_logo,nan
amid. 貫きピラミッド (Pyramid),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_pyramid,nan
uence. 数列 (Sequence),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_sequence,nan
. スキー (Ski),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_ski,nan
mps. 判子 (はんこ) (Stamps),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_stamps,nan
rry_sky. 星空 (Starry Sky),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_starry_sky,nan
ritory. 縄張り (Territory),https://atcoder.jp/contests/joisc2009/tasks/joisc2009_territory,nan
usb. 足し算 (a + b problem),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_aplusb,nan
test. コンテスト (Contest),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_contest,nan
. DNAの合成 (DNA Synthesizer),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_dna,nan
als. 本選会場 (Finals),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_finals,nan
eseek. かくれんぼ (Hide and seek),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_hideseek,nan
hway. 高速道路 (Highway),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_highway,nan
e. 湖 (Lake),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_lake,nan
gs. プラグ (Plugs),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_plugs,nan
ter. JOIポスター (JOI Poster),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_poster,nan
ions. 地域 (Regions),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_regions,nan
goku. 戦国時代 (Sengoku),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_sengoku,nan
road1. シムロード (SimRoad),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_simroad1,nan
road2. シムロード (SimRoad),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_simroad2,nan
road3. シムロード (SimRoad),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_simroad3,nan
road4. シムロード (SimRoad),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_simroad4,nan
road5. シムロード (SimRoad),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_simroad5,nan
irs. 階段 (Stairs),https://atcoder.jp/contests/joisc2010/tasks/joisc2010_stairs,nan
les. リンゴの出荷 (Apples),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_apples,nan
ner. 横断幕 (Banner),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_banner,nan
kshelf. 本棚 (Bookshelf),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_bookshelf,nan
iphering. 解読 (Deciphering),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_deciphering,nan
gon. ドラゴン (Dragon),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_dragon,nan
ss. 数当て (Guess Them All),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_guess,nan
. 国際情報オリンピック (IOI),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_ioi,nan
tter. ジョイッター (Joitter),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_joitter,nan
cards. カードキー (Keycards),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_keycards,nan
enteering. オリエンテーリング (Orienteering),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_orienteering,nan
ort. 報告 (Report),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_report,nan
ritori. しりとり (Shiritori),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_shiritori,nan
1. UFOの飛行場 (UFO),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_ufo1,nan
2. UFOの飛行場 (UFO),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_ufo2,nan
3. UFOの飛行場 (UFO),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_ufo3,nan
4. UFOの飛行場 (UFO),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_ufo4,nan
5. UFOの飛行場 (UFO),https://atcoder.jp/contests/joisc2011/tasks/joisc2011_ufo5,nan
adcasting1. テレビ放送,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_broadcasting1,nan
adcasting2. テレビ放送,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_broadcasting2,nan
adcasting3. テレビ放送,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_broadcasting3,nan
adcasting4. テレビ放送,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_broadcasting4,nan
adcasting5. テレビ放送,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_broadcasting5,nan
lding2. ビルの飾り付け 2,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_building2,nan
nese. 中華料理,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_chinese,nan
stellation. 星座,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_constellation,nan
ypaste. コピー＆ペースト,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_copypaste,nan
h. 魚,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_fish,nan
tune_telling. 占い,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_fortune_telling,nan
itation. 招待,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_invitation,nan
_flag. 日本情報オリンピック旗,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_joi_flag,nan
garoo. カンガルー,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_kangaroo,nan
ate. 回転,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_rotate,nan
oban. 倉庫番,https://atcoder.jp/contests/joisc2012/tasks/joisc2012_sokoban,nan
バスの乗り継ぎ (Bus Tour),https://atcoder.jp/contests/joisc2013-day1/tasks/joisc2013_bustour,nan
ケーキの切り分け (Cake),https://atcoder.jp/contests/joisc2013-day3/tasks/joisc2013_cake,nan
たのしい画像収集 (Collecting Images is Fun),https://atcoder.jp/contests/joisc2013-day1/tasks/joisc2013_collecting,nan
通信妨害 (Communication Jamming),https://atcoder.jp/contests/joisc2013-day1/tasks/joisc2013_communication,nan
建設事業 (Construction Project),https://atcoder.jp/contests/joisc2013-day2/tasks/joisc2013_construction,nan
JOIポスター (JOI Poster),https://atcoder.jp/contests/joisc2013-day1/tasks/joisc2013_joi_poster,nan
コアラ (Koala),https://atcoder.jp/contests/joisc2013-day3/tasks/joisc2013_koala,nan
マスコットの片付け (Mascots),https://atcoder.jp/contests/joisc2013-day2/tasks/joisc2013_mascots,nan
メッセンジャー (Messenger),https://atcoder.jp/contests/joisc2013-day4/tasks/joisc2013_messenger,nan
山岳救助隊 (Mountain Rescue Team),https://atcoder.jp/contests/joisc2013-day3/tasks/joisc2013_mountain,nan
プレゼント (Presents),https://atcoder.jp/contests/joisc2013-day4/tasks/joisc2013_presents,nan
宇宙船 (Spaceships),https://atcoder.jp/contests/joisc2013-day4/tasks/joisc2013_spaceships,nan
スパイ (Spy),https://atcoder.jp/contests/joisc2013-day2/tasks/joisc2013_spy,nan
バス通学,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_a,nan
たのしい家庭菜園,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_b,nan
歴史の研究,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_c,nan
ラーメンの食べ比べ,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_d,nan
水筒,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_e,nan
友だちをつくろう,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_f,nan
スタンプラリー,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_g,nan
JOIOJI,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_h,nan
かかし,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_i,nan
電圧,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_j,nan
二人の星座,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_k,nan
漢字しりとり,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_l,nan
ストラップ,https://atcoder.jp/contests/joisc2014/tasks/joisc2014_m,nan
コピー&ペースト 2,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_a,nan
愉快なロゴデザイン,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_b,nan
たのしいたのしい家庭菜園,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_c,nan
IOIOI カード占い,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_d,nan
ビルの飾りつけ 3,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_e,nan
合鍵,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_f,nan
道路整備,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_g,nan
AAQQZ,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_h,nan
とてもたのしいカードゲーム,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_i,nan
道案内,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_j,nan
遺産相続,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_k,nan
記憶縛り,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_l,nan
防壁,https://atcoder.jp/contests/joisc2015/tasks/joisc2015_m,nan
マトリョーシカ人形,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_a,nan
神経衰弱,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_b,nan
ソリティア,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_c,nan
雇用計画,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_d,nan
サンドイッチ,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_e,nan
トイレ,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_f,nan
ダンジョン2,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_g,nan
回転寿司,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_h,nan
電報,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_i,nan
危険なスケート,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_j,nan
雪降る道路,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_k,nan
最悪の記者2,https://atcoder.jp/contests/joisc2016/tasks/joisc2016_l,nan
開拓 (Cultivation),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_a,nan
港湾設備 (Port Facility),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_b,nan
手持ち花火 (Sparklers),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_c,nan
切符の手配 (Arranging Tickets),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_d,nan
壊れた機器 (Broken Device),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_e,nan
鉄道旅行 (Railway Trip),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_f,nan
長距離バス (Long Distance Coach),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_g,nan
細長い屋敷 (Long Mansion),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_h,nan
自然公園 (Natural Park),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_i,nan
誘拐 2 (Abduction 2),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_j,nan
都市 (City),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_k,nan
ドラゴン 2 (Dragon 2),https://atcoder.jp/contests/joisc2017/tasks/joisc2017_l,nan
高速道路の建設 (Construction of Highway),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_a,nan
柵 (Fences),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_b,nan
テント  (Tents),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_c,nan
修行 (Asceticism),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_d,nan
道路網の整備 (Road Service),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_e,nan
最悪の記者 3 (Worst Reporter 3),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_f,nan
航空路線図 (Airline Route Map),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_g,nan
ビ太郎のパーティー (Bitaro's Party),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_h,nan
防犯ゲート (Security Gate),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_i,nan
飴 (Candies),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_j,nan
図書館 (Library),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_k,nan
イノシシ (Wild Boar),https://atcoder.jp/contests/joisc2018/tasks/joisc2018_l,nan
試験 (Examination),https://atcoder.jp/contests/joisc2019/tasks/joisc2019_a,nan
ビーバーの会合 (Meetings),https://atcoder.jp/contests/joisc2019/tasks/joisc2019_b,nan
ナン (Naan),https://atcoder.jp/contests/joisc2019/tasks/joisc2019_c,nan
ふたつのアンテナ (Two Antennas),https://atcoder.jp/contests/joisc2019/tasks/joisc2019_d,nan
ふたつの料理 (Two Dishes),https://atcoder.jp/contests/joisc2019/tasks/joisc2019_e,nan
ふたつの交通機関 (Two Transportations),https://atcoder.jp/contests/joisc2019/tasks/joisc2019_f,nan
指定都市 (Designated Cities),https://atcoder.jp/contests/joisc2019/tasks/joisc2019_g,nan
ランプ (Lamps),https://atcoder.jp/contests/joisc2019/tasks/joisc2019_h,nan
"時をかけるビ太郎 (Bitaro, who Leaps through Time)",https://atcoder.jp/contests/joisc2019/tasks/joisc2019_i,nan
ケーキの貼り合わせ (Cake 3),https://atcoder.jp/contests/joisc2019/tasks/joisc2019_j,nan
合併 (Mergers),https://atcoder.jp/contests/joisc2019/tasks/joisc2019_k,nan
鉱物 (Minerals),https://atcoder.jp/contests/joisc2019/tasks/joisc2019_l,nan
ビルの飾りつけ 4 (Building 4),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_a,nan
美味しい美味しいハンバーグ (Hamburg Steak),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_b,nan
掃除 (Sweeping),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_c,nan
カメレオンの恋 (Chameleon's Love),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_d,nan
ジョイッターで友だちをつくろう (Making Friends on Joitter is Fun),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_e,nan
最古の遺跡 3 (Ruins 3),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_f,nan
星座 3 (Constellation 3),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_g,nan
収穫 (Harvest),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_h,nan
迷い猫 (Stray Cat),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_i,nan
首都 (Capital City),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_j,nan
伝説の団子職人 (Legendary Dango Maker),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_k,nan
伝説の団子職人 (Legendary Dango Maker),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_l,nan
伝説の団子職人 (Legendary Dango Maker),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_m,nan
伝説の団子職人 (Legendary Dango Maker),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_n,nan
伝説の団子職人 (Legendary Dango Maker),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_o,nan
伝説の団子職人 (Legendary Dango Maker),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_p,nan
治療計画 (Treatment Project),https://atcoder.jp/contests/joisc2020/tasks/joisc2020_q,nan
曲芸飛行 (Aerobatics),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_a1,nan
曲芸飛行 (Aerobatics),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_a2,nan
曲芸飛行 (Aerobatics),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_a3,nan
曲芸飛行 (Aerobatics),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_a4,nan
曲芸飛行 (Aerobatics),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_a5,nan
曲芸飛行 (Aerobatics),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_a6,nan
IOI 熱の感染拡大 (IOI Fever),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_b,nan
フードコート (Foodcourt),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_c,nan
逃走経路 (Escape Route),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_d,nan
道路の建設案 (Road Construction),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_e,nan
買い物 (Shopping),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_g,nan
古代の機械 (Ancient Machine),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_h,nan
ボディーガード (Bodyguard),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_i,nan
ビーバーの会合 2 (Meetings 2),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_j,nan
イベント巡り 2 (Event Hopping 2),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_k,nan
道案内 2 (Navigation 2),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_l,nan
最悪の記者 4 (Worst Reporter 4),https://atcoder.jp/contests/joisc2021/tasks/joisc2021_m,nan
刑務所 (Jail),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_a,nan
京都観光 (Sightseeing in Kyoto),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_b,nan
スペルミス (Misspelling),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_c,nan
コピー & ペースト 3 (Copy and Paste 3),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_d,nan
飛行機旅行 (Flights),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_e,nan
チーム戦 (Team Contest),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_f,nan
壊れた機器 2 (Broken Device 2),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_g,nan
スプリンクラー (Sprinkler),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_h,nan
蟻と角砂糖 (Ants and Sugar),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_i,nan
一流の団子職人 (Super Dango Maker),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_j,nan
魚 2 (Fish 2),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_k,nan
復興事業 (Reconstruction Project),https://atcoder.jp/contests/joisc2022/tasks/joisc2022_l,nan
ふたつの通貨 (Two Currencies),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_a,nan
JOI 国のお祭り事情 2 (Festivals in JOI Kingdom 2),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_b,nan
パスポート (Passport),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_c,nan
ベルトコンベア (Belt Conveyor),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_d,nan
議会 (Council),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_e,nan
水ようかん 2 (Mizuyokan 2),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_f,nan
ビーバーの合唱 (Chorus),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_g,nan
クッキー (Cookies),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_h,nan
旅行 (Tourism),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_i,nan
最後の戦い (The Last Battle),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_j,nan
警備員 (Security Guard),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_k,nan
ビ太郎の旅 (Bitaro's Travel),https://atcoder.jp/contests/joisp2023/tasks/joisp2023_l,nan
魚 3 (Fish 3),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_a,nan
スキー 2 (Ski 2),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_b,nan
スパイ 3 (Spy 3),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_c,nan
ボードゲーム (Board Game),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_d,nan
三色灯 (Tricolor Lights),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_e,nan
とてもたのしいたのしい家庭菜園 (Growing Vegetables is Fun 5),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_f,nan
カード収集 (Card Collection),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_g,nan
JOI ツアー (JOI Tour),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_h,nan
塔 (Tower),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_i,nan
逃走経路 2 (Escape Route 2),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_j,nan
島巡り (Island Hopping),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_k,nan
卓球 (Table Tennis),https://atcoder.jp/contests/joisp2024/tasks/joisp2024_l,nan
Equal Weight,https://atcoder.jp/contests/jsc2019-final/tasks/jsc2019_final_a,nan
Reachability,https://atcoder.jp/contests/jsc2019-final/tasks/jsc2019_final_b,nan
Maximize Minimum,https://atcoder.jp/contests/jsc2019-final/tasks/jsc2019_final_c,nan
Minimize Maximum,https://atcoder.jp/contests/jsc2019-final/tasks/jsc2019_final_d,nan
Nearest String,https://atcoder.jp/contests/jsc2019-final/tasks/jsc2019_final_e,nan
Count Permutations Many Times,https://atcoder.jp/contests/jsc2019-final/tasks/jsc2019_final_f,nan
Important Bridges,https://atcoder.jp/contests/jsc2019-final/tasks/jsc2019_final_g,nan
Distinct Integers,https://atcoder.jp/contests/jsc2019-final/tasks/jsc2019_final_h,nan
Takahashi Calendar,https://atcoder.jp/contests/jsc2019-qual/tasks/jsc2019_qual_a,nan
Kleene Inversion,https://atcoder.jp/contests/jsc2019-qual/tasks/jsc2019_qual_b,nan
Cell Inversion,https://atcoder.jp/contests/jsc2019-qual/tasks/jsc2019_qual_c,nan
Classified,https://atcoder.jp/contests/jsc2019-qual/tasks/jsc2019_qual_d,nan
Card Collector,https://atcoder.jp/contests/jsc2019-qual/tasks/jsc2019_qual_e,nan
Candy Retribution,https://atcoder.jp/contests/jsc2019-qual/tasks/jsc2019_qual_f,nan
Competition,https://atcoder.jp/contests/jsc2021/tasks/jsc2021_a,nan
Xor of Sequences,https://atcoder.jp/contests/jsc2021/tasks/jsc2021_b,nan
Max GCD 2,https://atcoder.jp/contests/jsc2021/tasks/jsc2021_c,nan
Nowhere P,https://atcoder.jp/contests/jsc2021/tasks/jsc2021_d,nan
Level K Palindrome,https://atcoder.jp/contests/jsc2021/tasks/jsc2021_e,nan
Max Matrix,https://atcoder.jp/contests/jsc2021/tasks/jsc2021_f,nan
Spanning Tree,https://atcoder.jp/contests/jsc2021/tasks/jsc2021_g,nan
Shipping,https://atcoder.jp/contests/jsc2021/tasks/jsc2021_h,nan
Max and Argmax,https://atcoder.jp/contests/jsc2022-final-open/tasks/jsc2022_final_a,nan
Increment and Rotate,https://atcoder.jp/contests/jsc2022-final-open/tasks/jsc2022_final_b,nan
Not a Multiple of 3,https://atcoder.jp/contests/jsc2022-final-open/tasks/jsc2022_final_c,nan
And is 0,https://atcoder.jp/contests/jsc2022-final-open/tasks/jsc2022_final_d,nan
Circular Sushi,https://atcoder.jp/contests/jsc2022-final-open/tasks/jsc2022_final_e,nan
Share the Recipe,https://atcoder.jp/contests/jsc2022-final-open/tasks/jsc2022_final_f,nan
Bipartite Partition,https://atcoder.jp/contests/jsc2022-final-open/tasks/jsc2022_final_g,nan
Apple Addiction,https://atcoder.jp/contests/jsc2023-final/tasks/jsc2023_final_a,nan
Max Degree Sum,https://atcoder.jp/contests/jsc2023-final/tasks/jsc2023_final_b,nan
Power Convergence,https://atcoder.jp/contests/jsc2023-final/tasks/jsc2023_final_c,nan
Two Xor,https://atcoder.jp/contests/jsc2023-final/tasks/jsc2023_final_d,nan
Min Subtraction,https://atcoder.jp/contests/jsc2023-final/tasks/jsc2023_final_e,nan
Adjacent Binomial Coefficients,https://atcoder.jp/contests/jsc2023-final/tasks/jsc2023_final_f,nan
Fusion,https://atcoder.jp/contests/jsc2023-final/tasks/jsc2023_final_g,nan
Random Descents,https://atcoder.jp/contests/jsc2024-final/tasks/jsc2024_final_a,nan
Erase Multiples,https://atcoder.jp/contests/jsc2024-final/tasks/jsc2024_final_b,nan
Subsequence Reversal,https://atcoder.jp/contests/jsc2024-final/tasks/jsc2024_final_c,nan
Max of Sum of Prefix Min,https://atcoder.jp/contests/jsc2024-final/tasks/jsc2024_final_d,nan
Tree and Back Edges,https://atcoder.jp/contests/jsc2024-final/tasks/jsc2024_final_e,nan
Max of Sum of Reachable Min,https://atcoder.jp/contests/jsc2024-final/tasks/jsc2024_final_f,nan
Walking Takahashi,https://atcoder.jp/contests/judge-update-202004/tasks/judge_update_202004_a,nan
Picking Balls,https://atcoder.jp/contests/judge-update-202004/tasks/judge_update_202004_b,nan
Numbering Blocks,https://atcoder.jp/contests/judge-update-202004/tasks/judge_update_202004_c,nan
Calculating GCD,https://atcoder.jp/contests/judge-update-202004/tasks/judge_update_202004_d,nan
ハンバーガー(Hamburger),https://atcoder.jp/contests/k2pc-easy/tasks/k2pc001_e1,nan
ビットマニア(BITMANIA),https://atcoder.jp/contests/k2pc-easy/tasks/k2pc001_e2,nan
紅茶(Tea),https://atcoder.jp/contests/k2pc-easy/tasks/k2pc001_e3,nan
虫歯(Cavity),https://atcoder.jp/contests/k2pc-easy/tasks/k2pc001_e4,nan
お気に入りの数2(Favorite Number2),https://atcoder.jp/contests/k2pc-easy/tasks/k2pc001_e5,nan
紅茶(Tea),https://atcoder.jp/contests/k2pc-hard/tasks/k2pc001_h1,nan
虫歯(Cavity),https://atcoder.jp/contests/k2pc-hard/tasks/k2pc001_h2,nan
お気に入りの数2(Favorite Number2),https://atcoder.jp/contests/k2pc-hard/tasks/k2pc001_h3,nan
マシュマロ(Marshmallow),https://atcoder.jp/contests/k2pc-hard/tasks/k2pc001_h4,nan
暗号化(Encipherment),https://atcoder.jp/contests/k2pc-hard/tasks/k2pc001_h5,nan
ブロックの移動(Blocks),https://atcoder.jp/contests/k4pc/tasks/k4pc_a,nan
コミュニケーション能力(Communication Ability),https://atcoder.jp/contests/k4pc/tasks/k4pc_b,nan
山登り(Mountain Climbing),https://atcoder.jp/contests/k4pc/tasks/k4pc_c,nan
たのしい運動会(School Sports is Fun),https://atcoder.jp/contests/k4pc/tasks/k4pc_d,nan
はじめての動的計画法(Easy Dynamic Programming),https://atcoder.jp/contests/k4pc/tasks/k4pc_e,nan
タイトル未定(Untitled),https://atcoder.jp/contests/k4pc/tasks/k4pc_f,nan
42,https://atcoder.jp/contests/k4pc/tasks/k4pc_g,nan
Beginning,https://atcoder.jp/contests/keyence2019/tasks/keyence2019_a,nan
KEYENCE String,https://atcoder.jp/contests/keyence2019/tasks/keyence2019_b,nan
Exam and Wizard,https://atcoder.jp/contests/keyence2019/tasks/keyence2019_c,nan
Double Landscape,https://atcoder.jp/contests/keyence2019/tasks/keyence2019_d,nan
Connecting Cities,https://atcoder.jp/contests/keyence2019/tasks/keyence2019_e,nan
Paper Cutting,https://atcoder.jp/contests/keyence2019/tasks/keyence2019_f,nan
Painting,https://atcoder.jp/contests/keyence2020/tasks/keyence2020_a,nan
Robot Arms,https://atcoder.jp/contests/keyence2020/tasks/keyence2020_b,nan
Subarray Sum,https://atcoder.jp/contests/keyence2020/tasks/keyence2020_c,nan
Swap and Flip,https://atcoder.jp/contests/keyence2020/tasks/keyence2020_d,nan
Bichromization,https://atcoder.jp/contests/keyence2020/tasks/keyence2020_e,nan
Monochromization,https://atcoder.jp/contests/keyence2020/tasks/keyence2020_f,nan
Two Sequences 2,https://atcoder.jp/contests/keyence2021/tasks/keyence2021_a,nan
Mex Boxes,https://atcoder.jp/contests/keyence2021/tasks/keyence2021_b,nan
Robot on Grid,https://atcoder.jp/contests/keyence2021/tasks/keyence2021_c,nan
Choosing Up Sides,https://atcoder.jp/contests/keyence2021/tasks/keyence2021_d,nan
Greedy Ant,https://atcoder.jp/contests/keyence2021/tasks/keyence2021_e,nan
Keyence Repetition,https://atcoder.jp/contests/keyence2021/tasks/keyence2021_f,nan
アルデンテ,https://atcoder.jp/contests/kupc2012/tasks/kupc2012_1,nan
刺身,https://atcoder.jp/contests/kupc2012/tasks/kupc2012_10,nan
XOR回廊,https://atcoder.jp/contests/kupc2012/tasks/kupc2012_11,nan
簡易オセロ,https://atcoder.jp/contests/kupc2012/tasks/kupc2012_2,nan
ソーシャル,https://atcoder.jp/contests/kupc2012/tasks/kupc2012_3,nan
権力,https://atcoder.jp/contests/kupc2012/tasks/kupc2012_4,nan
じゃんけん,https://atcoder.jp/contests/kupc2012/tasks/kupc2012_5,nan
Acceleration of Network,https://atcoder.jp/contests/kupc2012/tasks/kupc2012_6,nan
村,https://atcoder.jp/contests/kupc2012/tasks/kupc2012_7,nan
植林,https://atcoder.jp/contests/kupc2012/tasks/kupc2012_8,nan
宝探し,https://atcoder.jp/contests/kupc2012/tasks/kupc2012_9,nan
Wikipedia,https://atcoder.jp/contests/kupc2012pr/tasks/kupc2012pr_1,nan
String Sorting,https://atcoder.jp/contests/kupc2012pr/tasks/kupc2012pr_2,nan
パニクるな,https://atcoder.jp/contests/kupc2012pr/tasks/kupc2012pr_3,nan
A mul B Problem,https://atcoder.jp/contests/kupc2012pr/tasks/kupc2012pr_4,nan
旧総合研究７号館,https://atcoder.jp/contests/kupc2013/tasks/kupc2013_a,nan
ライオン,https://atcoder.jp/contests/kupc2013/tasks/kupc2013_b,nan
チョコレート,https://atcoder.jp/contests/kupc2013/tasks/kupc2013_c,nan
カーペット,https://atcoder.jp/contests/kupc2013/tasks/kupc2013_d,nan
すごろく,https://atcoder.jp/contests/kupc2013/tasks/kupc2013_e,nan
７歳教,https://atcoder.jp/contests/kupc2013/tasks/kupc2013_f,nan
自由研究,https://atcoder.jp/contests/kupc2013/tasks/kupc2013_g,nan
N and K,https://atcoder.jp/contests/kupc2013/tasks/kupc2013_h,nan
σ,https://atcoder.jp/contests/kupc2013/tasks/kupc2013_i,nan
タイル置き,https://atcoder.jp/contests/kupc2013/tasks/kupc2013_j,nan
encode/decode,https://atcoder.jp/contests/kupc2013/tasks/kupc2013_k,nan
マッサージチェア,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_a,nan
数当てゲーム,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_b,nan
占い,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_c,nan
ハミング,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_d,nan
何しちゃおっかな？,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_e,nan
テレパシー,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_f,nan
Darkroom,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_g,nan
自転車走,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_h,nan
Rain,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_i,nan
カード,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_j,nan
弱点,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_k,nan
べき乗数,https://atcoder.jp/contests/kupc2014/tasks/kupc2014_l,nan
東京都,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_a,nan
GUARDIANS,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_b,nan
最短経路,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_c,nan
高橋君の旅行,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_d,nan
マッサージチェア2015,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_e,nan
逆ポーランド記法,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_f,nan
ケンドー,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_g,nan
Bit Count,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_h,nan
ハウスシャッフル,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_i,nan
MODクエリ,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_j,nan
SOULBLOCK,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_k,nan
コインゲーム,https://atcoder.jp/contests/kupc2015/tasks/kupc2015_l,nan
A Barricade,https://atcoder.jp/contests/kupc2016/tasks/kupc2016_a,nan
Problem Committee,https://atcoder.jp/contests/kupc2016/tasks/kupc2016_b,nan
Cookie Breeding Machine,https://atcoder.jp/contests/kupc2016/tasks/kupc2016_c,nan
Long Blackboard,https://atcoder.jp/contests/kupc2016/tasks/kupc2016_d,nan
Fences,https://atcoder.jp/contests/kupc2016/tasks/kupc2016_e,nan
Speed Solving,https://atcoder.jp/contests/kupc2016/tasks/kupc2016_f,nan
Exam,https://atcoder.jp/contests/kupc2016/tasks/kupc2016_g,nan
WAAAAAAAAAAAAALL,https://atcoder.jp/contests/kupc2016/tasks/kupc2016_h,nan
Handing out leaflets,https://atcoder.jp/contests/kupc2016/tasks/kupc2016_i,nan
Coloring,https://atcoder.jp/contests/kupc2016/tasks/kupc2016_j,nan
Hundred Eyes Monster,https://atcoder.jp/contests/kupc2016/tasks/kupc2016_k,nan
Credits,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_a,nan
Camphor Tree,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_b,nan
Best Password,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_c,nan
Sanmoku,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_d,nan
Treasure Hunt,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_e,nan
575,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_f,nan
encode/decode 2017,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_g,nan
Make a Potion,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_h,nan
Activate It!!,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_i,nan
Paint Red and Make Graph,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_j,nan
Xor Summation Pattern,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_k,nan
Coin Game 2017,https://atcoder.jp/contests/kupc2017/tasks/kupc2017_l,nan
立て看板,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_a,nan
弾幕ゲーム,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_b,nan
七目,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_c,nan
ロストテクノロジー,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_d,nan
転倒数,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_e,nan
カード集め,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_f,nan
数列を構成する問題,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_g,nan
カラフル数列,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_h,nan
League of Kyoto,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_i,nan
ニム?,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_j,nan
光と闇の調和,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_k,nan
凸包が映し出される平面,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_l,nan
整数と根付き木,https://atcoder.jp/contests/kupc2018/tasks/kupc2018_m,nan
November Festival,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_a,nan
ナップサック問題,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_b,nan
てんびんばかり,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_c,nan
Maximin Game,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_d,nan
根付き森二人用ゲーム,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_e,nan
カズマ王国の陥落,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_f,nan
ABCのG問題,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_g,nan
123パズル,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_h,nan
encode/decode 2019,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_i,nan
Link cut tworee,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_j,nan
One or All,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_k,nan
タケノコ,https://atcoder.jp/contests/kupc2019/tasks/kupc2019_l,nan
Classroom Distance,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_a,nan
Numbers on Papers,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_b,nan
Grid and Substrings,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_c,nan
Stick Combination,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_d,nan
Sequence Partitioning,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_e,nan
GRIDMST,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_f,nan
Counting Angels,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_g,nan
Beans on the Grid,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_h,nan
Coloring Paths,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_i,nan
Median Query,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_j,nan
Deleting Edges,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_k,nan
Inside Story of Median Query,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_l,nan
Many Parentheses,https://atcoder.jp/contests/kupc2020/tasks/kupc2020_m,nan
Standing Sign,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_a,nan
Painting with Many Orders,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_b,nan
Gacha,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_c,nan
Stones,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_d,nan
PERMST,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_e,nan
One Yen Coin,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_f,nan
Two Step Sort,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_g,nan
Symmetric,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_h,nan
Good LACK,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_i,nan
Delete Balls,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_j,nan
Three Coloring,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_k,nan
Tag Game,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_l,nan
Formula,https://atcoder.jp/contests/kupc2021/tasks/kupc2021_m,nan
好きな順列,https://atcoder.jp/contests/loadchecking/tasks/loadchecking_a,nan
Sum of Interior Angles,https://atcoder.jp/contests/m-solutions2019/tasks/m_solutions2019_a,nan
Sumo,https://atcoder.jp/contests/m-solutions2019/tasks/m_solutions2019_b,nan
Best of (2n 1),https://atcoder.jp/contests/m-solutions2019/tasks/m_solutions2019_c,nan
Maximum Sum of Minimum,https://atcoder.jp/contests/m-solutions2019/tasks/m_solutions2019_d,nan
Product of Arithmetic Progression,https://atcoder.jp/contests/m-solutions2019/tasks/m_solutions2019_e,nan
Random Tournament,https://atcoder.jp/contests/m-solutions2019/tasks/m_solutions2019_f,nan
Kyu in AtCoder,https://atcoder.jp/contests/m-solutions2020/tasks/m_solutions2020_a,nan
Magic 2,https://atcoder.jp/contests/m-solutions2020/tasks/m_solutions2020_b,nan
Marks,https://atcoder.jp/contests/m-solutions2020/tasks/m_solutions2020_c,nan
Road to Millionaire,https://atcoder.jp/contests/m-solutions2020/tasks/m_solutions2020_d,nan
M's Solution,https://atcoder.jp/contests/m-solutions2020/tasks/m_solutions2020_e,nan
Air Safety,https://atcoder.jp/contests/m-solutions2020/tasks/m_solutions2020_f,nan
Windy Drone Control (A),https://atcoder.jp/contests/masters2024-final-open/tasks/masters2024_final_a,nan
Windy Drone Control (B),https://atcoder.jp/contests/masters2024-final-open/tasks/masters2024_final_b,nan
Windy Drone Control (C),https://atcoder.jp/contests/masters2024-final-open/tasks/masters2024_final_c,nan
Smoothing by Swaps,https://atcoder.jp/contests/masters-qual/tasks/masters_qual_a,nan
. Print 5+N,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_a,nan
. Sorting,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_aa,nan
. Climb Stairs,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ab,nan
. Taro's Vacation,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ac,nan
. Binary Search,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ad,nan
. Distance,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ae,nan
. Nearest Points,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_af,nan
. Two Circles,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ag,nan
. Intersection,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ah,nan
. How Many Guests?,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ai,nan
. Snowy Days,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_aj,nan
. Travel,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ak,nan
. Convenience Store 2,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_al,nan
. Is It Connected?,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_am,nan
. Shortest Path Problem,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_an,nan
. Bipartite Graph,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ao,nan
. Fibonacci Easy (mod 1000000007),https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ap,nan
. Power,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_aq,nan
. Combination Hard,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ar,nan
. Sum of 4^N,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_as,nan
. Fibonacci Hard (mod 1000000000),https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_at,nan
. Recurrence Formula 1,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_au,nan
. Recurrence Formula 2,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_av,nan
. Domino Tiling,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_aw,nan
. Move on Squares 1,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ax,nan
. Power of Two,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ay,nan
. Stones Game 1,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_az,nan
. Sum of 3 Integers,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_b,nan
. Stones Game 2,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ba,nan
. Move on Squares 2,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bb,nan
. All Zero,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bc,nan
. Three Cards,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bd,nan
. Number of Multiples 2,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_be,nan
. Linear Programming,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bf,nan
. Sum of Maximum,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bg,nan
. Sum of difference Easy,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bh,nan
. Pyramid,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bi,nan
. Distance Sum,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bj,nan
. Difference Optimization 1,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bk,nan
. Difference Optimization 2,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bl,nan
. Bill Changing Problem,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bm,nan
. Interval Scheduling Problem,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bn,nan
. Two Conditions,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bo,nan
. Parentheses Check,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bp,nan
. Simple Math Easy,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bq,nan
. How Many Ways?,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_br,nan
. Beautiful Rectangle,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bs,nan
. Primes in an Interval,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bt,nan
. Polygon and Point,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bu,nan
. Simulation of Chemicals,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bv,nan
. Circle Packing,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bw,nan
. Graph Master,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bx,nan
. Log Inequality 2,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_by,nan
. Sum of N Integers,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_c,nan
. Product of 3 Integers,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_d,nan
. Modulo 100,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_e,nan
. Print 2N+3,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_f,nan
. Number of Multiples 1,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_g,nan
. Brute Force 1,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_h,nan
. Brute Force 2,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_i,nan
. Factorial,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_j,nan
. Print Prime Numbers,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_k,nan
. Primality Test,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_l,nan
. Divisor Enumeration,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_m,nan
. Factorization,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_n,nan
. Greatest Common Divisor,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_o,nan
. Greatest Common Divisor of N Integers,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_p,nan
. Least Common Multiple of N Integers,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_q,nan
. Convenience Store 1,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_r,nan
. Choose Cards 1,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_s,nan
. Choose Cards 2,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_t,nan
. Combination Easy,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_u,nan
. Choose Cards 3,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_v,nan
. Dice Expectation,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_w,nan
. Answer Exam Randomly,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_x,nan
. Jiro's Vacation,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_y,nan
. Coin Gacha,https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_z,nan
特別作戦,https://atcoder.jp/contests/maximum-cup-2013/tasks/maximum_2013_a,nan
Working for the World,https://atcoder.jp/contests/maximum-cup-2013/tasks/maximum_2013_b,nan
白蛇のお守り,https://atcoder.jp/contests/maximum-cup-2013/tasks/maximum_2013_c,nan
絆よりも恋人が大事,https://atcoder.jp/contests/maximum-cup-2013/tasks/maximum_2013_d,nan
Alicia's Rare card Challenge,https://atcoder.jp/contests/maximum-cup-2013/tasks/maximum_2013_e,nan
3人の騎士と1匹の犬,https://atcoder.jp/contests/maximum-cup-2013/tasks/maximum_2013_f,nan
King's Ring Tower,https://atcoder.jp/contests/maximum-cup-2013/tasks/maximum_2013_g,nan
さいたまの矛盾,https://atcoder.jp/contests/maximum-cup-2013/tasks/maximum_2013_h,nan
実績: ヘビマスター,https://atcoder.jp/contests/maximum-cup-2013/tasks/maximum_2013_i,nan
ALPHAのならび,https://atcoder.jp/contests/maximum-cup-2013/tasks/maximum_2013_j,nan
フィギュアスケート界の貴公子埼大選手,https://atcoder.jp/contests/maximum-cup-2018/tasks/maximum_cup_2018_a,nan
駆け抜けろ！埼大山車部！！,https://atcoder.jp/contests/maximum-cup-2018/tasks/maximum_cup_2018_b,nan
嘘つきな天使たち,https://atcoder.jp/contests/maximum-cup-2018/tasks/maximum_cup_2018_c,nan
Many Go Round,https://atcoder.jp/contests/maximum-cup-2018/tasks/maximum_cup_2018_d,nan
Interrupt Array,https://atcoder.jp/contests/maximum-cup-2018/tasks/maximum_cup_2018_e,nan
献立表制作,https://atcoder.jp/contests/maximum-cup-2018/tasks/maximum_cup_2018_f,nan
Sparrow's trick,https://atcoder.jp/contests/maximum-cup-2018/tasks/maximum_cup_2018_g,nan
Maxmin Tour,https://atcoder.jp/contests/maximum-cup-2018/tasks/maximum_cup_2018_h,nan
倍数ペア,https://atcoder.jp/contests/maximum-cup-2023/tasks/maximum_cup_2023_a,nan
等差数列と数え上げ,https://atcoder.jp/contests/maximum-cup-2023/tasks/maximum_cup_2023_b,nan
黒板,https://atcoder.jp/contests/maximum-cup-2023/tasks/maximum_cup_2023_c,nan
編集ゲーム,https://atcoder.jp/contests/maximum-cup-2023/tasks/maximum_cup_2023_d,nan
小大小大……,https://atcoder.jp/contests/maximum-cup-2023/tasks/maximum_cup_2023_e,nan
01文字列の構築,https://atcoder.jp/contests/maximum-cup-2023/tasks/maximum_cup_2023_f,nan
イノシシ対策,https://atcoder.jp/contests/maximum-cup-2023/tasks/maximum_cup_2023_g,nan
変数の最大化,https://atcoder.jp/contests/maximum-cup-2023/tasks/maximum_cup_2023_h,nan
Crab or Shrimp,https://atcoder.jp/contests/monamieHB2021/tasks/monamieHB2021_a,nan
Lovely Sequence,https://atcoder.jp/contests/monamieHB2021/tasks/monamieHB2021_b,nan
Ball in the Box,https://atcoder.jp/contests/monamieHB2021/tasks/monamieHB2021_c,nan
Nice Couples,https://atcoder.jp/contests/monamieHB2021/tasks/monamieHB2021_d,nan
Min Cost Sort,https://atcoder.jp/contests/monamieHB2021/tasks/monamieHB2021_e,nan
MUJIN,https://atcoder.jp/contests/mujin-pc-2016/tasks/mujin_pc_2016_a,nan
Robot Arm,https://atcoder.jp/contests/mujin-pc-2016/tasks/mujin_pc_2016_b,nan
Orange Graph,https://atcoder.jp/contests/mujin-pc-2016/tasks/mujin_pc_2016_c,nan
Parenthesis Sequence,https://atcoder.jp/contests/mujin-pc-2016/tasks/mujin_pc_2016_d,nan
Hexagon,https://atcoder.jp/contests/mujin-pc-2016/tasks/mujin_pc_2016_e,nan
Robot Racing,https://atcoder.jp/contests/mujin-pc-2017/tasks/mujin_pc_2017_a,nan
Row to Column,https://atcoder.jp/contests/mujin-pc-2017/tasks/mujin_pc_2017_b,nan
Robot and String,https://atcoder.jp/contests/mujin-pc-2017/tasks/mujin_pc_2017_c,nan
Oriented Tree,https://atcoder.jp/contests/mujin-pc-2017/tasks/mujin_pc_2017_d,nan
コンテスト名,https://atcoder.jp/contests/mujin-pc-2018/tasks/mujin_pc_2018_a,nan
セキュリティ,https://atcoder.jp/contests/mujin-pc-2018/tasks/mujin_pc_2018_b,nan
右折,https://atcoder.jp/contests/mujin-pc-2018/tasks/mujin_pc_2018_c,nan
うほょじご,https://atcoder.jp/contests/mujin-pc-2018/tasks/mujin_pc_2018_d,nan
迷路,https://atcoder.jp/contests/mujin-pc-2018/tasks/mujin_pc_2018_e,nan
チーム分け,https://atcoder.jp/contests/mujin-pc-2018/tasks/mujin_pc_2018_f,nan
移動,https://atcoder.jp/contests/mujin-pc-2018/tasks/mujin_pc_2018_g,nan
タイル張り,https://atcoder.jp/contests/mujin-pc-2018/tasks/mujin_pc_2018_h,nan
Max Inversion,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_a,nan
Exist Multiples,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_b,nan
Flood,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_c,nan
Double Permutations,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_d,nan
Even Degree,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_e,nan
Mth Next Permutation,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_f,nan
Road Closed,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_g,nan
Traveling PCT Problem,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_h,nan
NPCA Kingdom,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_i,nan
Excluded LCM,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_j,nan
Li,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_k,nan
Lexicographic Euler Tour,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_l,nan
Random Drawing,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_m,nan
Range Flip,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_n,nan
Swapping Desks,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_o,nan
Sum of Max of Difference,https://atcoder.jp/contests/nadafes2022_day1/tasks/nadafes2022_day1_p,nan
ACPN,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_a,nan
Min Max Min,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_b,nan
Time Bombs,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_c,nan
NPCA Network,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_d,nan
Hamiltonian Circuit,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_e,nan
Charge,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_f,nan
Interval GCD,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_g,nan
Tourist on Graph,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_h,nan
Product of LCM of GCD,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_i,nan
Sum Equality,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_j,nan
Exhibition 3,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_k,nan
Min Diff Min,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_l,nan
Swapping Brackets,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_m,nan
All Crosses,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_n,nan
Simple Inversion Problem,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_o,nan
Turn it Over,https://atcoder.jp/contests/nadafes2022_day2/tasks/nadafes2022_day2_p,nan
AtCoder Contest Scheduling (Online Version),https://atcoder.jp/contests/newjudge-2308-heuristic/tasks/newjudge_2308_heuristic_a,nan
Count Triplets,https://atcoder.jp/contests/nikkei2019-2-final/tasks/nikkei2019_2_final_a,nan
NIKKEI String,https://atcoder.jp/contests/nikkei2019-2-final/tasks/nikkei2019_2_final_b,nan
Largest N,https://atcoder.jp/contests/nikkei2019-2-final/tasks/nikkei2019_2_final_c,nan
木、,https://atcoder.jp/contests/nikkei2019-2-final/tasks/nikkei2019_2_final_d,nan
Notorious B.I.T.,https://atcoder.jp/contests/nikkei2019-2-final/tasks/nikkei2019_2_final_e,nan
Jumping over 2,https://atcoder.jp/contests/nikkei2019-2-final/tasks/nikkei2019_2_final_f,nan
Road Trip,https://atcoder.jp/contests/nikkei2019-2-final/tasks/nikkei2019_2_final_g,nan
逆にする関数,https://atcoder.jp/contests/nikkei2019-2-final/tasks/nikkei2019_2_final_h,nan
Sum of Two Integers,https://atcoder.jp/contests/nikkei2019-2-qual/tasks/nikkei2019_2_qual_a,nan
Counting of Trees,https://atcoder.jp/contests/nikkei2019-2-qual/tasks/nikkei2019_2_qual_b,nan
Swaps,https://atcoder.jp/contests/nikkei2019-2-qual/tasks/nikkei2019_2_qual_c,nan
Shortest Path on a Line,https://atcoder.jp/contests/nikkei2019-2-qual/tasks/nikkei2019_2_qual_d,nan
Non triangular Triplets,https://atcoder.jp/contests/nikkei2019-2-qual/tasks/nikkei2019_2_qual_e,nan
Mirror Frame,https://atcoder.jp/contests/nikkei2019-2-qual/tasks/nikkei2019_2_qual_f,nan
Abundant Resources,https://atcoder.jp/contests/nikkei2019-final/tasks/nikkei2019_final_a,nan
Big Integers,https://atcoder.jp/contests/nikkei2019-final/tasks/nikkei2019_final_b,nan
Come Together,https://atcoder.jp/contests/nikkei2019-final/tasks/nikkei2019_final_c,nan
Deforestation,https://atcoder.jp/contests/nikkei2019-final/tasks/nikkei2019_final_d,nan
Erasure,https://atcoder.jp/contests/nikkei2019-final/tasks/nikkei2019_final_e,nan
Flights,https://atcoder.jp/contests/nikkei2019-final/tasks/nikkei2019_final_f,nan
Greatest Journey,https://atcoder.jp/contests/nikkei2019-final/tasks/nikkei2019_final_g,nan
Homework Scheduling,https://atcoder.jp/contests/nikkei2019-final/tasks/nikkei2019_final_h,nan
Subscribers,https://atcoder.jp/contests/nikkei2019-qual/tasks/nikkei2019_qual_a,nan
Touitsu,https://atcoder.jp/contests/nikkei2019-qual/tasks/nikkei2019_qual_b,nan
Different Strokes,https://atcoder.jp/contests/nikkei2019-qual/tasks/nikkei2019_qual_c,nan
Restore the Tree,https://atcoder.jp/contests/nikkei2019-qual/tasks/nikkei2019_qual_d,nan
Weights on Vertices and Edges,https://atcoder.jp/contests/nikkei2019-qual/tasks/nikkei2019_qual_e,nan
Jewels,https://atcoder.jp/contests/nikkei2019-qual/tasks/nikkei2019_qual_f,nan
Prefix Array,https://atcoder.jp/contests/nikkei2019-ex/tasks/nikkei2019ex_a,nan
二乗,https://atcoder.jp/contests/nikkei2019-ex/tasks/nikkei2019ex_b,nan
11で割った余りの計算方法,https://atcoder.jp/contests/nikkei2019-ex/tasks/nikkei2019ex_c,nan
辞書順最小の数,https://atcoder.jp/contests/nikkei2019-ex/tasks/nikkei2019ex_d,nan
コラッツ問題,https://atcoder.jp/contests/nikkei2019-ex/tasks/nikkei2019ex_e,nan
スーパーFizzBuzz,https://atcoder.jp/contests/nikkei2019-ex/tasks/nikkei2019ex_f,nan
回文スコア,https://atcoder.jp/contests/nikkei2019-ex/tasks/nikkei2019ex_g,nan
8^kゲーム,https://atcoder.jp/contests/nikkei2019-ex/tasks/nikkei2019ex_h,nan
入力フォーム,https://atcoder.jp/contests/njpc2017/tasks/njpc2017_a,nan
格子グラフ,https://atcoder.jp/contests/njpc2017/tasks/njpc2017_b,nan
ハードル走,https://atcoder.jp/contests/njpc2017/tasks/njpc2017_c,nan
NMパズル,https://atcoder.jp/contests/njpc2017/tasks/njpc2017_d,nan
限界集落,https://atcoder.jp/contests/njpc2017/tasks/njpc2017_e,nan
ダブルス,https://atcoder.jp/contests/njpc2017/tasks/njpc2017_f,nan
交換法則,https://atcoder.jp/contests/njpc2017/tasks/njpc2017_g,nan
白黒ツリー,https://atcoder.jp/contests/njpc2017/tasks/njpc2017_h,nan
Study Scheduling,https://atcoder.jp/contests/nomura2020/tasks/nomura2020_a,nan
Postdocs,https://atcoder.jp/contests/nomura2020/tasks/nomura2020_b,nan
Folia,https://atcoder.jp/contests/nomura2020/tasks/nomura2020_c,nan
Urban Planning,https://atcoder.jp/contests/nomura2020/tasks/nomura2020_d,nan
Binary Programming,https://atcoder.jp/contests/nomura2020/tasks/nomura2020_e,nan
Sorting Game,https://atcoder.jp/contests/nomura2020/tasks/nomura2020_f,nan
Welcome to NPCAPC,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_a,nan
Some Sum of Subset,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_b,nan
Solve with Friends,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_c,nan
Two Box,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_d,nan
Aim High,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_e,nan
Train Seats,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_f,nan
Many Common Segment Problems,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_g,nan
Music Game,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_h,nan
Left Equals Right,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_i,nan
Again Permutation Problem,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_j,nan
Peace with Magic,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_k,nan
Construction of Town,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_l,nan
Admired Person,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_m,nan
Product Matrix,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_n,nan
New School Term,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_o,nan
Make Testcase,https://atcoder.jp/contests/npcapc_2024/tasks/npcapc_2024_p,nan
2015,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_1,nan
ランダムウォーク,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_10,nan
チーム戦,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_11,nan
机のしみ,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_12,nan
お絵かき,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_13,nan
鏡餅,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_2,nan
文字列の書き換え,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_3,nan
ジャンプ,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_4,nan
ひも,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_5,nan
番号札,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_6,nan
ロボット,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_7,nan
空港,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_8,nan
マージ,https://atcoder.jp/contests/NYC2015/tasks/nyc2015_9,nan
不完全迷路,https://atcoder.jp/contests/oidashi/tasks/oidashi_a,nan
ライツアウト,https://atcoder.jp/contests/oidashi/tasks/oidashi_b,nan
鏡餅,https://atcoder.jp/contests/oidashi/tasks/oidashi_c,nan
幾何問題を書こう,https://atcoder.jp/contests/oidashi/tasks/oidashi_d,nan
10進数の数列,https://atcoder.jp/contests/oidashi/tasks/oidashi_e,nan
"寝坊だ！ピ太郎！ (You overslept, Pitaro)",https://atcoder.jp/contests/otemae2019/tasks/otemae2019_a,nan
駒 (Pieces),https://atcoder.jp/contests/otemae2019/tasks/otemae2019_b,nan
カード並べ 2 (Arranging Card 2),https://atcoder.jp/contests/otemae2019/tasks/otemae2019_c,nan
FizzBuzz (FizzBuzz),https://atcoder.jp/contests/otemae2019/tasks/otemae2019_d,nan
最悪の教頭 (Worst Head Teacher),https://atcoder.jp/contests/otemae2019/tasks/otemae2019_e,nan
天秤とコイン (Balance and Coins),https://atcoder.jp/contests/otemae2019/tasks/otemae2019_f,nan
"空をかけるピ太郎 (Pitaro, who Leaps through Air)",https://atcoder.jp/contests/otemae2019/tasks/otemae2019_g,nan
美味しい飴 (Candy is Delicious),https://atcoder.jp/contests/otemae2019/tasks/otemae2019_h,nan
ピーターランドの道路整備 (Road Development in Peterland),https://atcoder.jp/contests/otemae2019/tasks/otemae2019_i,nan
Mijingiri,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_a,nan
Gomamayo,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_b,nan
Caesar Cipher,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_c,nan
Han Burger,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_d,nan
Han Burger 2,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_e,nan
Remainder of Max Problem,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_f,nan
Impassable Game,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_g,nan
Wonderful Stage,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_h,nan
Min!? Max!? Max!? Min!?,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_i,nan
Sum Sum,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_j,nan
Minimize Transfer Time,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_k,nan
KowerKoint Doko,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_l,nan
Can't Be UT,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_m,nan
Bench,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_n,nan
Special Matrix,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_o,nan
Score for Cutting Graph,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_p,nan
Kurukuru,https://atcoder.jp/contests/oupc2023-day1/tasks/oupc2023_day1_q,nan
ひふみ　(Hihumi),https://atcoder.jp/contests/pakencamp-2018-day2/tasks/pakencamp_2018_day2_a,nan
チーム戦　(Teamwork),https://atcoder.jp/contests/pakencamp-2018-day2/tasks/pakencamp_2018_day2_b,nan
クリスマス飾り（Christmas Decorations）,https://atcoder.jp/contests/pakencamp-2018-day2/tasks/pakencamp_2018_day2_c,nan
一次元オセロ　(1D Othello),https://atcoder.jp/contests/pakencamp-2018-day2/tasks/pakencamp_2018_day2_d,nan
クリスマスツリー　(Tree Coloring),https://atcoder.jp/contests/pakencamp-2018-day2/tasks/pakencamp_2018_day2_e,nan
同一経路　(Samepath),https://atcoder.jp/contests/pakencamp-2018-day2/tasks/pakencamp_2018_day2_f,nan
グランド・グラフ　(Grand Graph),https://atcoder.jp/contests/pakencamp-2018-day2/tasks/pakencamp_2018_day2_g,nan
プレゼント配り　(Santa Claus' Track),https://atcoder.jp/contests/pakencamp-2018-day2/tasks/pakencamp_2018_day2_h,nan
ネクスト・クリスマス,https://atcoder.jp/contests/pakencamp-2018-day3/tasks/pakencamp_2018_day3_a,nan
㍻の終焉を告げる,https://atcoder.jp/contests/pakencamp-2018-day3/tasks/pakencamp_2018_day3_b,nan
竹の観察,https://atcoder.jp/contests/pakencamp-2018-day3/tasks/pakencamp_2018_day3_c,nan
なぎさちゃんの別荘,https://atcoder.jp/contests/pakencamp-2018-day3/tasks/pakencamp_2018_day3_d,nan
美しい和音,https://atcoder.jp/contests/pakencamp-2018-day3/tasks/pakencamp_2018_day3_e,nan
ミックスジュース,https://atcoder.jp/contests/pakencamp-2018-day3/tasks/pakencamp_2018_day3_f,nan
落単の危機,https://atcoder.jp/contests/pakencamp-2018-day3/tasks/pakencamp_2018_day3_g,nan
整数をつくろう！,https://atcoder.jp/contests/pakencamp-2018-day3/tasks/pakencamp_2018_day3_h,nan
パ研君と塗り絵,https://atcoder.jp/contests/pakencamp-2019-day2/tasks/pakencamp_2019_day2_a,nan
パ研合宿2103,https://atcoder.jp/contests/pakencamp-2019-day3/tasks/pakencamp_2019_day3_a,nan
多数決,https://atcoder.jp/contests/pakencamp-2019-day3/tasks/pakencamp_2019_day3_b,nan
カラオケ,https://atcoder.jp/contests/pakencamp-2019-day3/tasks/pakencamp_2019_day3_c,nan
パ研軍旗,https://atcoder.jp/contests/pakencamp-2019-day3/tasks/pakencamp_2019_day3_d,nan
大きなクリスマスプレゼント,https://atcoder.jp/contests/pakencamp-2019-day3/tasks/pakencamp_2019_day3_e,nan
クリスマス飾り2,https://atcoder.jp/contests/pakencamp-2019-day3/tasks/pakencamp_2019_day3_f,nan
プレゼント配り2,https://atcoder.jp/contests/pakencamp-2019-day3/tasks/pakencamp_2019_day3_g,nan
パ研王国を守れ！,https://atcoder.jp/contests/pakencamp-2019-day3/tasks/pakencamp_2019_day3_h,nan
原稿用紙,https://atcoder.jp/contests/pakencamp-2019-day4/tasks/pakencamp_2019_day4_a,nan
情報の伝達,https://atcoder.jp/contests/pakencamp-2019-day4/tasks/pakencamp_2019_day4_b,nan
罰ゲーム,https://atcoder.jp/contests/pakencamp-2019-day4/tasks/pakencamp_2019_day4_c,nan
リミックスジュース,https://atcoder.jp/contests/pakencamp-2019-day4/tasks/pakencamp_2019_day4_d,nan
IOI のために,https://atcoder.jp/contests/pakencamp-2019-day4/tasks/pakencamp_2019_day4_e,nan
イーハチはやる,https://atcoder.jp/contests/pakencamp-2019-day4/tasks/pakencamp_2019_day4_f,nan
三つの条件,https://atcoder.jp/contests/pakencamp-2019-day4/tasks/pakencamp_2019_day4_g,nan
板の重なり,https://atcoder.jp/contests/pakencamp-2019-day4/tasks/pakencamp_2019_day4_h,nan
パ研合宿2020,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_a,nan
パ研合宿2403,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_b,nan
皆勤賞,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_c,nan
立方体を壊せ！,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_d,nan
Amary,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_e,nan
Fibonaccyan,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_f,nan
同意書,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_g,nan
その計算、合ってますか？,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_h,nan
くねくね,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_i,nan
Output only,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_j,nan
Gcd of Sum,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_k,nan
のびたす,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_l,nan
貢ぎ物,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_m,nan
背の順,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_n,nan
Xor Sum Sum,https://atcoder.jp/contests/pakencamp-2020-day1/tasks/pakencamp_2020_day1_o,nan
Participants,https://atcoder.jp/contests/pakencamp-2020-day2/tasks/pakencamp_2020_day2_a,nan
Walking,https://atcoder.jp/contests/pakencamp-2020-day2/tasks/pakencamp_2020_day2_b,nan
A + B,https://atcoder.jp/contests/pakencamp-2020-day2/tasks/pakencamp_2020_day2_c,nan
Animal Show,https://atcoder.jp/contests/pakencamp-2020-day2/tasks/pakencamp_2020_day2_d,nan
老朽化対策,https://atcoder.jp/contests/pakencamp-2020-day2/tasks/pakencamp_2020_day2_e,nan
来年も本選に20人送り込むので覚悟しておいてください,https://atcoder.jp/contests/pakencamp-2020-day2/tasks/pakencamp_2020_day2_f,nan
旅人計画問題,https://atcoder.jp/contests/pakencamp-2020-day2/tasks/pakencamp_2020_day2_g,nan
旅立ちの日に,https://atcoder.jp/contests/pakencamp-2020-day2/tasks/pakencamp_2020_day2_h,nan
Participants 2,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_a,nan
Pasokon Power,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_b,nan
Participants 3,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_c,nan
選択問題の正答はすべて同じ選択肢で…,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_d,nan
Banned Palindromes,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_e,nan
Fraction,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_f,nan
進撃のパ研,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_g,nan
PuraPrime,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_h,nan
Multiple Swap,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_i,nan
Min Max Sequence,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_j,nan
Bracket Inserting,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_k,nan
ジグザグ道,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_l,nan
Deque and Inversions,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_m,nan
Polynomial Comparison,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_n,nan
Golf,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_o,nan
A^k=k,https://atcoder.jp/contests/pakencamp-2021-day2/tasks/pakencamp_2021_day2_p,nan
出欠確認,https://atcoder.jp/contests/pakencamp-2021-day3/tasks/pakencamp_2021_day3_a,nan
レートで2分割！,https://atcoder.jp/contests/pakencamp-2021-day3/tasks/pakencamp_2021_day3_b,nan
Sum of Digit Sum,https://atcoder.jp/contests/pakencamp-2021-day3/tasks/pakencamp_2021_day3_c,nan
試験作り,https://atcoder.jp/contests/pakencamp-2021-day3/tasks/pakencamp_2021_day3_d,nan
お菓子,https://atcoder.jp/contests/pakencamp-2021-day3/tasks/pakencamp_2021_day3_e,nan
ワープ,https://atcoder.jp/contests/pakencamp-2021-day3/tasks/pakencamp_2021_day3_f,nan
旅人計画問題3,https://atcoder.jp/contests/pakencamp-2021-day3/tasks/pakencamp_2021_day3_g,nan
パ研王国と貨物輸送,https://atcoder.jp/contests/pakencamp-2021-day3/tasks/pakencamp_2021_day3_h,nan
Rook,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_a,nan
Power Strip,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_b,nan
Let's Make a Palindrome,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_c,nan
Social Distance 3,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_d,nan
Boombox,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_e,nan
Events Scheduling,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_f,nan
Ancestor Query,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_g,nan
Attack Survival,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_h,nan
Forgotten Sequence,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_i,nan
An Unusual King in Paken Kingdom,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_j,nan
Beautifulness,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_k,nan
Mex on Blackboard 2,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_l,nan
01 Tree,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_m,nan
Paken Machine,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_n,nan
Paken Land,https://atcoder.jp/contests/pakencamp-2022-day1/tasks/pakencamp_2022_day1_o,nan
Venues,https://atcoder.jp/contests/pakencamp-2022-day2/tasks/pakencamp_2022_day2_a,nan
Grades,https://atcoder.jp/contests/pakencamp-2022-day2/tasks/pakencamp_2022_day2_b,nan
Collaboration,https://atcoder.jp/contests/pakencamp-2022-day2/tasks/pakencamp_2022_day2_c,nan
Binary Strings,https://atcoder.jp/contests/pakencamp-2022-day2/tasks/pakencamp_2022_day2_d,nan
Harmony,https://atcoder.jp/contests/pakencamp-2022-day2/tasks/pakencamp_2022_day2_e,nan
Farthest,https://atcoder.jp/contests/pakencamp-2022-day2/tasks/pakencamp_2022_day2_f,nan
Worst Town,https://atcoder.jp/contests/pakencamp-2022-day2/tasks/pakencamp_2022_day2_g,nan
Habatu,https://atcoder.jp/contests/pakencamp-2022-day2/tasks/pakencamp_2022_day2_h,nan
Moving Piece,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_a,nan
Chmax,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_b,nan
Permutation of Length 26,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_c,nan
Yet Another Balls and Boxes Problem,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_d,nan
Output only,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_e,nan
Cycle and Xor,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_f,nan
4x4,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_g,nan
Exactly K Square Numbers,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_h,nan
Prefix Or,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_i,nan
Balanced Permutation,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_j,nan
Inner Product,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_k,nan
X and Xor,https://atcoder.jp/contests/pakencamp-2022-day3/tasks/pakencamp_2022_day3_l,nan
Kazuate Game,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_a,nan
Cutting Circle,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_b,nan
Infinity,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_c,nan
Bishop,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_d,nan
Thin Ice,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_e,nan
Mean Median Construction,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_f,nan
MST (Easy),https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_g,nan
Winter Road,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_h,nan
Swap and Sort,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_i,nan
Wrapping,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_j,nan
Or Set,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_k,nan
Range Mex Sum Min,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_l,nan
+ and Xor,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_m,nan
Chocolate Game,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_n,nan
Longest Bracket Subsequence,https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_o,nan
MST (Hard),https://atcoder.jp/contests/pakencamp-2023-day1/tasks/pakencamp_2023_day1_p,nan
SpeedRun,https://atcoder.jp/contests/pakencamp-2023-day2/tasks/pakencamp_2023_day2_a,nan
Salesman X,https://atcoder.jp/contests/pakencamp-2023-day2/tasks/pakencamp_2023_day2_b,nan
Arithmetic Progression and ...,https://atcoder.jp/contests/pakencamp-2023-day2/tasks/pakencamp_2023_day2_c,nan
Many Dungeons,https://atcoder.jp/contests/pakencamp-2023-day2/tasks/pakencamp_2023_day2_d,nan
Is Either 1?,https://atcoder.jp/contests/pakencamp-2023-day2/tasks/pakencamp_2023_day2_e,nan
Make it incomplete,https://atcoder.jp/contests/pakencamp-2023-day2/tasks/pakencamp_2023_day2_f,nan
Reducing x K,https://atcoder.jp/contests/pakencamp-2023-day2/tasks/pakencamp_2023_day2_g,nan
Two PCities,https://atcoder.jp/contests/pakencamp-2023-day2/tasks/pakencamp_2023_day2_h,nan
ABC,https://atcoder.jp/contests/pakencamp-2023-day3/tasks/pakencamp_2023_day3_a,nan
AND,https://atcoder.jp/contests/pakencamp-2023-day3/tasks/pakencamp_2023_day3_b,nan
DEC,https://atcoder.jp/contests/pakencamp-2023-day3/tasks/pakencamp_2023_day3_c,nan
GCD,https://atcoder.jp/contests/pakencamp-2023-day3/tasks/pakencamp_2023_day3_d,nan
MEX,https://atcoder.jp/contests/pakencamp-2023-day3/tasks/pakencamp_2023_day3_e,nan
MEX2,https://atcoder.jp/contests/pakencamp-2023-day3/tasks/pakencamp_2023_day3_f,nan
MOD,https://atcoder.jp/contests/pakencamp-2023-day3/tasks/pakencamp_2023_day3_g,nan
ROT,https://atcoder.jp/contests/pakencamp-2023-day3/tasks/pakencamp_2023_day3_h,nan
TREE,https://atcoder.jp/contests/pakencamp-2023-day3/tasks/pakencamp_2023_day3_i,nan
XOR,https://atcoder.jp/contests/pakencamp-2023-day3/tasks/pakencamp_2023_day3_j,nan
Kth Term,https://atcoder.jp/contests/panasonic2020/tasks/panasonic2020_a,nan
Bishop,https://atcoder.jp/contests/panasonic2020/tasks/panasonic2020_b,nan
Sqrt Inequality,https://atcoder.jp/contests/panasonic2020/tasks/panasonic2020_c,nan
String Equivalence,https://atcoder.jp/contests/panasonic2020/tasks/panasonic2020_d,nan
Three Substrings,https://atcoder.jp/contests/panasonic2020/tasks/panasonic2020_e,nan
Fractal Shortest Path,https://atcoder.jp/contests/panasonic2020/tasks/panasonic2020_f,nan
BMI,https://atcoder.jp/contests/past17-open/tasks/past17_a,nan
フルコンボ,https://atcoder.jp/contests/past17-open/tasks/past17_b,nan
換金,https://atcoder.jp/contests/past17-open/tasks/past17_c,nan
Webサービス,https://atcoder.jp/contests/past17-open/tasks/past17_d,nan
連長圧縮,https://atcoder.jp/contests/past17-open/tasks/past17_e,nan
構文木,https://atcoder.jp/contests/past17-open/tasks/past17_f,nan
蛇行する文字列,https://atcoder.jp/contests/past17-open/tasks/past17_g,nan
履修登録,https://atcoder.jp/contests/past17-open/tasks/past17_h,nan
部分列ペア,https://atcoder.jp/contests/past17-open/tasks/past17_i,nan
カフェ,https://atcoder.jp/contests/past17-open/tasks/past17_j,nan
正しいチェックディジット,https://atcoder.jp/contests/past17-open/tasks/past17_k,nan
割引券,https://atcoder.jp/contests/past17-open/tasks/past17_l,nan
長方形,https://atcoder.jp/contests/past17-open/tasks/past17_m,nan
ソフトウェアアップデート,https://atcoder.jp/contests/past17-open/tasks/past17_n,nan
整地クエリ,https://atcoder.jp/contests/past17-open/tasks/past17_o,nan
Is It a Number?,https://atcoder.jp/contests/past201912-open/tasks/past201912_a,nan
Up and Down,https://atcoder.jp/contests/past201912-open/tasks/past201912_b,nan
The Third,https://atcoder.jp/contests/past201912-open/tasks/past201912_c,nan
Duplicated?,https://atcoder.jp/contests/past201912-open/tasks/past201912_d,nan
Restore,https://atcoder.jp/contests/past201912-open/tasks/past201912_e,nan
DoubleCamelCase Sort,https://atcoder.jp/contests/past201912-open/tasks/past201912_f,nan
Division,https://atcoder.jp/contests/past201912-open/tasks/past201912_g,nan
Bulk Selling,https://atcoder.jp/contests/past201912-open/tasks/past201912_h,nan
Procurement,https://atcoder.jp/contests/past201912-open/tasks/past201912_i,nan
Leveling,https://atcoder.jp/contests/past201912-open/tasks/past201912_j,nan
Conglomerate,https://atcoder.jp/contests/past201912-open/tasks/past201912_k,nan
Gradation,https://atcoder.jp/contests/past201912-open/tasks/past201912_l,nan
Auto Choice,https://atcoder.jp/contests/past201912-open/tasks/past201912_m,nan
Land Clearing,https://atcoder.jp/contests/past201912-open/tasks/past201912_n,nan
Endurance,https://atcoder.jp/contests/past201912-open/tasks/past201912_o,nan
Elevator,https://atcoder.jp/contests/past202004-open/tasks/past202004_a,nan
Plurality Voting,https://atcoder.jp/contests/past202004-open/tasks/past202004_b,nan
Landslide,https://atcoder.jp/contests/past202004-open/tasks/past202004_c,nan
String Match,https://atcoder.jp/contests/past202004-open/tasks/past202004_d,nan
Permutation,https://atcoder.jp/contests/past202004-open/tasks/past202004_e,nan
Tasking,https://atcoder.jp/contests/past202004-open/tasks/past202004_f,nan
String Query,https://atcoder.jp/contests/past202004-open/tasks/past202004_g,nan
1 9 Grid,https://atcoder.jp/contests/past202004-open/tasks/past202004_h,nan
Elimination,https://atcoder.jp/contests/past202004-open/tasks/past202004_i,nan
Parse,https://atcoder.jp/contests/past202004-open/tasks/past202004_j,nan
Parentheses,https://atcoder.jp/contests/past202004-open/tasks/past202004_k,nan
Lexicographically Minimum,https://atcoder.jp/contests/past202004-open/tasks/past202004_l,nan
Cafeteria,https://atcoder.jp/contests/past202004-open/tasks/past202004_m,nan
Building Construction,https://atcoder.jp/contests/past202004-open/tasks/past202004_n,nan
Variable Spanning Trees,https://atcoder.jp/contests/past202004-open/tasks/past202004_o,nan
Case Sensitive,https://atcoder.jp/contests/past202005-open/tasks/past202005_a,nan
Dynamic Scoring,https://atcoder.jp/contests/past202005-open/tasks/past202005_b,nan
Geometric Progression,https://atcoder.jp/contests/past202005-open/tasks/past202005_c,nan
Digital Display,https://atcoder.jp/contests/past202005-open/tasks/past202005_d,nan
Sprinklers,https://atcoder.jp/contests/past202005-open/tasks/past202005_e,nan
Palindromic Matrix,https://atcoder.jp/contests/past202005-open/tasks/past202005_f,nan
Gold General Goes on the Grid,https://atcoder.jp/contests/past202005-open/tasks/past202005_g,nan
Hurdling,https://atcoder.jp/contests/past202005-open/tasks/past202005_h,nan
Matrix Operations,https://atcoder.jp/contests/past202005-open/tasks/past202005_i,nan
Sushi go round,https://atcoder.jp/contests/past202005-open/tasks/past202005_j,nan
Moving Containers,https://atcoder.jp/contests/past202005-open/tasks/past202005_k,nan
Supamarket,https://atcoder.jp/contests/past202005-open/tasks/past202005_l,nan
Real Traveling Salesman,https://atcoder.jp/contests/past202005-open/tasks/past202005_m,nan
Swap and Sort,https://atcoder.jp/contests/past202005-open/tasks/past202005_n,nan
Quoits,https://atcoder.jp/contests/past202005-open/tasks/past202005_o,nan
中央値,https://atcoder.jp/contests/past202010-open/tasks/past202010_a,nan
電卓,https://atcoder.jp/contests/past202010-open/tasks/past202010_b,nan
隣接カウント,https://atcoder.jp/contests/past202010-open/tasks/past202010_c,nan
分身,https://atcoder.jp/contests/past202010-open/tasks/past202010_d,nan
アナグラム,https://atcoder.jp/contests/past202010-open/tasks/past202010_e,nan
構文解析,https://atcoder.jp/contests/past202010-open/tasks/past202010_f,nan
村整備,https://atcoder.jp/contests/past202010-open/tasks/past202010_g,nan
マス目のカット,https://atcoder.jp/contests/past202010-open/tasks/past202010_h,nan
ピザ,https://atcoder.jp/contests/past202010-open/tasks/past202010_i,nan
ワープ,https://atcoder.jp/contests/past202010-open/tasks/past202010_j,nan
転倒数,https://atcoder.jp/contests/past202010-open/tasks/past202010_k,nan
マンションの改築,https://atcoder.jp/contests/past202010-open/tasks/past202010_l,nan
筆塗り,https://atcoder.jp/contests/past202010-open/tasks/past202010_m,nan
マス目の穴埋め,https://atcoder.jp/contests/past202010-open/tasks/past202010_n,nan
宝箱,https://atcoder.jp/contests/past202010-open/tasks/past202010_o,nan
OX Game,https://atcoder.jp/contests/past202012-open/tasks/past202012_a,nan
Overwrite,https://atcoder.jp/contests/past202012-open/tasks/past202012_b,nan
Hexatridecimal,https://atcoder.jp/contests/past202012-open/tasks/past202012_c,nan
Leading Zeros,https://atcoder.jp/contests/past202012-open/tasks/past202012_d,nan
Stamp,https://atcoder.jp/contests/past202012-open/tasks/past202012_e,nan
Dangerous Chemicals,https://atcoder.jp/contests/past202012-open/tasks/past202012_f,nan
Snake,https://atcoder.jp/contests/past202012-open/tasks/past202012_g,nan
Conveyor,https://atcoder.jp/contests/past202012-open/tasks/past202012_h,nan
Evacuation Plan,https://atcoder.jp/contests/past202012-open/tasks/past202012_i,nan
Long Long String,https://atcoder.jp/contests/past202012-open/tasks/past202012_j,nan
Pitching,https://atcoder.jp/contests/past202012-open/tasks/past202012_k,nan
Collecting T,https://atcoder.jp/contests/past202012-open/tasks/past202012_l,nan
Shipping Sticks,https://atcoder.jp/contests/past202012-open/tasks/past202012_m,nan
Travel Agency,https://atcoder.jp/contests/past202012-open/tasks/past202012_n,nan
Notification,https://atcoder.jp/contests/past202012-open/tasks/past202012_o,nan
POSTal Code,https://atcoder.jp/contests/past202104-open/tasks/past202104_a,nan
PASTal Code,https://atcoder.jp/contests/past202104-open/tasks/past202104_b,nan
Buying a Cellphone,https://atcoder.jp/contests/past202104-open/tasks/past202104_c,nan
K Integers Summations,https://atcoder.jp/contests/past202104-open/tasks/past202104_d,nan
Third from Front,https://atcoder.jp/contests/past202104-open/tasks/past202104_e,nan
Safety System,https://atcoder.jp/contests/past202104-open/tasks/past202104_f,nan
One Step at a Time,https://atcoder.jp/contests/past202104-open/tasks/past202104_g,nan
Can Can Mart,https://atcoder.jp/contests/past202104-open/tasks/past202104_h,nan
PAST to Fishing,https://atcoder.jp/contests/past202104-open/tasks/past202104_i,nan
Points to Cost,https://atcoder.jp/contests/past202104-open/tasks/past202104_j,nan
Common Coupon,https://atcoder.jp/contests/past202104-open/tasks/past202104_k,nan
Urban Planning,https://atcoder.jp/contests/past202104-open/tasks/past202104_l,nan
Equal Queries,https://atcoder.jp/contests/past202104-open/tasks/past202104_m,nan
Activities,https://atcoder.jp/contests/past202104-open/tasks/past202104_n,nan
Shortest Distance Query,https://atcoder.jp/contests/past202104-open/tasks/past202104_o,nan
check digit,https://atcoder.jp/contests/past202107-open/tasks/past202107_a,nan
Vapor Pressure,https://atcoder.jp/contests/past202107-open/tasks/past202107_b,nan
Validation,https://atcoder.jp/contests/past202107-open/tasks/past202107_c,nan
Replace,https://atcoder.jp/contests/past202107-open/tasks/past202107_d,nan
Aoki's Trick,https://atcoder.jp/contests/past202107-open/tasks/past202107_e,nan
Double Booking,https://atcoder.jp/contests/past202107-open/tasks/past202107_f,nan
Power Expression,https://atcoder.jp/contests/past202107-open/tasks/past202107_g,nan
Line Chart,https://atcoder.jp/contests/past202107-open/tasks/past202107_h,nan
Nevus,https://atcoder.jp/contests/past202107-open/tasks/past202107_i,nan
Never Ending Journey,https://atcoder.jp/contests/past202107-open/tasks/past202107_j,nan
Flying Trip,https://atcoder.jp/contests/past202107-open/tasks/past202107_k,nan
Multiple Min Query,https://atcoder.jp/contests/past202107-open/tasks/past202107_l,nan
Divide,https://atcoder.jp/contests/past202107-open/tasks/past202107_m,nan
Monochrome Design,https://atcoder.jp/contests/past202107-open/tasks/past202107_n,nan
Computer,https://atcoder.jp/contests/past202107-open/tasks/past202107_o,nan
Bubbler,https://atcoder.jp/contests/past202109-open/tasks/past202109_a,nan
intersection,https://atcoder.jp/contests/past202109-open/tasks/past202109_b,nan
Number of Apperance,https://atcoder.jp/contests/past202109-open/tasks/past202109_c,nan
Divisor,https://atcoder.jp/contests/past202109-open/tasks/past202109_d,nan
Colorful T Shirts,https://atcoder.jp/contests/past202109-open/tasks/past202109_e,nan
Incomplete Permutation,https://atcoder.jp/contests/past202109-open/tasks/past202109_f,nan
K th element,https://atcoder.jp/contests/past202109-open/tasks/past202109_g,nan
Shortest Path,https://atcoder.jp/contests/past202109-open/tasks/past202109_h,nan
/2 and *3,https://atcoder.jp/contests/past202109-open/tasks/past202109_i,nan
Reverse Array,https://atcoder.jp/contests/past202109-open/tasks/past202109_j,nan
Happy Wedding!,https://atcoder.jp/contests/past202109-open/tasks/past202109_k,nan
K th Abs,https://atcoder.jp/contests/past202109-open/tasks/past202109_l,nan
Balance,https://atcoder.jp/contests/past202109-open/tasks/past202109_m,nan
Zigzag Sequences,https://atcoder.jp/contests/past202109-open/tasks/past202109_n,nan
Red Blue Tournament,https://atcoder.jp/contests/past202109-open/tasks/past202109_o,nan
Attractions,https://atcoder.jp/contests/past202112-open/tasks/past202112_a,nan
Perforated Coin,https://atcoder.jp/contests/past202112-open/tasks/past202112_b,nan
Fastest Answer,https://atcoder.jp/contests/past202112-open/tasks/past202112_c,nan
Examination,https://atcoder.jp/contests/past202112-open/tasks/past202112_d,nan
Keyboard,https://atcoder.jp/contests/past202112-open/tasks/past202112_e,nan
Like As Shogi,https://atcoder.jp/contests/past202112-open/tasks/past202112_f,nan
Connectivity,https://atcoder.jp/contests/past202112-open/tasks/past202112_g,nan
Longest Non common Subsequence,https://atcoder.jp/contests/past202112-open/tasks/past202112_h,nan
Direct Elevator,https://atcoder.jp/contests/past202112-open/tasks/past202112_i,nan
Rotate and Reverse,https://atcoder.jp/contests/past202112-open/tasks/past202112_j,nan
Gas Station,https://atcoder.jp/contests/past202112-open/tasks/past202112_k,nan
Honest students,https://atcoder.jp/contests/past202112-open/tasks/past202112_l,nan
Deadnames,https://atcoder.jp/contests/past202112-open/tasks/past202112_m,nan
Intersection,https://atcoder.jp/contests/past202112-open/tasks/past202112_n,nan
Pair Score,https://atcoder.jp/contests/past202112-open/tasks/past202112_o,nan
Three cards,https://atcoder.jp/contests/past202203-open/tasks/past202203_a,nan
Flowers,https://atcoder.jp/contests/past202203-open/tasks/past202203_b,nan
Go Further,https://atcoder.jp/contests/past202203-open/tasks/past202203_c,nan
High Score,https://atcoder.jp/contests/past202203-open/tasks/past202203_d,nan
Only 2 kinds,https://atcoder.jp/contests/past202203-open/tasks/past202203_e,nan
Coloring map,https://atcoder.jp/contests/past202203-open/tasks/past202203_f,nan
Equations,https://atcoder.jp/contests/past202203-open/tasks/past202203_g,nan
Connected Components,https://atcoder.jp/contests/past202203-open/tasks/past202203_h,nan
Symmetric Transformation,https://atcoder.jp/contests/past202203-open/tasks/past202203_i,nan
Expected Range,https://atcoder.jp/contests/past202203-open/tasks/past202203_j,nan
Planning,https://atcoder.jp/contests/past202203-open/tasks/past202203_k,nan
N mod M,https://atcoder.jp/contests/past202203-open/tasks/past202203_l,nan
Ranking,https://atcoder.jp/contests/past202203-open/tasks/past202203_m,nan
40B of calculations,https://atcoder.jp/contests/past202203-open/tasks/past202203_n,nan
3 Permutation,https://atcoder.jp/contests/past202203-open/tasks/past202203_o,nan
The Tortoise and the Hare,https://atcoder.jp/contests/past202206-open/tasks/past202206_a,nan
Two Letters,https://atcoder.jp/contests/past202206-open/tasks/past202206_b,nan
Order,https://atcoder.jp/contests/past202206-open/tasks/past202206_c,nan
Similar Strings,https://atcoder.jp/contests/past202206-open/tasks/past202206_d,nan
Strange Sequence,https://atcoder.jp/contests/past202206-open/tasks/past202206_e,nan
Gun Shooting,https://atcoder.jp/contests/past202206-open/tasks/past202206_f,nan
Is it a tree?,https://atcoder.jp/contests/past202206-open/tasks/past202206_g,nan
Two Knapsacks,https://atcoder.jp/contests/past202206-open/tasks/past202206_h,nan
Clean up,https://atcoder.jp/contests/past202206-open/tasks/past202206_i,nan
Holidays,https://atcoder.jp/contests/past202206-open/tasks/past202206_j,nan
Subsequence,https://atcoder.jp/contests/past202206-open/tasks/past202206_k,nan
Almost LCS,https://atcoder.jp/contests/past202206-open/tasks/past202206_l,nan
Reversal,https://atcoder.jp/contests/past202206-open/tasks/past202206_m,nan
Building Plan,https://atcoder.jp/contests/past202206-open/tasks/past202206_n,nan
Area Queries,https://atcoder.jp/contests/past202206-open/tasks/past202206_o,nan
Trafic Light,https://atcoder.jp/contests/past202209-open/tasks/past202209_a,nan
Credits,https://atcoder.jp/contests/past202209-open/tasks/past202209_b,nan
Biased Dice,https://atcoder.jp/contests/past202209-open/tasks/past202209_c,nan
Marking,https://atcoder.jp/contests/past202209-open/tasks/past202209_d,nan
Hitting Stick Game,https://atcoder.jp/contests/past202209-open/tasks/past202209_e,nan
Pharmacist,https://atcoder.jp/contests/past202209-open/tasks/past202209_f,nan
Wildcards,https://atcoder.jp/contests/past202209-open/tasks/past202209_g,nan
Three Types of Coins,https://atcoder.jp/contests/past202209-open/tasks/past202209_h,nan
Buying Apple Everyday,https://atcoder.jp/contests/past202209-open/tasks/past202209_i,nan
Sprinkler,https://atcoder.jp/contests/past202209-open/tasks/past202209_j,nan
Checking Connectivity,https://atcoder.jp/contests/past202209-open/tasks/past202209_k,nan
Exhibition,https://atcoder.jp/contests/past202209-open/tasks/past202209_l,nan
series,https://atcoder.jp/contests/past202209-open/tasks/past202209_m,nan
From Above and From the Side,https://atcoder.jp/contests/past202209-open/tasks/past202209_n,nan
Pick Two Numbers,https://atcoder.jp/contests/past202209-open/tasks/past202209_o,nan
Tokens,https://atcoder.jp/contests/past202212-open/tasks/past202212_a,nan
Fractional Comparison,https://atcoder.jp/contests/past202212-open/tasks/past202212_b,nan
Triplet Product,https://atcoder.jp/contests/past202212-open/tasks/past202212_c,nan
Bozu Mekuri,https://atcoder.jp/contests/past202212-open/tasks/past202212_d,nan
Parentheses,https://atcoder.jp/contests/past202212-open/tasks/past202212_e,nan
Average Ranking,https://atcoder.jp/contests/past202212-open/tasks/past202212_f,nan
Range Sum,https://atcoder.jp/contests/past202212-open/tasks/past202212_g,nan
Digit Diff  Sum,https://atcoder.jp/contests/past202212-open/tasks/past202212_h,nan
Order of Height,https://atcoder.jp/contests/past202212-open/tasks/past202212_i,nan
Crossing,https://atcoder.jp/contests/past202212-open/tasks/past202212_j,nan
Buy an Integer,https://atcoder.jp/contests/past202212-open/tasks/past202212_k,nan
Segments,https://atcoder.jp/contests/past202212-open/tasks/past202212_l,nan
Tree and Intervals,https://atcoder.jp/contests/past202212-open/tasks/past202212_m,nan
Sequence and Function,https://atcoder.jp/contests/past202212-open/tasks/past202212_n,nan
Shift and Shift,https://atcoder.jp/contests/past202212-open/tasks/past202212_o,nan
シンプル石取りゲーム,https://atcoder.jp/contests/past202303-open/tasks/past202303_a,nan
小数点第 D 位,https://atcoder.jp/contests/past202303-open/tasks/past202303_b,nan
逆順列,https://atcoder.jp/contests/past202303-open/tasks/past202303_c,nan
シューティング,https://atcoder.jp/contests/past202303-open/tasks/past202303_d,nan
図形のシャッフル,https://atcoder.jp/contests/past202303-open/tasks/past202303_e,nan
集合の問題,https://atcoder.jp/contests/past202303-open/tasks/past202303_f,nan
隣り合うマス,https://atcoder.jp/contests/past202303-open/tasks/past202303_g,nan
3 枚階段,https://atcoder.jp/contests/past202303-open/tasks/past202303_h,nan
簡易オマハポーカー,https://atcoder.jp/contests/past202303-open/tasks/past202303_i,nan
図形のシフト,https://atcoder.jp/contests/past202303-open/tasks/past202303_j,nan
金貨と袋のゲーム,https://atcoder.jp/contests/past202303-open/tasks/past202303_k,nan
順位表,https://atcoder.jp/contests/past202303-open/tasks/past202303_l,nan
お片付け,https://atcoder.jp/contests/past202303-open/tasks/past202303_m,nan
ゴミ出し,https://atcoder.jp/contests/past202303-open/tasks/past202303_n,nan
区間ソートクエリ,https://atcoder.jp/contests/past202303-open/tasks/past202303_o,nan
ペナルティ,https://atcoder.jp/contests/past15-open/tasks/past202306_a,nan
殿堂入り,https://atcoder.jp/contests/past15-open/tasks/past202306_b,nan
円の描画,https://atcoder.jp/contests/past15-open/tasks/past202306_c,nan
レコーダー,https://atcoder.jp/contests/past15-open/tasks/past202306_d,nan
合計得点,https://atcoder.jp/contests/past15-open/tasks/past202306_e,nan
番号付け,https://atcoder.jp/contests/past15-open/tasks/past202306_f,nan
N SAT,https://atcoder.jp/contests/past15-open/tasks/past202306_g,nan
和で表現,https://atcoder.jp/contests/past15-open/tasks/past202306_h,nan
最大公約数の最大値,https://atcoder.jp/contests/past15-open/tasks/past202306_i,nan
忍者,https://atcoder.jp/contests/past15-open/tasks/past202306_j,nan
入れ替えてソート,https://atcoder.jp/contests/past15-open/tasks/past202306_k,nan
ビット行列,https://atcoder.jp/contests/past15-open/tasks/past202306_l,nan
点の距離,https://atcoder.jp/contests/past15-open/tasks/past202306_m,nan
度数分布,https://atcoder.jp/contests/past15-open/tasks/past202306_n,nan
数列と素数,https://atcoder.jp/contests/past15-open/tasks/past202306_o,nan
ツバメ,https://atcoder.jp/contests/past16-open/tasks/past202309_a,nan
スロット,https://atcoder.jp/contests/past16-open/tasks/past202309_b,nan
コンテスト,https://atcoder.jp/contests/past16-open/tasks/past202309_c,nan
相対評価のスコア,https://atcoder.jp/contests/past16-open/tasks/past202309_d,nan
10 の n 乗,https://atcoder.jp/contests/past16-open/tasks/past202309_e,nan
式の評価,https://atcoder.jp/contests/past16-open/tasks/past202309_f,nan
N個の三角形,https://atcoder.jp/contests/past16-open/tasks/past202309_g,nan
休暇,https://atcoder.jp/contests/past16-open/tasks/past202309_h,nan
アメ,https://atcoder.jp/contests/past16-open/tasks/past202309_i,nan
除夜の鐘,https://atcoder.jp/contests/past16-open/tasks/past202309_j,nan
マス目,https://atcoder.jp/contests/past16-open/tasks/past202309_k,nan
平均クエリ,https://atcoder.jp/contests/past16-open/tasks/past202309_l,nan
線分の交差判定,https://atcoder.jp/contests/past16-open/tasks/past202309_m,nan
ソートと関数,https://atcoder.jp/contests/past16-open/tasks/past202309_n,nan
数列の足し算,https://atcoder.jp/contests/past16-open/tasks/past202309_o,nan
Disjoint Set Union,https://atcoder.jp/contests/practice2/tasks/practice2_a,nan
Fenwick Tree,https://atcoder.jp/contests/practice2/tasks/practice2_b,nan
Floor Sum,https://atcoder.jp/contests/practice2/tasks/practice2_c,nan
Maxflow,https://atcoder.jp/contests/practice2/tasks/practice2_d,nan
MinCostFlow,https://atcoder.jp/contests/practice2/tasks/practice2_e,nan
Convolution,https://atcoder.jp/contests/practice2/tasks/practice2_f,nan
SCC,https://atcoder.jp/contests/practice2/tasks/practice2_g,nan
Two SAT,https://atcoder.jp/contests/practice2/tasks/practice2_h,nan
Number of Substrings,https://atcoder.jp/contests/practice2/tasks/practice2_i,nan
Segment Tree,https://atcoder.jp/contests/practice2/tasks/practice2_j,nan
Range Affine Range Sum,https://atcoder.jp/contests/practice2/tasks/practice2_k,nan
Lazy Segment Tree,https://atcoder.jp/contests/practice2/tasks/practice2_l,nan
cticeA. Welcome to AtCoder,https://atcoder.jp/contests/abs/tasks/practice_1,nan
成績判定,https://atcoder.jp/contests/qupc2014/tasks/qupc2014_a,nan
元素の系統名,https://atcoder.jp/contests/qupc2014/tasks/qupc2014_b,nan
案内所,https://atcoder.jp/contests/qupc2014/tasks/qupc2014_c,nan
切符分割,https://atcoder.jp/contests/qupc2014/tasks/qupc2014_d,nan
捕獲,https://atcoder.jp/contests/qupc2014/tasks/qupc2014_e,nan
設備移転,https://atcoder.jp/contests/qupc2014/tasks/qupc2014_f,nan
立ち入り禁止区域,https://atcoder.jp/contests/qupc2014/tasks/qupc2014_g,nan
お風呂は気持ちいい,https://atcoder.jp/contests/qupc2014/tasks/qupc2014_h,nan
QUPC,https://atcoder.jp/contests/qupc2018/tasks/qupc2018_a,nan
Tapu & Tapi,https://atcoder.jp/contests/qupc2018/tasks/qupc2018_b,nan
Ito Campus,https://atcoder.jp/contests/qupc2018/tasks/qupc2018_c,nan
Novelist,https://atcoder.jp/contests/qupc2018/tasks/qupc2018_d,nan
Treeone,https://atcoder.jp/contests/qupc2018/tasks/qupc2018_e,nan
Team Making,https://atcoder.jp/contests/qupc2018/tasks/qupc2018_f,nan
Tapu & Tapi 2,https://atcoder.jp/contests/qupc2018/tasks/qupc2018_g,nan
ukuku,https://atcoder.jp/contests/qupc2018/tasks/qupc2018_h,nan
Buffalo,https://atcoder.jp/contests/qupc2018/tasks/qupc2018_i,nan
Repeat Strings,https://atcoder.jp/contests/qupc2018/tasks/qupc2018_j,nan
ハイパー覆面すごろく,https://atcoder.jp/contests/rcl-contest-2020-final/tasks/rcl_contest_2020_final_a,nan
ハイパーお掃除ロボット,https://atcoder.jp/contests/rcl-contest-2020-final/tasks/rcl_contest_2020_final_b,nan
ゲーマーXとモノス大会,https://atcoder.jp/contests/rcl-contest-2020-qual/tasks/rcl_contest_2020_qual_a,nan
イラストレーターXと不思議なペン,https://atcoder.jp/contests/rcl-contest-2020-qual/tasks/rcl_contest_2020_qual_b,nan
魔法使いXの戦い,https://atcoder.jp/contests/rcl-contest-2021/tasks/rcl_contest_2021_a,nan
マッサージチェア2021,https://atcoder.jp/contests/rcl-contest-2021/tasks/rcl_contest_2021_b,nan
Farm King X,https://atcoder.jp/contests/rcl-contest-2021-long/tasks/rcl_contest_2021_long_a,nan
石油王Xの憂鬱,https://atcoder.jp/contests/rco-contest-2017-final/tasks/rco_contest_2017_final_a,nan
日本橋大渋滞,https://atcoder.jp/contests/rco-contest-2017-final/tasks/rco_contest_2017_final_b,nan
Multiple Pieces,https://atcoder.jp/contests/rco-contest-2017-qual/tasks/rco_contest_2017_qual_a,nan
Food Collector,https://atcoder.jp/contests/rco-contest-2017-qual/tasks/rco_contest_2017_qual_b,nan
ぐるぐる庭園,https://atcoder.jp/contests/rco-contest-2018-final/tasks/rco_contest_2018_final_a,nan
くるくる寿司,https://atcoder.jp/contests/rco-contest-2018-final/tasks/rco_contest_2018_final_b,nan
ゲーム実況者Xの挑戦,https://atcoder.jp/contests/rco-contest-2018-qual/tasks/rco_contest_2018_qual_a,nan
ゲーム実況者Xのデフラグ,https://atcoder.jp/contests/rco-contest-2018-qual/tasks/rco_contest_2018_qual_b,nan
めくってそろえる,https://atcoder.jp/contests/rco-contest-2019-final/tasks/rco_contest_2019_final_a,nan
まわしてそろえる,https://atcoder.jp/contests/rco-contest-2019-final/tasks/rco_contest_2019_final_b,nan
ツーリストXの旅行計画,https://atcoder.jp/contests/rco-contest-2019-qual/tasks/rco_contest_2019_qual_a,nan
ファーマーXの収穫計画,https://atcoder.jp/contests/rco-contest-2019-qual/tasks/rco_contest_2019_qual_b,nan
ババ抜き,https://atcoder.jp/contests/Recruit-Programing-contest-practice/tasks/recruite_2013_pre_a,nan
ブロック並べ,https://atcoder.jp/contests/Recruit-Programing-contest-practice/tasks/recruite_2013_pre_b,nan
カレンダー,https://atcoder.jp/contests/cf18-relay-open/tasks/relay2018_a,nan
ロボット,https://atcoder.jp/contests/cf18-relay-open/tasks/relay2018_b,nan
積まれた本,https://atcoder.jp/contests/cf18-relay-open/tasks/relay2018_c,nan
数直線,https://atcoder.jp/contests/cf18-relay-open/tasks/relay2018_d,nan
狼と狐,https://atcoder.jp/contests/cf18-relay-open/tasks/relay2018_e,nan
バス旅行,https://atcoder.jp/contests/cf18-relay-open/tasks/relay2018_f,nan
バス停と凸包,https://atcoder.jp/contests/cf18-relay-open/tasks/relay2018_g,nan
最悪のバス停決定戦,https://atcoder.jp/contests/cf18-relay-open/tasks/relay2018_h,nan
一円を笑う者は一円に泣く,https://atcoder.jp/contests/cf18-relay-open/tasks/relay2018_i,nan
健康診断,https://atcoder.jp/contests/cf18-relay-open/tasks/relay2018_j,nan
Kaiden,https://atcoder.jp/contests/cf17-relay-open/tasks/relay2_a,nan
Evergrowing Tree,https://atcoder.jp/contests/cf17-relay-open/tasks/relay2_b,nan
Garden,https://atcoder.jp/contests/cf17-relay-open/tasks/relay2_c,nan
Shock,https://atcoder.jp/contests/cf17-relay-open/tasks/relay2_d,nan
White and Blue,https://atcoder.jp/contests/cf17-relay-open/tasks/relay2_e,nan
Capture,https://atcoder.jp/contests/cf17-relay-open/tasks/relay2_f,nan
Coinage,https://atcoder.jp/contests/cf17-relay-open/tasks/relay2_g,nan
Akashic Records,https://atcoder.jp/contests/cf17-relay-open/tasks/relay2_h,nan
Nice to Meet You,https://atcoder.jp/contests/cf17-relay-open/tasks/relay2_i,nan
Indifferent,https://atcoder.jp/contests/cf17-relay-open/tasks/relay2_j,nan
Equivalent Resistance,https://atcoder.jp/contests/cf16-relay-open/tasks/relay_a,nan
Mirror String,https://atcoder.jp/contests/cf16-relay-open/tasks/relay_b,nan
Kode Festival,https://atcoder.jp/contests/cf16-relay-open/tasks/relay_c,nan
Magic Square 2,https://atcoder.jp/contests/cf16-relay-open/tasks/relay_d,nan
Segment on Grid Paper,https://atcoder.jp/contests/cf16-relay-open/tasks/relay_e,nan
Trichotomy,https://atcoder.jp/contests/cf16-relay-open/tasks/relay_f,nan
Magician,https://atcoder.jp/contests/cf16-relay-open/tasks/relay_g,nan
Early Bird,https://atcoder.jp/contests/cf16-relay-open/tasks/relay_h,nan
3y3s Challenge,https://atcoder.jp/contests/cf16-relay-open/tasks/relay_i,nan
Connected Checkerboard,https://atcoder.jp/contests/cf16-relay-open/tasks/relay_j,nan
Problem on Tree,https://atcoder.jp/contests/cf16-relay-open/tasks/relay_k,nan
E869120列車 (E869120 Trains),https://atcoder.jp/contests/s8pc-1/tasks/s8pc_1_a,nan
ケーキ・カッティング (Cake Cutting),https://atcoder.jp/contests/s8pc-1/tasks/s8pc_1_b,nan
お金の街 (The Money Town),https://atcoder.jp/contests/s8pc-1/tasks/s8pc_1_c,nan
square1001の通学経路 (square1001's School Road),https://atcoder.jp/contests/s8pc-1/tasks/s8pc_1_d,nan
散歩 (E869120 and Path Length),https://atcoder.jp/contests/s8pc-1/tasks/s8pc_1_e,nan
square1001の好きな回文数 (square1001's Favorite Palindrome),https://atcoder.jp/contests/s8pc-1/tasks/s8pc_1_f,nan
Revenge of Traveling Salesman Problem,https://atcoder.jp/contests/s8pc-1/tasks/s8pc_1_g,nan
3人の昼食 (The Lunch),https://atcoder.jp/contests/s8pc-1/tasks/s8pc_1_h,nan
IOI列車で行こう2,https://atcoder.jp/contests/s8pc-2/tasks/s8pc_2_a,nan
Division 2,https://atcoder.jp/contests/s8pc-2/tasks/s8pc_2_b,nan
何通りの分割方法がある？,https://atcoder.jp/contests/s8pc-2/tasks/s8pc_2_c,nan
2016,https://atcoder.jp/contests/s8pc-2/tasks/s8pc_2_d,nan
部分文字列,https://atcoder.jp/contests/s8pc-2/tasks/s8pc_2_e,nan
Range Sum Queries,https://atcoder.jp/contests/s8pc-2/tasks/s8pc_2_f,nan
道とN個のAtCoder社,https://atcoder.jp/contests/s8pc-2/tasks/s8pc_2_g,nan
Counting 1's,https://atcoder.jp/contests/s8pc-2/tasks/s8pc_2_h,nan
Calendar,https://atcoder.jp/contests/s8pc-3/tasks/s8pc_3_a,nan
Falling Stone Game,https://atcoder.jp/contests/s8pc-3/tasks/s8pc_3_b,nan
Solving XOR Puzzles,https://atcoder.jp/contests/s8pc-3/tasks/s8pc_3_c,nan
Souvenirs,https://atcoder.jp/contests/s8pc-3/tasks/s8pc_3_d,nan
Circle and Many Triangles,https://atcoder.jp/contests/s8pc-3/tasks/s8pc_3_e,nan
Sushi,https://atcoder.jp/contests/s8pc-3/tasks/s8pc_3_f,nan
Sum of Fibonacci Sequence,https://atcoder.jp/contests/s8pc-3/tasks/s8pc_3_g,nan
Bombs Searching Game,https://atcoder.jp/contests/s8pc-3/tasks/s8pc_3_h,nan
Atcoder Handles,https://atcoder.jp/contests/s8pc-4/tasks/s8pc_4_a,nan
Buildings are Colorful!,https://atcoder.jp/contests/s8pc-4/tasks/s8pc_4_b,nan
Calendar 2,https://atcoder.jp/contests/s8pc-4/tasks/s8pc_4_c,nan
Driving on a Tree,https://atcoder.jp/contests/s8pc-4/tasks/s8pc_4_d,nan
Enormous Atcoder Railroad,https://atcoder.jp/contests/s8pc-4/tasks/s8pc_4_e,nan
Find the Route!,https://atcoder.jp/contests/s8pc-4/tasks/s8pc_4_f,nan
Get the Salary of Atcoder,https://atcoder.jp/contests/s8pc-4/tasks/s8pc_4_g,nan
Huge Kingdom: Atcoder,https://atcoder.jp/contests/s8pc-4/tasks/s8pc_4_h,nan
Sushi 2,https://atcoder.jp/contests/s8pc-5/tasks/s8pc_5_a,nan
Emblem,https://atcoder.jp/contests/s8pc-5/tasks/s8pc_5_b,nan
Two Parentheses,https://atcoder.jp/contests/s8pc-5/tasks/s8pc_5_c,nan
Battle with E869120!,https://atcoder.jp/contests/s8pc-5/tasks/s8pc_5_d,nan
Broken Skateboard,https://atcoder.jp/contests/s8pc-5/tasks/s8pc_5_e,nan
Lunch Menu,https://atcoder.jp/contests/s8pc-5/tasks/s8pc_5_f,nan
Snake Escaping 2,https://atcoder.jp/contests/s8pc-5/tasks/s8pc_5_g,nan
Percepts of Atcoder,https://atcoder.jp/contests/s8pc-5/tasks/s8pc_5_h,nan
Collecting Gems is Fun,https://atcoder.jp/contests/s8pc-5/tasks/s8pc_5_i,nan
"E869120, who Leaps through Time",https://atcoder.jp/contests/s8pc-6/tasks/s8pc_6_a,nan
AtCoder Market,https://atcoder.jp/contests/s8pc-6/tasks/s8pc_6_b,nan
Infinite Grid,https://atcoder.jp/contests/s8pc-6/tasks/s8pc_6_c,nan
Snowballs,https://atcoder.jp/contests/s8pc-6/tasks/s8pc_6_d,nan
90 degree Rotations,https://atcoder.jp/contests/s8pc-6/tasks/s8pc_6_e,nan
Random Shuffles,https://atcoder.jp/contests/s8pc-6/tasks/s8pc_6_f,nan
Medals,https://atcoder.jp/contests/s8pc-6/tasks/s8pc_6_g,nan
Percepts of AtCoder 2,https://atcoder.jp/contests/s8pc-6/tasks/s8pc_6_h,nan
Garden 2,https://atcoder.jp/contests/s8pc-6/tasks/s8pc_6_i,nan
Candles,https://atcoder.jp/contests/snuke21/tasks/snuke21_a,nan
Snuke,https://atcoder.jp/contests/snuke21/tasks/snuke21_b,nan
Supermarket,https://atcoder.jp/contests/snuke21/tasks/snuke21_c,nan
Subsequence,https://atcoder.jp/contests/snuke21/tasks/snuke21_d,nan
Tournament,https://atcoder.jp/contests/snuke21/tasks/snuke21_e,nan
Lake,https://atcoder.jp/contests/snuke21/tasks/snuke21_f,nan
Medals,https://atcoder.jp/contests/snuke21/tasks/snuke21_g,nan
Snuke Density,https://atcoder.jp/contests/snuke21/tasks/snuke21_h,nan
Convex Polygon,https://atcoder.jp/contests/snuke21/tasks/snuke21_i,nan
Drink Bar,https://atcoder.jp/contests/snuke21/tasks/snuke21_j,nan
SoundHound,https://atcoder.jp/contests/soundhound2018/tasks/soundhound2018_a,nan
音量,https://atcoder.jp/contests/soundhound2018/tasks/soundhound2018_b,nan
広告,https://atcoder.jp/contests/soundhound2018/tasks/soundhound2018_c,nan
建物,https://atcoder.jp/contests/soundhound2018/tasks/soundhound2018_d,nan
カッコ列,https://atcoder.jp/contests/soundhound2018/tasks/soundhound2018_e,nan
Feel the  Beat,https://atcoder.jp/contests/soundhound2018-summer-final/tasks/soundhound2018_summer_final_a,nan
Neutralize,https://atcoder.jp/contests/soundhound2018-summer-final/tasks/soundhound2018_summer_final_b,nan
Not Too Close,https://atcoder.jp/contests/soundhound2018-summer-final/tasks/soundhound2018_summer_final_c,nan
Propagating Edges,https://atcoder.jp/contests/soundhound2018-summer-final/tasks/soundhound2018_summer_final_d,nan
Hash Swapping,https://atcoder.jp/contests/soundhound2018-summer-final/tasks/soundhound2018_summer_final_e,nan
F,https://atcoder.jp/contests/soundhound2018-summer-qual/tasks/soundhound2018_summer_qual_a,nan
Acrostic,https://atcoder.jp/contests/soundhound2018-summer-qual/tasks/soundhound2018_summer_qual_b,nan
Ordinary Beauty,https://atcoder.jp/contests/soundhound2018-summer-qual/tasks/soundhound2018_summer_qual_c,nan
Saving Snuuk,https://atcoder.jp/contests/soundhound2018-summer-qual/tasks/soundhound2018_summer_qual_d,nan
+ Graph,https://atcoder.jp/contests/soundhound2018-summer-qual/tasks/soundhound2018_summer_qual_e,nan
Patrolling,https://atcoder.jp/contests/stage0-2021/tasks/stage0_2021_a,nan
November 30,https://atcoder.jp/contests/sumitrust2019/tasks/sumitb2019_a,nan
Tax Rate,https://atcoder.jp/contests/sumitrust2019/tasks/sumitb2019_b,nan
100 to 105,https://atcoder.jp/contests/sumitrust2019/tasks/sumitb2019_c,nan
Lucky PIN,https://atcoder.jp/contests/sumitrust2019/tasks/sumitb2019_d,nan
Colorful Hats 2,https://atcoder.jp/contests/sumitrust2019/tasks/sumitb2019_e,nan
Interval Running,https://atcoder.jp/contests/sumitrust2019/tasks/sumitb2019_f,nan
夏祭り会議 (Summer Festival Meeting),https://atcoder.jp/contests/summerfes2018-div2/tasks/summerfes2018_a,nan
太鼓の名人 (Taiko Expert),https://atcoder.jp/contests/summerfes2018-div2/tasks/summerfes2018_b,nan
整数占い (Uranai Integer),https://atcoder.jp/contests/summerfes2018-div2/tasks/summerfes2018_c,nan
木からパスへ (Tree   >path),https://atcoder.jp/contests/summerfes2018-div1/tasks/summerfes2018_d,nan
石積み (Pyramid Piling),https://atcoder.jp/contests/summerfes2018-div1/tasks/summerfes2018_e,nan
冪冪ゲーム (Powerful Fever!),https://atcoder.jp/contests/summerfes2018-div1/tasks/summerfes2018_f,nan
屋台衝突 (Food Stall Collision),https://atcoder.jp/contests/summerfes2018-div1/tasks/summerfes2018_g,nan
圧縮おみくじ (Compressed Omikuji),https://atcoder.jp/contests/summerfes2018-div1/tasks/summerfes2018_h,nan
うっかり者のニム (Careless Nim),https://atcoder.jp/contests/summerfes2018-div1/tasks/summerfes2018_i,nan
楽しい結界作り (Making Barriers Is Fun),https://atcoder.jp/contests/summerfes2018-div1/tasks/summerfes2018_j,nan
ボール,https://atcoder.jp/contests/tdpc/tasks/tdpc_ball,nan
猫,https://atcoder.jp/contests/tdpc/tasks/tdpc_cat,nan
連結,https://atcoder.jp/contests/tdpc/tasks/tdpc_concatenation,nan
コンテスト,https://atcoder.jp/contests/tdpc/tasks/tdpc_contest,nan
サイコロ,https://atcoder.jp/contests/tdpc/tasks/tdpc_dice,nan
うなぎ,https://atcoder.jp/contests/tdpc/tasks/tdpc_eel,nan
フィボナッチ,https://atcoder.jp/contests/tdpc/tasks/tdpc_fibonacci,nan
ゲーム,https://atcoder.jp/contests/tdpc/tasks/tdpc_game,nan
グラフ,https://atcoder.jp/contests/tdpc/tasks/tdpc_graph,nan
マス目,https://atcoder.jp/contests/tdpc/tasks/tdpc_grid,nan
家,https://atcoder.jp/contests/tdpc/tasks/tdpc_house,nan
イウィ,https://atcoder.jp/contests/tdpc/tasks/tdpc_iwi,nan
ナップザック,https://atcoder.jp/contests/tdpc/tasks/tdpc_knapsack,nan
辞書順,https://atcoder.jp/contests/tdpc/tasks/tdpc_lexicographical,nan
数,https://atcoder.jp/contests/tdpc/tasks/tdpc_number,nan
準急,https://atcoder.jp/contests/tdpc/tasks/tdpc_semiexp,nan
文字列,https://atcoder.jp/contests/tdpc/tasks/tdpc_string,nan
ターゲット,https://atcoder.jp/contests/tdpc/tasks/tdpc_target,nan
トーナメント,https://atcoder.jp/contests/tdpc/tasks/tdpc_tournament,nan
木,https://atcoder.jp/contests/tdpc/tasks/tdpc_tree,nan
ロイヤルストレートフラッシュ,https://atcoder.jp/contests/tenka1-2012-qualC/tasks/tenka1_2012_10,nan
席替え,https://atcoder.jp/contests/tenka1-2012-qualC/tasks/tenka1_2012_11,nan
ゆうびんやさんのお花畑,https://atcoder.jp/contests/tenka1-2012-qualC/tasks/tenka1_2012_12,nan
孫子算経,https://atcoder.jp/contests/tenka1-2012-qualB/tasks/tenka1_2012_5,nan
camel_case,https://atcoder.jp/contests/tenka1-2012-qualB/tasks/tenka1_2012_6,nan
席が足りない,https://atcoder.jp/contests/tenka1-2012-qualB/tasks/tenka1_2012_7,nan
大爆発,https://atcoder.jp/contests/tenka1-2012-qualB/tasks/tenka1_2012_8,nan
与えられた数より小さい素数の個数について,https://atcoder.jp/contests/tenka1-2012-qualC/tasks/tenka1_2012_9,nan
ぶんたん,https://atcoder.jp/contests/tenka1-2012-final/tasks/tenka1_2012_final_a,nan
よんてん,https://atcoder.jp/contests/tenka1-2012-final/tasks/tenka1_2012_final_b,nan
Code Art Online,https://atcoder.jp/contests/tenka1-2012-final/tasks/tenka1_2012_final_c,nan
さんかく,https://atcoder.jp/contests/tenka1-2012-final/tasks/tenka1_2012_final_d,nan
GO!GO! サイコロ線路,https://atcoder.jp/contests/tenka1-2012-final/tasks/tenka1_2012_final_e,nan
算盤の書,https://atcoder.jp/contests/tenka1-2012-qualA/tasks/tenka1_2012_qualA_1,nan
分類たん,https://atcoder.jp/contests/tenka1-2012-qualA/tasks/tenka1_2012_qualA_2,nan
敵対的引用,https://atcoder.jp/contests/tenka1-2012-qualA/tasks/tenka1_2012_qualA_3,nan
アリの巣,https://atcoder.jp/contests/tenka1-2012-qualA/tasks/tenka1_2012_qualA_4,nan
天下一有無,https://atcoder.jp/contests/tenka1-2013-final/tasks/tenka1_2013_final_a,nan
天下一マジック,https://atcoder.jp/contests/tenka1-2013-final/tasks/tenka1_2013_final_b,nan
天下一ジグソーパズルみたび,https://atcoder.jp/contests/tenka1-2013-final/tasks/tenka1_2013_final_c,nan
天下一ボディービルコンテスト,https://atcoder.jp/contests/tenka1-2013-final/tasks/tenka1_2013_final_d,nan
天下一折れ線遊戯,https://atcoder.jp/contests/tenka1-2013-final/tasks/tenka1_2013_final_e,nan
天下一株式会社採用情報,https://atcoder.jp/contests/tenka1-2013-quala/tasks/tenka1_2013_qualA_a,nan
天下一難易度設定,https://atcoder.jp/contests/tenka1-2013-quala/tasks/tenka1_2013_qualA_b,nan
天下一二三パズル,https://atcoder.jp/contests/tenka1-2013-quala/tasks/tenka1_2013_qualA_c,nan
天下一展開,https://atcoder.jp/contests/tenka1-2013-quala/tasks/tenka1_2013_qualA_d,nan
天下一ジグソーパズル,https://atcoder.jp/contests/tenka1-2013-quala/tasks/tenka1_2013_qualA_e,nan
天下一人力比較,https://atcoder.jp/contests/tenka1-2013-qualb/tasks/tenka1_2013_qualB_a,nan
天下一後入れ先出しデータ構造,https://atcoder.jp/contests/tenka1-2013-qualb/tasks/tenka1_2013_qualB_b,nan
天下一ジグソーパズルふたたび,https://atcoder.jp/contests/tenka1-2013-qualb/tasks/tenka1_2013_qualB_c,nan
天下一二三パズル リベンジ,https://atcoder.jp/contests/tenka1-2013-qualb/tasks/tenka1_2013_qualB_d,nan
天下一最短路コンテスト,https://atcoder.jp/contests/tenka1-2013-qualb/tasks/tenka1_2013_qualB_e,nan
塙さん,https://atcoder.jp/contests/tenka1-2014-final-open/tasks/tenka1_2014_final_a,nan
天体位置観測,https://atcoder.jp/contests/tenka1-2014-final-open/tasks/tenka1_2014_final_b,nan
シークエンサー,https://atcoder.jp/contests/tenka1-2014-final-open/tasks/tenka1_2014_final_c,nan
高橋君,https://atcoder.jp/contests/tenka1-2014-final-open/tasks/tenka1_2014_final_d,nan
田端でバタバタ,https://atcoder.jp/contests/tenka1-2014-final-open/tasks/tenka1_2014_final_e,nan
天下一序数,https://atcoder.jp/contests/tenka1-2014-quala/tasks/tenka1_2014_qualA_a,nan
かぶりん！,https://atcoder.jp/contests/tenka1-2014-quala/tasks/tenka1_2014_qualA_b,nan
天下一文字列集合,https://atcoder.jp/contests/tenka1-2014-quala/tasks/tenka1_2014_qualA_c,nan
EMLauncher,https://atcoder.jp/contests/tenka1-2014-quala/tasks/tenka1_2014_qualA_d,nan
パズルの移動,https://atcoder.jp/contests/tenka1-2014-quala/tasks/tenka1_2014_qualA_e,nan
HAGIXILE,https://atcoder.jp/contests/tenka1-2014-qualb/tasks/tenka1_2014_qualB_a,nan
エターナルスタティックファイナル,https://atcoder.jp/contests/tenka1-2014-qualb/tasks/tenka1_2014_qualB_b,nan
天下一王国の歴史,https://atcoder.jp/contests/tenka1-2014-qualb/tasks/tenka1_2014_qualB_c,nan
天下一芸術,https://atcoder.jp/contests/tenka1-2014-qualb/tasks/tenka1_2014_qualB_d,nan
カラオケランキング,https://atcoder.jp/contests/tenka1-2014-qualb/tasks/tenka1_2014_qualB_e,nan
A 問題,https://atcoder.jp/contests/tenka1-2015-final/tasks/tenka1_2015_final_a,nan
B 問題,https://atcoder.jp/contests/tenka1-2015-final/tasks/tenka1_2015_final_b,nan
天下一不正,https://atcoder.jp/contests/tenka1-2015-final/tasks/tenka1_2015_final_c,nan
ほぼピタゴラスの三角形,https://atcoder.jp/contests/tenka1-2015-final/tasks/tenka1_2015_final_d,nan
天下一コップ,https://atcoder.jp/contests/tenka1-2015-final/tasks/tenka1_2015_final_e,nan
根付き木のみさわさん,https://atcoder.jp/contests/tenka1-2015-final/tasks/tenka1_2015_final_f,nan
天下一ゲーム,https://atcoder.jp/contests/tenka1-2015-final/tasks/tenka1_2015_final_g,nan
展開図プログラマーコンテスト,https://atcoder.jp/contests/tenka1-2015-quala/tasks/tenka1_2015_qualA_a,nan
stepモード,https://atcoder.jp/contests/tenka1-2015-quala/tasks/tenka1_2015_qualA_b,nan
天下一美術館,https://atcoder.jp/contests/tenka1-2015-quala/tasks/tenka1_2015_qualA_c,nan
ハシポン,https://atcoder.jp/contests/tenka1-2015-quala/tasks/tenka1_2015_qualA_d,nan
天下一魔法使い,https://atcoder.jp/contests/tenka1-2015-quala/tasks/tenka1_2015_qualA_e,nan
天下一プログラマーコンテスト1998,https://atcoder.jp/contests/tenka1-2015-qualb/tasks/tenka1_2015_qualB_a,nan
天下一リテラル,https://atcoder.jp/contests/tenka1-2015-qualb/tasks/tenka1_2015_qualB_b,nan
擬二等辺三角形,https://atcoder.jp/contests/tenka1-2015-qualb/tasks/tenka1_2015_qualB_c,nan
天下一電卓英作文,https://atcoder.jp/contests/tenka1-2015-qualb/tasks/tenka1_2015_qualB_d,nan
天下一演算,https://atcoder.jp/contests/tenka1-2015-qualb/tasks/tenka1_2015_qualB_e,nan
今年の A 問題,https://atcoder.jp/contests/tenka1-2016-final/tasks/tenka1_2016_final_a,nan
今年の B 問題,https://atcoder.jp/contests/tenka1-2016-final/tasks/tenka1_2016_final_b,nan
たんごたくさん,https://atcoder.jp/contests/tenka1-2016-final/tasks/tenka1_2016_final_c,nan
右往左往,https://atcoder.jp/contests/tenka1-2016-final/tasks/tenka1_2016_final_d,nan
串焼きパーティ,https://atcoder.jp/contests/tenka1-2016-final/tasks/tenka1_2016_final_e,nan
Blind Purchase,https://atcoder.jp/contests/tenka1-2016-final/tasks/tenka1_2016_final_f,nan
天下一プログラマーゲーム,https://atcoder.jp/contests/tenka1-2016-quala/tasks/tenka1_2016_qualA_a,nan
PackDrop,https://atcoder.jp/contests/tenka1-2016-quala/tasks/tenka1_2016_qualA_b,nan
山田山本問題,https://atcoder.jp/contests/tenka1-2016-quala/tasks/tenka1_2016_qualA_c,nan
グラフィカルグラフ,https://atcoder.jp/contests/tenka1-2016-quala/tasks/tenka1_2016_qualA_d,nan
無限グラフ,https://atcoder.jp/contests/tenka1-2016-quala/tasks/tenka1_2016_qualA_e,nan
天下一合成関数,https://atcoder.jp/contests/tenka1-2016-qualb/tasks/tenka1_2016_qualB_a,nan
天下一魔力発電,https://atcoder.jp/contests/tenka1-2016-qualb/tasks/tenka1_2016_qualB_b,nan
天下一プログラマーコンテスト1999,https://atcoder.jp/contests/tenka1-2016-qualb/tasks/tenka1_2016_qualB_c,nan
天下一数列にクエリを投げます,https://atcoder.jp/contests/tenka1-2016-qualb/tasks/tenka1_2016_qualB_d,nan
天下一合体,https://atcoder.jp/contests/tenka1-2016-qualb/tasks/tenka1_2016_qualB_e,nan
Accepted...?,https://atcoder.jp/contests/tenka1-2017-beginner/tasks/tenka1_2017_a,nan
Different Distribution,https://atcoder.jp/contests/tenka1-2017-beginner/tasks/tenka1_2017_b,nan
4/N,https://atcoder.jp/contests/tenka1-2017/tasks/tenka1_2017_c,nan
IntegerotS,https://atcoder.jp/contests/tenka1-2017/tasks/tenka1_2017_d,nan
CARtesian Coodinate,https://atcoder.jp/contests/tenka1-2017/tasks/tenka1_2017_e,nan
ModularPowerEquation!!,https://atcoder.jp/contests/tenka1-2017/tasks/tenka1_2017_f,nan
Measure,https://atcoder.jp/contests/tenka1-2018-beginner/tasks/tenka1_2018_a,nan
Exchange,https://atcoder.jp/contests/tenka1-2018-beginner/tasks/tenka1_2018_b,nan
Align,https://atcoder.jp/contests/tenka1-2018/tasks/tenka1_2018_c,nan
Crossing,https://atcoder.jp/contests/tenka1-2018/tasks/tenka1_2018_d,nan
Equilateral,https://atcoder.jp/contests/tenka1-2018/tasks/tenka1_2018_e,nan
Circular,https://atcoder.jp/contests/tenka1-2018/tasks/tenka1_2018_f,nan
On the Way,https://atcoder.jp/contests/tenka1-2019-beginner/tasks/tenka1_2019_a,nan
*e**** ********e* *e****e* ****e**,https://atcoder.jp/contests/tenka1-2019-beginner/tasks/tenka1_2019_b,nan
Stones,https://atcoder.jp/contests/tenka1-2019/tasks/tenka1_2019_c,nan
Three Colors,https://atcoder.jp/contests/tenka1-2019/tasks/tenka1_2019_d,nan
Polynomial Divisors,https://atcoder.jp/contests/tenka1-2019/tasks/tenka1_2019_e,nan
Banned X,https://atcoder.jp/contests/tenka1-2019/tasks/tenka1_2019_f,nan
. The First Problem,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_a,nan
. Blackboard,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ab,nan
. Combination,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ad,nan
. Divisors,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ae,nan
. Game 1,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_af,nan
. Game 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ag,nan
. Game 3,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ah,nan
. Game 4,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ai,nan
. Travel,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_aj,nan
. Travel 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ak,nan
. Black Company 1,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_al,nan
. Triangle,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_an,nan
. Tile Coloring,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ao,nan
. Soccer,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ap,nan
. Travel 3,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_aq,nan
. Change and Reverse,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ar,nan
. Card Elimination,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_as,nan
. Heuristic 1,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_at,nan
. Heuristic 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_aw,nan
. Stack,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ay,nan
. Queue,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_az,nan
. Linear Search,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_b,nan
. Priority Queue,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ba,nan
. Map,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bb,nan
. Set,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bc,nan
. String Hash,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bd,nan
. Doubling,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_be,nan
. RMQ (Range Maximum Queries),https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bf,nan
. RSQ (Range Sum Queries),https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bg,nan
. Stock Price,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bh,nan
. Adjacent Vertices,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bi,nan
. Shortest Path 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bl,nan
. Road to Promotion,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bm,nan
. Connect Query,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bn,nan
. MST (Minimum Spanning Tree),https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bo,nan
. Maximum Flow,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bp,nan
. Bipartite Matching,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bq,nan
. Lanterns,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_br,nan
. Homework,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bs,nan
. Tile Painting,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bt,nan
. Marathon Route,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bu,nan
. Board Game,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bv,nan
. Examination,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bw,nan
. River Crossing,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bx,nan
. A+B Problem,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_bz,nan
. Two Cards,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_c,nan
. Divisor Check,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ca,nan
. Supermarket 1,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cb,nan
. Binary Representation 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cc,nan
. Lottery,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ce,nan
. Counting Points,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cg,nan
. Papers,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ch,nan
. Binary Search 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cj,nan
. Equation,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ck,nan
. Supermarket 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cl,nan
. Another Subset Sum,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cm,nan
. Frog 1 with Restoration,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cp,nan
. Subset Sum with Restoration,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cq,nan
. Knapsack 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cr,nan
. Edit Distance,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cs,nan
. Longest Subpalindrome,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ct,nan
. Traveling Salesman Problem,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cv,nan
. Many Boxes,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cw,nan
. Output Prime Numbers,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cy,nan
. Calculate LCM,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_cz,nan
. Binary Representation 1,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_d,nan
. Power Hard,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_db,nan
. Combination 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dc,nan
. Divisors Hard,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dd,nan
. Game 5,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_de,nan
. Game 6,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_df,nan
. Game 7,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dg,nan
. Switching Lights,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_di,nan
. Sum of Digits,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dj,nan
. Heights of Grass,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dk,nan
. Taro's Job,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dl,nan
. Divide by 100,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dm,nan
. Reverse of Euclid,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dn,nan
. Two Faced Cards,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_do,nan
. Quiz Contest,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dp,nan
. Grid Operations,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dq,nan
. Blackboard 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dr,nan
. Bracket,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dx,nan
. Ball Simulation,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_dy,nan
. Three Cards,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_e,nan
. Counting Same Values,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ea,nan
. Difference,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_eb,nan
. Palindrome Queries,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ec,nan
. Calculator,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ed,nan
. Jumping,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ee,nan
. Number of Inversions,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ef,nan
. Influencer,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_eh,nan
. Print a Path,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ei,nan
. Shortest Path with Restoration,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ek,nan
. Road to Promotion Hard,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_el,nan
. Typhoon,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_em,nan
. Max MST,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_en,nan
. ALGO Express,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_eo,nan
. Black Company 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ep,nan
. Tax Rate,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ey,nan
. Two Balls,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ez,nan
. Stock Queries,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fa,nan
. Divisor Enumeration,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fb,nan
. Lucky Numbers,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fc,nan
. Regular Graph,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fd,nan
. ALGO MARKET,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fe,nan
. ALGO4,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_ff,nan
. A Long Grid,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fh,nan
. Election,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fi,nan
. Taro the Novel Writer,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fj,nan
. Select 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fk,nan
. Commute Route,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fl,nan
. Many Meetings,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fm,nan
. Flights,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fn,nan
. Strange Data Structure?,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fo,nan
. Gasoline Optimization Problem,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fq,nan
. Mayor's Challenge,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fr,nan
. Event Attendance,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_g,nan
. Two Dimensional Sum,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_h,nan
. Winter in ALGO Kingdom,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_i,nan
. Resort Hotel,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_j,nan
. Binary Search 1,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_k,nan
. Printer,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_l,nan
. Close Pairs,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_m,nan
. Four Boxes,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_n,nan
. Compression,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_o,nan
. Dungeon 1（※初版第 1 刷の B22 も同じ問題です）,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_p,nan
. Dungeon 2,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_q,nan
. Subset Sum,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_r,nan
. Knapsack 1,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_s,nan
. LCS,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_t,nan
. Block Game,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_u,nan
. Sugoroku,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_v,nan
. All Free,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_w,nan
. LIS,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_x,nan
. Number of Routes,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_y,nan
. Prime Check,https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_z,nan
センター採点,https://atcoder.jp/contests/language-test-ver1/tasks/test001_a,nan
帰ってきた器物損壊！高橋君,https://atcoder.jp/contests/language-test-ver1/tasks/test001_b,nan
おとぎの国の高橋君,https://atcoder.jp/contests/language-test-ver1/tasks/test001_c,nan
超大型連休,https://atcoder.jp/contests/language-test-ver1/tasks/test001_d,nan
平均値太郎の憂鬱,https://atcoder.jp/contests/language-test-ver1/tasks/test001_e,nan
THE☆たこ焼き祭り2012,https://atcoder.jp/contests/language-test-ver1/tasks/test001_f,nan
アルファベット探し,https://atcoder.jp/contests/language-test-ver1/tasks/test001_g,nan
足し算の宿題 (A + B Home work),https://atcoder.jp/contests/tkppc/tasks/tkppc2015_a,nan
金髪の少女 (Blonde girls),https://atcoder.jp/contests/tkppc/tasks/tkppc2015_b,nan
お姉ちゃんって呼んで (Call me sister),https://atcoder.jp/contests/tkppc/tasks/tkppc2015_c,nan
サポーター (Supporter),https://atcoder.jp/contests/tkppc/tasks/tkppc2015_d,nan
不可視境界線 (The Invisible Borderline),https://atcoder.jp/contests/tkppc/tasks/tkppc2015_e,nan
吹奏楽部 (Brass Band),https://atcoder.jp/contests/tkppc/tasks/tkppc2015_f,nan
おおきなかずを作った (I made a huge number),https://atcoder.jp/contests/tkppc/tasks/tkppc2015_g,nan
私、木になります (I become a tree),https://atcoder.jp/contests/tkppc/tasks/tkppc2015_h,nan
重要証拠 (Important evidence),https://atcoder.jp/contests/tkppc/tasks/tkppc2015_i,nan
仕事をしよう！ (Working!),https://atcoder.jp/contests/tkppc/tasks/tkppc2015_j,nan
入社（Join the Company）,https://atcoder.jp/contests/tkppc2/tasks/tkppc2016_a,nan
書き換え（Rewrite）,https://atcoder.jp/contests/tkppc2/tasks/tkppc2016_b,nan
有給休暇（Paid Vacation）,https://atcoder.jp/contests/tkppc2/tasks/tkppc2016_c,nan
エンブレム（Emblem）,https://atcoder.jp/contests/tkppc2/tasks/tkppc2016_d,nan
歩くNPCたち（Walking NPCs）,https://atcoder.jp/contests/tkppc2/tasks/tkppc2016_e,nan
NPCの家 (NPC's House),https://atcoder.jp/contests/tkppc2/tasks/tkppc2016_f,nan
貢物（Tribute）,https://atcoder.jp/contests/tkppc2/tasks/tkppc2016_g,nan
デバッグ（Debug）,https://atcoder.jp/contests/tkppc2/tasks/tkppc2016_h,nan
ボス（Boss）,https://atcoder.jp/contests/tkppc2/tasks/tkppc2016_i,nan
次のお仕事 (New Game),https://atcoder.jp/contests/tkppc2/tasks/tkppc2016_j,nan
時差,https://atcoder.jp/contests/tkppc3/tasks/tkppc3_a,nan
鰻と忖度,https://atcoder.jp/contests/tkppc3/tasks/tkppc3_b,nan
新入生歓迎数列   Easy,https://atcoder.jp/contests/tkppc3/tasks/tkppc3_c,nan
巨大チェスボード,https://atcoder.jp/contests/tkppc3/tasks/tkppc3_d,nan
デフレゲーム,https://atcoder.jp/contests/tkppc3/tasks/tkppc3_e,nan
天使とふすま,https://atcoder.jp/contests/tkppc3/tasks/tkppc3_f,nan
パソコンの買い替え,https://atcoder.jp/contests/tkppc3/tasks/tkppc3_g,nan
新入生歓迎数列   Hard,https://atcoder.jp/contests/tkppc3/tasks/tkppc3_h,nan
王国と M 種類の店,https://atcoder.jp/contests/tkppc3/tasks/tkppc3_i,nan
円の重なり,https://atcoder.jp/contests/tkppc3/tasks/tkppc3_j,nan
ヘビがヘビー,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_a,nan
Long Long Ago,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_b,nan
異世界転生,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_c,nan
スキップ,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_d,nan
Osmium_1008と課題,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_e,nan
不便な橋,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_f,nan
バラバラ掛け算,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_g,nan
don't be late,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_h,nan
school competition 1,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_i,nan
school competition 2,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_j,nan
天使と宿題,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_k,nan
じゃんけん,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_l,nan
Pakenのうさぎ,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_m,nan
multiple,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_n,nan
Height Changer,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_o,nan
Flip Cards,https://atcoder.jp/contests/tkppc4-1/tasks/tkppc4_1_p,nan
Jumping!!,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_a,nan
Stalker,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_b,nan
Parity,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_c,nan
新入生歓迎数列 2,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_d,nan
引きこもり,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_e,nan
Segtree☆Magica,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_f,nan
平均レーティング,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_g,nan
打鍵戦争,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_h,nan
互いに素でないペアを持つ N の約数の集合の個数を求めてください。,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_i,nan
ドライブ旅行,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_j,nan
時をかけるTMJN,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_k,nan
建物と魔女,https://atcoder.jp/contests/tkppc4-2/tasks/tkppc4_2_l,nan
技術室奥プログラミングコンテストの未来,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_a,nan
カラフルパ研,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_b,nan
Grip,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_c,nan
ABS SUM,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_d,nan
And Xor Or,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_e,nan
Frog and Tadpole,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_f,nan
At Most Two,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_g,nan
Marbles and Boxes,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_h,nan
1< >k,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_i,nan
Two Paths,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_j,nan
Dial Key,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_k,nan
Polyomino Tiling,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_l,nan
To The LCA,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_m,nan
Jump and Walk,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_n,nan
ペンギンくんの仕事計画,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_o,nan
Game on Colored Tree,https://atcoder.jp/contests/tkppc6-1/tasks/tkppc6_1_p,nan
>_<,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_a,nan
Replace to the Other,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_b,nan
Strange Paper,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_c,nan
NG Word Game,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_d,nan
Exactly K Triangles,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_e,nan
Shortest Path Construction,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_f,nan
Must be Distinct!,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_g,nan
Reversi Pieces,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_h,nan
旅人計画問題2,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_i,nan
Common Divisors Shortest Path Queries,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_j,nan
Ball in the Box 2,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_k,nan
Go To,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_l,nan
山分け,https://atcoder.jp/contests/tkppc6-2/tasks/tkppc6_2_m,nan
Nickname,https://atcoder.jp/contests/tokiomarine2020/tasks/tokiomarine2020_a,nan
Tag,https://atcoder.jp/contests/tokiomarine2020/tasks/tokiomarine2020_b,nan
Lamps,https://atcoder.jp/contests/tokiomarine2020/tasks/tokiomarine2020_c,nan
Knapsack Queries on a tree,https://atcoder.jp/contests/tokiomarine2020/tasks/tokiomarine2020_d,nan
O(rand),https://atcoder.jp/contests/tokiomarine2020/tasks/tokiomarine2020_e,nan
Triangles,https://atcoder.jp/contests/tokiomarine2020/tasks/tokiomarine2020_f,nan
Area Sum,https://atcoder.jp/contests/toyota2023spring-final-open/tasks/toyota2023spring_final_a,nan
Best Strategy,https://atcoder.jp/contests/toyota2023spring-final-open/tasks/toyota2023spring_final_b,nan
Count Dividing XOR,https://atcoder.jp/contests/toyota2023spring-final-open/tasks/toyota2023spring_final_c,nan
Dual Rotation,https://atcoder.jp/contests/toyota2023spring-final-open/tasks/toyota2023spring_final_d,nan
East Northeast,https://atcoder.jp/contests/toyota2023spring-final-open/tasks/toyota2023spring_final_e,nan
Forbidden Pattern,https://atcoder.jp/contests/toyota2023spring-final-open/tasks/toyota2023spring_final_f,nan
Git Gud,https://atcoder.jp/contests/toyota2023spring-final-open/tasks/toyota2023spring_final_g,nan
Transit Warehouse,https://atcoder.jp/contests/toyota2023summer-final-open/tasks/toyota2023summer_final_a,nan
Container Loading,https://atcoder.jp/contests/toyota-hc-2023spring/tasks/toyota_hc_2023spring_a,nan
整数割り算,https://atcoder.jp/contests/tricky/tasks/tricky_1,nan
一変数方程式,https://atcoder.jp/contests/tricky/tasks/tricky_2,nan
階乗と素因数,https://atcoder.jp/contests/tricky/tasks/tricky_3,nan
高橋くんレーシング,https://atcoder.jp/contests/tricky/tasks/tricky_4,nan
雲と影,https://atcoder.jp/contests/tricky/tasks/tricky_5,nan
ぼくの学生証,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_a,nan
ラー油,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_b,nan
おおおかやま,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_c,nan
文字列と素数,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_d,nan
マス目色ぬり,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_e,nan
レシート,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_f,nan
titech分離,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_g,nan
包囲,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_h,nan
そーっとソート,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_i,nan
指さし,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_j,nan
麻雀,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_k,nan
グラフ色ぬり,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_l,nan
コインと無向グラフ,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_m,nan
何かグラフの問題,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_n,nan
数列色ぬり,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_o,nan
Dancing stars on regular expression!,https://atcoder.jp/contests/ttpc2015/tasks/ttpc2015_p,nan
Next TTPC,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_a,nan
okyoech,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_b,nan
XOR Filling,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_c,nan
素数取りゲーム,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_d,nan
N法陣,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_e,nan
Road Construction,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_f,nan
Palindromic Love Letter,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_g,nan
救援,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_h,nan
I hate P,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_i,nan
動的無計画法,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_j,nan
サーキュレーション,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_k,nan
多項式の零点の個数,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_l,nan
Inversion Numbers of Tree,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_m,nan
瓜二つ,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_n,nan
oneesan puzzle,https://atcoder.jp/contests/ttpc2019/tasks/ttpc2019_o,nan
Next TTPC 2,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_a,nan
Magical Wallet,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_b,nan
Five Med Sum,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_c,nan
XOR Tree Path,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_d,nan
Name Value,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_e,nan
Make Convex Sequence,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_f,nan
Count Arithmetic Progression,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_g,nan
Colorful Graph,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_h,nan
XOR Reachable,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_i,nan
Jewel Game,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_j,nan
Peaceful Results,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_k,nan
Range NEQ,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_l,nan
Many Products,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_m,nan
Expanded Hull,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_n,nan
Parallel Processing,https://atcoder.jp/contests/ttpc2022/tasks/ttpc2022_o,nan
Numerous Elimination,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_a,nan
Almost Large,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_b,nan
Yet Another Simple Math Problem,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_c,nan
Spacecraft,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_d,nan
R Connected Components,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_e,nan
N^a (log N)^b,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_f,nan
Cola,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_g,nan
404 Chotto Found,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_h,nan
T Tile Placement Counting,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_i,nan
Set Construction,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_j,nan
Dense Planting,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_k,nan
Next TTPC 3,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_l,nan
Sum is Integer,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_m,nan
Bracket Sequestion,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_n,nan
2D Parentheses,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_o,nan
Bridge Elimination,https://atcoder.jp/contests/ttpc2023/tasks/ttpc2023_p,nan
Sum Sort,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_a,nan
Snowy Aobayama,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_b,nan
Flip Grid,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_c,nan
Zeta Sum,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_d,nan
00 11 Rotation,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_e,nan
Block Rotation,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_f,nan
All Pairs,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_g,nan
Next Permutation,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_h,nan
Count Setwise Coprime,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_i,nan
AMidA,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_j,nan
Lebesgue Integral,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_k,nan
Inversion High and Low,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_l,nan
Fractal Tree Isomorphism,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_m,nan
Matrix Game,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_n,nan
Equidistant Binary String,https://atcoder.jp/contests/tupc2022/tasks/tupc2022_o,nan
Namboku / Tozai Line,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_a,nan
012 Grid,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_b,nan
Topological Sort,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_c,nan
Shift Puzzle,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_d,nan
And DNA,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_e,nan
Hotel,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_f,nan
Min Nim,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_g,nan
Count Pseudo Palindromes,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_h,nan
Maximize Array,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_i,nan
Colored Complete Graph,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_j,nan
(mod HW+1),https://atcoder.jp/contests/tupc2023/tasks/tupc2023_k,nan
Random Mex,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_l,nan
Vivid Colors,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_m,nan
Do Not Turn Back,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_n,nan
0100 Insertion,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_o,nan
Sub Brackets,https://atcoder.jp/contests/tupc2023/tasks/tupc2023_p,nan
. Yokan Party（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_a,nan
. Sign Up Requests （★2）,https://atcoder.jp/contests/typical90/tasks/typical90_aa,nan
. Cluttered Paper（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_ab,nan
. Long Bricks（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_ac,nan
. K Factors（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_ad,nan
. VS AtCoder（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_ae,nan
. AtCoder Ekiden（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_af,nan
. Not Too Bright（★2）,https://atcoder.jp/contests/typical90/tasks/typical90_ag,nan
. There are few types of elements（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_ah,nan
. Preserve Connectivity（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_ai,nan
. Max Manhattan Distance（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_aj,nan
. Don't Leave the Spice（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_ak,nan
. Large LCM（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_al,nan
. Tree Distance（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_am,nan
. Get More Money（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_an,nan
. Piles in AtCoder Farm（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_ao,nan
. Multiple of 9（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_ap,nan
. Maze Challenge with Lack of Sleep（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_aq,nan
. Shift and Swapping（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_ar,nan
. Simple Grouping（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_as,nan
. I Love 46（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_at,nan
. Monochromatic Diagonal（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_au,nan
. I will not drop out（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_av,nan
. Flip Digits 2（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_aw,nan
. Stair Jump（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_ax,nan
. Typical Shop（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_ay,nan
. Dice Product（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_az,nan
. Encyclopedia of Parentheses（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_b,nan
. Discrete Dowsing（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_ba,nan
. Takahashi Number（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_bb,nan
. Select 5（★2）,https://atcoder.jp/contests/typical90/tasks/typical90_bc,nan
. Lucky Bag（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_bd,nan
. Flip Flap（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_be,nan
. Original Calculator（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_bf,nan
. Many Graph Queries（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_bg,nan
. Chimera（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_bh,nan
. Deck（★2）,https://atcoder.jp/contests/typical90/tasks/typical90_bi,nan
. Paint All（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_bj,nan
. Monochromatic Subgrid（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_bk,nan
. Uplift（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_bl,nan
. RGB Balls 2（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_bm,nan
. Various Arrays（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_bn,nan
. Base 8 to 9（★2）,https://atcoder.jp/contests/typical90/tasks/typical90_bo,nan
. Paired Information（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_bp,nan
. Colorful Blocks 2（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_bq,nan
. Plant Planning（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_br,nan
. Fuzzy Priority（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_bs,nan
. Loop Railway Plan（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_bt,nan
. We Need Both a and b（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_bu,nan
. ABC String 2（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_bv,nan
. Magic For Balls（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_bw,nan
. Cake Cut（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_bx,nan
. Planes on a 2D Plane（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_by,nan
. Easy Graph Problem（★2）,https://atcoder.jp/contests/typical90/tasks/typical90_bz,nan
. Longest Circular Road（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_c,nan
. Two by Two（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_ca,nan
. Let's Share Bit（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_cb,nan
. Friendly Group（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_cc,nan
. Counting Numbers（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_cd,nan
. Colorful Graph（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_ce,nan
. There are two types of characters（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_cf,nan
. Multiplication 085（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_cg,nan
. Snuke's Favorite Arrays（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_ch,nan
. Chokudai's Demand（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_ci,nan
. Similar but Different Ways（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_cj,nan
. Partitions and Inversions（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_ck,nan
. Tenkei90's Last Problem（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_cl,nan
. Cross Sum（★2）,https://atcoder.jp/contests/typical90/tasks/typical90_d,nan
. Restricted Digits（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_e,nan
. Smallest Subsequence（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_f,nan
. CP Classes（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_g,nan
. AtCounter（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_h,nan
. Three Point Angle（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_i,nan
. Score Sum Queries（★2）,https://atcoder.jp/contests/typical90/tasks/typical90_j,nan
. Gravy Jobs（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_k,nan
. Red Painting（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_l,nan
. Passing（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_m,nan
. We Used to Sing a Song Together（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_n,nan
. Don't be too close（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_o,nan
. Minimum Coins（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_p,nan
. Crossing Segments（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_q,nan
. Statue of Chokudai（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_r,nan
. Pick Two（★6）,https://atcoder.jp/contests/typical90/tasks/typical90_s,nan
. Log Inequality（★3）,https://atcoder.jp/contests/typical90/tasks/typical90_t,nan
. Come Back in One Piece（★5）,https://atcoder.jp/contests/typical90/tasks/typical90_u,nan
. Cubic Cake（★2）,https://atcoder.jp/contests/typical90/tasks/typical90_v,nan
. Avoid War（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_w,nan
. Select +／  One（★2）,https://atcoder.jp/contests/typical90/tasks/typical90_x,nan
. Digit Product Equation（★7）,https://atcoder.jp/contests/typical90/tasks/typical90_y,nan
. Independent Set on a Tree（★4）,https://atcoder.jp/contests/typical90/tasks/typical90_z,nan
UkuNumber,https://atcoder.jp/contests/ukuku09/tasks/ukuku09_a,nan
Sprinkler,https://atcoder.jp/contests/ukuku09/tasks/ukuku09_b,nan
Maze,https://atcoder.jp/contests/ukuku09/tasks/ukuku09_c,nan
ukuku,https://atcoder.jp/contests/ukuku09/tasks/ukuku09_d,nan
Couple,https://atcoder.jp/contests/ukuku09/tasks/ukuku09_e,nan
Union Find,https://atcoder.jp/contests/atc001/tasks/unionfind_a,nan
プログラミングコンテスト,https://atcoder.jp/contests/utpc2011/tasks/utpc2011_1,nan
乱択平衡分二分探索木,https://atcoder.jp/contests/utpc2011/tasks/utpc2011_10,nan
巡回セールスマン問題,https://atcoder.jp/contests/utpc2011/tasks/utpc2011_11,nan
L番目の数字,https://atcoder.jp/contests/utpc2011/tasks/utpc2011_12,nan
(iwi),https://atcoder.jp/contests/utpc2011/tasks/utpc2011_2,nan
[[iwi]],https://atcoder.jp/contests/utpc2011/tasks/utpc2011_3,nan
停止問題,https://atcoder.jp/contests/utpc2011/tasks/utpc2011_4,nan
ファーストアクセプタンス,https://atcoder.jp/contests/utpc2011/tasks/utpc2011_5,nan
全域木,https://atcoder.jp/contests/utpc2011/tasks/utpc2011_6,nan
プログラミングコンテストチャレンジブック,https://atcoder.jp/contests/utpc2011/tasks/utpc2011_7,nan
キャッシュ戦略,https://atcoder.jp/contests/utpc2011/tasks/utpc2011_8,nan
ビット演算,https://atcoder.jp/contests/utpc2011/tasks/utpc2011_9,nan
2012年12月02日,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_01,nan
残像に口紅を,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_02,nan
森ですか？,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_03,nan
地図が２枚,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_04,nan
選挙,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_05,nan
Uinny,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_06,nan
k番目の文字列,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_07,nan
区間スケジューリングクエリ,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_08,nan
最短路クエリ,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_09,nan
きたまさの逆襲,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_10,nan
ラッピング,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_11,nan
じょうしょうツリー,https://atcoder.jp/contests/utpc2012/tasks/utpc2012_12,nan
UTPC,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_01,nan
13月,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_02,nan
直径,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_03,nan
壊れかけのヒープ,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_04,nan
2 SAT,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_05,nan
魔法の糸,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_06,nan
夏休みの掃除当番,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_07,nan
Asteroids2,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_08,nan
支配と友好,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_09,nan
K番目の閉路,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_10,nan
辞書順最小頂点被覆,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_11,nan
1円ロード,https://atcoder.jp/contests/utpc2013/tasks/utpc2013_12,nan
二重否定除去法則,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_a,nan
交点,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_b,nan
最小カットと最大カット,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_c,nan
ラボライブ　タフグローバルフェスティバル,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_d,nan
宝くじ,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_e,nan
チェックディジット,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_f,nan
唯一の組み合わせ,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_g,nan
回すだけ,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_h,nan
盆栽,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_i,nan
看板の塗り替え,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_j,nan
乱数調整,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_k,nan
セミ時雨ハッシュ,https://atcoder.jp/contests/utpc2014/tasks/utpc2014_l,nan
Row of Tents,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_a,nan
JANKEN Machine,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_b,nan
Range Flip,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_c,nan
Idol Group Costume,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_d,nan
Sort Segments,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_e,nan
Save Your MP,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_f,nan
D. D. Construction,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_g,nan
Grid Eraser,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_h,nan
UTPC Kingdom,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_i,nan
Merge and Decrement,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_j,nan
Special Chopsticks,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_k,nan
Euclidean Distance Product,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_l,nan
Not Another Geometry Game!,https://atcoder.jp/contests/utpc2020/tasks/utpc2020_m,nan
Make UTPC,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_a,nan
Swap and Maximize,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_b,nan
Product Matching,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_c,nan
Chain Graph Pair,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_d,nan
Bounding Box,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_e,nan
Red and Blue Medals,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_f,nan
Matrix Compressor,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_g,nan
Quantum Multiplication,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_h,nan
Card Decks,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_i,nan
Do you like Interval Scheduling Problems?,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_j,nan
Divide Polynomials by #Subset Sums,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_k,nan
Maze Game,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_l,nan
Open the Door,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_m,nan
Tree Swapping,https://atcoder.jp/contests/utpc2021/tasks/utpc2021_n,nan
Shuffle and GCD,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_a,nan
Cross Laser Beam,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_b,nan
Nim is Time consuming,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_c,nan
Balance,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_d,nan
Parallel Swapping,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_e,nan
K inversions,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_f,nan
K flipping,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_g,nan
Digit Slot,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_h,nan
Which must be deleted?,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_i,nan
Divide and Sort,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_j,nan
Grid Coloring,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_k,nan
Small RPS Tournament,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_l,nan
Minimize XOR by Redistribution,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_m,nan
01 String Game,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_n,nan
Move to Rest,https://atcoder.jp/contests/utpc2022/tasks/utpc2022_o,nan
Again Make UTPC,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_a,nan
Black or White 2,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_b,nan
Contour Multiplication,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_c,nan
DRD String,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_d,nan
Equally Dividing,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_e,nan
Flip or Not,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_f,nan
Graph Weighting,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_g,nan
Huge Segment Tree,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_h,nan
I Love Marathon Contest,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_i,nan
Japanese Gift Money,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_j,nan
Kth Sum,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_k,nan
Largest Triangle,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_l,nan
Majority and Permutation,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_m,nan
Number of Abbreviations,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_n,nan
Optimal Train Operation,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_o,nan
Priority Queue 3,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_p,nan
Quotient Sum,https://atcoder.jp/contests/utpc2023/tasks/utpc2023_q,nan
Satellite data compression,https://atcoder.jp/contests/wn2017_1/tasks/wn2017_1_a,nan
Magic,https://atcoder.jp/contests/wtf19-open/tasks/wtf19_a,nan
Multiple of Nine,https://atcoder.jp/contests/wtf19-open/tasks/wtf19_b,nan
Triangular Lamps Easy,https://atcoder.jp/contests/wtf19-open/tasks/wtf19_c1,nan
Triangular Lamps Hard,https://atcoder.jp/contests/wtf19-open/tasks/wtf19_c2,nan
Distinct Boxes,https://atcoder.jp/contests/wtf19-open/tasks/wtf19_d,nan
e,https://atcoder.jp/contests/wtf19-open/tasks/wtf19_e,nan
Save the Monsters,https://atcoder.jp/contests/wtf22-day1-open/tasks/wtf22_day1_a,nan
Non Overlapping Swaps,https://atcoder.jp/contests/wtf22-day1-open/tasks/wtf22_day1_b,nan
Shrink the Tree,https://atcoder.jp/contests/wtf22-day1-open/tasks/wtf22_day1_c,nan
Welcome to Tokyo!,https://atcoder.jp/contests/wtf22-day1-open/tasks/wtf22_day1_d,nan
Sort A[i] i,https://atcoder.jp/contests/wtf22-day1-open/tasks/wtf22_day1_e,nan
Hat Puzzle,https://atcoder.jp/contests/wtf22-day2/tasks/wtf22_day2_a,nan
The Greatest Two,https://atcoder.jp/contests/wtf22-day2/tasks/wtf22_day2_b,nan
Jewel Pairs,https://atcoder.jp/contests/wtf22-day2/tasks/wtf22_day2_c,nan
Cat Jumps,https://atcoder.jp/contests/wtf22-day2/tasks/wtf22_day2_d,nan
Adjacent Xor Game,https://atcoder.jp/contests/wtf22-day2/tasks/wtf22_day2_e,nan
招待状,https://atcoder.jp/contests/wupc2012/tasks/wupc2012_1,nan
パスワード,https://atcoder.jp/contests/wupc2012/tasks/wupc2012_2,nan
自宅からの脱出,https://atcoder.jp/contests/wupc2012/tasks/wupc2012_3,nan
三角パズル,https://atcoder.jp/contests/wupc2012/tasks/wupc2012_4,nan
会場への道,https://atcoder.jp/contests/wupc2012/tasks/wupc2012_5,nan
最後の問題,https://atcoder.jp/contests/wupc2012/tasks/wupc2012_6,nan
WAsedAC,https://atcoder.jp/contests/wupc2019/tasks/wupc2019_a,nan
10 puzzle,https://atcoder.jp/contests/wupc2019/tasks/wupc2019_b,nan
Permutation City,https://atcoder.jp/contests/wupc2019/tasks/wupc2019_c,nan
Choose Your Characters,https://atcoder.jp/contests/wupc2019/tasks/wupc2019_d,nan
Artist,https://atcoder.jp/contests/wupc2019/tasks/wupc2019_e,nan
RPG,https://atcoder.jp/contests/wupc2019/tasks/wupc2019_f,nan
Teishoku,https://atcoder.jp/contests/wupc2019/tasks/wupc2019_g,nan
Doki Doki Programming Clubs!,https://atcoder.jp/contests/wupc2019/tasks/wupc2019_h,nan
Ramen,https://atcoder.jp/contests/wupc2019/tasks/wupc2019_i,nan
Color Ball,https://atcoder.jp/contests/wupc2019/tasks/wupc2019_j,nan
団子とうさぎ,https://atcoder.jp/contests/wupc2nd/tasks/wupc_01,nan
雨上がり,https://atcoder.jp/contests/wupc2nd/tasks/wupc_02,nan
至高のケーキ,https://atcoder.jp/contests/wupc2nd/tasks/wupc_03,nan
5キューブ,https://atcoder.jp/contests/wupc2nd/tasks/wupc_04,nan
独立記念日,https://atcoder.jp/contests/wupc2nd/tasks/wupc_05,nan
僕は宇宙人,https://atcoder.jp/contests/wupc2nd/tasks/wupc_06,nan
だるま落とし,https://atcoder.jp/contests/wupc2nd/tasks/wupc_07,nan
ダイヤグラム,https://atcoder.jp/contests/wupc2nd/tasks/wupc_08,nan
その味は甘くて,https://atcoder.jp/contests/wupc2nd/tasks/wupc_09,nan
Array Sum,https://atcoder.jp/contests/xmascon16midnight/tasks/xmascon16_a,nan
Binary Tree,https://atcoder.jp/contests/xmascon16midnight/tasks/xmascon16_b,nan
Cutting Swiss Roll,https://atcoder.jp/contests/xmascon16midnight/tasks/xmascon16_c,nan
Distributed Sorting,https://atcoder.jp/contests/xmascon16midnight/tasks/xmascon16_d,nan
"Examination, Estimation",https://atcoder.jp/contests/xmascon16midnight/tasks/xmascon16_e,nan
Fifty Fifty?,https://atcoder.jp/contests/xmascon16midnight/tasks/xmascon16_f,nan
Guide Passengers,https://atcoder.jp/contests/xmascon16midnight/tasks/xmascon16_g,nan
High powered Illuminations,https://atcoder.jp/contests/xmascon16midnight/tasks/xmascon16_h,nan
ISOLT,https://atcoder.jp/contests/xmascon16midnight/tasks/xmascon16_i,nan
Just a Single Testcase,https://atcoder.jp/contests/xmascon16midnight/tasks/xmascon16_j,nan
Compressor,https://atcoder.jp/contests/xmascon17/tasks/xmascon17_a,nan
"Hello, Xmas Contest 2017",https://atcoder.jp/contests/xmascon17/tasks/xmascon17_b,nan
Revenge of Kurousa,https://atcoder.jp/contests/xmascon17/tasks/xmascon17_c,nan
Inversion Number,https://atcoder.jp/contests/xmascon17/tasks/xmascon17_d,nan
String Problem,https://atcoder.jp/contests/xmascon17/tasks/xmascon17_e,nan
Tree Disassembly,https://atcoder.jp/contests/xmascon17/tasks/xmascon17_f,nan
Maze,https://atcoder.jp/contests/xmascon17/tasks/xmascon17_g,nan
Ango,https://atcoder.jp/contests/xmascon17/tasks/xmascon17_h,nan
SAT Puzzle,https://atcoder.jp/contests/xmascon17/tasks/xmascon17_i,nan
Art Time,https://atcoder.jp/contests/xmascon18/tasks/xmascon18_a,nan
Bit Smaller,https://atcoder.jp/contests/xmascon18/tasks/xmascon18_b,nan
CombinatioN,https://atcoder.jp/contests/xmascon18/tasks/xmascon18_c,nan
Devilish Dice,https://atcoder.jp/contests/xmascon18/tasks/xmascon18_d,nan
Exclusive☆OR,https://atcoder.jp/contests/xmascon18/tasks/xmascon18_e,nan
Fluffy Fox,https://atcoder.jp/contests/xmascon18/tasks/xmascon18_f,nan
Good Game,https://atcoder.jp/contests/xmascon18/tasks/xmascon18_g,nan
"Hello, Xmas Contest 2018",https://atcoder.jp/contests/xmascon18/tasks/xmascon18_h,nan
Interesting Equation,https://atcoder.jp/contests/xmascon18/tasks/xmascon18_i,nan
Japanese Exponentation,https://atcoder.jp/contests/xmascon18/tasks/xmascon18_j,nan
Signboard 1,https://atcoder.jp/contests/xmascon19/tasks/xmascon19_a,nan
Set of Integers,https://atcoder.jp/contests/xmascon19/tasks/xmascon19_b,nan
Sokoban,https://atcoder.jp/contests/xmascon19/tasks/xmascon19_c,nan
Sum of ( 1)^f(n),https://atcoder.jp/contests/xmascon19/tasks/xmascon19_d,nan
Sum of f(n),https://atcoder.jp/contests/xmascon19/tasks/xmascon19_e,nan
Stamps 1,https://atcoder.jp/contests/xmascon19/tasks/xmascon19_f,nan
Stamps 2,https://atcoder.jp/contests/xmascon19/tasks/xmascon19_g,nan
Stamps 3,https://atcoder.jp/contests/xmascon19/tasks/xmascon19_h,nan
Stamps 4,https://atcoder.jp/contests/xmascon19/tasks/xmascon19_i,nan
Sub Post Correspondence Problem,https://atcoder.jp/contests/xmascon19/tasks/xmascon19_j,nan
Set of Trees,https://atcoder.jp/contests/xmascon19/tasks/xmascon19_k,nan
Signboard 2,https://atcoder.jp/contests/xmascon19/tasks/xmascon19_l,nan
Additive Subtractive Stamps,https://atcoder.jp/contests/xmascon20/tasks/xmascon20_a,nan
Beterminant,https://atcoder.jp/contests/xmascon20/tasks/xmascon20_b,nan
Candies Candidates,https://atcoder.jp/contests/xmascon20/tasks/xmascon20_c,nan
Determinant,https://atcoder.jp/contests/xmascon20/tasks/xmascon20_d,nan
Eternal Dice,https://atcoder.jp/contests/xmascon20/tasks/xmascon20_e,nan
Famous in Russia,https://atcoder.jp/contests/xmascon20/tasks/xmascon20_f,nan
Graph Products,https://atcoder.jp/contests/xmascon20/tasks/xmascon20_g,nan
Hierarchical Phylogeny,https://atcoder.jp/contests/xmascon20/tasks/xmascon20_h,nan
Implement Me,https://atcoder.jp/contests/xmascon20/tasks/xmascon20_i,nan
At Random,https://atcoder.jp/contests/xmascon21/tasks/xmascon21_a,nan
Bad Mood,https://atcoder.jp/contests/xmascon21/tasks/xmascon21_b,nan
Count Me,https://atcoder.jp/contests/xmascon21/tasks/xmascon21_c,nan
Determinant?,https://atcoder.jp/contests/xmascon21/tasks/xmascon21_d,nan
E and PI,https://atcoder.jp/contests/xmascon21/tasks/xmascon21_e,nan
Fractal and Palindrome,https://atcoder.jp/contests/xmascon21/tasks/xmascon21_f,nan
Game of Distinction,https://atcoder.jp/contests/xmascon21/tasks/xmascon21_g,nan
Homework from Zhejiang,https://atcoder.jp/contests/xmascon21/tasks/xmascon21_h,nan
Interactive Moles,https://atcoder.jp/contests/xmascon21/tasks/xmascon21_i,nan
Arte Del Latte,https://atcoder.jp/contests/xmascon22/tasks/xmascon22_a,nan
Battle Solving,https://atcoder.jp/contests/xmascon22/tasks/xmascon22_b,nan
Conditional Swap,https://atcoder.jp/contests/xmascon22/tasks/xmascon22_c,nan
Dichotomy,https://atcoder.jp/contests/xmascon22/tasks/xmascon22_d,nan
Educational Statement,https://atcoder.jp/contests/xmascon22/tasks/xmascon22_e,nan
Fast as Fast as Ryser,https://atcoder.jp/contests/xmascon22/tasks/xmascon22_f,nan
Generator SAT,https://atcoder.jp/contests/xmascon22/tasks/xmascon22_g,nan
Happy Game,https://atcoder.jp/contests/xmascon22/tasks/xmascon22_h,nan
Art Irrationnel,https://atcoder.jp/contests/xmascon23/tasks/xmascon23_a,nan
Beautiful Rotation,https://atcoder.jp/contests/xmascon23/tasks/xmascon23_b,nan
Clamp Clamp Clamp,https://atcoder.jp/contests/xmascon23/tasks/xmascon23_c,nan
Distance Construction,https://atcoder.jp/contests/xmascon23/tasks/xmascon23_d,nan
Exponent of PI,https://atcoder.jp/contests/xmascon23/tasks/xmascon23_e,nan
Failed Failure Link,https://atcoder.jp/contests/xmascon23/tasks/xmascon23_f,nan
Group Structure,https://atcoder.jp/contests/xmascon23/tasks/xmascon23_g,nan
How to Pose Such a Problem,https://atcoder.jp/contests/xmascon23/tasks/xmascon23_h,nan
Accumulation,https://atcoder.jp/contests/xmascontest2015/tasks/xmascontest2015_a,nan
Broken Christmas Tree,https://atcoder.jp/contests/xmascontest2015/tasks/xmascontest2015_b,nan
Colored Tiles,https://atcoder.jp/contests/xmascontest2015/tasks/xmascontest2015_c,nan
Destroy the Duplicated Poem,https://atcoder.jp/contests/xmascontest2015/tasks/xmascontest2015_d,nan
Esolang?,https://atcoder.jp/contests/xmascontest2015/tasks/xmascontest2015_e,nan
FILO Sort,https://atcoder.jp/contests/xmascontest2015/tasks/xmascontest2015_f,nan
Good Sequence,https://atcoder.jp/contests/xmascontest2015/tasks/xmascontest2015_g,nan
Hybrid Testcase,https://atcoder.jp/contests/xmascontest2015/tasks/xmascontest2015_h,nan
YahooYahooYahoo,https://atcoder.jp/contests/yahoo-procon2017-final/tasks/yahoo_procon2017_final_a,nan
チーム決め,https://atcoder.jp/contests/yahoo-procon2017-final/tasks/yahoo_procon2017_final_b,nan
倍数クエリ,https://atcoder.jp/contests/yahoo-procon2017-final/tasks/yahoo_procon2017_final_c,nan
KthLIS,https://atcoder.jp/contests/yahoo-procon2017-final/tasks/yahoo_procon2017_final_d,nan
瞬間移動装置,https://atcoder.jp/contests/yahoo-procon2017-final/tasks/yahoo_procon2017_final_e,nan
Yahoo,https://atcoder.jp/contests/yahoo-procon2017-qual/tasks/yahoo_procon2017_qual_a,nan
オークション,https://atcoder.jp/contests/yahoo-procon2017-qual/tasks/yahoo_procon2017_qual_b,nan
検索,https://atcoder.jp/contests/yahoo-procon2017-qual/tasks/yahoo_procon2017_qual_c,nan
工場,https://atcoder.jp/contests/yahoo-procon2017-qual/tasks/yahoo_procon2017_qual_d,nan
遊園地,https://atcoder.jp/contests/yahoo-procon2017-qual/tasks/yahoo_procon2017_qual_e,nan
Uncommon,https://atcoder.jp/contests/yahoo-procon2018-final/tasks/yahoo_procon2018_final_a,nan
経路が色々,https://atcoder.jp/contests/yahoo-procon2018-final/tasks/yahoo_procon2018_final_b,nan
木の問題,https://atcoder.jp/contests/yahoo-procon2018-final/tasks/yahoo_procon2018_final_c,nan
"LCP(prefix,suffix)",https://atcoder.jp/contests/yahoo-procon2018-final/tasks/yahoo_procon2018_final_d,nan
ネットワークの構築,https://atcoder.jp/contests/yahoo-procon2018-final/tasks/yahoo_procon2018_final_e,nan
yahoo,https://atcoder.jp/contests/yahoo-procon2018-qual/tasks/yahoo_procon2018_qual_a,nan
オークション,https://atcoder.jp/contests/yahoo-procon2018-qual/tasks/yahoo_procon2018_qual_b,nan
駆引取引,https://atcoder.jp/contests/yahoo-procon2018-qual/tasks/yahoo_procon2018_qual_c,nan
XOR XorY,https://atcoder.jp/contests/yahoo-procon2018-qual/tasks/yahoo_procon2018_qual_d,nan
グラフの問題,https://atcoder.jp/contests/yahoo-procon2018-qual/tasks/yahoo_procon2018_qual_e,nan
Affiches,https://atcoder.jp/contests/yahoo-procon2019-final/tasks/yahoo_procon2019_final_a,nan
Bonsai Grafting,https://atcoder.jp/contests/yahoo-procon2019-final/tasks/yahoo_procon2019_final_b,nan
Checkered Stamps,https://atcoder.jp/contests/yahoo-procon2019-final/tasks/yahoo_procon2019_final_c,nan
Dangerous Hopscotch,https://atcoder.jp/contests/yahoo-procon2019-final/tasks/yahoo_procon2019_final_d,nan
Espionage,https://atcoder.jp/contests/yahoo-procon2019-final/tasks/yahoo_procon2019_final_e,nan
Anti Adjacency,https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_a,nan
Path,https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_b,nan
When I hit my pocket...,https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_c,nan
Ears,https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_d,nan
Odd Subrectangles,https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_e,nan
Pass,https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_f,nan
Revenge of Voronoi   ボロノイの逆襲,https://atcoder.jp/contests/yuha-c83/tasks/yuha_c83_01,nan
Sun and Moon   秘密結社太陽と月の団,https://atcoder.jp/contests/yuha-c83/tasks/yuha_c83_02,nan
Dendrogram   樹形図,https://atcoder.jp/contests/yuha-c83/tasks/yuha_c83_03,nan
Psychic Accelerator   とある超能力の物体加速器,https://atcoder.jp/contests/yuha-c83/tasks/yuha_c83_04,nan
Camera Control   カメラ・コントロール,https://atcoder.jp/contests/yuha-c83/tasks/yuha_c83_05,nan
エンド・オブ・ビギニング,https://atcoder.jp/contests/yuha-c88/tasks/yuha_c88_a,nan
ハヌマーンの試練,https://atcoder.jp/contests/yuha-c88/tasks/yuha_c88_b,nan
酒場の冒険者たち,https://atcoder.jp/contests/yuha-c88/tasks/yuha_c88_c,nan
氷柱の上の聖剣,https://atcoder.jp/contests/yuha-c88/tasks/yuha_c88_d,nan
必殺！無限覇王斬！,https://atcoder.jp/contests/yuha-c88/tasks/yuha_c88_e,nan
やって来たぜ！魔王城！,https://atcoder.jp/contests/yuha-c88/tasks/yuha_c88_f,nan
志なかばで死んだ勇者の名は…,https://atcoder.jp/contests/yuha-c88/tasks/yuha_c88_g,nan
恐怖！不幸を呼ぶ盾,https://atcoder.jp/contests/yuha-c88/tasks/yuha_c88_h,nan
姫への愛情と朽ちた兜,https://atcoder.jp/contests/yuha-c88/tasks/yuha_c88_i,nan
勇者最後の戦い！倒せ悪の大魔王！,https://atcoder.jp/contests/yuha-c88/tasks/yuha_c88_j,nan
UFO Invasion,https://atcoder.jp/contests/zone2021/tasks/zone2021_a,nan
Sign of Friendship,https://atcoder.jp/contests/zone2021/tasks/zone2021_b,nan
MAD TEAM,https://atcoder.jp/contests/zone2021/tasks/zone2021_c,nan
Message from Aliens,https://atcoder.jp/contests/zone2021/tasks/zone2021_d,nan
Sneaking,https://atcoder.jp/contests/zone2021/tasks/zone2021_e,nan
Encounter and Farewell,https://atcoder.jp/contests/zone2021/tasks/zone2021_f,nan
